language: php
name: HumanEval_124_valid_date
results:
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\tif(!empty($date)) {\n\
    \t\t$split = explode(\"-\", $date);\n\t\tif(count($split) == 3) {\n\t\t\t$months\
    \ = array(1,3,5,7,8,10,12);\n\t\t\t$month = (int)$split[0];\n\t\t\t$day = (int)$split[1];\n\
    \t\t\t$year = (int)$split[2];\n\t\t\tif($month > 0 && $month < 13) {\n\t\t\t\t\
    if(in_array($month, $months)) {\n\t\t\t\t\tif($day > 0 && $day < 32) {\n\t\t\t\
    \t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$months = array(4,6,9,11);\n\
    \t\t\t\t\tif(in_array($month, $months)) {\n\t\t\t\t\t\tif($day > 0 && $day < 31)\
    \ {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\
    \tif($month == 2) {\n\t\t\t\t\t\t\tif($day > 0 && $day < 30) {\n\t\t\t\t\t\t\t\
    \treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $months = array(\n\
    \        '01' => 'January',\n        '02' => 'February',\n        '03' => 'March',\n\
    \        '04' => 'April',\n        '05' => 'May',\n        '06' => 'June',\n \
    \       '07' => 'July',\n        '08' => 'August',\n        '09' => 'September',\n\
    \        '10' => 'October',\n        '11' => 'November',\n        '12' => 'December'\n\
    \    );\n    $validDays = array(\n        '01' => 31,\n        '02' => 28,\n \
    \       '03' => 31,\n        '04' => 30,\n        '05' => 31,\n        '06' =>\
    \ 30,\n        '07' => 31,\n        '08' => 31,\n        '09' => 30,\n       \
    \ '10' => 31,\n        '11' => 30,\n        '12' => 31\n    );\n    if (preg_match('/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/',\
    \ $date)) {\n        $dateArray = explode('-', $date);\n        $month = $dateArray[0];\n\
    \        $day = $dateArray[1];\n        $year = $dateArray[2];\n        if (isset($months[$month]))\
    \ {\n            if ($year % 4 == 0) {\n                $validDays['02'] = 29;\n\
    \            }\n            if ($day > 0 && $day <= $validDays[$month]) {\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $splitDate = explode(\"\
    -\", $date);\n    $day = $splitDate[0];\n    $month = $splitDate[1];\n    $year\
    \ = $splitDate[2];\n    $result = false;\n    if (!empty($date)) {\n        if\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n            if ($day >= 1 && $day <= 31) {\n\
    \                $result = true;\n            }\n        } else if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n            if ($day >=\
    \ 1 && $day <= 30) {\n                $result = true;\n            }\n       \
    \ } else if ($month == 2) {\n            if ($day >= 1 && $day <= 29) {\n    \
    \            $result = true;\n            }\n        }\n        if ($month >=\
    \ 1 && $month <= 12) {\n            $result = true;\n        }\n        if ($year\
    \ >= 1 && $year <= 9999) {\n            $result = true;\n        }\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3eh_r2w.php:55\n\
    Stack trace:\n#0 /tmp/tmpe3eh_r2w.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpe3eh_r2w.php\
    \ on line 55\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (substr_count($date,\
    \ \"-\") == 2) {\n    $date = explode(\"-\", $date);\n    $mm = $date[0];\n  \
    \  $dd = $date[1];\n    $yyyy = $date[2];\n    if ($mm > 0 && $mm < 13) {\n  \
    \    if ($mm == 1 || $mm == 3 || $mm == 5 || $mm == 7 || $mm == 8 || $mm == 10\
    \ || $mm == 12) {\n        if ($dd > 0 && $dd < 32) {\n          if ($yyyy > 0)\
    \ {\n            return true;\n          }\n        }\n      } else if ($mm ==\
    \ 4 || $mm == 6 || $mm == 9 || $mm == 11) {\n        if ($dd > 0 && $dd < 31)\
    \ {\n          if ($yyyy > 0) {\n            return true;\n          }\n     \
    \   }\n      } else if ($mm == 2) {\n        if ($dd > 0 && $dd < 30) {\n    \
    \      if ($yyyy > 0) {\n            return true;\n          }\n        }\n  \
    \    }\n    }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $retval = false;\n  if (!empty($date)) {\n    if\
    \ (preg_match('/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/', $date))\
    \ {\n      $d = explode('-', $date);\n      $m = $d[0];\n      $d = $d[1];\n \
    \     $y = $d[2];\n      if (($m >= 1 && $m <= 12) && ($d >= 1 && $d <= 31) &&\
    \ ($y >= 1 && $y <= 9999)) {\n        if (($m == 1 || $m == 3 || $m == 5 || $m\
    \ == 7 || $m == 8 || $m == 10 || $m == 12) && ($d >= 1 && $d <= 31)) {\n     \
    \     $retval = true;\n        } else if (($m == 4 || $m == 6 || $m == 9 || $m\
    \ == 11) && ($d >= 1 && $d <= 30)) {\n          $retval = true;\n        } else\
    \ if ($m == 2 && ($d >= 1 && $d <= 29)) {\n          $retval = true;\n       \
    \ }\n      }\n    }\n  }\n  return $retval;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 2 in /tmp/tmpkk5in_91.php on line\
    \ 29\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkk5in_91.php:49\n\
    Stack trace:\n#0 /tmp/tmpkk5in_91.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpkk5in_91.php\
    \ on line 49\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  $months_30 = array(4,6,9,11);\n  $months_31 = array(1,3,5,7,8,10,12);\n  $date_arr\
    \ = explode(\"-\", $date);\n  if(!empty($date_arr) && count($date_arr) == 3) {\n\
    \    $day = intval($date_arr[1]);\n    $month = intval($date_arr[0]);\n    $year\
    \ = intval($date_arr[2]);\n    if(in_array($month, $months_30) && ($day > 30 ||\
    \ $day < 1)) {\n      return false;\n    }\n    if(in_array($month, $months_31)\
    \ && ($day > 31 || $day < 1)) {\n      return false;\n    }\n    if($month ==\
    \ 2 && $day > 29) {\n      return false;\n    }\n    if($month < 1 || $month >\
    \ 12) {\n      return false;\n    }\n    if($year < 0) {\n      return false;\n\
    \    }\n    return true;\n  }\n  return false;\n}\n\necho valid_date(\"03-11-2000\"\
    );\necho valid_date(\"15-01-2012\");\necho valid_date(\"04-0-2040\");\necho valid_date(\"\
    06-04-2020\");\necho valid_date(\"06/04/2020\");\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (empty($date)) {\n\
    \        return false;\n    }\n    $months = [\n        1 => 31,\n        2 =>\
    \ 29,\n        3 => 31,\n        4 => 30,\n        5 => 31,\n        6 => 30,\n\
    \        7 => 31,\n        8 => 31,\n        9 => 30,\n        10 => 31,\n   \
    \     11 => 30,\n        12 => 31\n    ];\n    $date_parts = explode('-', $date);\n\
    \    if (count($date_parts) !== 3) {\n        return false;\n    }\n    if (strlen($date_parts[0])\
    \ !== 2 || $date_parts[0] < 1 || $date_parts[0] > 12) {\n        return false;\n\
    \    }\n    if (strlen($date_parts[1]) !== 2 || $date_parts[1] < 1 || $date_parts[1]\
    \ > $months[$date_parts[0]]) {\n        return false;\n    }\n    if (strlen($date_parts[2])\
    \ !== 4 || $date_parts[2] < 1) {\n        return false;\n    }\n    return true;\n\
    }\nvar_dump(valid_date(\"03-11-2000\"));\nvar_dump(valid_date(\"15-01-2012\"));\n\
    var_dump(valid_date(\"04-0-2040\"));\nvar_dump(valid_date(\"06-04-2020\"));\n\
    var_dump(valid_date(\"06/04/2020\"));\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"03\" in /tmp/tmp1ahei5rp.php on line 44\n\
    bool(false)\nbool(false)\nbool(false)\n\nWarning: Undefined array key \"06\" in\
    \ /tmp/tmp1ahei5rp.php on line 44\nbool(false)\nbool(false)\n\nWarning: Undefined\
    \ array key \"03\" in /tmp/tmp1ahei5rp.php on line 44\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp1ahei5rp.php:62\nStack trace:\n#0 /tmp/tmp1ahei5rp.php(80):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1ahei5rp.php on line 62\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $valid = false;\n  $date_array\
    \ = explode(\"-\", $date);\n  $month = $date_array[0];\n  $day = $date_array[1];\n\
    \  $year = $date_array[2];\n  if ($month == 1 or $month == 3 or $month == 5 or\
    \ $month == 7 or $month == 8 or $month == 10 or $month == 12) {\n    if ($day\
    \ >= 1 and $day <= 31) {\n      $valid = true;\n    }\n  }\n  if ($month == 4\
    \ or $month == 6 or $month == 9 or $month == 11) {\n    if ($day >= 1 and $day\
    \ <= 30) {\n      $valid = true;\n    }\n  }\n  if ($month == 2) {\n    if ($day\
    \ >= 1 and $day <= 29) {\n      $valid = true;\n    }\n  }\n  if ($month >= 1\
    \ and $month <= 12) {\n    $valid = true;\n  }\n  if ($year >= 1 and $year <=\
    \ 9999) {\n    $valid = true;\n  }\n  return $valid;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc5kwgms.php:54\n\
    Stack trace:\n#0 /tmp/tmpoc5kwgms.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpoc5kwgms.php\
    \ on line 54\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $validMonth = \"01-01-2000\"\
    ;\n  $validDay = \"00-00-2000\";\n  $validYear = \"00-00-0000\";\n  if (empty($date))\
    \ {\n    return false;\n  } else {\n    $month = substr($date, 0, 2);\n    $day\
    \ = substr($date, 3, 2);\n    $year = substr($date, 6, 4);\n    if (substr($date,\
    \ 2, 1) != \"-\" || substr($date, 5, 1) != \"-\") {\n      return false;\n   \
    \ } else if (substr($month, 0, 1) == \"0\" && substr($month, 1, 1) == \"0\") {\n\
    \      return false;\n    } else if (substr($day, 0, 1) == \"0\" && substr($day,\
    \ 1, 1) == \"0\") {\n      return false;\n    } else if (substr($year, 0, 1) ==\
    \ \"0\" && substr($year, 1, 1) == \"0\" && substr($year, 2, 1) == \"0\" && substr($year,\
    \ 3, 1) == \"0\") {\n      return false;\n    } else if ($month < 1 || $month\
    \ > 12) {\n      return false;\n    } else if (($month == 1 || $month == 3 ||\
    \ $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) &&\
    \ ($day < 1 || $day > 31)) {\n      return false;\n    } else if (($month == 4\
    \ || $month == 6 || $month == 9 || $month == 11) && ($day < 1 || $day > 30)) {\n\
    \      return false;\n    } else if ($month == 2 && $day < 1) {\n      return\
    \ false;\n    } else if ($month == 2 && $day > 29) {\n      return false;\n  \
    \  } else if ($month == 2 && $day == 29 && ($year % 4 != 0 || ($year % 100 ==\
    \ 0 && $year % 400 != 0))) {\n      return false;\n    } else {\n      return\
    \ true;\n    }\n  }\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date = explode(\"-\"\
    , $date);\n  if (!is_array($date) || count($date) != 3) {\n    return false;\n\
    \  }\n  $month = intval($date[0]);\n  $day = intval($date[1]);\n  $year = intval($date[2]);\n\
    \  if ($year < 2000 || $year > 2100) {\n    return false;\n  }\n  if ($month <\
    \ 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31) {\n\
    \    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n      return\
    \ false;\n    }\n  }\n  if (in_array($month, [4, 6, 9, 11])) {\n    if ($day >\
    \ 30) {\n      return false;\n    }\n  }\n  return true;\n}\necho valid_date(\"\
    03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"\
    04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"\
    06/04/2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (!$date) return\
    \ false;\n    $dateArray = explode('-', $date);\n    if (sizeof($dateArray) !=\
    \ 3) return false;\n    $day = $dateArray[1];\n    $month = $dateArray[0];\n \
    \   $year = $dateArray[2];\n    if ($day < 1 || $day > 31) return false;\n   \
    \ if ($month < 1 || $month > 12) return false;\n    if ($year < 1000 || $year\
    \ > 9999) return false;\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvyew9yh2.php:44\n\
    Stack trace:\n#0 /tmp/tmpvyew9yh2.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpvyew9yh2.php\
    \ on line 44\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $part = explode(\"-\"\
    , $date);\n  $month = (int)$part[0];\n  $day = (int)$part[1];\n  $year = (int)$part[2];\n\
    \  $isValidDate = checkdate($month, $day, $year);\n  if(count($part) != 3 || $part[2]\
    \ > date(\"Y\") || $part[2] < 1000 || $part[0] > 12 || $part[0] <= 0 || $part[1]\
    \ > 31 || $part[1] <= 0 || $isValidDate == false) {\n    return false;\n  } else\
    \ {\n    return true;\n  }\n}\necho valid_date(\"03-11-2000\") ? \"true\\n\" :\
    \ \"false\\n\";\necho valid_date(\"15-01-2012\") ? \"true\\n\" : \"false\\n\"\
    ;\necho valid_date(\"04-0-2040\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"\
    06-04-2020\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"06/04/2020\") ?\
    \ \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true


    Warning: Undefined array key 1 in /tmp/tmpgrxxovky.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpgrxxovky.php on line 23

    false


    Warning: Undefined array key 1 in /tmp/tmpgrxxovky.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpgrxxovky.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpgrxxovky.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpgrxxovky.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpgrxxovky.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpgrxxovky.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpgrxxovky.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpgrxxovky.php on line 23

    '
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (strlen($date) ==\
    \ 0) {\n    return false;\n  }\n  $month = explode(\"-\", $date)[0];\n  $day =\
    \ explode(\"-\", $date)[1];\n  $year = explode(\"-\", $date)[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n    }\n  }\n \
    \ if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day\
    \ < 1 || $day > 30) {\n      return false;\n    }\n  }\n  if ($month == 2) {\n\
    \    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\n$date = \"01-01-2016\";\necho valid_date($date);\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    Warning: Undefined array key 1 in /tmp/tmpy0h6jg7x.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpy0h6jg7x.php on line 25


    Warning: Undefined array key 1 in /tmp/tmpy0h6jg7x.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpy0h6jg7x.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpy0h6jg7x.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpy0h6jg7x.php on line 25

    '
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $months = [\n    \"January\"\
    \ => 1,\n    \"February\" => 2,\n    \"March\" => 3,\n    \"April\" => 4,\n  \
    \  \"May\" => 5,\n    \"June\" => 6,\n    \"July\" => 7,\n    \"August\" => 8,\n\
    \    \"September\" => 9,\n    \"October\" => 10,\n    \"November\" => 11,\n  \
    \  \"December\" => 12\n  ];\n  $date_array = explode(\"-\", $date);\n  $year =\
    \ $date_array[2];\n  $month = $date_array[0];\n  $day = $date_array[1];\n  if(!empty($date))\
    \ {\n    if($month < 1 || $month > 12) {\n      return false;\n    }\n    if($month\
    \ == 2) {\n      if($day < 1 || $day > 29) {\n        return false;\n      }\n\
    \    }\n    if($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n      if($day < 1 || $day > 31) {\n\
    \        return false;\n      }\n    }\n    if($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n      if($day < 1 || $day > 30) {\n        return false;\n\
    \      }\n    }\n    return true;\n  }\n  return false;\n}\nprint_r(valid_date(\"\
    03-11-2000\"));\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    Warning: Undefined array key 2 in /tmp/tmpoe89dn33.php on line 35


    Warning: Undefined array key 1 in /tmp/tmpoe89dn33.php on line 37


    Warning: Undefined array key 2 in /tmp/tmpoe89dn33.php on line 35


    Warning: Undefined array key 1 in /tmp/tmpoe89dn33.php on line 37


    Warning: Undefined array key 2 in /tmp/tmpoe89dn33.php on line 35


    Warning: Undefined array key 1 in /tmp/tmpoe89dn33.php on line 37


    Warning: Undefined array key 2 in /tmp/tmpoe89dn33.php on line 35


    Warning: Undefined array key 2 in /tmp/tmpoe89dn33.php on line 35

    '
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $date_arr = explode('-',\
    \ $date);\n    if (count($date_arr) !== 3) {\n        return false;\n    }\n \
    \   $months = [1,3,5,7,8,10,12];\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n\
    \    $year = $date_arr[2];\n    if ($month > 12 || $month < 1) {\n        return\
    \ false;\n    }\n    if (in_array($month, $months)) {\n        if ($day > 31 ||\
    \ $day < 1) {\n            return false;\n        }\n    } else if ($month ==\
    \ 2) {\n        if ($day > 29 || $day < 1) {\n            return false;\n    \
    \    }\n    } else {\n        if ($day > 30 || $day < 1) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  \n  $monthList = [1 =>\
    \ 31, 3 => 31, 5 => 31, 7 => 31, 8 => 31, 10 => 31, 12 => 31, 4 => 30, 6 => 30,\
    \ 9 => 30, 11 => 30, 2 => 29];\n  $dateList = explode(\"-\", $date);\n  $dateLen\
    \ = count($dateList);\n  if($dateLen !== 3) {\n    return false;\n  }\n  $month\
    \ = $dateList[0];\n  $day = $dateList[1];\n  $year = $dateList[2];\n  if($month\
    \ > 12 || $month < 1) {\n    return false;\n  }\n  if($day > $monthList[$month]\
    \ || $day < 1) {\n    return false;\n  }\n  if($year < 1) {\n    return false;\n\
    \  }\n  return true;\n}\n\n$year = 0;\nvar_dump(valid_date(\"03-11-2000\"));\n\
    var_dump(valid_date(\"15-01-2012\"));\nvar_dump(valid_date(\"04-0-2040\"));\n\
    var_dump(valid_date(\"06-04-2020\"));\nvar_dump(valid_date(\"06/04/2020\"));\n\
    \nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"03\" in /tmp/tmpflk5eon_.php on line 33\n\
    bool(false)\nbool(false)\n\nWarning: Undefined array key \"04\" in /tmp/tmpflk5eon_.php\
    \ on line 33\nbool(false)\n\nWarning: Undefined array key \"06\" in /tmp/tmpflk5eon_.php\
    \ on line 33\nbool(false)\nbool(false)\n\nWarning: Undefined array key \"03\"\
    \ in /tmp/tmpflk5eon_.php on line 33\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpflk5eon_.php:54\nStack trace:\n#0 /tmp/tmpflk5eon_.php(72):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpflk5eon_.php on line 54\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $months = array(1,3,5,7,8,10,12);\n\
    \  $months2 = array(4,6,9,11);\n  $date = str_replace('/', '-', $date);\n  $date\
    \ = explode('-', $date);\n  // check if month is in valid range\n  if ($date[0]\
    \ < 1 || $date[0] > 12) {\n    return false;\n  }\n  // check if date is in valid\
    \ range\n  // check if month is one of the months that contains 31 days\n  if\
    \ (in_array($date[0], $months)) {\n    if ($date[1] < 1 || $date[1] > 31) {\n\
    \      return false;\n    }\n  }\n  // check if month is one of the months that\
    \ contains 30 days\n  if (in_array($date[0], $months2)) {\n    if ($date[1] <\
    \ 1 || $date[1] > 30) {\n      return false;\n    }\n  }\n  // check if month\
    \ is February\n  if ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1] > 29)\
    \ {\n      return false;\n    }\n  }\n  // check if year is in valid range\n \
    \ if ($date[2] < 1 || $date[2] > 9999) {\n    return false;\n  }\n  return true;\n\
    }\necho valid_date(\"03-11-2000\");\necho \"\\n\";\necho valid_date(\"15-01-2012\"\
    );\necho \"\\n\";\necho valid_date(\"04-0-2040\");\necho \"\\n\";\necho valid_date(\"\
    06-04-2020\");\necho \"\\n\";\necho valid_date(\"06/04/2020\");\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1

    1

    '
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $d = explode('-', $date);\n\
    \  if (count($d) == 3) {\n    if (checkdate($d[0], $d[1], $d[2])) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (!preg_match('/^(\\\
    d{2})-(\\d{2})-(\\d{4})$/', $date, $matches)) {\n        return false;\n    }\n\
    \    list(, $month, $day, $year) = $matches;\n    if ($month > 12 || $month <\
    \ 1) {\n        return false;\n    }\n    if ($day > 31 || $day < 1) {\n     \
    \   return false;\n    }\n    if ($month == 2) {\n        if ($day > 29) {\n \
    \           return false;\n        }\n    } elseif (in_array($month, [4, 6, 9,\
    \ 11])) {\n        if ($day > 30) {\n            return false;\n        }\n  \
    \  }\n    return true;\n}\n\necho valid_date(\"06-04-2020\");\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (empty($date)) {\n\
    \    return false;\n  }\n  $date_arr = explode('-', $date);\n  if (count($date_arr)\
    \ != 3) {\n    return false;\n  }\n  $day = $date_arr[1];\n  $month = $date_arr[0];\n\
    \  $year = $date_arr[2];\n  if (!is_numeric($day) || !is_numeric($month) || !is_numeric($year))\
    \ {\n    return false;\n  }\n  if ($day > 31 || $day < 1) {\n    return false;\n\
    \  }\n  if ($month > 12 || $month < 1) {\n    return false;\n  }\n  if ($year\
    \ < 1) {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n\
    \      return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month ==\
    \ 9 || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\necho valid_date(\"06-04-2020\");\necho \"<br>\";\necho valid_date(\"\
    03-11-2000\");\necho \"<br>\";\necho valid_date(\"06/04/2020\");\necho \"<br>\"\
    ;\necho valid_date(\"15-01-2012\");\necho \"<br>\";\necho valid_date(\"04-0-2040\"\
    );\necho \"<br>\";\n ?>\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "1<br>1<br><br><br><br>function candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $arr = explode('-',\
    \ $date);\n    if (count($arr) != 3) {\n        return false;\n    }\n    $days\
    \ = (int)$arr[1];\n    $months = (int)$arr[0];\n    $years = (int)$arr[2];\n \
    \   if ($days < 1 || $days > 31 || $months < 1 || $months > 12 || $years < 1)\
    \ {\n        return false;\n    }\n    if ($months == 2) {\n        if ($days\
    \ > 29) {\n            return false;\n        }\n    }\n    if ($months == 4 ||\
    \ $months == 6 || $months == 9 || $months == 11) {\n        if ($days > 30) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\n$date = \"\
    03-11-2000\";\nvar_dump(valid_date($date));\n$date = \"15-01-2012\";\nvar_dump(valid_date($date));\n\
    $date = \"04-0-2040\";\nvar_dump(valid_date($date));\n$date = \"06-04-2020\";\n\
    var_dump(valid_date($date));\n$date = \"06/04/2020\";\nvar_dump(valid_date($date));\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $regex = '/^\\d{2}-\\\
    d{2}-\\d{4}$/';\n  $matches = array();\n  preg_match($regex, $date, $matches);\n\
    \  if (empty($matches)) {\n    return false;\n  }\n  $date_parts = explode('-',\
    \ $date);\n  $month = $date_parts[0];\n  $day = $date_parts[1];\n  $year = $date_parts[2];\n\
    \  if (checkdate($month, $day, $year)) {\n    return true;\n  }\n  return false;\n\
    }\n\n$date = '03-11-2000';\n$test_0 = valid_date($date);\necho \"<br/>\";\necho\
    \ \"valid_date('03-11-2000') is: \" . ($test_0 ? 'true' : 'false');\n\n$date =\
    \ '15-01-2012';\n$test_1 = valid_date($date);\necho \"<br/>\";\necho \"valid_date('15-01-2012')\
    \ is: \" . ($test_1 ? 'true' : 'false');\n\n$date = '04-0-2040';\n$test_2 = valid_date($date);\n\
    echo \"<br/>\";\necho \"valid_date('04-0-2040') is: \" . ($test_2 ? 'true' : 'false');\n\
    \n$date = '06-04-2020';\n$test_3 = valid_date($date);\necho \"<br/>\";\necho \"\
    valid_date('06-04-2020') is: \" . ($test_3 ? 'true' : 'false');\n\n$date = '06/04/2020';\n\
    $test_4 = valid_date($date);\necho \"<br/>\";\necho \"valid_date('06/04/2020')\
    \ is: \" . ($test_4 ? 'true' : 'false');\nfunction candidate(...$args) {\n   \
    \ return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '<br/>valid_date(''03-11-2000'') is: true<br/>valid_date(''15-01-2012'')
    is: false<br/>valid_date(''04-0-2040'') is: false<br/>valid_date(''06-04-2020'')
    is: true<br/>valid_date(''06/04/2020'') is: false'
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (!preg_match('/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/',\
    \ $date)) {\n        return false;\n    }\n\n    $date = explode('-', $date);\n\
    \    $year = $date[2];\n    $month = $date[0];\n    $day = $date[1];\n\n    if\
    \ ($month < 1 || $month > 12) {\n        return false;\n    }\n\n    if ($day\
    \ < 1) {\n        return false;\n    }\n\n    switch ($month) {\n        case\
    \ 1:\n        case 3:\n        case 5:\n        case 7:\n        case 8:\n   \
    \     case 10:\n        case 12:\n            if ($day > 31) {\n             \
    \   return false;\n            }\n            break;\n        case 4:\n      \
    \  case 6:\n        case 9:\n        case 11:\n            if ($day > 30) {\n\
    \                return false;\n            }\n            break;\n        case\
    \ 2:\n            if ($day > 29) {\n                return false;\n          \
    \  }\n            break;\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date = explode(\"-\"\
    , $date);\n  if (count($date) != 3 || $date[0] > 12 || $date[0] < 1 || $date[1]\
    \ > 31 || $date[1] < 1 || $date[2] < 1)\n    return false;\n  if ($date[0] ==\
    \ 2 && $date[1] > 29)\n    return false;\n  if (($date[0] == 4 || $date[0] ==\
    \ 6 || $date[0] == 9 || $date[0] == 11) && $date[1] > 30)\n    return false;\n\
    \  return true;\n}\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"\
    15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"\
    06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date_array = explode(\"\
    -\", $date);\n  if (empty($date_array[0]) or empty($date_array[1]) or empty($date_array[2]))\
    \ {\n    return false;\n  }\n  else {\n    if ($date_array[0] > 0 and $date_array[0]\
    \ < 13) {\n      if ($date_array[0] == 1 or $date_array[0] == 3 or $date_array[0]\
    \ == 5 or $date_array[0] == 7 or $date_array[0] == 8 or $date_array[0] == 10 or\
    \ $date_array[0] == 12) {\n        if ($date_array[1] > 0 and $date_array[1] <\
    \ 32) {\n          return true;\n        }\n        else {\n          return false;\n\
    \        }\n      }\n      elseif ($date_array[0] == 4 or $date_array[0] == 6\
    \ or $date_array[0] == 9 or $date_array[0] == 11) {\n        if ($date_array[1]\
    \ > 0 and $date_array[1] < 31) {\n          return true;\n        }\n        else\
    \ {\n          return false;\n        }\n      }\n      elseif ($date_array[0]\
    \ == 2) {\n        if ($date_array[1] > 0 and $date_array[1] < 30) {\n       \
    \   return true;\n        }\n        else {\n          return false;\n       \
    \ }\n      }\n    }\n    else {\n      return false;\n    }\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $date_split = explode(\"-\", $date);\n  if(count($date_split)\
    \ != 3){\n    return false;\n  }\n  $day = $date_split[1];\n  $month = $date_split[0];\n\
    \  $year = $date_split[2];\n  $max_day = 0;\n  switch($month){\n    case 1:\n\
    \    case 3:\n    case 5:\n    case 7:\n    case 8:\n    case 10:\n    case 12:\n\
    \      $max_day = 31;\n      break;\n    case 4:\n    case 6:\n    case 9:\n \
    \   case 11:\n      $max_day = 30;\n      break;\n    case 2:\n      $max_day\
    \ = 28;\n      break;\n    default:\n      return false;\n  }\n  if($day < 1 ||\
    \ $day > $max_day){\n    return false;\n  }\n  if($month < 1 || $month > 12){\n\
    \    return false;\n  }\n  if($year < 1900 || $year > 2099){\n    return false;\n\
    \  }\n  return true;\n}\necho valid_date(\"03-11-2000\");\necho valid_date(\"\
    15-01-2012\");\necho valid_date(\"04-0-2040\");\necho valid_date(\"06-04-2020\"\
    );\necho valid_date(\"06/04/2020\");\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date = explode(\"-\"\
    , $date);\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if\
    \ ($month > 12 || $month < 1) {\n    return false;\n  }\n  elseif ($month == 1\
    \ || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day > 31 || $day < 1) {\n      return false;\n\
    \    }\n  }\n  elseif ($month == 4 || $month == 6 || $month == 9 || $month ==\
    \ 11) {\n    if ($day > 30 || $day < 1) {\n      return false;\n    }\n  }\n \
    \ elseif ($month == 2) {\n    if ($day > 29 || $day < 1) {\n      return false;\n\
    \    }\n  }\n  else {\n    return false;\n  }\n  if ($year < 0) {\n    return\
    \ false;\n  }\n  else {\n    return true;\n  }\n}\necho valid_date(\"04-0-2040\"\
    ).\"\\n\";\necho valid_date(\"06-04-2020\").\"\\n\";\necho valid_date(\"06/04/2020\"\
    ).\"\\n\";\necho valid_date(\"15-01-2012\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    1


    Warning: Undefined array key 1 in /tmp/tmphwwquw26.php on line 22


    Warning: Undefined array key 2 in /tmp/tmphwwquw26.php on line 23




    Warning: Undefined array key 1 in /tmp/tmphwwquw26.php on line 22


    Warning: Undefined array key 2 in /tmp/tmphwwquw26.php on line 23


    Warning: Undefined array key 1 in /tmp/tmphwwquw26.php on line 22


    Warning: Undefined array key 2 in /tmp/tmphwwquw26.php on line 23


    Warning: Undefined array key 1 in /tmp/tmphwwquw26.php on line 22


    Warning: Undefined array key 2 in /tmp/tmphwwquw26.php on line 23


    Warning: Undefined array key 2 in /tmp/tmphwwquw26.php on line 23


    Warning: Undefined array key 2 in /tmp/tmphwwquw26.php on line 23

    '
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t$arr = explode(\"-\"\
    , $date);\n\t$month = $arr[0];\n\t$day = $arr[1];\n\t$year = $arr[2];\n\tif ($month\
    \ < 1 || $month > 12) {\n\t\treturn false;\n\t}\n\tif ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n\t\tif ($day < 1 || $day > 31) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\
    if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\t\tif ($day\
    \ < 1 || $day > 30) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif ($month == 2) {\n\
    \t\tif ($day < 1 || $day > 29) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (strlen($year)\
    \ != 4) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\necho valid_date(\"03-11-2000\"\
    );\necho \"<br>\";\necho valid_date(\"15-01-2012\");\necho \"<br>\";\necho valid_date(\"\
    04-0-2040\");\necho \"<br>\";\necho valid_date(\"06-04-2020\");\necho \"<br>\"\
    ;\necho valid_date(\"06/04/2020\");\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1<br><br><br>1<br>

    Warning: Undefined array key 1 in /tmp/tmpu_96n5j8.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpu_96n5j8.php on line 23

    <br>

    Warning: Undefined array key 1 in /tmp/tmpu_96n5j8.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpu_96n5j8.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpu_96n5j8.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpu_96n5j8.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpu_96n5j8.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpu_96n5j8.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpu_96n5j8.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpu_96n5j8.php on line 23

    '
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $months = [1,3,5,7,8,10,12];\n\
    \  $months2 = [4,6,9,11];\n  if (empty($date)) {\n    return false;\n  }\n  if\
    \ (preg_match('/^\\d{2}-\\d{2}-\\d{4}$/', $date)) {\n    $parts = explode('-',\
    \ $date);\n    if (in_array($parts[0], $months)) {\n      if ($parts[1] > 31 ||\
    \ $parts[1] < 1) {\n        return false;\n      }\n    } elseif (in_array($parts[0],\
    \ $months2)) {\n      if ($parts[1] > 30 || $parts[1] < 1) {\n        return false;\n\
    \      }\n    } elseif ($parts[0] == 2) {\n      if ($parts[1] > 29 || $parts[1]\
    \ < 1) {\n        return false;\n      }\n    } else {\n      return false;\n\
    \    }\n    return true;\n  }\n  return false;\n}\n\necho valid_date(\"03-11-2000\"\
    ) ? \"true\" : \"false\";\necho \"\\n\";\necho valid_date(\"15-01-2012\") ? \"\
    true\" : \"false\";\necho \"\\n\";\necho valid_date(\"04-0-2040\") ? \"true\"\
    \ : \"false\";\necho \"\\n\";\necho valid_date(\"06-04-2020\") ? \"true\" : \"\
    false\";\necho \"\\n\";\necho valid_date(\"06/04/2020\") ? \"true\" : \"false\"\
    ;\necho \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (empty($date)) {\n\
    \        return false;\n    }\n    list($m, $d, $y) = explode('-', $date);\n \
    \   if (is_numeric($m) && is_numeric($d) && is_numeric($y)) {\n        if ($m\
    \ < 1 || $m > 12) {\n            return false;\n        }\n        if (($m ==\
    \ 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12) && ($d\
    \ < 1 || $d > 31)) {\n            return false;\n        }\n        if (($m ==\
    \ 4 || $m == 6 || $m == 9 || $m == 11) && ($d < 1 || $d > 30)) {\n           \
    \ return false;\n        }\n        if ($m == 2 && ((($y % 4 == 0) && ($y % 100\
    \ != 0)) || ($y % 400 == 0)) && ($d < 1 || $d > 29)) {\n            return false;\n\
    \        }\n        if ($m == 2 && ((($y % 4 != 0) || ($y % 100 == 0)) && ($y\
    \ % 400 != 0)) && ($d < 1 || $d > 28)) {\n            return false;\n        }\n\
    \        return true;\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmpc1m34jgd.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpc1m34jgd.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpc1m34jgd.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpc1m34jgd.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpc1m34jgd.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpc1m34jgd.php on line 23

    '
  timestamp: 1660009037
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $time = strtotime($date);\n\
    \    if ($time == 0) {\n        return false;\n    }\n    $date = date('m-d-Y',\
    \ $time);\n    $date_arr = explode('-', $date);\n    $month = $date_arr[0];\n\
    \    $day = $date_arr[1];\n    $year = $date_arr[2];\n    $max_days = array(31,\
    \ 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n    if ($year % 4 == 0) {\n  \
    \      $max_days[1] = 29;\n    }\n    if ($day < 1 || $day > $max_days[$month\
    \ - 1]) {\n        return false;\n    }\n    if ($month < 1 || $month > 12) {\n\
    \        return false;\n    }\n    return true;\n}\necho valid_date(\"03-11-2000\"\
    );\necho valid_date(\"15-01-2012\");\necho valid_date(\"04-0-2040\");\necho valid_date(\"\
    06-04-2020\");\necho valid_date(\"06/04/2020\");\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw5_6l3m.php:52\n\
    Stack trace:\n#0 /tmp/tmpkw5_6l3m.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpkw5_6l3m.php\
    \ on line 52\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\treturn preg_match('/^([0][1-9]|[1][0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$/', $date);\n}\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"\
    15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"\
    06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n0\n0\n1\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0oqjwns.php:32\n\
    Stack trace:\n#0 /tmp/tmpl0oqjwns.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpl0oqjwns.php\
    \ on line 32\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if ($date == '') {\n\
    \    return false;\n  }\n  $months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"\
    , \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  $dateArray\
    \ = explode(\"-\", $date);\n  $month = substr($dateArray[0], 0, 2);\n  $day =\
    \ substr($dateArray[1], 0, 2);\n  $year = substr($dateArray[2], 0, 4);\n  if (!(in_array($month,\
    \ $months))) {\n    return false;\n  }\n  if ($day < 1 || $day > 31) {\n    return\
    \ false;\n  }\n  if ($month < 1 || $month > 12) {\n    return false;\n  }\n  if\
    \ ($year < 1 || $year > 2020) {\n    return false;\n  }\n  if ($month == 'Feb'\
    \ && $day > 29) {\n    return false;\n  }\n  if (($month == 'Apr' || $month ==\
    \ 'Jun' || $month == 'Sep' || $month == 'Nov') && $day > 30) {\n    return false;\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8owo_635.php:54\n\
    Stack trace:\n#0 /tmp/tmp8owo_635.php(72): test()\n#1 {main}\n  thrown in /tmp/tmp8owo_635.php\
    \ on line 54\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $valid_formats = [\"\
    m-d-Y\", \"m/d/Y\"];\n  foreach ($valid_formats as $format) {\n    $d = DateTime::createFromFormat($format,\
    \ $date);\n    if ($d && $d->format($format) == $date) {\n      return true;\n\
    \    }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n// Write your code here\n\
    \  $months = array(1,3,5,7,8,10,12);\n  $months1 = array(4,6,9,11);\n  $date =\
    \ explode(\"-\", $date);\n  if (in_array($date[0], $months)) {\n    if ($date[1]\
    \ > 31 or $date[1] < 1) {\n      return false;\n    }\n  }\n  elseif (in_array($date[0],\
    \ $months1)) {\n    if ($date[1] > 30 or $date[1] < 1) {\n      return false;\n\
    \    }\n  }\n  elseif ($date[0] == 2) {\n    if ($date[1] > 29 or $date[1] < 1)\
    \ {\n      return false;\n    }\n  }\n  else {\n    return false;\n  }\n  if ($date[0]\
    \ > 12 or $date[0] < 1) {\n    return false;\n  }\n  return true;\n}\necho valid_date(\"\
    03-11-2000\");\necho \"<br>\";\necho valid_date(\"15-01-2012\");\necho \"<br>\"\
    ;\necho valid_date(\"04-0-2040\");\necho \"<br>\";\necho valid_date(\"06-04-2020\"\
    );\necho \"<br>\";\necho valid_date(\"06/04/2020\");\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br><br>1<br>
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    // Write your code\
    \ here\n    // To print results to the standard output you can use print\n   \
    \ // Example: print \"Hello world!\";\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_j4ss7j6.php:32\n\
    Stack trace:\n#0 /tmp/tmp_j4ss7j6.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_j4ss7j6.php\
    \ on line 32\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if ( !empty($date) )\
    \ {\n    $dateParts = explode('-', $date);\n    if ( sizeof($dateParts) != 3 )\
    \ {\n      return false;\n    }\n    $day = $dateParts[1];\n    $month = $dateParts[0];\n\
    \    $year = $dateParts[2];\n    if (\n      ( ( $month == 1 || $month == 3 ||\
    \ $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12 )\
    \ && ( $day < 1 || $day > 31 ) ) ||\n      ( ( $month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11 ) && ( $day < 1 || $day > 30 ) ) ||\n      ( $month ==\
    \ 2 && ( $day < 1 || $day > 29 ) ) ||\n      ( $month < 1 || $month > 12 ) ||\n\
    \      !is_numeric($day) ||\n      !is_numeric($month) ||\n      !is_numeric($year)\n\
    \    ) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $dateReg = '/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/';\n\
    \    $dateArray = explode('-', $date);\n    $days = intval($dateArray[1]);\n \
    \   $months = intval($dateArray[0]);\n    $year = intval($dateArray[2]);\n   \
    \ if (preg_match($dateReg, $date) == 0) {\n        return false;\n    }\n    if\
    \ ($months < 1 || $months > 12) {\n        return false;\n    }\n    if ($months\
    \ == 2) {\n        if ($days < 1 || $days > 29) {\n            return false;\n\
    \        }\n    } else if (in_array($months, [1, 3, 5, 7, 8, 10, 12])) {\n   \
    \     if ($days < 1 || $days > 31) {\n            return false;\n        }\n \
    \   } else {\n        if ($days < 1 || $days > 30) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\necho valid_date(\"03-11-2000\") . \"\\\
    n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\"\
    ) . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    Warning: Undefined array key 1 in /tmp/tmpalvc6n8a.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpalvc6n8a.php on line 24



    Warning: Undefined array key 1 in /tmp/tmpalvc6n8a.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpalvc6n8a.php on line 24


    Warning: Undefined array key 1 in /tmp/tmpalvc6n8a.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpalvc6n8a.php on line 24


    Warning: Undefined array key 1 in /tmp/tmpalvc6n8a.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpalvc6n8a.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpalvc6n8a.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpalvc6n8a.php on line 24

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if(empty($date)){\n \
    \   return false;\n  }\n  $valid_date = explode(\"-\", $date);\n  if(count($valid_date)\
    \ != 3){\n    return false;\n  }\n  $day = $valid_date[0];\n  $month = $valid_date[1];\n\
    \  $year = $valid_date[2];\n  if($day > 31 || $day < 1){\n    return false;\n\
    \  }\n  if($month > 12 || $month < 1){\n    return false;\n  }\n  if($year <=\
    \ 0){\n    return false;\n  }\n  if($month == 2){\n    if($day > 29){\n      return\
    \ false;\n    }\n  }\n  if($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11){\n    if($day > 30){\n      return false;\n    }\n  }\n  return true;\n\
    }\necho valid_date(\"03-11-2000\").\"\\n\";\necho valid_date(\"15-01-2012\").\"\
    \\n\";\necho valid_date(\"04-0-2040\").\"\\n\";\necho valid_date(\"06-04-2020\"\
    ).\"\\n\";\necho valid_date(\"06/04/2020\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptorqojzo.php:62\n\
    Stack trace:\n#0 /tmp/tmptorqojzo.php(79): test()\n#1 {main}\n  thrown in /tmp/tmptorqojzo.php\
    \ on line 62\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1z95zf8y.php:28\n\
    Stack trace:\n#0 /tmp/tmp1z95zf8y.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1z95zf8y.php\
    \ on line 28\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    // your code here\n\
    \    $date=str_replace('/','-',$date);\n    $date=str_replace('.','-',$date);\n\
    \    $date=str_replace('_','-',$date);\n    $date=str_replace('!','-',$date);\n\
    \    $date=str_replace('@','-',$date);\n    $date=str_replace('#','-',$date);\n\
    \    $date=str_replace('$','-',$date);\n    $date=str_replace('%','-',$date);\n\
    \    $date=str_replace('^','-',$date);\n    $date=str_replace('&','-',$date);\n\
    \    $date=str_replace('*','-',$date);\n    $date=str_replace('(','-',$date);\n\
    \    $date=str_replace(')','-',$date);\n    $date=str_replace('[','-',$date);\n\
    \    $date=str_replace(']','-',$date);\n    $date=str_replace('{','-',$date);\n\
    \    $date=str_replace('}','-',$date);\n    $date=str_replace('|','-',$date);\n\
    \    $date=str_replace('\\'','-',$date);\n    $date=str_replace('\"','-',$date);\n\
    \    $date=str_replace('?','-',$date);\n    $date=str_replace('<','-',$date);\n\
    \    $date=str_replace('>','-',$date);\n    $date=str_replace(',','-',$date);\n\
    \    $date=str_replace('\\\\','-',$date);\n    $date=str_replace('/','-',$date);\n\
    \    $dates=explode('-',$date);\n    if(count($dates)<3){\n        return false;\n\
    \    }\n    $dates[0]=ltrim($dates[0],'0');\n    $dates[1]=ltrim($dates[1],'0');\n\
    \    $dates[2]=ltrim($dates[2],'0');\n    if(\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpxxihpltv.php on line 55

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $given_date = explode(\"\
    -\", $date);\n  $month = $given_date[0];\n  $day = $given_date[1];\n  $year =\
    \ $given_date[2];\n  $months_with_31_days = [1,3,5,7,8,10,12];\n  $months_with_30_days\
    \ = [4,6,9,11];\n  if (count($given_date) !== 3) {\n    return false;\n  }\n \
    \ if ($month < 1 || $month > 12) {\n    return false;\n  }\n  if (in_array($month,\
    \ $months_with_31_days)) {\n    if ($day < 1 || $day > 31) {\n      return false;\n\
    \    }\n  }\n  if (in_array($month, $months_with_30_days)) {\n    if ($day < 1\
    \ || $day > 30) {\n      return false;\n    }\n  }\n  if ($month === 2) {\n  \
    \  if ($day < 1 || $day > 29) {\n      return false;\n    }\n  }\n  if ($year\
    \ < 1) {\n    return false;\n  }\n  return true;\n}\n$date = \"03-11-2000\";\n\
    $date2 = \"15-01-2012\";\n$date3 = \"04-0-2040\";\n$date4 = \"06-04-2020\";\n\
    $date5 = \"06/04/2020\";\necho valid_date($date) . PHP_EOL;\necho valid_date($date2)\
    \ . PHP_EOL;\necho valid_date($date3) . PHP_EOL;\necho valid_date($date4) . PHP_EOL;\n\
    echo valid_date($date5) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    Warning: Undefined array key 1 in /tmp/tmpb6jhc20i.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpb6jhc20i.php on line 23



    Warning: Undefined array key 1 in /tmp/tmpb6jhc20i.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpb6jhc20i.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpb6jhc20i.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpb6jhc20i.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpb6jhc20i.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpb6jhc20i.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpb6jhc20i.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpb6jhc20i.php on line 23

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    // Your code here\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpur0yr2fu.php:27\n\
    Stack trace:\n#0 /tmp/tmpur0yr2fu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpur0yr2fu.php\
    \ on line 27\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $months = array(1, 3,\
    \ 5, 7, 8, 10, 12);\n  $separators = array('-', '.', '/');\n  $delimiter = NULL;\n\
    \  foreach ($separators as $separator) {\n    if (strpos($date, $separator) !==\
    \ FALSE) {\n      $delimiter = $separator;\n      break;\n    }\n  }\n  if (!$delimiter)\
    \ return FALSE;\n  $date_parts = explode($delimiter, $date);\n  if (count($date_parts)\
    \ !== 3) return FALSE;\n  $month = (int) $date_parts[0];\n  $day = (int) $date_parts[1];\n\
    \  $year = (int) $date_parts[2];\n  if ($month > 12 || $month < 1) return FALSE;\n\
    \  if (in_array($month, $months)) {\n    if ($day > 31 || $day < 1) return FALSE;\n\
    \  }\n  elseif ($month === 2) {\n    if ($day > 29 || $day < 1) return FALSE;\n\
    \  }\n  else {\n    if ($day > 30 || $day < 1) return FALSE;\n  }\n  return TRUE;\n\
    }\nvar_dump(valid_date(\"03-11-2000\"));\nvar_dump(valid_date(\"15-01-2012\"));\n\
    var_dump(valid_date(\"04-0-2040\"));\nvar_dump(valid_date(\"06-04-2020\"));\n\
    var_dump(valid_date(\"06/04/2020\"));\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(false)

    bool(true)

    bool(true)

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $dateParts = explode('-',\
    \ $date);\n    if(count($dateParts) != 3) {\n        return false;\n    }\n  \
    \  $month = $dateParts[0];\n    $day = $dateParts[1];\n    $year = $dateParts[2];\n\
    \    $isLeapYear = $year % 4 == 0 && $year % 100 != 0 || $year % 400 == 0;\n \
    \   if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($month\
    \ == 2) {\n        if ($isLeapYear) {\n            if ($day < 1 || $day > 29)\
    \ {\n                return false;\n            }\n        } else {\n        \
    \    if ($day < 1 || $day > 28) {\n                return false;\n           \
    \ }\n        }\n    } else if (in_array($month, [1, 3, 5, 7, 8, 10, 12])) {\n\
    \        if ($day < 1 || $day > 31) {\n            return false;\n        }\n\
    \    } else {\n        if ($day < 1 || $day > 30) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\necho valid_date(\"03-11-2000\") ? 'true'\
    \ : 'false';\necho PHP_EOL;\necho valid_date(\"15-01-2012\") ? 'true' : 'false';\n\
    echo PHP_EOL;\necho valid_date(\"04-0-2040\") ? 'true' : 'false';\necho PHP_EOL;\n\
    echo valid_date(\"06-04-2020\") ? 'true' : 'false';\necho PHP_EOL;\necho valid_date(\"\
    06/04/2020\") ? 'true' : 'false';\necho PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (preg_match(\"/\\\
    d{2}-\\d{2}-\\d{4}/\", $date)) {\n        $arr = explode(\"-\", $date);\n    \
    \    $m = $arr[0];\n        $d = $arr[1];\n        $y = $arr[2];\n        if (preg_match(\"\
    /\\d{4}/\", $y)) {\n            if ($m > 0 && $m < 13) {\n                if ($m\
    \ == 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12) {\n\
    \                    if ($d > 0 && $d < 32) {\n                        return\
    \ \"true\";\n                    }\n                } else if ($m == 4 || $m ==\
    \ 6 || $m == 9 || $m == 11) {\n                    if ($d > 0 && $d < 31) {\n\
    \                        return \"true\";\n                    }\n           \
    \     } else if ($m == 2) {\n                    if ($d > 0 && $d < 30) {\n  \
    \                      return \"true\";\n                    }\n             \
    \   }\n            }\n        }\n    }\n    return \"false\";\n}\n\necho valid_date(\"\
    06-04-2020\");\necho \"\\n\";\necho valid_date(\"06/04/2020\");\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "true\nfalse\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfyflux9y.php:55\n\
    Stack trace:\n#0 /tmp/tmpfyflux9y.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpfyflux9y.php\
    \ on line 55\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (\n    preg_match(\"\
    /^[0-9]{2}\\/[0-9]{2}\\/[0-9]{4}$/\", $date) &&\n    checkdate(substr($date, 0,\
    \ 2), substr($date, 3, 2), substr($date, 6, 4))\n  ) {\n    return true;\n  }\n\
    \  return false;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0u6oozz.php:33\n\
    Stack trace:\n#0 /tmp/tmpf0u6oozz.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpf0u6oozz.php\
    \ on line 33\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n   $date_arr = explode(\"\
    -\", $date);\n   if(count($date_arr) != 3) return false;\n   if(!(is_numeric($date_arr[0])\
    \ && is_numeric($date_arr[1]) && is_numeric($date_arr[2]))) return false;\n  \
    \ $date_arr[0] = (int)$date_arr[0];\n   $date_arr[1] = (int)$date_arr[1];\n  \
    \ $date_arr[2] = (int)$date_arr[2];\n   if($date_arr[0] < 1 || $date_arr[0] >\
    \ 12) return false;\n   if($date_arr[0] == 2 && $date_arr[1] > 29) return false;\n\
    \   if(($date_arr[0] == 1 || $date_arr[0] == 3 || $date_arr[0] == 5 || $date_arr[0]\
    \ == 7 || $date_arr[0] == 8 || $date_arr[0] == 10 || $date_arr[0] == 12) && $date_arr[1]\
    \ > 31) return false;\n   if(($date_arr[0] == 4 || $date_arr[0] == 6 || $date_arr[0]\
    \ == 9 || $date_arr[0] == 11) && $date_arr[1] > 30) return false;\n   return true;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgdxnrww.php:39\n\
    Stack trace:\n#0 /tmp/tmppgdxnrww.php(55): test()\n#1 {main}\n  thrown in /tmp/tmppgdxnrww.php\
    \ on line 39\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if ($date) {\n    \
    \    $dateArr = explode('-', $date);\n        $month = $dateArr[0];\n        $day\
    \ = $dateArr[1];\n        $year = $dateArr[2];\n        if (checkdate($month,\
    \ $day, $year)) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmplfzxthg9.php on line 23


    Warning: Undefined array key 2 in /tmp/tmplfzxthg9.php on line 24


    Deprecated: checkdate(): Passing null to parameter #2 ($day) of type int is deprecated
    in /tmp/tmplfzxthg9.php on line 25


    Deprecated: checkdate(): Passing null to parameter #3 ($year) of type int is deprecated
    in /tmp/tmplfzxthg9.php on line 25


    Warning: Undefined array key 1 in /tmp/tmplfzxthg9.php on line 23


    Warning: Undefined array key 2 in /tmp/tmplfzxthg9.php on line 24


    Deprecated: checkdate(): Passing null to parameter #2 ($day) of type int is deprecated
    in /tmp/tmplfzxthg9.php on line 25


    Deprecated: checkdate(): Passing null to parameter #3 ($year) of type int is deprecated
    in /tmp/tmplfzxthg9.php on line 25


    Warning: Undefined array key 2 in /tmp/tmplfzxthg9.php on line 24


    Deprecated: checkdate(): Passing null to parameter #3 ($year) of type int is deprecated
    in /tmp/tmplfzxthg9.php on line 25


    Warning: Undefined array key 2 in /tmp/tmplfzxthg9.php on line 24


    Deprecated: checkdate(): Passing null to parameter #3 ($year) of type int is deprecated
    in /tmp/tmplfzxthg9.php on line 25

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (empty($date)) {\n\
    \    return false;\n  }\n  $days31 = [1,3,5,7,8,10,12];\n  $days30 = [4,6,9,11];\n\
    \  $days29 = [2];\n  $dateSplit = explode('-', $date);\n  if (count($dateSplit)\
    \ != 3) {\n    return false;\n  }\n  $month = $dateSplit[0];\n  $day = $dateSplit[1];\n\
    \  $year = $dateSplit[2];\n  if (in_array($month, $days31)) {\n    if ($day <\
    \ 1 || $day > 31) {\n      return false;\n    }\n  } else if (in_array($month,\
    \ $days30)) {\n    if ($day < 1 || $day > 30) {\n      return false;\n    }\n\
    \  } else if (in_array($month, $days29)) {\n    if ($day < 1 || $day > 29) {\n\
    \      return false;\n    }\n  } else {\n    return false;\n  }\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  return true;\n}\nvar_dump(valid_date(\"\
    03-11-2000\"));\nvar_dump(valid_date(\"15-01-2012\"));\nvar_dump(valid_date(\"\
    04-0-2040\"));\nvar_dump(valid_date(\"06-04-2020\"));\nvar_dump(valid_date(\"\
    06/04/2020\"));\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $dateArray = explode(\"\
    -\", $date);\n  if(count($dateArray) !== 3) return false;\n  if($dateArray[0]\
    \ < 1 || $dateArray[0] > 12) return false;\n  if($dateArray[0] == 2) {\n    if($dateArray[1]\
    \ < 1 || $dateArray[1] > 29) return false;\n  } else if($dateArray[0] % 2 == 0)\
    \ {\n    if($dateArray[1] < 1 || $dateArray[1] > 30) return false;\n  } else {\n\
    \    if($dateArray[1] < 1 || $dateArray[1] > 31) return false;\n  }\n  return\
    \ true;\n}\necho valid_date(\"06-04-2020\") . PHP_EOL;\necho valid_date(\"06/04/2020\"\
    ) . PHP_EOL;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date_arr = explode(\"\
    -\", $date);\n  $date_dd = $date_arr[0];\n  $date_mm = $date_arr[1];\n  $date_yyyy\
    \ = $date_arr[2];\n  if(!$date) {\n    return false;\n  }\n  if($date_dd < 1 ||\
    \ $date_dd > 31) {\n    return false;\n  }\n  if($date_mm < 1 || $date_mm > 12)\
    \ {\n    return false;\n  }\n  if($date_yyyy < 1) {\n    return false;\n  }\n\
    \  if(strlen($date_dd) > 2 || strlen($date_mm) > 2 || strlen($date_yyyy) > 4)\
    \ {\n    return false;\n  }\n  return true;\n}\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vishhaz.php:47\n\
    Stack trace:\n#0 /tmp/tmp2vishhaz.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp2vishhaz.php\
    \ on line 47\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n// your code here\n   \
    \ if (empty($date)) {\n        return false;\n    }\n    if (! preg_match('/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/',\
    \ $date)) {\n        return false;\n    }\n    list($m, $d, $y) = explode('-',\
    \ $date);\n    if (!checkdate($m, $d, $y)) {\n        return false;\n    }\n \
    \   return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $res1 = preg_match(\"\
    /^\\d{2}-\\d{2}-\\d{4}$/\", $date);\n  if (!$res1) return false;\n  list($m, $d,\
    \ $y) = explode(\"-\", $date);\n  if ($m < 1 || $m > 12) return false;\n  if ($m\
    \ == 2) {\n    if ($d < 1 || $d > 29) return false;\n  } elseif ($m == 1 || $m\
    \ == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12) {\n    if ($d\
    \ < 1 || $d > 31) return false;\n  } else {\n    if ($d < 1 || $d > 30) return\
    \ false;\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t$d = explode('-', $date);\n\
    \tif(count($d) != 3) {\n\t\treturn false;\n\t}\n\tif($d[0] > 12 || $d[0] < 1)\
    \ {\n\t\treturn false;\n\t}\n\tif($d[1] > 31 || $d[1] < 1) {\n\t\treturn false;\n\
    \t}\n\tif($d[2] < 1) {\n\t\treturn false;\n\t}\n\tif($d[0] == 2) {\n\t\tif($d[1]\
    \ > 29) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif($d[0] == 4 || $d[0] == 6 || $d[0]\
    \ == 9 || $d[0] == 11) {\n\t\tif($d[1] > 30) {\n\t\t\treturn false;\n\t\t}\n\t\
    }\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $months = array(1,3,5,7,8,10,12);\n\
    \  $year = (int) substr($date, -4);\n  $month = (int) substr($date, 0, 2);\n \
    \ $day = (int) substr($date, 3, 2);\n  if(!$date || $month < 1 || $month > 12\
    \ || $day < 1 || $day > 31) {\n    return false;\n  }\n  if(!in_array($month,\
    \ $months) && $day > 30) {\n    return false;\n  }\n  if($month == 2 && $day >\
    \ 29) {\n    return false;\n  }\n  if(!preg_match('/^\\d{2}-\\d{2}-\\d{4}$/',\
    \ $date)) {\n    return false;\n  }\n  return true;\n}\necho valid_date(\"04-31-2040\"\
    ) . PHP_EOL;\necho valid_date(\"04-0-2040\") . PHP_EOL;\necho valid_date(\"06-04-2020\"\
    ) . PHP_EOL;\necho valid_date(\"06/04/2020\") . PHP_EOL;\necho valid_date(\"06-04-20200\"\
    ) . PHP_EOL;\necho valid_date(\"06-04-201\") . PHP_EOL;\necho valid_date(\"06-04-2020\"\
    ) . PHP_EOL;\necho valid_date(\"06-04-200\") . PHP_EOL;\necho valid_date(\"06-04-20\"\
    ) . PHP_EOL;\necho valid_date(\"06-04-2\") . PHP_EOL;\necho valid_date(\"06-04-0\"\
    ) . PHP_EOL;\necho valid_date(\"06-04-\") . PHP_EOL;\necho valid_date(\"06-04\"\
    ) . PHP_EOL;\necho valid_date(\"04-31-2040\") . PHP_EOL;\necho valid_date(\"04-31-2040\"\
    ) . PHP_EOL;\necho valid_date(\"04-31-2040\") . PHP_EOL;\necho valid_date(\"04-31-2040\"\
    ) .\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpwukgfu0b.php on line 55

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (empty($date)) {\n\
    \        return false;\n    }\n    if (preg_match('/^(\\d{2})-(\\d{2})-(\\d{4})$/',\
    \ $date, $parts) !== 1) {\n        return false;\n    }\n    $month = $parts[1];\n\
    \    $day = $parts[2];\n    $year = $parts[3];\n    if ($month < 1 || $month >\
    \ 12) {\n        return false;\n    }\n    if ($month == 2) {\n        if ($day\
    \ < 1 || $day > 29) {\n            return false;\n        }\n    } elseif ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n        if ($day < 1 || $day > 31) {\n            return\
    \ false;\n        }\n    } else {\n        if ($day < 1 || $day > 30) {\n    \
    \        return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $dmy = explode('-',\
    \ $date);\n    if (count($dmy) == 3) {\n        if (checkdate($dmy[0], $dmy[1],\
    \ $dmy[2])) {\n            return true;\n        }\n    }\n    return false;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    // Your code goes here\
    \ ...\n  //days\n  $d1 = [\"01\",\"03\",\"05\",\"07\",\"08\",\"10\",\"12\"];\n\
    \  $d2 = [\"04\",\"06\",\"09\",\"11\"];\n  $d3 = \"02\";\n  //regex\n  $split\
    \ = \"^(\\d{2})/(\\d{2})/(\\d{4})$\";\n  //split on \"/\"\n  $part = preg_split('/[\\\
    /-]/', $date);\n  //verify length\n  if (count($part) != 3) {\n    return false;\n\
    \  }\n  //verify regex\n  if (preg_match($split, $date) == 0) {\n    return false;\n\
    \  }\n  //verify days\n  if ($part[0] == $d3 && $part[1] > 29) {\n    return false;\n\
    \  }\n  elseif (in_array($part[0], $d2) && $part[1] > 30) {\n    return false;\n\
    \  }\n  elseif (in_array($part[0], $d1) && $part[1] > 31) {\n    return false;\n\
    \  }\n  //verify months\n  elseif ($part[0] > 12) {\n    return false;\n  }\n\
    \  //all good\n  else {\n    return true;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: preg_match(): No ending delimiter '^' found in /tmp/tmp1rv0w6u8.php\
    \ on line 34\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1rv0w6u8.php:61\n\
    Stack trace:\n#0 /tmp/tmp1rv0w6u8.php(79): test()\n#1 {main}\n  thrown in /tmp/tmp1rv0w6u8.php\
    \ on line 61\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write code here...\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpda1jxr3g.php:28\n\
    Stack trace:\n#0 /tmp/tmpda1jxr3g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpda1jxr3g.php\
    \ on line 28\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date = explode(\"-\"\
    , $date);\n  $day = $date[0];\n  $month = $date[1];\n  $year = $date[2];\n  if\
    \ ($month == 2) {\n    $big = 29;\n  } elseif ($month <= 7) {\n    if ($month\
    \ % 2 == 0) {\n      $big = 30;\n    } else {\n      $big = 31;\n    }\n  } else\
    \ {\n    if ($month % 2 == 0) {\n      $big = 31;\n    } else {\n      $big =\
    \ 30;\n    }\n  }\n  if ($day <= $big && $day > 0 && $month <= 12 && $month >\
    \ 0 && strlen($year) == 4) {\n    return \"true\";\n  } else {\n    return \"\
    false\";\n  }\n}\necho valid_date(\"03-11-2000\");\necho \"<br>\";\necho valid_date(\"\
    15-01-2012\");\necho \"<br>\";\necho valid_date(\"04-0-2040\");\necho \"<br>\"\
    ;\necho valid_date(\"06-04-2020\");\necho \"<br>\";\necho valid_date(\"06/04/2020\"\
    );\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "true<br>true<br>false<br>true<br>\nWarning: Undefined array key 1 in /tmp/tmpt61fbw6u.php\
    \ on line 22\n\nWarning: Undefined array key 2 in /tmp/tmpt61fbw6u.php on line\
    \ 23\nfalse\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt61fbw6u.php:59\n\
    Stack trace:\n#0 /tmp/tmpt61fbw6u.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpt61fbw6u.php\
    \ on line 59\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $dateArray = explode(\"\
    -\", $date);\n  if(sizeof($dateArray) != 3) {\n    return false;\n  }\n  $month\
    \ = $dateArray[0];\n  $day = $dateArray[1];\n  $year = $dateArray[2];\n  if(!is_numeric($day)\
    \ || !is_numeric($month) || !is_numeric($year)) {\n    return false;\n  }\n  $year\
    \ = intval($year);\n  $month = intval($month);\n  $day = intval($day);\n  if($month\
    \ == 2) {\n    if($day > 29) {\n      return false;\n    }\n  } elseif($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n    if($day > 31) {\n      return false;\n    }\n  }\
    \ else {\n    if($day > 30) {\n      return false;\n    }\n  }\n  if($month >\
    \ 12) {\n    return false;\n  }\n  return true;\n}\n\necho valid_date(\"03-11-2000\"\
    ) ? \"true\\n\" : \"false\\n\";\necho valid_date(\"15-01-2012\") ? \"true\\n\"\
    \ : \"false\\n\";\necho valid_date(\"04-0-2040\") ? \"true\\n\" : \"false\\n\"\
    ;\necho valid_date(\"06-04-2020\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"\
    06/04/2020\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"06/04/20202\")\
    \ ? \"true\\n\" : \"false\\n\";\necho valid_date(\"06/04/2\") ? \"true\\n\" :\
    \ \"false\\n\";\necho valid_date(\"06/04/2\") ? \"true\\n\" : \"false\\n\";\n\
    echo valid_date(\"03-29-2000\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"\
    03-30-2000\") ? \"true\\n\" : \"false\\n\nfunction candidate(...$args) {\n   \
    \ return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected integer "03", expecting "," or ";" in /tmp/tmpzc3zivx8.php
    on line 67

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if ($date == '') return\
    \ false;\n    $parts = explode('-', $date);\n    if (count($parts) != 3) return\
    \ false;\n    list($m, $d, $y) = $parts;\n    if (!is_numeric($m) || !is_numeric($d)\
    \ || !is_numeric($y)) return false;\n    if ($m < 1 || $m > 12) return false;\n\
    \    if ($d < 1 || $d > 31) return false;\n    if ($m == 2) {\n        if ($d\
    \ > 29) return false;\n    } elseif ($m == 4 || $m == 6 || $m == 9 || $m == 11)\
    \ {\n        if ($d > 30) return false;\n    }\n    return true;\n}\nvar_dump(valid_date(\"\
    03-11-2000\"));\nvar_dump(valid_date(\"15-01-2012\"));\nvar_dump(valid_date(\"\
    04-0-2040\"));\nvar_dump(valid_date(\"06-04-2020\"));\nvar_dump(valid_date(\"\
    06/04/2020\"));\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $month = date('m', strtotime($date));\n\
    \  $day = date('d', strtotime($date));\n  $year = date('Y', strtotime($date));\n\
    \  $minYear = 2000;\n  $maxYear = 2020;\n  //check month\n  if ($month < 1 ||\
    \ $month > 12) {\n    return false;\n  }\n  //check month and day\n  if (($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) && ($day < 1 || $day > 31)) {\n    return false;\n  } else\
    \ if (($month == 4 || $month == 6 || $month == 9 || $month == 11) && ($day < 1\
    \ || $day > 30)) {\n    return false;\n  } else if ($month == 2 && ($day < 1 ||\
    \ $day > 29)) {\n    return false;\n  }\n  //check year\n  if ($year < $minYear\
    \ || $year > $maxYear) {\n    return false;\n  }\n  return true;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9tkdg_6.php:49\n\
    Stack trace:\n#0 /tmp/tmph9tkdg_6.php(66): test()\n#1 {main}\n  thrown in /tmp/tmph9tkdg_6.php\
    \ on line 49\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (empty($date)) {\n\
    \        return false;\n    }\n    $date = explode('-', $date);\n    if (count($date)\
    \ !== 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } elseif ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 0) {\n        return false;\n    }\n    return\
    \ true;\n}\n$valid_date = valid_date(\"03-11-2000\");\necho \"<br>\";\necho $valid_date;\n\
    \nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: <br>1
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $arr = explode(\"-\", $date);\n  $month = $arr[0];\n\
    \  $day = $arr[1];\n  $year = $arr[2];\n  $maxDay = 0;\n  if ($month > 12) {\n\
    \    return false;\n  }\n  switch ($month) {\n    case 1:\n    case 3:\n    case\
    \ 5:\n    case 7:\n    case 8:\n    case 10:\n    case 12:\n      $maxDay = 31;\n\
    \      break;\n    case 4:\n    case 6:\n    case 9:\n    case 11:\n      $maxDay\
    \ = 30;\n      break;\n    case 2:\n      $maxDay = 28;\n      break;\n  }\n \
    \ if ($day > $maxDay) {\n    return false;\n  }\n  if ($year < 2017) {\n    return\
    \ false;\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__s3ubv_.php:64\n\
    Stack trace:\n#0 /tmp/tmp__s3ubv_.php(82): test()\n#1 {main}\n  thrown in /tmp/tmp__s3ubv_.php\
    \ on line 64\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if(empty($date)){\n\
    \        return false;\n    }\n    $dateArr = explode('-', $date);\n    $day =\
    \ $dateArr[0];\n    $month = $dateArr[1];\n    $year = $dateArr[2];\n    $lenghtYear\
    \ = strlen($year);\n    if($lenghtYear < 4){\n        return false;\n    }\n \
    \   $month31 = array(1,3,5,7,8,10,12);\n    $month30 = array(4,6,9,11);\n    if(in_array($month,\
    \ $month31)){\n        if($day < 1 || $day > 31){\n            return false;\n\
    \        }\n    }\n    if(in_array($month, $month30)){\n        if($day < 1 ||\
    \ $day > 30){\n            return false;\n        }\n    }\n    if($month == 2){\n\
    \        if($day < 1 || $day > 29){\n            return false;\n        }\n  \
    \  }\n    if($month < 1 || $month > 12){\n        return false;\n    }\n    return\
    \ true;\n}\necho valid_date(\"03-11-2000\") . '<br>';\necho valid_date(\"15-01-2012\"\
    ) . '<br>';\necho valid_date(\"04-0-2040\") . '<br>';\necho valid_date(\"06-04-2020\"\
    ) . '<br>';\necho valid_date(\"06/04/2020\") . '<br>';\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1<br><br>1<br>\nWarning: Undefined array key 1 in /tmp/tmpkz6_r5d3.php\
    \ on line 25\n\nWarning: Undefined array key 2 in /tmp/tmpkz6_r5d3.php on line\
    \ 26\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string\
    \ is deprecated in /tmp/tmpkz6_r5d3.php on line 27\n<br>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkz6_r5d3.php:65\nStack trace:\n#0 /tmp/tmpkz6_r5d3.php(82):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkz6_r5d3.php on line 65\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (strlen($date) ==\
    \ 0) {\n        return false;\n    }\n    $date_arr = explode(\"-\", $date);\n\
    \    $month = $date_arr[0];\n    $day = $date_arr[1];\n    $year = $date_arr[2];\n\
    \    if (date('m-d-Y', strtotime($date)) === $date) {\n        if ($month > 0\
    \ && $month < 13) {\n            if ($month == 1 || $month == 3 || $month == 5\
    \ || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n         \
    \       if ($day < 1 || $day > 31) {\n                    return false;\n    \
    \            }\n            } else if ($month == 4 || $month == 6 || $month ==\
    \ 9 || $month == 11) {\n                if ($day < 1 || $day > 30) {\n       \
    \             return false;\n                }\n            } else if ($month\
    \ == 2) {\n                if (($year % 4 == 0 && $year % 100 != 0) || $year %\
    \ 400 == 0) {\n                    if ($day < 1 || $day > 29) {\n            \
    \            return false;\n                    }\n                } else {\n\
    \                    if ($day < 1 || $day > 28) {\n                        return\
    \ false;\n                    }\n                }\n            }\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfudcw6y.php:61\n\
    Stack trace:\n#0 /tmp/tmpbfudcw6y.php(79): test()\n#1 {main}\n  thrown in /tmp/tmpbfudcw6y.php\
    \ on line 61\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $parts = explode('-',\
    \ $date);\n  $day = $parts[0];\n  $month = $parts[1];\n  $year = $parts[2];\n\
    \  $isValid = false;\n  $months = [1, 3, 5, 7, 8, 10, 12];\n  foreach ($months\
    \ as $m) {\n    if ($month == $m) {\n      if ($day <= 31 && $day >= 1) {\n  \
    \      $isValid = true;\n      }\n    }\n  }\n  $months = [4, 6, 9, 11];\n  foreach\
    \ ($months as $m) {\n    if ($month == $m) {\n      if ($day <= 30 && $day >=\
    \ 1) {\n        $isValid = true;\n      }\n    }\n  }\n  if ($month == 2) {\n\
    \    if ($day <= 29 && $day >= 1) {\n      $isValid = true;\n    }\n  }\n  if\
    \ ($month <= 12 && $month >= 1) {\n    $isValid = true;\n  }\n  if (strlen($year)\
    \ == 4) {\n    $isValid = true;\n  }\n  return $isValid;\n}\n$isValid = valid_date(\"\
    06-04-2020\");\necho $isValid;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbvb2kwvn.php:62\n\
    Stack trace:\n#0 /tmp/tmpbvb2kwvn.php(79): test()\n#1 {main}\n  thrown in /tmp/tmpbvb2kwvn.php\
    \ on line 62\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\tif (preg_match('/^([0-9]{2})\\\
    -([0-9]{2})\\-([0-9]{4})$/', $date, $matches)) {\n\t\t$day = $matches[2];\n\t\t\
    $month = $matches[1];\n\t\t$year = $matches[3];\n\t\tif ($month < 1 || $month\
    \ > 12) return false;\n\t\tif ($day < 1 || $day > 31) return false;\n\t\tif ($month\
    \ == 2) {\n\t\t\tif (($year % 4 == 0 && $year % 100 != 0) || $year % 400 == 0)\
    \ return $day <= 29;\n\t\t\telse return $day <= 28;\n\t\t}\n\t\telse if (in_array($month,\
    \ [4, 6, 9, 11])) return $day <= 30;\n\t\telse return $day <= 31;\n\t}\n\telse\
    \ return false;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $valid = false;\n \
    \   if(!empty($date)) {\n        $dateArray = explode('-', $date);\n        if(count($dateArray)\
    \ == 3) {\n            $month = (int)$dateArray[0];\n            $day = (int)$dateArray[1];\n\
    \            $year = (int)$dateArray[2];\n            if($month >= 1 && $month\
    \ <= 12) {\n                if($month == 2) {\n                    if($day >=\
    \ 1 && $day <= 29) {\n                        $valid = true;\n               \
    \     }\n                } else if($month == 1 || $month == 3 || $month == 5 ||\
    \ $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n            \
    \        if($day >= 1 && $day <= 31) {\n                        $valid = true;\n\
    \                    }\n                } else {\n                    if($day\
    \ >= 1 && $day <= 30) {\n                        $valid = true;\n            \
    \        }\n                }\n            }\n        }\n    }\n    return $valid;\n\
    }\n\necho valid_date(\"03-11-2000\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"\
    15-01-2012\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"04-0-2040\") ?\
    \ \"true\\n\" : \"false\\n\";\necho valid_date(\"06-04-2020\") ? \"true\\n\" :\
    \ \"false\\n\";\necho valid_date(\"06/04/2020\") ? \"true\\n\" : \"false\\n\"\
    ;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $date = explode('-',\
    \ $date);\n    if (count($date) !== 3) return false;\n    list($month, $day, $year)\
    \ = $date;\n    if ($month < 1 || $month > 12) return false;\n    if ($day < 1\
    \ || $day > 31) return false;\n    if ($year < 1) return false;\n    return checkdate($month,\
    \ $day, $year);\n}\n\necho (valid_date(\"06-04-2020\") == 1) ? \"TRUE\\n\" : \"\
    FALSE\\n\";\necho (valid_date(\"06/04/2020\") == 0) ? \"TRUE\\n\" : \"FALSE\\\
    n\";\necho (valid_date(\"04-20-2040\") == 1) ? \"TRUE\\n\" : \"FALSE\\n\";\necho\
    \ (valid_date(\"15-01-2012\") == 0) ? \"TRUE\\n\" : \"FALSE\\n\";\necho (valid_date(\"\
    \") == 0) ? \"TRUE\\n\" : \"FALSE\\n\";\necho (valid_date(\"04-0-2040\") == 0)\
    \ ? \"TRUE\\n\" : \"FALSE\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'TRUE

    TRUE

    TRUE

    TRUE

    TRUE

    TRUE

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\tif (!empty($date)) {\n\
    \t\t$splitDate = explode(\"-\", $date);\n\t\tif (count($splitDate) == 3) {\n\t\
    \t\t$date = $splitDate[1];\n\t\t\t$month = $splitDate[0];\n\t\t\t$year = $splitDate[2];\n\
    \t\t\tif (($month >= 1) && ($month <= 12)) {\n\t\t\t\tif (($date >= 1) && ($date\
    \ <= 31)) {\n\t\t\t\t\tif ($date == 31) {\n\t\t\t\t\t\tif (($month == 1) || ($month\
    \ == 3) || ($month == 5) || ($month == 7) || ($month == 8) || ($month == 10) ||\
    \ ($month == 12)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\
    \t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} elseif ($date == 30) {\n\t\t\t\
    \t\t\tif (($month == 4) || ($month == 6) || ($month == 9) || ($month == 11)) {\n\
    \t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\
    \t\t\t\t\t\t}\n\t\t\t\t\t} elseif ($date == 29) {\n\t\t\t\t\t\tif ($month == 2)\
    \ {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\
    \t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\
    \t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn\
    \ false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t\
    return false;\n\t}\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if(empty($date)) return\
    \ false;\n  if(preg_match('/^\\d{2}-\\d{2}-\\d{4}$/', $date)) {\n    $dates =\
    \ explode('-', $date);\n    if($dates[0] >= 1 && $dates[0] <= 12) {\n      if($dates[0]\
    \ % 2 == 0) {\n        if($dates[0] == 2) {\n          if($dates[1] >= 1 && $dates[1]\
    \ <= 29) return true;\n        } else {\n          if($dates[1] >= 1 && $dates[1]\
    \ <= 30) return true;\n        }\n      } else {\n        if($dates[1] >= 1 &&\
    \ $dates[1] <= 31) return true;\n      }\n    }\n  }\n  return false;\n}\necho\
    \ valid_date(\"04-30-2020\") ? \"true\" : \"false\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true'
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    // Write your code\
    \ here\n    // To print results to the standard output you can use print\n   \
    \ // Example: print \"Hello world!\";\n}\nfunction candidate(...$args) {\n   \
    \ return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm93wvwlk.php:29\n\
    Stack trace:\n#0 /tmp/tmpm93wvwlk.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpm93wvwlk.php\
    \ on line 29\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $date = explode('-',\
    \ $date);\n    if (count($date) != 3) {\n        return false;\n    }\n    $months\
    \ = array(\n        1 => 31,\n        2 => 28,\n        3 => 31,\n        4 =>\
    \ 30,\n        5 => 31,\n        6 => 30,\n        7 => 31,\n        8 => 31,\n\
    \        9 => 30,\n        10 => 31,\n        11 => 30,\n        12 => 31\n  \
    \  );\n    $is_leap_year = false;\n    if (intval($date[2]) % 4 == 0) {\n    \
    \    $is_leap_year = true;\n    }\n    if ($is_leap_year && intval($date[0]) ==\
    \ 2) {\n        if (intval($date[1]) > 29) {\n            return false;\n    \
    \    }\n    } else if (intval($date[1]) > $months[intval($date[0])]) {\n     \
    \   return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 15 in /tmp/tmpx1792y99.php on line 46\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpx1792y99.php:59\nStack\
    \ trace:\n#0 /tmp/tmpx1792y99.php(75): test()\n#1 {main}\n  thrown in /tmp/tmpx1792y99.php\
    \ on line 59\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n   if (!empty($date)) {\n\
    \        if (preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\", $date, $parts))\
    \ {\n            if (checkdate($parts[1], $parts[2], $parts[3])) {\n         \
    \       echo 'true';\n            } else {\n                echo 'false';\n  \
    \          }\n        } else {\n            echo 'false';\n        }\n    } else\
    \ {\n        echo 'false';\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffmx_87e.php:39\n\
    Stack trace:\n#0 /tmp/tmpffmx_87e.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpffmx_87e.php\
    \ on line 39\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  $date_arr = explode(\"-\", $date);\n  $mm = $date_arr[0];\n  $dd = $date_arr[1];\n\
    \  $yyyy = $date_arr[2];\n  if (is_numeric($mm) && is_numeric($dd) && is_numeric($yyyy))\
    \ {\n    if (1 <= $mm && $mm <= 12) {\n      if ($mm == 1 || $mm == 3 || $mm ==\
    \ 5 || $mm == 7 || $mm == 8 || $mm == 10 || $mm == 12) {\n        if (1 <= $dd\
    \ && $dd <= 31) {\n          return true;\n        }\n      } else if ($mm ==\
    \ 4 || $mm == 6 || $mm == 9 || $mm == 11) {\n        if (1 <= $dd && $dd <= 30)\
    \ {\n          return true;\n        }\n      } else if ($mm == 2) {\n       \
    \ if (1 <= $dd && $dd <= 29) {\n          return true;\n        }\n      }\n \
    \   }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmpes85rk43.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpes85rk43.php on line 24


    Warning: Undefined array key 1 in /tmp/tmpes85rk43.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpes85rk43.php on line 24


    Warning: Undefined array key 1 in /tmp/tmpes85rk43.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpes85rk43.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpes85rk43.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpes85rk43.php on line 24

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if(empty($date)) {\n\
    \    return false;\n  }\n\n  if (!preg_match(\"/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/\"\
    , $date)) {\n    return false;\n  }\n\n  $date_arr = explode('-', $date);\n  $month\
    \ = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n\n  if($month\
    \ > 12 || $month < 1) {\n    return false;\n  }\n\n  if($day > 31 || $day < 1)\
    \ {\n    return false;\n  }\n\n  if(($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) && $day > 30) {\n    return false;\n  }\n\n  if($month == 2\
    \ && $day > 29) {\n    return false;\n  }\n\n  return true;\n}\n\nvar_dump(valid_date(\"\
    03-11-2000\"));\nvar_dump(valid_date(\"15-01-2012\"));\nvar_dump(valid_date(\"\
    04-0-2040\"));\nvar_dump(valid_date(\"06-04-2020\"));\nvar_dump(valid_date(\"\
    06/04/2020\"));\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if ($date == null ||\
    \ count(explode('-', $date)) != 3) {\n        return false;\n    }\n\n    $exp\
    \ = explode('-', $date);\n    $date = new DateTime($date);\n    $lastDays = [31,\
    \ 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    $lastDaysLeap = [31, 29, 31,\
    \ 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    if ($exp[0] < 1 || $exp[0] > 12)\
    \ {\n        return false;\n    }\n\n    if ($exp[2] % 4 == 0) {\n        if ($exp[1]\
    \ < 1 || $exp[1] > $lastDaysLeap[$exp[0] - 1]) {\n            return false;\n\
    \        }\n    } else {\n        if ($exp[1] < 1 || $exp[1] > $lastDays[$exp[0]\
    \ - 1]) {\n            return false;\n        }\n    }\n\n    return $date->format('m-d-Y')\
    \ == $date->format('Y-m-d') ? true : false;\n}\n\n$result = valid_date(\"06-04-2020\"\
    );\nvar_dump($result);\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjde8a8m5.php:53\n\
    Stack trace:\n#0 /tmp/tmpjde8a8m5.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpjde8a8m5.php\
    \ on line 53\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\tif(strlen($date) == 0)\
    \ {\n\t\treturn false;\n\t}\n\tlist($month, $day, $year) = explode('-', $date);\n\
    \tif($month < 1 || $month > 12) {\n\t\treturn false;\n\t}\n\tif($month == 1 ||\
    \ $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 ||\
    \ $month == 12) {\n\t\tif($day < 1 || $day > 31) {\n\t\t\treturn false;\n\t\t\
    }\n\t}\n\tif($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\t\t\
    if($day < 1 || $day > 30) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif($month == 2)\
    \ {\n\t\tif($day < 1 || $day > 29) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\"\
    ) . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    Warning: Undefined array key 1 in /tmp/tmp4_m07r05.php on line 23


    Warning: Undefined array key 2 in /tmp/tmp4_m07r05.php on line 23



    Warning: Undefined array key 1 in /tmp/tmp4_m07r05.php on line 23


    Warning: Undefined array key 2 in /tmp/tmp4_m07r05.php on line 23


    Warning: Undefined array key 1 in /tmp/tmp4_m07r05.php on line 23


    Warning: Undefined array key 2 in /tmp/tmp4_m07r05.php on line 23


    Warning: Undefined array key 2 in /tmp/tmp4_m07r05.php on line 23


    Warning: Undefined array key 2 in /tmp/tmp4_m07r05.php on line 23

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date = str_replace(\"\
    /\", \"-\", $date);\n  $date = explode(\"-\", $date);\n  if (count($date) != 3)\
    \ {\n    return false;\n  }\n  elseif ((int)$date[0] > 12 || (int)$date[0] < 1)\
    \ {\n    return false;\n  }\n  elseif (strlen($date[1]) != 2 || strlen($date[2])\
    \ != 4) {\n    return false;\n  }\n  elseif ((int)$date[0] == 2 && (int)$date[1]\
    \ > 29) {\n    return false;\n  }\n  elseif ((int)$date[0] == 2 && (int)$date[1]\
    \ < 1) {\n    return false;\n  }\n  elseif ((int)$date[0] == 4 && (int)$date[1]\
    \ > 30) {\n    return false;\n  }\n  elseif ((int)$date[0] == 4 && (int)$date[1]\
    \ < 1) {\n    return false;\n  }\n  elseif ((int)$date[0] == 6 && (int)$date[1]\
    \ > 30) {\n    return false;\n  }\n  elseif ((int)$date[0] == 6 && (int)$date[1]\
    \ < 1) {\n    return false;\n  }\n  elseif ((int)$date[0] == 9 && (int)$date[1]\
    \ > 30) {\n    return false;\n  }\n  elseif ((int)$date[0] == 9 && (int)$date[1]\
    \ < 1) {\n    return false;\n  }\n  elseif ((int)$date[0] == 11 && (int)$date[1]\
    \ > 30) {\n    return false;\n  }\n  elseif ((int)$date[0] == 11 && (int)$date[1]\
    \ < 1) {\n    return false;\n  }\n  elseif ((int)$date[0] == 1 && (int)$date[1]\
    \ > 31) {\n    return false;\n  }\n  elseif ((int)$date[\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpfe80nqjw.php on line 65

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t$dt = explode('-', $date);\n\
    \tif(count($dt) != 3) {\n\t\treturn false;\n\t}\n\tif(!checkdate($dt[0], $dt[1],\
    \ $dt[2])) {\n\t\treturn false;\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t$date = preg_replace('/\\\
    s+/', '', $date);\n\tif (empty($date)) {\n\t\treturn false;\n\t}\n\tif (preg_match('/^(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])-([0-9]{4})$/',\
    \ $date, $matches)) {\n\t\t$month = $matches[1];\n\t\t$day = $matches[2];\n\t\t\
    $year = $matches[3];\n\t\tif (($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) && $day > 31) {\n\t\t\t\
    return false;\n\t\t}\n\t\tif (($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) && $day > 30) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($month == 2 && $day\
    \ > 29) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho valid_date(\"03-11-2000\").\"\\n\";\necho valid_date(\"15-01-2012\").\"\
    \\n\";\necho valid_date(\"04-0-2040\").\"\\n\";\necho valid_date(\"06-04-2020\"\
    ).\"\\n\";\necho valid_date(\"06/04/2020\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (empty($date)) return\
    \ false;\n  $months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10',\
    \ '11', '12'];\n  $days = [\n    '01' => 31,\n    '02' => 28,\n    '03' => 31,\n\
    \    '04' => 30,\n    '05' => 31,\n    '06' => 30,\n    '07' => 31,\n    '08'\
    \ => 31,\n    '09' => 30,\n    '10' => 31,\n    '11' => 30,\n    '12' => 31\n\
    \  ];\n  $date_arr = explode('-', $date);\n  if (count($date_arr) != 3) return\
    \ false;\n  if (!in_array($date_arr[0], $months)) return false;\n  if (!in_array($date_arr[1],\
    \ range(1, $days[$date_arr[0]]))) return false;\n  if (!in_array($date_arr[2],\
    \ range(2000, 2020))) return false;\n  return true;\n}\necho valid_date(\"03-11-2000\"\
    ).\"\\n\";\necho valid_date(\"15-01-2012\").\"\\n\";\necho valid_date(\"04-0-2040\"\
    ).\"\\n\";\necho valid_date(\"06-04-2020\").\"\\n\";\necho valid_date(\"06/04/2020\"\
    ).\"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date = explode(\"-\"\
    , $date);\n  if(empty($date)) {\n    return false;\n  }\n  if($date[0] < 1 ||\
    \ $date[0] > 12) {\n    return false;\n  }\n  if($date[1] < 1 || $date[1] > 31)\
    \ {\n    return false;\n  }\n  if($date[2] < 1) {\n    return false;\n  }\n  if(strlen($date[2])\
    \ != 4) {\n    return false;\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6h4fca7c.php:50\n\
    Stack trace:\n#0 /tmp/tmp6h4fca7c.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp6h4fca7c.php\
    \ on line 50\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $month = substr($date,\
    \ 0, 2);\n  $day = substr($date, 3, 2);\n  $year = substr($date, 6, 4);\n  $result\
    \ = true;\n  if (strlen($date) != 10) {\n    $result = false;\n  }\n  if ($month\
    \ > 12) {\n    $result = false;\n  }\n  if (($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) && $day\
    \ > 31) {\n    $result = false;\n  }\n  if (($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) && $day > 30) {\n    $result = false;\n  }\n  if ($month\
    \ == 2 && $day > 29) {\n    $result = false;\n  }\n  if ($year < 0) {\n    $result\
    \ = false;\n  }\n  if (substr($date, 2, 1) != \"-\" || substr($date, 5, 1) !=\
    \ \"-\") {\n    $result = false;\n  }\n  return $result;\n}\n\nif (valid_date(\"\
    03-11-2000\")) {\n  echo \"true\";\n} else {\n  echo \"false\";\n}\necho \"<br>\"\
    ;\nif (valid_date(\"15-01-2012\")) {\n  echo \"true\";\n} else {\n  echo \"false\"\
    ;\n}\necho \"<br>\";\nif (valid_date(\"04-0-2040\")) {\n  echo \"true\";\n} else\
    \ {\n  echo \"false\";\n}\necho \"<br>\";\nif (valid_date(\"06-04-2020\")) {\n\
    \  echo \"true\";\n} else {\n  echo \"false\";\n}\necho \"<br>\";\nif (valid_date(\"\
    06/04/2020\")) {\n  echo \"true\";\n} else {\n  echo \"false\";\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: true<br>false<br>false<br>true<br>false
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\tif (empty($date)) {\n\
    \t\treturn false;\n\t}\n\t//pattern will match any two digits then a dash '-'\
    \ followed by any two digits then a dash '-' and any four digits\n\t$pattern =\
    \ \"/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/\";\n\t$month = substr($date, 0, 2);\n\t$day\
    \ = substr($date, 3, 2);\n\t$year = substr($date, 6, 4);\n\t$validYear = $year\
    \ >= 1900 && $year <= 2100;\n\tif (!preg_match($pattern, $date) || !$validYear)\
    \ {\n\t\treturn false;\n\t}\n\tif ($month == 1 || $month == 3 || $month == 5 ||\
    \ $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n\t\t$validMonth\
    \ = $month >= 1 && $month <= 12;\n\t\t$validDay = $day >= 1 && $day <= 31;\n\t\
    } else if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\t\t\
    $validMonth = $month >= 1 && $month <= 12;\n\t\t$validDay = $day >= 1 && $day\
    \ <= 30;\n\t} else if ($month == 2) {\n\t\t$validMonth = $month >= 1 && $month\
    \ <= 12;\n\t\t$validDay = $day >= 1 && $day <= 29;\n\t}\n\treturn $validMonth\
    \ && $validDay;\n}\n$dates = [\"03-11-2000\", \"15-01-2012\", \"04-0-2040\", \"\
    06-04-2020\", \"06/04/2020\"];\nforeach ($dates as $date) {\n\tif (valid_date($date))\
    \ {\n\t\techo \"$date is valid<br>\";\n\t} else {\n\t\techo \"$date is not valid<br>\"\
    ;\n\t}\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '03-11-2000 is valid<br>

    Warning: Undefined variable $validMonth in /tmp/tmpvstk0fcs.php on line 42

    15-01-2012 is not valid<br>04-0-2040 is not valid<br>06-04-2020 is valid<br>06/04/2020
    is not valid<br>

    Warning: Undefined variable $validMonth in /tmp/tmpvstk0fcs.php on line 42


    Warning: Undefined variable $validMonth in /tmp/tmpvstk0fcs.php on line 42

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $res = \"\";\n  $days\
    \ = [\n    \"01\" => 31,\n    \"02\" => 28,\n    \"03\" => 31,\n    \"04\" =>\
    \ 30,\n    \"05\" => 31,\n    \"06\" => 30,\n    \"07\" => 31,\n    \"08\" =>\
    \ 31,\n    \"09\" => 30,\n    \"10\" => 31,\n    \"11\" => 30,\n    \"12\" =>\
    \ 31\n  ];\n  if ($date == \"\") {\n    $res = false;\n  } else {\n    $splitDate\
    \ = explode(\"-\", $date);\n    if (count($splitDate) == 3) {\n      if (in_array($splitDate[0],\
    \ array_keys($days))) {\n        if (\n          (($splitDate[0] == \"01\") ||\
    \ ($splitDate[0] == \"03\") || ($splitDate[0] == \"05\") || ($splitDate[0] ==\
    \ \"07\") || ($splitDate[0] == \"08\") || ($splitDate[0] == \"10\") || ($splitDate[0]\
    \ == \"12\")) && (($splitDate[1] >= 1) && ($splitDate[1] <= 31))\n        ) {\n\
    \          $res = true;\n        } else if (\n          (($splitDate[0] == \"\
    04\") || ($splitDate[0] == \"06\") || ($splitDate[0] == \"09\") || ($splitDate[0]\
    \ == \"11\")) && (($splitDate[1] >= 1) && ($splitDate[1] <= 30))\n        ) {\n\
    \          $res = true;\n        } else if (\n          ($splitDate[0] == \"02\"\
    ) && (($splitDate[1] >= 1) && ($splitDate[1] <= 29))\n        ) {\n          $res\
    \ = true;\n        } else {\n          $res = false;\n        }\n      } else\
    \ {\n        $res = false;\n      }\n    } else {\n      $res = false;\n    }\n\
    \  }\n  return $res;\n}\n$date = \"06-04-2020\";\necho valid_date($date);\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $m = (int) substr($date,\
    \ 0, 2);\n    $d = (int) substr($date, 3, 2);\n    $y = (int) substr($date, 6,\
    \ 4);\n    $months = [1, 3, 5, 7, 8, 10, 12];\n    $check = true;\n    if(empty($date))\
    \ {\n        $check = false;\n    } elseif ($d < 1 || $d > 31) {\n        $check\
    \ = false;\n    } elseif ($m < 1 || $m > 12) {\n        $check = false;\n    }\
    \ elseif (!in_array($m, $months) && $d > 30) {\n        $check = false;\n    }\
    \ elseif ($m == 2 && $d > 29) {\n        $check = false;\n    }\n    return $check;\n\
    }\n\necho valid_date(\"03-11-2000\");\necho \"\\n\";\necho valid_date(\"15-01-2012\"\
    );\necho \"\\n\";\necho valid_date(\"04-0-2040\");\necho \"\\n\";\necho valid_date(\"\
    06-04-2020\");\necho \"\\n\";\necho valid_date(\"06/04/2020\");\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0nguqvi.php:65\n\
    Stack trace:\n#0 /tmp/tmps0nguqvi.php(72): test()\n#1 {main}\n  thrown in /tmp/tmps0nguqvi.php\
    \ on line 65\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (preg_match(\"/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$/\"\
    , $date, $m)) {\n    $numDays = date(\"t\", strtotime($date));\n    return $m[2]\
    \ <= $numDays;\n  }\n  return false;\n}\necho valid_date(\"03-11-2000\").\"\\\
    n\";\necho valid_date(\"15-01-2012\").\"\\n\";\necho valid_date(\"04-0-2040\"\
    ).\"\\n\";\necho valid_date(\"06-04-2020\").\"\\n\";\necho valid_date(\"06/04/2020\"\
    ).\"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx45p1v8f.php:43\n\
    Stack trace:\n#0 /tmp/tmpx45p1v8f.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpx45p1v8f.php\
    \ on line 43\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (strlen($date) !=\
    \ 10) {\n        return false;\n    }\n\n    if ($date[2] != '-' && $date[5] !=\
    \ '-') {\n        return false;\n    }\n\n    $date = explode('-', $date);\n \
    \   $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n\n    if\
    \ (!is_numeric($month) || !is_numeric($day) || !is_numeric($year)) {\n       \
    \ return false;\n    }\n\n    if ($month > 12 || $month < 1) {\n        return\
    \ false;\n    }\n\n    if ($month == 2) {\n        if ($day > 29 || $day < 1)\
    \ {\n            return false;\n        }\n    } elseif ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n        if ($day > 30 || $day < 1) {\n\
    \            return false;\n        }\n    } else {\n        if ($day > 31 ||\
    \ $day < 1) {\n            return false;\n        }\n    }\n\n    return true;\n\
    }\n\n$inputs = [\n    \"03-11-2000\",\n    \"15-01-2012\",\n    \"04-0-2040\"\
    ,\n    \"06-04-2020\",\n    \"06/04/2020\",\n];\n\nforeach ($inputs as $input)\
    \ {\n    echo valid_date($input) ? \"true\\n\" : \"false\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\"\
    , $date, $matches)) {\n        if (checkdate($matches[1], $matches[2], $matches[3]))\
    \ {\n            return \"true\";\n        }\n    }\n    return \"false\";\n}\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwg1ngdev.php:32\n\
    Stack trace:\n#0 /tmp/tmpwg1ngdev.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpwg1ngdev.php\
    \ on line 32\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $date = explode('-',\
    \ $date);\n    $month = array(1,3,5,7,8,10,12);\n    $month1 = array(4,6,9,11);\n\
    \    $date[0] < 1 || $date[0] > 31 || $date[1] < 1 || $date[1] > 12 || $date[2]\
    \ < 1 || $date[2] > 9999 ? $result = false : $result = true;\n    $date[1] ==\
    \ 2 && $date[0] > 29 ? $result = false : $result = true;\n    in_array($date[1],\
    \ $month) && $date[0] > 31 ? $result = false : $result = true;\n    in_array($date[1],\
    \ $month1) && $date[0] > 30 ? $result = false : $result = true;\n    if ($result\
    \ === true) {\n        return true;\n    } else {\n        return false;\n   \
    \ }\n}\nprint_r(valid_date(\"03-11-2000\"));\necho '<br>';\nprint_r(valid_date(\"\
    15-01-2012\"));\necho '<br>';\nprint_r(valid_date(\"04-0-2040\"));\necho '<br>';\n\
    print_r(valid_date(\"06-04-2020\"));\necho '<br>';\nprint_r(valid_date(\"06/04/2020\"\
    ));\necho '<br>';\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1<br>1<br>1<br>\nWarning: Undefined array key 1 in /tmp/tmp6ypcpogm.php\
    \ on line 24\n\nWarning: Undefined array key 1 in /tmp/tmp6ypcpogm.php on line\
    \ 25\n\nWarning: Undefined array key 1 in /tmp/tmp6ypcpogm.php on line 26\n1<br>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp6ypcpogm.php:50\nStack\
    \ trace:\n#0 /tmp/tmp6ypcpogm.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp6ypcpogm.php\
    \ on line 50\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (is_string($date)\
    \ && preg_match('/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$/', $date))\
    \ {\n    if (substr($date, 0, 2) == '02' && substr($date, 3, 2) > 29) {\n    \
    \  return false;\n    } else if (substr($date, 0, 2) != '02' && substr($date,\
    \ 3, 2) > 31) {\n      return false;\n    } else if (substr($date, 0, 2) == '02'\
    \ && substr($date, 3, 2) <= 29) {\n      return true;\n    } else if (substr($date,\
    \ 0, 2) != '02' && substr($date, 3, 2) <= 31) {\n      return true;\n    }\n \
    \ } else {\n    return false;\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpid5cqckq.php:46\n\
    Stack trace:\n#0 /tmp/tmpid5cqckq.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpid5cqckq.php\
    \ on line 46\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if(!empty($date)) {\n\
    \    $dateArray = explode(\"-\", $date);\n    // $dateArray = array_map('intval',\
    \ $dateArray);\n    $month = intval($dateArray[0]);\n    $day = intval($dateArray[1]);\n\
    \    $year = intval($dateArray[2]);\n    // validate month\n    if ($month > 0\
    \ && $month < 13) {\n      // validate day\n      switch ($month) {\n        case\
    \ 1:\n        case 3:\n        case 5:\n        case 7:\n        case 8:\n   \
    \     case 10:\n        case 12:\n          if ($day > 0 && $day < 32) {\n   \
    \         return true;\n          }\n          break;\n        case 4:\n     \
    \   case 6:\n        case 9:\n        case 11:\n          if ($day > 0 && $day\
    \ < 31) {\n            return true;\n          }\n          break;\n        case\
    \ 2:\n          if ($day > 0 && $day < 30) {\n            return true;\n     \
    \     }\n          break;\n      }\n    }\n  }\n  return false;\n}\n\necho valid_date(\"\
    03-11-2000\");\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    Warning: Undefined array key 1 in /tmp/tmpjt5noum8.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpjt5noum8.php on line 25


    Warning: Undefined array key 1 in /tmp/tmpjt5noum8.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpjt5noum8.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpjt5noum8.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpjt5noum8.php on line 25

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $dd = explode('-',\
    \ $date);\n    if (count($dd) != 3) {\n        return false;\n    }\n    if ($dd[0]\
    \ < 1 || $dd[0] > 12) {\n        return false;\n    }\n    if ($dd[0] == 2) {\n\
    \        if ($dd[1] < 1 || $dd[1] > 29) {\n            return false;\n       \
    \ }\n    } else if ($dd[0] == 1 || $dd[0] == 3 || $dd[0] == 5 || $dd[0] == 7 ||\
    \ $dd[0] == 8 || $dd[0] == 10 || $dd[0] == 12) {\n        if ($dd[1] < 1 || $dd[1]\
    \ > 31) {\n            return false;\n        }\n    } else {\n        if ($dd[1]\
    \ < 1 || $dd[1] > 30) {\n            return false;\n        }\n    }\n    if (strlen($dd[2])\
    \ != 4) {\n        return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (strlen($date) < 2)\
    \ {\n    return false;\n  }\n  $date_explode = explode(\"-\", $date);\n  $date_reverse\
    \ = array_reverse($date_explode);\n  $date_string = implode(\"\", $date_reverse);\n\
    \  $month = intval($date_explode[0]);\n  $day = intval($date_explode[1]);\n  if\
    \ ($month > 12) {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day\
    \ > 29) {\n      return false;\n    }\n  }\n  if ($month == 4 || $month == 6 ||\
    \ $month == 9 || $month == 11) {\n    if ($day > 30) {\n      return false;\n\
    \    }\n  }\n  if ($month == 1 || $month == 3 || $month == 5 || $month == 7 ||\
    \ $month == 8 || $month == 10 || $month == 12) {\n    if ($day > 31) {\n     \
    \ return false;\n    }\n  }\n  if (is_numeric($date_string)) {\n    return true;\n\
    \  }\n  return false;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpecpy1pzi.php:58\n\
    Stack trace:\n#0 /tmp/tmpecpy1pzi.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpecpy1pzi.php\
    \ on line 58\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $months31days = array(1,3,5,7,8,10,12);\n\
    \    $months30days = array(4,6,9,11);\n    $arr_date = explode(\"-\", $date);\n\
    \    if (strlen($date) == 0) {\n        return false;\n    }\n    if (count($arr_date)\
    \ !== 3) {\n        return false;\n    }\n    if (intval($arr_date[0]) < 1 ||\
    \ intval($arr_date[0]) > 12) {\n        return false;\n    }\n    if (intval($arr_date[0])\
    \ == 2) {\n        if (intval($arr_date[1]) < 1 || intval($arr_date[1]) > 29)\
    \ {\n            return false;\n        }\n    }\n    if (in_array(intval($arr_date[0]),\
    \ $months31days)) {\n        if (intval($arr_date[1]) < 1 || intval($arr_date[1])\
    \ > 31) {\n            return false;\n        }\n    }\n    if (in_array(intval($arr_date[0]),\
    \ $months30days)) {\n        if (intval($arr_date[1]) < 1 || intval($arr_date[1])\
    \ > 30) {\n            return false;\n        }\n    }\n    if (intval($arr_date[2])\
    \ < 1) {\n        return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (empty($date)) {\n\
    \    return false;\n  }\n  $date = explode('-', $date);\n  if (count($date) !=\
    \ 3) {\n    return false;\n  }\n  $days = [31, 30, 29, 28];\n  if ($date[0] <\
    \ 1 || $date[0] > 12) {\n    return false;\n  }\n  if ($date[0] == 1 || $date[0]\
    \ == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 ||\
    \ $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) {\n      return false;\n\
    \    }\n  } else if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0]\
    \ == 11) {\n    if ($date[1] < 1 || $date[1] > 30) {\n      return false;\n  \
    \  }\n  } else if ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1] > 29) {\n\
    \      return false;\n    }\n  }\n  if (strlen($date[2]) != 4) {\n    return false;\n\
    \  }\n  return true;\n}\necho valid_date(\"03-11-2000\") ? 'true' : 'false';\n\
    echo PHP_EOL;\necho valid_date(\"15-01-2012\") ? 'true' : 'false';\necho PHP_EOL;\n\
    echo valid_date(\"04-0-2040\") ? 'true' : 'false';\necho PHP_EOL;\necho valid_date(\"\
    06-04-2020\") ? 'true' : 'false';\necho PHP_EOL;\necho valid_date(\"06/04/2020\"\
    ) ? 'true' : 'false';\necho PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $pattern = \"/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/\"\
    ;\n    $result = preg_match($pattern, $date);\n    $date = str_replace(\"-\",\
    \ \" \", $date);\n    $date = explode(\" \", $date);\n    $month = (int)$date[0];\n\
    \    $day = (int)$date[1];\n    if ($month > 12) {\n        return false;\n  \
    \  }\n    if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n        if ($day > 31) {\n        \
    \    return false;\n        }\n    }\n    if ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n        if ($day > 30) {\n            return false;\n\
    \        }\n    }\n    if ($month == 2) {\n        if ($day > 29) {\n        \
    \    return false;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn0kojc98.php:51\n\
    Stack trace:\n#0 /tmp/tmpn0kojc98.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpn0kojc98.php\
    \ on line 51\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t$format = explode('-',\
    \ $date);\n\treturn sizeof($format) == 3\n\t\t&& is_numeric($format[0])\n\t\t\
    && is_numeric($format[1])\n\t\t&& is_numeric($format[2])\n\t\t&& $format[0] >=\
    \ 1 && $format[0] <= 12\n\t\t&& $format[1] >= 1 && $format[1] <= (\n\t\t\t$format[0]\
    \ == 2\n\t\t\t\t? 29\n\t\t\t\t: in_array($format[0], [4, 6, 9, 11])\n\t\t\t\t\t\
    ? 30\n\t\t\t\t\t: 31\n\t\t)\n\t\t&& strlen($format[2]) == 4;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either
    `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmp5pf36vyi.php on line
    27

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \n  $regex = '/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/';\n  $valid\
    \ = preg_match($regex, $date);\n  if ($valid != 1) {\n    return false;\n  }\n\
    \n  $date_array = explode('-', $date);\n  $day = intval($date_array[1]);\n  $month\
    \ = intval($date_array[0]);\n  $year = intval($date_array[2]);\n\n  if ($day >\
    \ 31 || $day < 1) {\n    return false;\n  }\n\n  if ($month > 12 || $month < 1)\
    \ {\n    return false;\n  }\n\n  if ($month == 2) {\n    if ($day > 29) {\n  \
    \    return false;\n    }\n\n    if ($day == 29) {\n      if ($year % 4 != 0)\
    \ {\n        return false;\n      }\n    }\n  }\n\n  if ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n      return false;\n\
    \    }\n  }\n\n  return true;\n}\necho valid_date(\"03-11-2000\") . PHP_EOL;\n\
    echo valid_date(\"15-01-2012\") . PHP_EOL;\necho valid_date(\"04-0-2040\") . PHP_EOL;\n\
    echo valid_date(\"06-04-2020\") . PHP_EOL;\necho valid_date(\"06/04/2020\") .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $date_format = '^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$';\n\
    \    return preg_match('/'.$date_format.'/', $date);\n}\n\necho valid_date(\"\
    06-04-2020\").\"\\n\";\necho valid_date(\"06/04/2020\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6027fx3.php:31\n\
    Stack trace:\n#0 /tmp/tmpe6027fx3.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpe6027fx3.php\
    \ on line 31\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (!$date) {\n    return\
    \ false;\n  }\n  if (!preg_match('/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/', $date)) {\n\
    \    return false;\n  }\n  $date_arr = explode('-', $date);\n  $month = $date_arr[0];\n\
    \  $day = $date_arr[1];\n  $year = $date_arr[2];\n  if ($month > 12 || $month\
    \ < 1) {\n    return false;\n  }\n  if ($month === '02') {\n    if (!is_leap_year($year))\
    \ {\n      if ($day > 28 || $day < 1) {\n        return false;\n      }\n    }\
    \ else {\n      if ($day > 29 || $day < 1) {\n        return false;\n      }\n\
    \    }\n  } else if ($month === '01' || $month === '03' || $month === '05' ||\
    \ $month === '07' || $month === '08' || $month === '10' || $month === '12') {\n\
    \    if ($day > 31 || $day < 1) {\n      return false;\n    }\n  } else {\n  \
    \  if ($day > 30 || $day < 1) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $dates_rule = [\n   \
    \ \"01\" => 31,\n    \"02\" => 29,\n    \"03\" => 31,\n    \"04\" => 30,\n   \
    \ \"05\" => 31,\n    \"06\" => 30,\n    \"07\" => 31,\n    \"08\" => 31,\n   \
    \ \"09\" => 30,\n    \"10\" => 31,\n    \"11\" => 30,\n    \"12\" => 31\n  ];\n\
    \  $months_rule = [\n    \"01\" => 31,\n    \"02\" => 28,\n    \"03\" => 31,\n\
    \    \"04\" => 30,\n    \"05\" => 31,\n    \"06\" => 30,\n    \"07\" => 31,\n\
    \    \"08\" => 31,\n    \"09\" => 30,\n    \"10\" => 31,\n    \"11\" => 30,\n\
    \    \"12\" => 31\n  ];\n  $arr_date = explode(\"-\", $date);\n  if ($arr_date\
    \ == []) {\n    return false;\n  }\n  if (!array_key_exists($arr_date[0], $months_rule))\
    \ {\n    return false;\n  }\n  if (!array_key_exists($arr_date[1], $dates_rule))\
    \ {\n    return false;\n  }\n  if (count($arr_date) !== 3) {\n    return false;\n\
    \  }\n  if (intval($arr_date[0]) > 12 || intval($arr_date[0]) < 1) {\n    return\
    \ false;\n  }\n  if (intval($arr_date[1]) > 31 || intval($arr_date[1]) < 1) {\n\
    \    return false;\n  }\n  if (intval($arr_date[2]) > 2020 || intval($arr_date[2])\
    \ < 1900) {\n    return false;\n  }\n  if (intval($arr_date[1]) > $months_rule[$arr_date[0]])\
    \ {\n    return false;\n  }\n  return true;\n}\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  if (strlen($date) <= 0) return false;\n  $date =\
    \ explode('-', $date);\n  $months = array(1,3,5,7,8,10,12);\n  if ((in_array($date[0],\
    \ $months) && (int)$date[1] > 31) || (in_array($date[0], $months) && (int)$date[1]\
    \ < 1)) {\n    return false;\n  } else if ((!in_array($date[0], $months) && (int)$date[1]\
    \ > 30) || (!in_array($date[0], $months) && (int)$date[1] < 1)) {\n    return\
    \ false;\n  } else if ($date[0] == 2 && (int)$date[1] > 29) {\n    return false;\n\
    \  } else if ($date[0] == 2 && (int)$date[1] < 1) {\n    return false;\n  } else\
    \ if ((int)$date[0] > 12 || (int)$date[0] < 1) {\n    return false;\n  }\n  return\
    \ true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\"\
    ) . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    Warning: Undefined array key 1 in /tmp/tmp_iu8hkz7.php on line 28


    Warning: Undefined array key 1 in /tmp/tmp_iu8hkz7.php on line 28



    Warning: Undefined array key 1 in /tmp/tmp_iu8hkz7.php on line 28


    Warning: Undefined array key 1 in /tmp/tmp_iu8hkz7.php on line 28


    Warning: Undefined array key 1 in /tmp/tmp_iu8hkz7.php on line 28


    Warning: Undefined array key 1 in /tmp/tmp_iu8hkz7.php on line 28

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date_array = explode(\"\
    -\", $date);\n  if (count($date_array) != 3) return false;\n  list($month, $day,\
    \ $year) = $date_array;\n  if ($year <= 0) return false;\n  if ($month < 1 ||\
    \ $month > 12) return false;\n  if ($day < 1) return false;\n  if ($month == 2)\
    \ {\n    if ($day > 29) return false;\n  } else if ($month < 8) {\n    if ($month\
    \ % 2 == 0) {\n      if ($day > 30) return false;\n    } else {\n      if ($day\
    \ > 31) return false;\n    }\n  } else {\n    if ($month % 2 == 0) {\n      if\
    \ ($day > 31) return false;\n    } else {\n      if ($day > 30) return false;\n\
    \    }\n  }\n  return true;\n}\necho valid_date(\"03-11-2000\").\"\\n\";\necho\
    \ valid_date(\"15-01-2012\").\"\\n\";\necho valid_date(\"04-0-2040\").\"\\n\"\
    ;\necho valid_date(\"06-04-2020\").\"\\n\";\necho valid_date(\"06/04/2020\").\"\
    \\n\";\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date_arr = explode(\"\
    -\", $date);\n  $day = $date_arr[0];\n  $month = $date_arr[1];\n  $year = $date_arr[2];\n\
    \  // check $day\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n    if ($day > 31) {\n      return false;\n\
    \    }\n  }\n  if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n    if ($day > 30) {\n      return false;\n    }\n  }\n  if ($month == 2)\
    \ {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  // check $month\n\
    \  if ($month < 1 || $month > 12) {\n    return false;\n  }\n  // check $year\n\
    \  if ($year < 1) {\n    return false;\n  }\n  // check $date format\n  if (!preg_match(\"\
    /^[0-9]{2}-[0-9]{2}-[0-9]{4}$/\", $date)) {\n    return false;\n  }\n  return\
    \ true;\n}\n$date1 = \"03-11-2000\";\necho valid_date($date1) . \"\\n\";\n$date2\
    \ = \"15-01-2012\";\necho valid_date($date2) . \"\\n\";\n$date3 = \"04-0-2040\"\
    ;\necho valid_date($date3) . \"\\n\";\n$date4 = \"06-04-2020\";\necho valid_date($date4)\
    \ . \"\\n\";\n$date5 = \"06/04/2020\";\necho valid_date($date5) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n\n1\n\nWarning: Undefined array key 1 in /tmp/tmpbgc62cj5.php on\
    \ line 22\n\nWarning: Undefined array key 2 in /tmp/tmpbgc62cj5.php on line 23\n\
    \n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgc62cj5.php:73\n\
    Stack trace:\n#0 /tmp/tmpbgc62cj5.php(90): test()\n#1 {main}\n  thrown in /tmp/tmpbgc62cj5.php\
    \ on line 73\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write code here\n\
    \  if(empty($date)){\n    return false;\n  }\n  $date = explode('-', $date);\n\
    \  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if($month >\
    \ 12 || $month < 1){\n    return false;\n  }\n  if($day > 31 || $day < 1){\n \
    \   return false;\n  }\n  if($month == 2 && $day > 29){\n    return false;\n \
    \ }\n  if(($month == 4 || $month == 6 || $month == 9 || $month == 11) && $day\
    \ > 30){\n    return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmpntykf38j.php on line 26


    Warning: Undefined array key 2 in /tmp/tmpntykf38j.php on line 27


    Warning: Undefined array key 1 in /tmp/tmpntykf38j.php on line 26


    Warning: Undefined array key 2 in /tmp/tmpntykf38j.php on line 27


    Warning: Undefined array key 2 in /tmp/tmpntykf38j.php on line 27


    Warning: Undefined array key 2 in /tmp/tmpntykf38j.php on line 27

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  //your code here\n  if\
    \ ( $date == \"\" ) {\n    return false;\n  }\n  $arr = explode(\"-\", $date);\n\
    \  $numberOfDay = $arr[1];\n  $month = $arr[0];\n  if ($month <= 12 && $month\
    \ >= 1) {\n    switch ($month) {\n      case '1':\n      case '3':\n      case\
    \ '5':\n      case '7':\n      case '8':\n      case '10':\n      case '12':\n\
    \        if ($numberOfDay > 31 || $numberOfDay < 1) {\n          return false;\n\
    \        }\n        break;\n      case '4':\n      case '6':\n      case '9':\n\
    \      case '11':\n        if ($numberOfDay > 30 || $numberOfDay < 1) {\n    \
    \      return false;\n        }\n        break;\n      case '2':\n        if ($numberOfDay\
    \ > 29 || $numberOfDay < 1) {\n          return false;\n        }\n        break;\n\
    \    }\n  } else {\n    return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmp8l75sv98.php on line 25


    Warning: Undefined array key 1 in /tmp/tmp8l75sv98.php on line 25

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if(count(explode(\"\
    -\", $date)) == 3) {\n        list($month, $day, $year) = explode(\"-\", $date);\n\
    \        if(is_numeric($month) && is_numeric($day) && is_numeric($year)) {\n \
    \           $today = date(\"m-d-Y\");\n            if($today > $date) {\n    \
    \            return false;\n            } else if ($day > 31) {\n            \
    \    return false;\n            } else if ($month > 12) {\n                return\
    \ false;\n            } else if ($month == 2 && $day > 29) {\n               \
    \ return false;\n            } else if ($month == 4 && $day > 30) {\n        \
    \        return false;\n            } else if ($month == 6 && $day > 30) {\n \
    \               return false;\n            } else if ($month == 9 && $day > 30)\
    \ {\n                return false;\n            } else if ($month == 11 && $day\
    \ > 30) {\n                return false;\n            } else {\n             \
    \   return true;\n            }\n        } else {\n            return false;\n\
    \        }\n    } else {\n        return false;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq8wfn0g5.php:55\n\
    Stack trace:\n#0 /tmp/tmpq8wfn0g5.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpq8wfn0g5.php\
    \ on line 55\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $valid_format = 'mm-dd-yyyy';\n\
    \  $regex_format = '|[a-zA-Z]{2}|';\n  $check_format = preg_match($regex_format,\
    \ $date, $match);\n  if ($check_format) {\n    $valid_date = false;\n  } else\
    \ {\n    $valid_date = true;\n  }\n  return $valid_date;\n}\n\n$name = '03-11-2000';\n\
    $result = valid_date($name);\nprint_r($result);\necho \"<br>\";\necho \"<br>\"\
    ;\n\n$name = '15-01-2012';\n$result = valid_date($name);\nprint_r($result);\n\
    echo \"<br>\";\necho \"<br>\";\n\n$name = '04-0-2040';\n$result = valid_date($name);\n\
    print_r($result);\necho \"<br>\";\necho \"<br>\";\n\n$name = '06-04-2020';\n$result\
    \ = valid_date($name);\nprint_r($result);\necho \"<br>\";\necho \"<br>\";\n\n\
    $name = '06/04/2020';\n$result = valid_date($name);\nprint_r($result);\necho \"\
    <br>\";\necho \"<br>\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br><br>1<br><br>1<br><br>1<br><br>1<br><br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpthb8ycou.php:66\nStack trace:\n#0 /tmp/tmpthb8ycou.php(83):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpthb8ycou.php on line 66\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $months = array(\"\
    01\" => 31, \"02\" => 28, \"03\" => 31, \"04\" => 30, \"05\" => 31, \"06\" =>\
    \ 30, \"07\" => 31, \"08\" => 31, \"09\" => 30, \"10\" => 31, \"11\" => 30, \"\
    12\" => 31);\n    $arr = explode(\"-\", $date);\n    $day = $arr[0];\n    $month\
    \ = $arr[1];\n    $year = $arr[2];\n    if (strlen($year) != 4) return false;\n\
    \    if (!isset($months[$month])) return false;\n    if ($month == \"02\" && $day\
    \ > 28) {\n        if ($year % 4 == 0) {\n            if ($day <= 29) return true;\n\
    \            else return false;\n        } else {\n            return false;\n\
    \        }\n    }\n    if ($day > $months[$month]) return false;\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmm0ze5xt.php:44\n\
    Stack trace:\n#0 /tmp/tmpmm0ze5xt.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpmm0ze5xt.php\
    \ on line 44\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n// Write your code here\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 19 in /tmp/tmpxi7yfqgo.php on line 44

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date = explode(\"-\"\
    , $date);\n  if ($date[0] < 1 || $date[0] > 12) return false;\n  else if ($date[0]\
    \ == 2 && $date[1] > 29) return false;\n  else if (($date[0] == 1 || $date[0]\
    \ == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 ||\
    \ $date[0] == 12) && $date[1] > 31) return false;\n  else if (($date[0] == 4 ||\
    \ $date[0] == 6 || $date[0] == 9 || $date[0] == 11) && $date[1] > 30) return false;\n\
    \  else if ($date[1] < 1 || $date[1] > 31) return false;\n  else if ($date[2]\
    \ < 1) return false;\n  else return true;\n}\n$answer = valid_date(\"06-04-2020\"\
    );\nif ($answer) echo \"true\" . PHP_EOL;\nelse echo \"false\" . PHP_EOL;\n$answer\
    \ = valid_date(\"04-0-2040\");\nif ($answer) echo \"true\" . PHP_EOL;\nelse echo\
    \ \"false\" . PHP_EOL;\n$answer = valid_date(\"15-01-2012\");\nif ($answer) echo\
    \ \"true\" . PHP_EOL;\nelse echo \"false\" . PHP_EOL;\n$answer = valid_date(\"\
    06/04/2020\");\nif ($answer) echo \"true\" . PHP_EOL;\nelse echo \"false\" . PHP_EOL;\n\
    \nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    false

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $result = false;\n  $months\
    \ = array(\n   1 => \"Jan\",\n   2 => \"Feb\",\n   3 => \"Mar\",\n   4 => \"Apr\"\
    ,\n   5 => \"May\",\n   6 => \"Jun\",\n   7 => \"Jul\",\n   8 => \"Aug\",\n  \
    \ 9 => \"Sep\",\n   10 => \"Oct\",\n   11 => \"Nov\",\n   12 => \"Dec\"\n  );\n\
    \  if (!empty($date)) {\n    $date_parts = explode(\"-\", $date);\n    if (count($date_parts)\
    \ == 3) {\n      if (is_numeric($date_parts[0]) && is_numeric($date_parts[1])\
    \ && is_numeric($date_parts[2])) {\n        $month = intval($date_parts[0]);\n\
    \        $day = intval($date_parts[1]);\n        $year = intval($date_parts[2]);\n\
    \        if ($year >= 0 && $year <= 9999) {\n          if ($month >= 1 && $month\
    \ <= 12) {\n            if ($month == 2) {\n              if (($year % 4 == 0\
    \ && $year % 100 != 0) || $year % 400 == 0) {\n                if ($day >= 1 &&\
    \ $day <= 29) {\n                  $result = true;\n                }\n      \
    \        } else {\n                if ($day >= 1 && $day <= 28) {\n          \
    \        $result = true;\n                }\n              }\n            } else\
    \ {\n              if ($month == 1 || $month == 3 || $month == 5 || $month ==\
    \ 7 || $month == 8 || $month == 10 || $month == 12) {\n                if ($day\
    \ >= 1 && $day <= 31) {\n                  $result = true;\n                }\n\
    \              } else {\n                if ($day >= 1 && $day <= 30) {\n    \
    \              $result = true;\n                }\n              }\n         \
    \   }\n          }\n        }\n      }\n    }\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $arr = explode('-',\
    \ $date);\n    if (count($arr) != 3) {\n        return false;\n    }\n    foreach\
    \ ($arr as $item) {\n        if (!is_numeric($item)) {\n            return false;\n\
    \        }\n    }\n    if ($arr[0] > 12 || $arr[0] < 1) {\n        return false;\n\
    \    }\n    if ($arr[0] == 1 || $arr[0] == 3 || $arr[0] == 5 || $arr[0] == 7 ||\
    \ $arr[0] == 8 || $arr[0] == 10 || $arr[0] == 12) {\n        if ($arr[1] > 31\
    \ || $arr[1] < 1) {\n            return false;\n        }\n    } else if ($arr[0]\
    \ == 4 || $arr[0] == 6 || $arr[0] == 9 || $arr[0] == 11) {\n        if ($arr[1]\
    \ > 30 || $arr[1] < 1) {\n            return false;\n        }\n    } else if\
    \ ($arr[0] == 2) {\n        if ($arr[1] > 29 || $arr[1] < 1) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if(!$date){\n    return\
    \ false;\n  }\n\n  if (preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\", $date,\
    \ $parts)){\n    if($parts[1] > 12){\n      return false;\n    }\n\n    if($parts[1]\
    \ == 2){\n      return $parts[2] < 30;\n    }elseif($parts[1] == 1 || $parts[1]\
    \ == 3 || $parts[1] == 5 || $parts[1] == 7 || $parts[1] == 8 || $parts[1] == 10\
    \ || $parts[1] == 12){\n      return $parts[2] < 32;\n    }else{\n      return\
    \ $parts[2] < 31;\n    }\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $months = [1,3,5,7,8,10,12];\n\
    \  $months2 = [4,6,9,11];\n  $months3 = [2];\n  $temp = explode(\"-\", $date);\n\
    \  if (count($temp) == 3) {\n    if ($temp[0] >= 1 && $temp[0] <= 12) {\n    \
    \  if (in_array($temp[0], $months)) {\n        if ($temp[1] >= 1 && $temp[1] <=\
    \ 31) {\n          if ($temp[2] >= 1 && $temp[2] <= 9999) {\n            return\
    \ true;\n          }\n        }\n      } elseif (in_array($temp[0], $months2))\
    \ {\n        if ($temp[1] >= 1 && $temp[1] <= 30) {\n          if ($temp[2] >=\
    \ 1 && $temp[2] <= 9999) {\n            return true;\n          }\n        }\n\
    \      } elseif (in_array($temp[0], $months3)) {\n        if ($temp[1] >= 1 &&\
    \ $temp[1] <= 29) {\n          if ($temp[2] >= 1 && $temp[2] <= 9999) {\n    \
    \        return true;\n          }\n        }\n      }\n    }\n  }\n  return false;\n\
    }\nprint valid_date(\"03-11-2000\") . \"\\n\";\nprint valid_date(\"15-01-2012\"\
    ) . \"\\n\";\nprint valid_date(\"04-0-2040\") . \"\\n\";\nprint valid_date(\"\
    06-04-2020\") . \"\\n\";\nprint valid_date(\"06/04/2020\") . \"\\n\";\n ?>\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "1\n\n\n1\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if ($date == null ||\
    \ !preg_match(\"/\\d{2}-\\d{2}-\\d{4}/\", $date)) return false;\n    $date_split\
    \ = explode(\"-\", $date);\n    $month = $date_split[0];\n    $day = $date_split[1];\n\
    \    $year = $date_split[2];\n    $max_days = array(1 => 31, 2 => 28, 3 => 31,\
    \ 4 => 30, 5 => 31, 6 => 30, 7 => 31, 8 => 31, 9 => 30, 10 => 31, 11 => 30, 12\
    \ => 31);\n    if ($year % 4 == 0) $max_days[2] = 29;\n    if ($month > 12 ||\
    \ $month < 1) return false;\n    return $day <= $max_days[$month];\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"03\" in /tmp/tmp4ttpyvdg.php on line 28\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ttpyvdg.php:35\nStack\
    \ trace:\n#0 /tmp/tmp4ttpyvdg.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp4ttpyvdg.php\
    \ on line 35\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $months = array(\"\
    01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\",\
    \ \"11\", \"12\");\n    $days = array(\"01\", \"02\", \"03\", \"04\", \"05\",\
    \ \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\"\
    , \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\"\
    , \"26\", \"27\", \"28\", \"29\", \"30\", \"31\");\n    $num_1 = \"0\";\n    $num_2\
    \ = \"0\";\n    $num_3 = \"0\";\n    $month = \"00\";\n    $day = \"00\";\n  \
    \  $year = \"0000\";\n    $i = 0;\n    $j = 0;\n    $x = \"\";\n    $y = \"\"\
    ;\n    $z = \"\";\n    while ($i < strlen($date)) {\n        if ($date[$i] ===\
    \ \"-\") {\n            $num_1++;\n        }\n        $i++;\n    }\n    if ($num_1\
    \ === 2) {\n        $i = 0;\n        while ($i < strlen($date)) {\n          \
    \  if ($date[$i] === \"-\") {\n                $num_2++;\n            }\n    \
    \        if ($num_2 === 1) {\n                if ($date[$i] !== \"-\") {\n   \
    \                 $month = $month.$date[$i];\n                }\n            }\n\
    \            if ($num_2 === 2) {\n                if ($date[$i] !== \"-\") {\n\
    \                    $day = $day.$date[$i];\n                }\n            }\n\
    \            if ($num_2 === 3) {\n                if ($date[$i] !== \"-\") {\n\
    \                    $year = $year.$date[$i];\n                }\n           \
    \ }\n            $i++;\n        }\n        if (strlen($month) === 2 && strlen($day)\
    \ === 2 && strlen($year) === 4) {\n            $i = 0;\n            while ($i\
    \ < count($months))\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmptekvgble.php on line 65

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (empty($date)) return\
    \ false;\n  $date_arr = explode('-', $date);\n  if (count($date_arr) != 3) return\
    \ false;\n  $m = $date_arr[0];\n  $d = $date_arr[1];\n  $y = $date_arr[2];\n \
    \ if (checkdate($m, $d, $y)) return true;\n  return false;\n}\necho valid_date(\"\
    03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"\
    04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"\
    06/04/2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $month = substr($date,\
    \ 0, 2);\n  $day = substr($date, 3, 2);\n  $year = substr($date, 6, 4);\n  $reg_exp\
    \ = \"/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/\";\n  $valid_months = array(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12);\n  $valid_days = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31);\n  if (!preg_match($reg_exp, $date)) {\n    return false;\n  }\n  if\
    \ (!in_array($month, $valid_months)) {\n    return false;\n  }\n  if (!in_array($day,\
    \ $valid_days)) {\n    return false;\n  }\n  if ($month == 4 || $month == 6 ||\
    \ $month == 9 || $month == 11) {\n    if ($day > 30) {\n      return false;\n\
    \    }\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\n\";\n\
    echo valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\
    \\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date = explode(\"-\"\
    , $date);\n  if(count($date) == 3) {\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if(($day > 0 && $day < 32) && ($month > 0 && $month\
    \ < 13) && ($year > 0 && $year < 3000)) {\n      switch($month) {\n        case\
    \ 2:\n          if($day > 29) {\n            return false;\n          }\n    \
    \      break;\n        case 4:\n        case 6:\n        case 9:\n        case\
    \ 11:\n          if($day > 30) {\n            return false;\n          }\n   \
    \       break;\n      }\n      return true;\n    }\n  }\n  return false;\n}\n\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $date = explode('-',\
    \ $date);\n    if (empty($date)) {\n        return false;\n    }\n    $day = $date[1];\n\
    \    $month = $date[0];\n    $year = $date[2];\n    if ($month > 12 || $month\
    \ < 1) {\n        return false;\n    }\n    if ($month == 1 || $month == 3 ||\
    \ $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n\
    \        if ($day > 31 || $day < 1) {\n            return false;\n        }\n\
    \    } else if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\
    \        if ($day > 30 || $day < 1) {\n            return false;\n        }\n\
    \    } else if ($month == 2) {\n        if ($day > 29 || $day < 1) {\n       \
    \     return false;\n        }\n    }\n    if ($year < 1) {\n        return false;\n\
    \    }\n    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmpz65tu6t_.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpz65tu6t_.php on line 26


    Warning: Undefined array key 1 in /tmp/tmpz65tu6t_.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpz65tu6t_.php on line 26


    Warning: Undefined array key 1 in /tmp/tmpz65tu6t_.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpz65tu6t_.php on line 26


    Warning: Undefined array key 2 in /tmp/tmpz65tu6t_.php on line 26


    Warning: Undefined array key 2 in /tmp/tmpz65tu6t_.php on line 26

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t// declare regex pattern\
    \ and store in variable\n\t$pattern = \"/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/\";\n\t\
    // if the pattern is found in the date string return true otherwise return false\n\
    \tif (preg_match($pattern, $date)) {\n\t\t// split string into an array delimited\
    \ by -\n\t\t$date_array = explode(\"-\", $date);\n\t\t// assign $month variable\
    \ with first element from array\n\t\t$month = $date_array[0];\n\t\t// assign $day\
    \ variable with second element from array\n\t\t$day = $date_array[1];\n\t\t//\
    \ assign $year variable with third element from array\n\t\t$year = $date_array[2];\n\
    \t\t// if month is 2 or less than 12 and greater than 0\n\t\tif ($month >= 2 &&\
    \ $month <= 12) {\n\t\t\t// if month is 2 or less than 30 and greater than 0\n\
    \t\t\tif ($month == 2 && $day >= 1 && $day <= 29) {\n\t\t\t\treturn true;\n\t\t\
    \t} else if ($month >= 1 && $month <= 12 && $day >= 1 && $day <= 30) {\n\t\t\t\
    \treturn true;\n\t\t\t} else if ($month >= 1 && $month <= 12 && $day >= 1 && $day\
    \ <= 31) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t\
    }\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t\
    }\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptdgnnh5u.php:60\n\
    Stack trace:\n#0 /tmp/tmptdgnnh5u.php(74): test()\n#1 {main}\n  thrown in /tmp/tmptdgnnh5u.php\
    \ on line 60\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if(empty($date)){\n \
    \   return false;\n  }\n  $date = explode(\"-\", $date);\n  $mm = $date[0];\n\
    \  $dd = $date[1];\n  $yyyy = $date[2];\n  $valid_dd = array(\"1\",\"2\",\"3\"\
    ,\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\"\
    ,\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\"\
    ,\"27\",\"28\",\"29\",\"30\",\"31\");\n  $valid_mm = array(\"1\",\"2\",\"3\",\"\
    4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\");\n  $max_dd = 31;\n  if($mm\
    \ == \"2\"){\n    $max_dd = 29;\n  }elseif ($mm == \"4\" || $mm == \"6\" || $mm\
    \ == \"9\" || $mm == \"11\") {\n    $max_dd = 30;\n  }\n  if(!in_array($dd, $valid_dd)\
    \ || !in_array($mm, $valid_mm) || $dd > $max_dd){\n    return false;\n  }else{\n\
    \    return true;\n  }\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmpzvvp0t4k.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpzvvp0t4k.php on line 26


    Warning: Undefined array key 1 in /tmp/tmpzvvp0t4k.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpzvvp0t4k.php on line 26


    Warning: Undefined array key 2 in /tmp/tmpzvvp0t4k.php on line 26


    Warning: Undefined array key 2 in /tmp/tmpzvvp0t4k.php on line 26

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (empty($date)) {\n\
    \    return false;\n  }\n  if (!preg_match('/\\d{2}-\\d{2}-\\d{4}/', $date)) {\n\
    \    return false;\n  }\n  list($month, $day, $year) = explode('-', $date);\n\
    \  if (!checkdate($month, $day, $year)) {\n    return false;\n  }\n  return true;\n\
    }\necho valid_date(\"03-11-2000\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"\
    15-01-2012\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"04-0-2040\") ?\
    \ \"true\\n\" : \"false\\n\";\necho valid_date(\"06-04-2020\") ? \"true\\n\" :\
    \ \"false\\n\";\necho valid_date(\"06/04/2020\") ? \"true\\n\" : \"false\\n\"\
    ;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if ($date == \"\")\n\
    \        return false;\n    if (preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\"\
    , $date, $parts)) {\n        if (($parts[1] >= 1 && $parts[1] <= 12) && ($parts[2]\
    \ >= 1 && $parts[2] <= 31)) {\n            switch ($parts[1]) {\n            \
    \    case 2:\n                    if ($parts[2] >= 1 && $parts[2] <= 29)\n   \
    \                     return true;\n                    else\n               \
    \         return false;\n                    break;\n                case 4:\n\
    \                case 6:\n                case 9:\n                case 11:\n\
    \                    if ($parts[2] >= 1 && $parts[2] <= 30)\n                \
    \        return true;\n                    else\n                        return\
    \ false;\n                    break;\n                default:\n             \
    \       return true;\n            }\n        } else\n            return false;\n\
    \    } else\n        return false;\n}\nvar_dump(valid_date(\"03-11-2000\"));\n\
    var_dump(valid_date(\"15-01-2012\"));\nvar_dump(valid_date(\"04-0-2040\"));\n\
    var_dump(valid_date(\"06-04-2020\"));\nvar_dump(valid_date(\"06/04/2020\"));\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if(preg_match(\"/^[0-9]{2}[\\\
    /\\-][0-9]{2}[\\/\\-][0-9]{4}$/\", $date)){\n        $date = str_replace(\"/\"\
    , \"-\", $date);\n        $d = explode(\"-\", $date);\n        $min = \"01\";\n\
    \        $max = \"12\";\n        if($d[0] >= $min && $d[0] <= $max){\n       \
    \     if($d[0]==1 || $d[0]==3 || $d[0]==5 || $d[0]==7 || $d[0]==8 || $d[0]==10\
    \ || $d[0]==12){\n                $max = \"31\";\n            }\n            else\
    \ if($d[0]==4 || $d[0]==6 || $d[0]==9 || $d[0]==11){\n                $max = \"\
    30\";\n            }\n            else{\n                $max = \"29\";\n    \
    \        }\n            if($d[1] >= $min && $d[1] <= $max){\n                if(strlen($d[2])\
    \ == 4){\n                    return true;\n                }\n            }\n\
    \        }\n    }\n    return false;\n}\necho \"03-11-2000 is valid date: \".valid_date(\"\
    03-11-2000\").\"\\n\";\necho \"15-01-2012 is valid date: \".valid_date(\"15-01-2012\"\
    ).\"\\n\";\necho \"04-0-2040 is valid date: \".valid_date(\"04-0-2040\").\"\\\
    n\";\necho \"06-04-2020 is valid date: \".valid_date(\"06-04-2020\").\"\\n\";\n\
    echo \"06/04/2020 is valid date: \".valid_date(\"06/04/2020\").\"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "03-11-2000 is valid date: 1\n15-01-2012 is valid date: \n04-0-2040 is valid\
    \ date: \n06-04-2020 is valid date: 1\n06/04/2020 is valid date: 1\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t$date = explode(\"-\"\
    , $date);\n\tif (sizeof($date) != 3) {\n\t\treturn false;\n\t}\n\t$day = $date[1];\n\
    \t$month = $date[0];\n\t$year = $date[2];\n\tswitch ($month) {\n\t\tcase 1:\n\t\
    \tcase 3:\n\t\tcase 5:\n\t\tcase 7:\n\t\tcase 8:\n\t\tcase 10:\n\t\tcase 12:\n\
    \t\t\tif ($day > 31) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase\
    \ 4:\n\t\tcase 6:\n\t\tcase 9:\n\t\tcase 11:\n\t\t\tif ($day > 30) {\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tif ($day > 29) {\n\t\t\
    \t\treturn false;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn false;\n\t\
    }\n\tif ($year < 1) {\n\t\treturn false;\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd501dc96.php:67\n\
    Stack trace:\n#0 /tmp/tmpd501dc96.php(83): test()\n#1 {main}\n  thrown in /tmp/tmpd501dc96.php\
    \ on line 67\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (!$date) return false;\n\
    \  // explode the date string into day, month and year.\n  $date = explode('-',\
    \ $date);\n  if (count($date) != 3) return false;\n  $day = (int)$date[1];\n \
    \ $month = (int)$date[0];\n  $year = (int)$date[2];\n  // check the conditions\
    \ and return.\n  if (($day >= 1 && $day <= 31) && ($month >= 1 && $month <= 12)\
    \ && ($year >= 1)) {\n    return true;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcngyg3_7.php:45\n\
    Stack trace:\n#0 /tmp/tmpcngyg3_7.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpcngyg3_7.php\
    \ on line 45\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $date = explode('-',\
    \ $date);\n    if (count($date) != 3) {\n        return false;\n    }\n    foreach\
    \ ($date as $val) {\n        if (!ctype_digit($val)) {\n            return false;\n\
    \        }\n    }\n    list($m, $d, $y) = $date;\n    return checkdate($m, $d,\
    \ $y);\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $valid_months = array(1,3,5,7,8,10,12);\n\
    \    $valid_month = array(4,6,9,11);\n    $valid_month2 = array(2);\n    if (!empty($date))\
    \ {\n        $date = explode(\"-\", $date);\n        if (count($date) == 3) {\n\
    \            $m = $date[0];\n            $d = $date[1];\n            $y = $date[2];\n\
    \            if (is_numeric($m) && is_numeric($d) && is_numeric($y)) {\n     \
    \           if ($m >= 1 && $m <= 12) {\n                    if ($m == 2) {\n \
    \                       if ($d >= 1 && $d <= 29) {\n                         \
    \   return true;\n                        }\n                    } elseif (in_array($m,\
    \ $valid_months)) {\n                        if ($d >= 1 && $d <= 31) {\n    \
    \                        return true;\n                        }\n           \
    \         } elseif (in_array($m, $valid_month)) {\n                        if\
    \ ($d >= 1 && $d <= 30) {\n                            return true;\n        \
    \                }\n                    }\n                }\n            }\n\
    \        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $months = ['01', '02', '03', '04', '05', '06', '07',\
    \ '08', '09', '10', '11', '12'];\n  $days = ['01', '02', '03', '04', '05', '06',\
    \ '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19',\
    \ '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'];\n \
    \ if ($date == '') {\n    return false;\n  }\n  if (strlen($date) < 10) {\n  \
    \  return false;\n  }\n  $y = substr($date, -4);\n  $m = substr($date, 3, 2);\n\
    \  $d = substr($date, 0, 2);\n  if ($y < 2000 || $y > 2040) {\n    return false;\n\
    \  }\n  if (!in_array($m, $months)) {\n    return false;\n  }\n  if (!in_array($d,\
    \ $days)) {\n    return false;\n  }\n  if ($m == '02' && $d > 29) {\n    return\
    \ false;\n  }\n  if ($m % 2 != 0 && $m < 7 && $d > 31) {\n    return false;\n\
    \  }\n  if ($m % 2 == 0 && $m < 7 && $d > 30) {\n    return false;\n  }\n  if\
    \ ($m % 2 != 0 && $m > 6 && $d > 30) {\n    return false;\n  }\n  if ($m % 2 ==\
    \ 0 && $m > 6 && $d > 31) {\n    return false;\n  }\n  return true;\n}\nprint_r(valid_date(\"\
    01-02-2040\"));\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zpvrmix.php:67\n\
    Stack trace:\n#0 /tmp/tmp9zpvrmix.php(84): test()\n#1 {main}\n  thrown in /tmp/tmp9zpvrmix.php\
    \ on line 67\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $valid = false;\n  if\
    \ (preg_match('/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/', $date))\
    \ {\n    $ymd = explode('-', $date);\n    $months = array(1,3,5,7,8,10,12);\n\
    \    if (in_array($ymd[0], $months) && $ymd[1] <= 31) {\n      $valid = true;\n\
    \    } elseif (in_array($ymd[0], array(4,6,9,11)) && $ymd[1] <= 30) {\n      $valid\
    \ = true;\n    } elseif ($ymd[0] == 2 && $ymd[1] <= 29) {\n      $valid = true;\n\
    \    }\n  }\n  return $valid;\n}\n\necho valid_date(\"03-11-2000\") ? \"true\\\
    n\" : \"false\\n\";\necho valid_date(\"15-01-2012\") ? \"true\\n\" : \"false\\\
    n\";\necho valid_date(\"04-0-2040\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"\
    06-04-2020\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"06/04/2020\") ?\
    \ \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $arr = explode(\"-\", $date);\n  if (count($arr)\
    \ == 3 && strlen($arr[0]) == 2 && strlen($arr[1]) == 2 && strlen($arr[2]) == 4)\
    \ {\n    if ($arr[0] >= 1 && $arr[0] <= 12) {\n      if (($arr[0] == 1 || $arr[0]\
    \ == 3 || $arr[0] == 5 || $arr[0] == 7 || $arr[0] == 8 || $arr[0] == 10 || $arr[0]\
    \ == 12) && $arr[1] >= 1 && $arr[1] <= 31) {\n        return true;\n      } else\
    \ if (($arr[0] == 4 || $arr[0] == 6 || $arr[0] == 9 || $arr[0] == 11) && $arr[1]\
    \ >= 1 && $arr[1] <= 30) {\n        return true;\n      } else if ($arr[0] ==\
    \ 2 && $arr[1] >= 1 && $arr[1] <= 29) {\n        return true;\n      }\n    }\n\
    \  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $d = explode('-', $date);\n\
    \  $dd = $d[0];\n  $mm = $d[1];\n  $yyyy = $d[2];\n  $months_30 = [4,6,9,11];\n\
    \  $months_31 = [1,3,5,7,8,10,12];\n  if($date && $mm <= 12 && $dd > 0 && $dd\
    \ <= 31) {\n    if(in_array($mm, $months_30) && $dd <= 30) {\n      return true;\n\
    \    } else if(in_array($mm, $months_31)) {\n      return true;\n    } else if($mm\
    \ == 2 && $dd <= 29) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo6jcbhx4.php:43\n\
    Stack trace:\n#0 /tmp/tmpo6jcbhx4.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpo6jcbhx4.php\
    \ on line 43\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $months = array(1,3,5,7,8,10,12);\n\
    \  $months2 = array(4,6,9,11);\n  $date_array = explode(\"-\", $date);\n  $month\
    \ = $date_array[0];\n  $day = $date_array[1];\n  $year = $date_array[2];\n  if\
    \ ($month < 1 || $month > 12) {\n    return false;\n  }\n  if (in_array($month,\
    \ $months)) {\n    if ($day < 1 || $day > 31) {\n      return false;\n    }\n\
    \  }\n  if (in_array($month, $months2)) {\n    if ($day < 1 || $day > 30) {\n\
    \      return false;\n    }\n  }\n  if ($month == 2) {\n    if ($day < 1 || $day\
    \ > 29) {\n      return false;\n    }\n  }\n  if ($year < 0) {\n    return false;\n\
    \  }\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmpi2jnjrxo.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpi2jnjrxo.php on line 25


    Warning: Undefined array key 1 in /tmp/tmpi2jnjrxo.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpi2jnjrxo.php on line 25


    Warning: Undefined array key 1 in /tmp/tmpi2jnjrxo.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpi2jnjrxo.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpi2jnjrxo.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpi2jnjrxo.php on line 25

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Your code here\n \
    \ $date = explode(\"-\", $date);\n  if (sizeof($date) == 3) {\n    if (checkdate($date[0],\
    \ $date[1], $date[2])) {\n      return true;\n    }\n  }\n  return false;\n}\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (!preg_match('/^\\\
    d{2}-\\d{2}-\\d{4}$/', $date)) {\n        return false;\n    }\n    list($month,\
    \ $day, $year) = explode('-', $date);\n    if ($month < 1 || $month > 12) {\n\
    \        return false;\n    }\n    if ($day < 1 || $day > 31) {\n        return\
    \ false;\n    }\n    if ($day > 30 && in_array($month, [4, 6, 9, 11])) {\n   \
    \     return false;\n    }\n    if ($day > 29 && $month == 2) {\n        return\
    \ false;\n    }\n    return true;\n}\necho valid_date(\"03-11-2000\") ? \"true\\\
    n\" : \"false\\n\";\necho valid_date(\"15-01-2012\") ? \"true\\n\" : \"false\\\
    n\";\necho valid_date(\"04-0-2040\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"\
    06-04-2020\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"06/04/2020\") ?\
    \ \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if(!empty($date)) {\n\
    \    $date_arr = explode('-', $date);\n    if(count($date_arr) == 3) {\n     \
    \ if(checkdate($date_arr[0], $date_arr[1], $date_arr[2])) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n   \
    \ return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $isValid = false;\n \
    \ $date_arr = explode(\"-\", $date);\n  $days = intval($date_arr[1]);\n  $months\
    \ = intval($date_arr[0]);\n  if(count($date_arr)==3 && $date_arr[2]!=null){\n\
    \    if($days>=1 && $days<=31 && $months>=1 && $months<=12 && $date_arr[2]!=null){\n\
    \      if($months==1 || $months==3 || $months==5 || $months==7 || $months==8 ||\
    \ $months==10 || $months==12){\n        if($days>=1 && $days<=31){\n         \
    \ $isValid = true;\n        }\n      }else if($months==4 || $months==6 || $months==9\
    \ || $months==11){\n        if($days>=1 && $days<=30){\n          $isValid = true;\n\
    \        }\n      }else if($months==2){\n        if($days>=1 && $days<=29){\n\
    \          $isValid = true;\n        }\n      }\n    }\n  }\n  return $isValid;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmpc3av9lla.php on line 22


    Warning: Undefined array key 1 in /tmp/tmpc3av9lla.php on line 22


    Warning: Undefined array key 1 in /tmp/tmpc3av9lla.php on line 22

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t$dateArr = explode(\"\
    -\", $date);\n\tif (count($dateArr) != 3) {\n\t\treturn false;\n\t}\n\t$day =\
    \ intval($dateArr[1]);\n\t$month = intval($dateArr[0]);\n\t$year = intval($dateArr[2]);\n\
    \tif ($month == 2) {\n\t\tif ($day > 29) {\n\t\t\treturn false;\n\t\t}\n\t} elseif\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n\t\tif ($day > 31) {\n\t\t\treturn false;\n\
    \t\t}\n\t} else {\n\t\tif ($day > 30) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif\
    \ ($month > 12) {\n\t\treturn false;\n\t}\n\tif ($month < 1) {\n\t\treturn false;\n\
    \t}\n\tif ($day < 1) {\n\t\treturn false;\n\t}\n\tif ($year < 1) {\n\t\treturn\
    \ false;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $dateArr = explode('-', $date);\n  $month = $dateArr[0];\n\
    \  $day = $dateArr[1];\n  $year = $dateArr[2];\n  if ($month > 12 || $month <\
    \ 1) {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29 || $day\
    \ < 1) {\n      return false;\n    }\n  } elseif ($month == 4 || $month == 6 ||\
    \ $month == 9 || $month == 11) {\n    if ($day > 30 || $day < 1) {\n      return\
    \ false;\n    }\n  } else {\n    if ($day > 31 || $day < 1) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmpv69fybhn.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpv69fybhn.php on line 26


    Warning: Undefined array key 1 in /tmp/tmpv69fybhn.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpv69fybhn.php on line 26


    Warning: Undefined array key 1 in /tmp/tmpv69fybhn.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpv69fybhn.php on line 26


    Warning: Undefined array key 2 in /tmp/tmpv69fybhn.php on line 26


    Warning: Undefined array key 2 in /tmp/tmpv69fybhn.php on line 26

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $date = explode('-',\
    \ $date);\n    if (count($date) != 3) return false;\n    if (empty($date[0]) ||\
    \ empty($date[1]) || empty($date[2])) return false;\n    $year = $date[2];\n \
    \   $month = $date[0];\n    $day = $date[1];\n    if (!is_numeric($year) || !is_numeric($month)\
    \ || !is_numeric($day)) return false;\n    if ($year < 2020 || $year > 2040) return\
    \ false;\n    if ($month < 1 || $month > 12) return false;\n    if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n        if ($day < 1 || $day > 31) return false;\n    }\
    \ else if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n    \
    \    if ($day < 1 || $day > 30) return false;\n    } else if ($month == 2) {\n\
    \        if ($day < 1 || $day > 29) return false;\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk89n0ckl.php:43\n\
    Stack trace:\n#0 /tmp/tmpk89n0ckl.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpk89n0ckl.php\
    \ on line 43\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $split_date = explode(\"\
    -\", $date);\n    if(count($split_date) == 3) {\n        if(($split_date[0] <=\
    \ 0) || ($split_date[0] > 12)) {\n            return false;\n        }\n     \
    \   if($split_date[0] == 2) {\n            if(($split_date[1] <= 0) || ($split_date[1]\
    \ > 29)) {\n                return false;\n            }\n        }\n        if(($split_date[0]\
    \ == 1) || ($split_date[0] == 3) || ($split_date[0] == 5) || ($split_date[0] ==\
    \ 7) || ($split_date[0] == 8) || ($split_date[0] == 10) || ($split_date[0] ==\
    \ 12)) {\n            if(($split_date[1] <= 0) || ($split_date[1] > 31)) {\n \
    \               return false;\n            }\n        }\n        if(($split_date[0]\
    \ == 4) || ($split_date[0] == 6) || ($split_date[0] == 9) || ($split_date[0] ==\
    \ 11)) {\n            if(($split_date[1] <= 0) || ($split_date[1] > 30)) {\n \
    \               return false;\n            }\n        }\n        if($split_date[2]\
    \ <= 0) {\n            return false;\n        }\n        return true;\n    }\n\
    \    return false;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if(empty($date)){\n\
    \        return false;\n    }\n\n    $arr_date = explode('-', $date);\n    if(count($arr_date)\
    \ != 3){\n        return false;\n    }\n\n    $day = $arr_date[0];\n    $month\
    \ = $arr_date[1];\n    $year = $arr_date[2];\n\n    $valid_day = false;\n    if($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12){\n        if($day >= 1 && $day <= 31){\n            $valid_day\
    \ = true;\n        }\n    }else if($month == 4 || $month == 6 || $month == 9 ||\
    \ $month == 11){\n        if($day >= 1 && $day <= 30){\n            $valid_day\
    \ = true;\n        }\n    }else if($month == 2){\n        if($day >= 1 && $day\
    \ <= 29){\n            $valid_day = true;\n        }\n    }\n\n    if(!$valid_day){\n\
    \        return false;\n    }\n\n    if($month < 1 || $month > 12){\n        return\
    \ false;\n    }\n\n    return true;\n}\n\nprint_r(valid_date(\"04-01-2000\"));\
    \ // true\necho \"<br>\";\nprint_r(valid_date(\"15-01-2012\")); // false\necho\
    \ \"<br>\";\nprint_r(valid_date(\"04-0-2040\")); // false\necho \"<br>\";\nprint_r(valid_date(\"\
    06-04-2020\")); // true\necho \"<br>\";\nprint_r(valid_date(\"06/04/2020\"));\
    \ // false\necho \"<br>\";\nprint_r(valid_date(\"20-05-2000\")); // true\necho\
    \ \"<br>\";\nprint_r(valid_date(\"20-13-2000\")); // false\necho \"<br>\";\nprint_r(valid_date(\"\
    20-05-2000\")); // true\necho \"<br>\";\nprint_r(valid_date(\"00-05-2000\"));\
    \ // false\necho \"<br>\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1<br><br>1<br><br>1<br><br>1<br><br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmph4ugiz7o.php:83\nStack trace:\n#0 /tmp/tmph4ugiz7o.php(100):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmph4ugiz7o.php on line 83\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t// Write your code here\n\
    \n\t// return false if the date string is empty\n\tif (!$date) {\n\t\treturn false;\n\
    \t}\n\n\t// return false if the date is not in the format: mm-dd-yyyy\n\tif (!preg_match('/^\\\
    d{2}-\\d{2}-\\d{4}$/', $date)) {\n\t\treturn false;\n\t}\n\n\t// convert the date\
    \ to an array with indices [month, day, year]\n\t$date_array = explode('-', $date);\n\
    \n\t// return false if the month is not an integer between 1 and 12\n\tif (!is_int($date_array[0]))\
    \ {\n\t\treturn false;\n\t} elseif ($date_array[0] < 1 || $date_array[0] > 12)\
    \ {\n\t\treturn false;\n\t}\n\n\t// return false if the day is not an integer\
    \ between 1 and 31\n\tif (!is_int($date_array[1])) {\n\t\treturn false;\n\t} elseif\
    \ ($date_array[1] < 1 || $date_array[1] > 31) {\n\t\treturn false;\n\t}\n\n\t\
    // return false if the day is not an integer between 1 and 30 for months: 4,6,9,11\n\
    \tif ($date_array[0] == 4 || $date_array[0] == 6 || $date_array[0] == 9 || $date_array[0]\
    \ == 11) {\n\t\tif ($date_array[1] > 30) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\
    \t// return false if the day is not an integer between 1 and 29 for the month\
    \ 2\n\tif ($date_array[0] == 2) {\n\t\tif ($date_array[1] > 29) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\n\t// return true if all of the above rules are satisfied\n\
    \treturn true;\n}\n\necho valid_date(\"03-11-2000\") . \"<br>\";\necho valid_date(\"\
    15-01-2012\") . \"<br>\";\necho valid_date(\"04-0-2040\") . \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<br><br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptdb0n9p6.php:75\n\
    Stack trace:\n#0 /tmp/tmptdb0n9p6.php(93): test()\n#1 {main}\n  thrown in /tmp/tmptdb0n9p6.php\
    \ on line 75\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $months = [\n     \
    \   '1' => 31,\n        '2' => 29,\n        '3' => 31,\n        '4' => 30,\n \
    \       '5' => 31,\n        '6' => 30,\n        '7' => 31,\n        '8' => 31,\n\
    \        '9' => 30,\n        '10' => 31,\n        '11' => 30,\n        '12' =>\
    \ 31\n    ];\n    if (empty($date)) {\n        return false;\n    }\n    if (!preg_match('/^\\\
    d{2}-\\d{2}-\\d{4}$/', $date)) {\n        return false;\n    }\n    list($month,\
    \ $day, $year) = explode('-', $date);\n    if (empty($months[$month])) {\n   \
    \     return false;\n    }\n    if (!ctype_digit($day) || !ctype_digit($year))\
    \ {\n        return false;\n    }\n    if ($day < 1 || $day > $months[$month])\
    \ {\n        return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpduo380_9.php:57\n\
    Stack trace:\n#0 /tmp/tmpduo380_9.php(75): test()\n#1 {main}\n  thrown in /tmp/tmpduo380_9.php\
    \ on line 57\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (is_string($date)\
    \ && !empty($date)) {\n    $exploded_date = explode('-', $date);\n    $month =\
    \ $exploded_date[0];\n    $day = $exploded_date[1];\n    $year = $exploded_date[2];\n\
    \    if (is_numeric($month) && is_numeric($day) && is_numeric($year)) {\n    \
    \  if ($month >= 1 && $month <= 12) {\n        if ($month == 1 || $month == 3\
    \ || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12)\
    \ {\n          if ($day >= 1 && $day <= 31) {\n            return true;\n    \
    \      }\n        } else if ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n          if ($day >= 1 && $day <= 30) {\n            return true;\n\
    \          }\n        } else if ($month == 2) {\n          if ($day >= 1 && $day\
    \ <= 29) {\n            return true;\n          }\n        }\n      }\n    }\n\
    \  }\n  return false;\n}\necho valid_date(\"03-11-2000\") . PHP_EOL;\necho valid_date(\"\
    15-01-2012\") . PHP_EOL;\necho valid_date(\"04-0-2040\") . PHP_EOL;\necho valid_date(\"\
    06-04-2020\") . PHP_EOL;\necho valid_date(\"06/04/2020\") . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    Warning: Undefined array key 1 in /tmp/tmpqi09cd4_.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpqi09cd4_.php on line 24



    Warning: Undefined array key 1 in /tmp/tmpqi09cd4_.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpqi09cd4_.php on line 24


    Warning: Undefined array key 1 in /tmp/tmpqi09cd4_.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpqi09cd4_.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpqi09cd4_.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpqi09cd4_.php on line 24

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (preg_match(\"/^(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])-[0-9]{4}$/\"\
    , $date)) {\n    $date_array = explode(\"-\", $date);\n    if (checkdate($date_array[0],\
    \ $date_array[1], $date_array[2])) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\necho valid_date(\"03-11-2000\");\necho \"\\n\";\necho valid_date(\"\
    15-01-2012\");\necho \"\\n\";\necho valid_date(\"04-0-2040\");\necho \"\\n\";\n\
    echo valid_date(\"06-04-2020\");\necho \"\\n\";\necho valid_date(\"06/04/2020\"\
    );\necho \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date_array = explode(\"\
    -\", $date);\n  // print_r($date_array);\n  if ($date_array[0] >= 1 && $date_array[0]\
    \ <= 31 &&\n      $date_array[1] >= 1 && $date_array[1] <= 12 &&\n      $date_array[2]\
    \ >= 2000 && $date_array[2] <= 2050) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\n\nif (valid_date(\"03-11-2000\")) {\n  echo \"true\";\n} else\
    \ {\n  echo \"false\";\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpegd1c918.php:43\n\
    Stack trace:\n#0 /tmp/tmpegd1c918.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpegd1c918.php\
    \ on line 43\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date_arr = explode(\"\
    -\", $date);\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n\
    \  $error_message = false;\n  if (!empty($date) and count($date_arr) == 3) {\n\
    \    switch ($month) {\n      case $month >= 1 and $month <= 12:\n        if ($month\
    \ == 2 and $day >= 1 and $day <= 29) {\n          $error_message = true;\n   \
    \     } elseif ($month == 4 or $month == 6 or $month == 9 or $month == 11 and\
    \ $day >= 1 and $day <= 30) {\n          $error_message = true;\n        } elseif\
    \ ($month == 1 or $month == 3 or $month == 5 or $month == 7 or $month == 8 or\
    \ $month == 10 or $month == 12 and $day >= 1 and $day <= 31) {\n          $error_message\
    \ = true;\n        } else {\n          $error_message = false;\n        }\n  \
    \      break;\n      default:\n        $error_message = false;\n        break;\n\
    \    }\n  } else {\n    $error_message = false;\n  }\n  return $error_message;\n\
    }\necho valid_date(\"06-04-2020\") . \"<br>\";\necho valid_date(\"06/04/2020\"\
    ) . \"<br>\";\necho valid_date(\"04-0-2040\") . \"<br>\";\necho valid_date(\"\
    15-01-2012\") . \"<br>\";\necho valid_date(\"03-11-2000\") . \"<br>\";\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>\nWarning: Undefined array key 1 in /tmp/tmpdre81atx.php on line 22\n\
    \nWarning: Undefined array key 2 in /tmp/tmpdre81atx.php on line 23\n<br>1<br><br>1<br>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpdre81atx.php:60\nStack\
    \ trace:\n#0 /tmp/tmpdre81atx.php(76): test()\n#1 {main}\n  thrown in /tmp/tmpdre81atx.php\
    \ on line 60\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $months = ['01','02','03','04','05','06','07','08','09','10','11','12'];\n\
    \  $month = substr($date, 0, 2);\n  $day = substr($date, 3, 2);\n  $year = substr($date,\
    \ 6, 4);\n  if (strlen($date) != 10) {\n    return false;\n  }\n  if ($month !=\
    \ '02' && $day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month == '02'\
    \ && $day < 1 || $day > 29) {\n    return false;\n  }\n  if ($month == '04' ||\
    \ $month == '06' || $month == '09' || $month == '11') {\n    if ($day < 1 || $day\
    \ > 30) {\n      return false;\n    }\n  }\n  if (!in_array($month, $months))\
    \ {\n    return false;\n  }\n  if ($year < 1) {\n    return false;\n  }\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $months = array(\"01\", \"03\", \"05\", \"07\", \"\
    08\", \"10\", \"12\");\n  $months1 = array(\"04\", \"06\", \"09\", \"11\");\n\
    \  if ($date == \"\") {\n    return false;\n  }\n  elseif ($date != \"mm-dd-yyyy\"\
    ) {\n    return false;\n  }\n  elseif ($date != preg_match(\"/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/\"\
    , $date)) {\n    return false;\n  }\n  elseif ($date != preg_match(\"^(0[1-9]|1[0-2])-((0[1-9])|(1[0-9])|(2[0-9])|(3[0-1]))-((19)|(20))[0-9]{2}^\"\
    , $date)) {\n    return false;\n  }\n  elseif (in_array(substr($date, 3, 2), $months))\
    \ {\n    if (substr($date, 0, 2) > 31) {\n      return false;\n    }\n  }\n  elseif\
    \ (in_array(substr($date, 3, 2), $months1)) {\n    if (substr($date, 0, 2) > 30)\
    \ {\n      return false;\n    }\n  }\n  elseif (substr($date, 3, 2) == \"02\"\
    ) {\n    if (substr($date, 0, 2) > 29) {\n      return false;\n    }\n  }\n  elseif\
    \ (substr($date, 3, 2) > 12) {\n    return false;\n  }\n  else {\n    return true;\n\
    \  }\n}\n\nprint valid_date(\"03-11-2000\");\nprint valid_date(\"15-01-2012\"\
    );\nprint valid_date(\"04-0-2040\");\nprint valid_date(\"06-04-2020\");\nprint\
    \ valid_date(\"06/04/2020\");\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoy_n1250.php:70\n\
    Stack trace:\n#0 /tmp/tmpoy_n1250.php(88): test()\n#1 {main}\n  thrown in /tmp/tmpoy_n1250.php\
    \ on line 70\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date = explode(\"-\"\
    , $date);\n  $valid = true;\n  if (count($date) !== 3 || empty($date[0]) || empty($date[1])\
    \ || empty($date[2])) {\n    $valid = false;\n  }\n  else {\n    $month = intval($date[0]);\n\
    \    $day = intval($date[1]);\n    $year = intval($date[2]);\n    if ($month <\
    \ 1 || $month > 12) {\n      $valid = false;\n    }\n    else {\n      if ($month\
    \ === 2) {\n        if ($day < 1 || $day > 29) {\n          $valid = false;\n\
    \        }\n      }\n      else if ($month === 1 || $month === 3 || $month ===\
    \ 5 || $month === 7 || $month === 8 || $month === 10 || $month === 12) {\n   \
    \     if ($day < 1 || $day > 31) {\n          $valid = false;\n        }\n   \
    \   }\n      else {\n        if ($day < 1 || $day > 30) {\n          $valid =\
    \ false;\n        }\n      }\n    }\n  }\n  return $valid;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $date = explode('-',\
    \ $date);\n    if(count($date) == 3) {\n        $day = $date[1];\n        $month\
    \ = $date[0];\n        $year = $date[2];\n        if(is_numeric($day) && is_numeric($month)\
    \ && is_numeric($year)) {\n            if(is_int((int)$day) && is_int((int)$month)\
    \ && is_int((int)$year)) {\n                if($day > 0 && $day <= 31 && $month\
    \ > 0 && $month <= 12 && $year > 0) {\n                    if($month == 2) {\n\
    \                        if($day <= 29) {\n                            return\
    \ true;\n                        }\n                    } else if($month == 1\
    \ || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n                        if($day <= 31) {\n             \
    \               return true;\n                        }\n                    }\
    \ else {\n                        if($day <= 30) {\n                         \
    \   return true;\n                        }\n                    }\n         \
    \       }\n            }\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (preg_match(\"/^(\\\
    d{2})-(\\d{2})-(\\d{4})$/\", $date, $matches)) {\n        if ($matches[1] >= 1\
    \ && $matches[1] <= 12) {\n            if ($matches[1] % 2 == 0) {\n         \
    \       if ($matches[1] > 8) {\n                    if ($matches[2] >= 1 && $matches[2]\
    \ <= 30) {\n                        return true;\n                    }\n    \
    \            } elseif ($matches[1] > 2) {\n                    if ($matches[2]\
    \ >= 1 && $matches[2] <= 31) {\n                        return true;\n       \
    \             }\n                } else {\n                    if ($matches[2]\
    \ >= 1 && $matches[2] <= 29) {\n                        return true;\n       \
    \             }\n                }\n            } else {\n                if ($matches[1]\
    \ > 7) {\n                    if ($matches[2] >= 1 && $matches[2] <= 31) {\n \
    \                       return true;\n                    }\n                }\
    \ else {\n                    if ($matches[2] >= 1 && $matches[2] <= 30) {\n \
    \                       return true;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo1wth91a.php:63\n\
    Stack trace:\n#0 /tmp/tmpo1wth91a.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpo1wth91a.php\
    \ on line 63\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (!$date) return false;\n\
    \  $dateArr = explode('-', $date);\n  if (count($dateArr) != 3) return false;\n\
    \  list($month, $day, $year) = $dateArr;\n  $monthDays = [\n    1 => 31,\n   \
    \ 2 => 28,\n    3 => 31,\n    4 => 30,\n    5 => 31,\n    6 => 30,\n    7 => 31,\n\
    \    8 => 31,\n    9 => 30,\n    10 => 31,\n    11 => 30,\n    12 => 31\n  ];\n\
    \  if (!checkdate($month, $day, $year)) return false;\n  if ($monthDays[$month]\
    \ < $day) return false;\n  return true;\n}\necho (valid_date(\"03-11-2000\") ?\
    \ 'true' : 'false') . \"\\n\";\necho (valid_date(\"15-01-2012\") ? 'true' : 'false')\
    \ . \"\\n\";\necho (valid_date(\"04-0-2040\") ? 'true' : 'false') . \"\\n\";\n\
    echo (valid_date(\"06-04-2020\") ? 'true' : 'false') . \"\\n\";\necho (valid_date(\"\
    06/04/2020\") ? 'true' : 'false') . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"03\" in /tmp/tmp17ssfi_7.php on line 39\n\
    false\nfalse\nfalse\n\nWarning: Undefined array key \"06\" in /tmp/tmp17ssfi_7.php\
    \ on line 39\nfalse\nfalse\n\nWarning: Undefined array key \"03\" in /tmp/tmp17ssfi_7.php\
    \ on line 39\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17ssfi_7.php:52\n\
    Stack trace:\n#0 /tmp/tmp17ssfi_7.php(70): test()\n#1 {main}\n  thrown in /tmp/tmp17ssfi_7.php\
    \ on line 52\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (empty($date)) {\n\
    \        return false;\n    }\n    $dateArray = explode('-', $date);\n    if (!isset($dateArray[0])\
    \ || !isset($dateArray[1]) || !isset($dateArray[2])) {\n        return false;\n\
    \    }\n    if (count($dateArray) != 3) {\n        return false;\n    }\n    if\
    \ (!is_numeric($dateArray[0]) || !is_numeric($dateArray[1]) || !is_numeric($dateArray[2]))\
    \ {\n        return false;\n    }\n    if ($dateArray[0] < 1 || $dateArray[0]\
    \ > 12) {\n        return false;\n    }\n    if ($dateArray[0] == 1 || $dateArray[0]\
    \ == 3 || $dateArray[0] == 5 || $dateArray[0] == 7 || $dateArray[0] == 8 || $dateArray[0]\
    \ == 10 || $dateArray[0] == 12) {\n        if ($dateArray[1] < 1 || $dateArray[1]\
    \ > 31) {\n            return false;\n        }\n    } else if ($dateArray[0]\
    \ == 4 || $dateArray[0] == 6 || $dateArray[0] == 9 || $dateArray[0] == 11) {\n\
    \        if ($dateArray[1] < 1 || $dateArray[1] > 30) {\n            return false;\n\
    \        }\n    } else if ($dateArray[0] == 2) {\n        if ($dateArray[1] <\
    \ 1 || $dateArray[1] > 29) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t$date = explode(\"-\"\
    , $date);\n\t//if the number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2\n\tif ($date[1] == 1 || $date[1] == 3 || $date[1]\
    \ == 5 || $date[1] == 7 || $date[1] == 8 || $date[1] == 10 || $date[1] == 12)\
    \ {\n\t\tif ($date[0] < 1 || $date[0] > 31) {\n\t\t\treturn false;\n\t\t}\n\t\
    } elseif ($date[1] == 4 || $date[1] == 6 || $date[1] == 9 || $date[1] == 11) {\n\
    \t\tif ($date[0] < 1 || $date[0] > 30) {\n\t\t\treturn false;\n\t\t}\n\t} elseif\
    \ ($date[1] == 2) {\n\t\tif ($date[0] < 1 || $date[0] > 29) {\n\t\t\treturn false;\n\
    \t\t}\n\t} else {\n\t\treturn false;\n\t}\n\t//the months should not be less than\
    \ 1 or higher than 12\n\tif ($date[1] < 1 || $date[1] > 12) {\n\t\treturn false;\n\
    \t}\n\t//the date should be in the format: mm-dd-yyyy\n\tif (!checkdate($date[1],\
    \ $date[0], $date[2])) {\n\t\treturn false;\n\t}\n\treturn true;\n}\necho valid_date(\"\
    06-04-2020\");\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpidbpx0u9.php:54\n\
    Stack trace:\n#0 /tmp/tmpidbpx0u9.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpidbpx0u9.php\
    \ on line 54\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t$dates = explode(\"-\"\
    , $date);\n\tif (\n\t\t$dates[0] > 0 && $dates[0] < 13 &&\n\t\t$dates[1] > 0 &&\
    \ $dates[1] < 32 &&\n\t\t$dates[2] > 0 && $dates[2] < 32\n\t) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n\nvar_dump(valid_date(\"03-11-2000\")); // true\nvar_dump(valid_date(\"\
    15-01-2012\")); // false\nvar_dump(valid_date(\"04-0-2040\")); // false\nvar_dump(valid_date(\"\
    06-04-2020\")); // true\nvar_dump(valid_date(\"06/04/2020\")); // false\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(false)\nbool(false)\nbool(false)\n\nWarning: Undefined\
    \ array key 1 in /tmp/tmp7jkldqit.php on line 23\nbool(false)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp7jkldqit.php:41\nStack trace:\n\
    #0 /tmp/tmp7jkldqit.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp7jkldqit.php\
    \ on line 41\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write code here\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8u29m0h4.php:27\n\
    Stack trace:\n#0 /tmp/tmp8u29m0h4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8u29m0h4.php\
    \ on line 27\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $months = [1,3,5,7,8,10,12];\n\
    \  $months2 = [4,6,9,11];\n  $date = explode(\"-\", $date);\n  $mm = $date[0];\n\
    \  $dd = $date[1];\n  $yyyy = $date[2];\n  // $mm = preg_match(\"/^[0-1]{1}[0-9]{1}$/\"\
    , $mm);\n  // $dd = preg_match(\"/^[0-3]{1}[0-9]{1}$/\", $dd);\n  // $yyyy = preg_match(\"\
    /^[0-9]{4}$/\", $yyyy);\n  if (empty($date) || $mm > 12 || $yyyy > 2050 || $yyyy\
    \ < 2000 || !in_array($mm, $months) && $dd > 30 || !in_array($mm, $months2) &&\
    \ $dd > 31 || $mm == 2 && $dd > 29) {\n    return false;\n  } else {\n    return\
    \ true;\n  }\n}\necho valid_date(\"03-11-2000\") . PHP_EOL;\necho valid_date(\"\
    15-01-2012\") . PHP_EOL;\necho valid_date(\"04-0-2040\") . PHP_EOL;\necho valid_date(\"\
    06-04-2020\") . PHP_EOL;\necho valid_date(\"06/04/2020\") . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n1\n\nWarning: Undefined array key 1 in /tmp/tmpvnu6ord0.php on\
    \ line 24\n\nWarning: Undefined array key 2 in /tmp/tmpvnu6ord0.php on line 25\n\
    \n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnu6ord0.php:47\n\
    Stack trace:\n#0 /tmp/tmpvnu6ord0.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpvnu6ord0.php\
    \ on line 47\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date_array = explode(\"\
    -\", $date);\n  if (!is_array($date_array) || count($date_array) != 3) {\n   \
    \ return false;\n  }\n\n  if (!is_numeric($date_array[0]) || !is_numeric($date_array[1])\
    \ || !is_numeric($date_array[2])) {\n    return false;\n  }\n\n  $month = intval($date_array[0]);\n\
    \  $day = intval($date_array[1]);\n  $year = intval($date_array[2]);\n\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n\n  if ($month == 2) {\n    if\
    \ ($day < 1 || $day > 29) {\n      return false;\n    }\n  } else if (in_array($month,\
    \ [1, 3, 5, 7, 8, 10, 12])) {\n    if ($day < 1 || $day > 31) {\n      return\
    \ false;\n    }\n  } else {\n    if ($day < 1 || $day > 30) {\n      return false;\n\
    \    }\n  }\n\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date_array = explode(\"\
    -\", $date);\n  if (count($date_array) != 3) {\n    return false;\n  }\n  if (!is_numeric($date_array[0])\
    \ || !is_numeric($date_array[1]) || !is_numeric($date_array[2])) {\n    return\
    \ false;\n  }\n  if ($date_array[0] < 1 || $date_array[0] > 12) {\n    return\
    \ false;\n  }\n  if ($date_array[1] < 1 || $date_array[1] > 31) {\n    return\
    \ false;\n  }\n  if (($date_array[0] == 4 || $date_array[0] == 6 || $date_array[0]\
    \ == 9 || $date_array[0] == 11) && $date_array[1] > 30) {\n    return false;\n\
    \  }\n  if ($date_array[0] == 2 && $date_array[1] > 29) {\n    return false;\n\
    \  }\n  return true;\n}\necho valid_date(\"06-04-2020\").\"\\n\";\necho valid_date(\"\
    06/04/2020\").\"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t//$pattern = '/^[0-3]{1}[0-9]{1}-[0-1]{1}[0-9]{1}-[0-9]{4}$/';\n\
    \t//$pattern = '/^[0-3]{1}[0-9]{1}-\\d{2}-\\d{4}$/';\n\t$pattern = '/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/';\n\
    \treturn preg_match($pattern, $date);\n}\nfunction candidate(...$args) {\n   \
    \ return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t7nr_f5.php:30\n\
    Stack trace:\n#0 /tmp/tmp7t7nr_f5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp7t7nr_f5.php\
    \ on line 30\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $arr = explode('-', $date);\n\
    \  if (count($arr) != 3) {\n    return false;\n  }\n  $month = $arr[0];\n  $day\
    \ = $arr[1];\n  $year = $arr[2];\n  if (!($month > 0 && $month < 13 && $day >\
    \ 0 && $day < 32 && $year > 0)) {\n    return false;\n  }\n  if ($month == 2)\
    \ {\n    return $day < 30;\n  }\n  $set_31 = [1, 3, 5, 7, 8, 10, 12];\n  if (in_array($month,\
    \ $set_31)) {\n    return $day < 32;\n  }\n  return $day < 31;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $res = false;\n  if (!empty($date))\
    \ {\n    $arr = explode('-', $date);\n    if (count($arr) == 3) {\n      $month\
    \ = $arr[0];\n      $day = $arr[1];\n      $year = $arr[2];\n      if ($month\
    \ >= 1 && $month <= 12) {\n        if ($month == 1 || $month == 3 || $month ==\
    \ 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n       \
    \   if ($day >= 1 && $day <= 31) {\n            $res = true;\n          }\n  \
    \      } else if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\
    \          if ($day >= 1 && $day <= 30) {\n            $res = true;\n        \
    \  }\n        } else if ($month == 2) {\n          if ($day >= 1 && $day <= 29)\
    \ {\n            $res = true;\n          }\n        }\n      }\n    }\n  }\n \
    \ return $res;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (!$date) return\
    \ false;\n    $date = explode('-', $date);\n    if (strlen($date[0]) !== 2 ||\
    \ strlen($date[1]) !== 2 || strlen($date[2]) !== 4) return false;\n    if (intval($date[0])\
    \ < 1 || intval($date[0]) > 12) return false;\n    if (intval($date[1]) < 1 ||\
    \ (intval($date[0]) === 1 && intval($date[1]) > 31) || (intval($date[0]) === 3\
    \ && intval($date[1]) > 31) || (intval($date[0]) === 5 && intval($date[1]) > 31)\
    \ || (intval($date[0]) === 7 && intval($date[1]) > 31) || (intval($date[0]) ===\
    \ 8 && intval($date[1]) > 31) || (intval($date[0]) === 10 && intval($date[1])\
    \ > 31) || (intval($date[0]) === 12 && intval($date[1]) > 31) || (intval($date[0])\
    \ === 4 && intval($date[1]) > 30) || (intval($date[0]) === 6 && intval($date[1])\
    \ > 30) || (intval($date[0]) === 9 && intval($date[1]) > 30) || (intval($date[0])\
    \ === 11 && intval($date[1]) > 30) || (intval($date[0]) === 2 && intval($date[1])\
    \ > 29)) return false;\n    return true;\n}\necho valid_date(\"03-11-2000\") .\
    \ PHP_EOL;\necho valid_date(\"15-01-2012\") . PHP_EOL;\necho valid_date(\"04-0-2040\"\
    ) . PHP_EOL;\necho valid_date(\"06-04-2020\") . PHP_EOL;\necho valid_date(\"06/04/2020\"\
    ) . PHP_EOL;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $month = array(\"01\"\
    \ => 31, \"02\" => 28, \"03\" => 31, \"04\" => 30, \"05\" => 31, \"06\" => 30,\
    \ \"07\" => 31, \"08\" => 31, \"09\" => 30, \"10\" => 31, \"11\" => 30, \"12\"\
    \ => 31);\n    $pattern = '/^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-[0-9]{4}$/';\n\
    \    $r = preg_match($pattern, $date);\n    if($r != 1) return false;\n    $year\
    \ = substr($date, -4);\n    $mm = substr($date, 0, 2);\n    $dd = substr($date,\
    \ 3, 2);\n    if($dd < 1 || $dd > $month[$mm]) return false;\n    if($mm < 1 ||\
    \ $mm > 12) return false;\n    if($mm == 2 && $dd == 29) {\n        if($year %\
    \ 4 != 0) return false;\n        if($year % 100 == 0 && $year % 400 != 0) return\
    \ false;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $checkDate = explode(\"\
    -\", $date);\n  if(checkdate($checkDate[0], $checkDate[1], $checkDate[2])) {\n\
    \    return true;\n  }\n  return false;\n}\nfunction candidate(...$args) {\n \
    \   return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpo3u8fwzo.php on line 21\n\n\
    Warning: Undefined array key 2 in /tmp/tmpo3u8fwzo.php on line 21\n\nFatal error:\
    \ Uncaught TypeError: checkdate(): Argument #1 ($month) must be of type int, string\
    \ given in /tmp/tmpo3u8fwzo.php:21\nStack trace:\n#0 /tmp/tmpo3u8fwzo.php(21):\
    \ checkdate('', NULL, NULL)\n#1 /tmp/tmpo3u8fwzo.php(27): valid_date('')\n#2 /tmp/tmpo3u8fwzo.php(37):\
    \ candidate('')\n#3 /tmp/tmpo3u8fwzo.php(49): test()\n#4 {main}\n  thrown in /tmp/tmpo3u8fwzo.php\
    \ on line 21\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t$arr = explode(\"-\"\
    , $date);\n\t$check = checkdate($arr[0], $arr[1], $arr[2]);\n\treturn $check;\n\
    }\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\"\
    ) . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\n1\n\nWarning: Undefined array key 1 in /tmp/tmpouhkw942.php on line\
    \ 21\n\nWarning: Undefined array key 2 in /tmp/tmpouhkw942.php on line 21\n\n\
    Fatal error: Uncaught TypeError: checkdate(): Argument #1 ($month) must be of\
    \ type int, string given in /tmp/tmpouhkw942.php:21\nStack trace:\n#0 /tmp/tmpouhkw942.php(21):\
    \ checkdate('06/04/2020', NULL, NULL)\n#1 /tmp/tmpouhkw942.php(28): valid_date('06/04/2020')\n\
    #2 {main}\n  thrown in /tmp/tmpouhkw942.php on line 21\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\tif(empty($date)){\n\t\
    \treturn false;\n\t}\n\t$date=explode(\"-\",$date);\n\tif(count($date)!=3){\n\t\
    \treturn false;\n\t}\n\t$month=$date[0];\n\t$day=$date[1];\n\t$year=$date[2];\n\
    \tif($year<=0){\n\t\treturn false;\n\t}\n\tif($month<=0 || $month>12){\n\t\treturn\
    \ false;\n\t}\n\tif($month==2){\n\t\tif($day<=0 || $day>29){\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\tif($month==1 || $month==3 || $month==5 || $month==7 || $month==8\
    \ || $month==10 || $month==12){\n\t\tif($day<=0 || $day>31){\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\tif($month==4 || $month==6 || $month==9 || $month==11){\n\t\tif($day<=0\
    \ || $day>30){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\tif(!empty($date)){\n\t\
    \t$date = explode('-', $date);\n\t\t$day = $date[0];\n\t\t$month = $date[1];\n\
    \t\t$year = $date[2];\n\t\t// $date = str_replace('-', '', $date);\n\t\tif (strlen($date)\
    \ == 10) {\n\t\t\tif ($month == 1 || $month == 3 || $month == 5 || $month == 7\
    \ || $month == 8 || $month == 10 || $month == 12) {\n\t\t\t\tif ($day <= 31) {\n\
    \t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\
    \t\t\t} elseif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\
    \t\t\t\tif ($day <= 30) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\t\
    return false;\n\t\t\t\t}\n\t\t\t} elseif ($month == 2) {\n\t\t\t\tif ($day <=\
    \ 29) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\
    \t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\t\
    return false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be\
    \ of type string, array given in /tmp/tmpgxmjwl4_.php:26\nStack trace:\n#0 /tmp/tmpgxmjwl4_.php(57):\
    \ valid_date(Array)\n#1 /tmp/tmpgxmjwl4_.php(61): candidate('03-11-2000')\n#2\
    \ /tmp/tmpgxmjwl4_.php(79): test()\n#3 {main}\n  thrown in /tmp/tmpgxmjwl4_.php\
    \ on line 26\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $regex = \"/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/\"\
    ;\n    $check_regex = preg_match($regex, $date);\n    $parts = explode(\"-\",\
    \ $date);\n    $year = $parts[2];\n    $month = $parts[0];\n    $day = $parts[1];\n\
    \    $is_leap_year = date(\"L\", mktime(0, 0, 0, 1, 1, $year));\n    if($check_regex\
    \ == 1) {\n        if(($month == 1 || $month == 3 || $month == 5 || $month ==\
    \ 7 || $month == 8 || $month == 10 || $month == 12) && ($day >= 1 && $day <= 31))\
    \ {\n            return true;\n        }\n        else if(($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) && ($day >= 1 && $day <= 30)) {\n     \
    \       return true;\n        }\n        else if($month == 2 && ($day >= 1 &&\
    \ $day <= 29)) {\n            return true;\n        }\n        else if($month\
    \ == 2 && ($day >= 1 && $day <= 28) && $is_leap_year == 0) {\n            return\
    \ true;\n        }\n        else {\n            return false;\n        }\n   \
    \ }\n    else {\n        return false;\n    }\n}\necho valid_date(\"03-11-2000\"\
    ) . PHP_EOL;\necho valid_date(\"15-01-2012\") . PHP_EOL;\necho valid_date(\"04-0-2040\"\
    ) . PHP_EOL;\necho valid_date(\"06-04-2020\") . PHP_EOL;\necho valid_date(\"06/04/2020\"\
    ) . PHP_EOL;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    Warning: Undefined array key 2 in /tmp/tmpvr4a9748.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpvr4a9748.php on line 25



    Warning: Undefined array key 2 in /tmp/tmpvr4a9748.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpvr4a9748.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpvr4a9748.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpvr4a9748.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpvr4a9748.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpvr4a9748.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpvr4a9748.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpvr4a9748.php on line 23

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (empty($date)) {\n\
    \        return false;\n    }\n    if ($date[2] != '-' || $date[5] != '-') {\n\
    \        return false;\n    }\n    $month = substr($date, 0, 2);\n    $day = substr($date,\
    \ 3, 2);\n    $year = substr($date, 6, 4);\n    if ($year < 0 || $year > 3000)\
    \ {\n        return false;\n    }\n    if ($month < 1 || $month > 12) {\n    \
    \    return false;\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day\
    \ > 29) {\n            return false;\n        }\n    } else if ($month == 1 ||\
    \ $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 ||\
    \ $month == 12) {\n        if ($day < 1 || $day > 31) {\n            return false;\n\
    \        }\n    } else {\n        if ($day < 1 || $day > 30) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $valid = false;\n \
    \   $dateArr = explode('-', $date);\n    if (is_array($dateArr) && count($dateArr)\
    \ === 3) {\n        $month = $dateArr[0];\n        $day = $dateArr[1];\n     \
    \   $year = $dateArr[2];\n        $valid = check_month($month) && check_day($day,\
    \ $month) && check_year($year);\n    }\n    return $valid;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function check_month()\
    \ in /tmp/tmp9uwkz21y.php:26\nStack trace:\n#0 /tmp/tmp9uwkz21y.php(32): valid_date('03-11-2000')\n\
    #1 /tmp/tmp9uwkz21y.php(36): candidate('03-11-2000')\n#2 /tmp/tmp9uwkz21y.php(54):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp9uwkz21y.php on line 26\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $date_arr = explode(\"-\", $date);\n  $dd = $date_arr[0];\n\
    \  $mm = $date_arr[1];\n  $yyyy = $date_arr[2];\n  if($dd < 1 || $dd > 31 || $mm\
    \ < 1 || $mm > 12)\n    return false;\n  elseif($mm == 1 || $mm == 3 || $mm ==\
    \ 5 || $mm == 7 || $mm == 8 || $mm == 10 || $mm == 12)\n    return true;\n  elseif($mm\
    \ == 4 || $mm == 6 || $mm == 9 || $mm == 11)\n    return ($dd <= 30)? true : false;\n\
    \  elseif($mm == 2 && (($yyyy % 4 == 0 && $yyyy % 100 != 0) || $yyyy % 400 ==\
    \ 0))\n    return ($dd <= 29)? true : false;\n  elseif($mm == 2)\n    return ($dd\
    \ <= 28)? true : false;\n  else\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa9xrs1cj.php:46\n\
    Stack trace:\n#0 /tmp/tmpa9xrs1cj.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpa9xrs1cj.php\
    \ on line 46\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date1 = explode(\"-\"\
    , $date);\n  $date2 = explode(\"/\", $date);\n  $date3 = explode(\".\", $date);\n\
    \  if (count($date1) != 3 && count($date2) != 3 && count($date3) != 3) {\n   \
    \ return false;\n  }\n  elseif (count($date1) == 3) {\n    $month = $date1[0];\n\
    \    $day = $date1[1];\n    $year = $date1[2];\n  }\n  elseif (count($date2) ==\
    \ 3) {\n    $month = $date2[0];\n    $day = $date2[1];\n    $year = $date2[2];\n\
    \  }\n  elseif (count($date3) == 3) {\n    $month = $date3[0];\n    $day = $date3[1];\n\
    \    $year = $date3[2];\n  }\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  elseif ($month == 2) {\n    if ($day < 1 || $day > 29) {\n      return\
    \ false;\n    }\n  }\n  elseif ($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) {\n    if ($day < 1 ||\
    \ $day > 31) {\n      return false;\n    }\n  }\n  elseif ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n    if ($day < 1 || $day > 30) {\n \
    \     return false;\n    }\n  }\n  return true;\n}\n$date = '06-04-2020';\necho\
    \ valid_date($date) . PHP_EOL;\n$date = '06/04/2020';\necho valid_date($date)\
    \ . PHP_EOL;\n$date = '06.04.2020';\necho valid_date($date) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    1

    1

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $months = array(\"\
    01\" => 31, \"02\" => 28, \"03\" => 31, \"04\" => 30, \"05\" => 31, \"06\" =>\
    \ 30, \"07\" => 31, \"08\" => 31, \"09\" => 30, \"10\" => 31, \"11\" => 30, \"\
    12\" => 31);\n    if (empty($date)) {\n        return false;\n    }\n    if (preg_match(\"\
    /^\\d{2}-\\d{2}-\\d{4}$/\", $date)) {\n        $d = substr($date, 0, 2);\n   \
    \     $m = substr($date, 3, 2);\n        $y = substr($date, 6, 4);\n        if\
    \ ($d < 1 || $d > $months[$m]) {\n            return false;\n        }\n     \
    \   if ($m < 1 || $m > 12) {\n            return false;\n        }\n        if\
    \ (strlen($y) != 4) {\n            return false;\n        }\n        return true;\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09ghjmef.php:47\n\
    Stack trace:\n#0 /tmp/tmp09ghjmef.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp09ghjmef.php\
    \ on line 47\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date_array = explode(\"\
    -\", $date);\n  $date_array[0] = (int)$date_array[0];\n  $date_array[1] = (int)$date_array[1];\n\
    \  $date_array[2] = (int)$date_array[2];\n  if($date_array[0]<1 || $date_array[0]>12)\
    \ {\n    return false;\n  }\n  if($date_array[0]<1 || $date_array[0]>12) {\n \
    \   return false;\n  }\n  if(is_float($date_array[0]) || is_float($date_array[1])\
    \ || is_float($date_array[2])) {\n    return false;\n  }\n  if($date_array[0]==1\
    \ || $date_array[0]==3 || $date_array[0]==5 || $date_array[0]==7 || $date_array[0]==8\
    \ || $date_array[0]==10 || $date_array[0]==12) {\n    if($date_array[1]<1 || $date_array[1]>31)\
    \ {\n      return false;\n    }\n  }\n  if($date_array[0]==4 || $date_array[0]==6\
    \ || $date_array[0]==9 || $date_array[0]==11) {\n    if($date_array[1]<1 || $date_array[1]>30)\
    \ {\n      return false;\n    }\n  }\n  if($date_array[0]==2) {\n    if($date_array[1]<1\
    \ || $date_array[1]>29) {\n      return false;\n    }\n  }\n  return true;\n}\n\
    echo valid_date(\"03-11-2000\").\"\\n\";\necho valid_date(\"15-01-2012\").\"\\\
    n\";\necho valid_date(\"04-0-2040\").\"\\n\";\necho valid_date(\"06-04-2020\"\
    ).\"\\n\";\necho valid_date(\"06/04/2020\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    Warning: Undefined array key 1 in /tmp/tmpeb5z5gjo.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpeb5z5gjo.php on line 23



    Warning: Undefined array key 1 in /tmp/tmpeb5z5gjo.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpeb5z5gjo.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpeb5z5gjo.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpeb5z5gjo.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpeb5z5gjo.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpeb5z5gjo.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpeb5z5gjo.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpeb5z5gjo.php on line 23

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $months = [1,3,5,7,8,10,12];\n\
    \    $month = (int)substr($date, 0, 2);\n    $day = (int)substr($date, 3, 2);\n\
    \    $year = (int)substr($date, 6, 4);\n    if ($month < 1 || $month > 12) return\
    \ false;\n    if (in_array($month, $months)) {\n        if ($day < 1 || $day >\
    \ 31) return false;\n    } elseif ($month == 2) {\n        if ($day < 1 || $day\
    \ > 29) return false;\n    } else {\n        if ($day < 1 || $day > 30) return\
    \ false;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4_p50ext.php:51\n\
    Stack trace:\n#0 /tmp/tmp4_p50ext.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp4_p50ext.php\
    \ on line 51\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if(empty($date)) {\n\
    \        return false;\n    }\n    $arr = explode('-', $date);\n    $valid = true;\n\
    \    if(count($arr) != 3) {\n        $valid = false;\n    }\n    if(!checkdate($arr[0],\
    \ $arr[1], $arr[2])) {\n        $valid = false;\n    }\n    return $valid;\n}\n\
    \nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmpof05s93s.php on line 28


    Warning: Undefined array key 2 in /tmp/tmpof05s93s.php on line 28


    Deprecated: checkdate(): Passing null to parameter #2 ($day) of type int is deprecated
    in /tmp/tmpof05s93s.php on line 28


    Deprecated: checkdate(): Passing null to parameter #3 ($year) of type int is deprecated
    in /tmp/tmpof05s93s.php on line 28


    Warning: Undefined array key 1 in /tmp/tmpof05s93s.php on line 28


    Warning: Undefined array key 2 in /tmp/tmpof05s93s.php on line 28


    Deprecated: checkdate(): Passing null to parameter #2 ($day) of type int is deprecated
    in /tmp/tmpof05s93s.php on line 28


    Deprecated: checkdate(): Passing null to parameter #3 ($year) of type int is deprecated
    in /tmp/tmpof05s93s.php on line 28


    Warning: Undefined array key 2 in /tmp/tmpof05s93s.php on line 28


    Deprecated: checkdate(): Passing null to parameter #3 ($year) of type int is deprecated
    in /tmp/tmpof05s93s.php on line 28


    Warning: Undefined array key 2 in /tmp/tmpof05s93s.php on line 28


    Deprecated: checkdate(): Passing null to parameter #3 ($year) of type int is deprecated
    in /tmp/tmpof05s93s.php on line 28

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if(preg_match(\"/^\\\
    d{2}\\/\\d{2}\\/\\d{4}$/\", $date)) {\n        $parts = explode(\"/\", $date);\n\
    \        if($parts[0] <= 12 && $parts[0] >= 1) {\n            if($parts[0] ==\
    \ 2) {\n                if($parts[1] <= 29 && $parts[1] >= 1) {\n            \
    \        return true;\n                }\n            } elseif(in_array($parts[0],\
    \ [4,6,9,11])) {\n                if($parts[1] <= 30 && $parts[1] >= 1) {\n  \
    \                  return true;\n                }\n            } else {\n   \
    \             if($parts[1] <= 31 && $parts[1] >= 1) {\n                    return\
    \ true;\n                }\n            }\n        }\n    }\n    return false;\n\
    }\n\necho valid_date(\"06-04-2020\") ? \"true\" : \"false\";\necho \"<br>\";\n\
    echo valid_date(\"06/04/2020\") ? \"true\" : \"false\";\necho \"<br>\";\necho\
    \ valid_date(\"04-31-2020\") ? \"true\" : \"false\";\necho \"<br>\";\necho valid_date(\"\
    04-30-2020\") ? \"true\" : \"false\";\necho \"<br>\";\necho valid_date(\"04-0-2020\"\
    ) ? \"true\" : \"false\";\necho \"<br>\";\necho valid_date(\"04-32-2020\") ? \"\
    true\" : \"false\";\necho \"<br>\";\necho valid_date(\"04-29-2020\") ? \"true\"\
    \ : \"false\";\necho \"<br>\";\necho valid_date(\"02-29-2020\") ? \"true\" : \"\
    false\";\necho \"<br>\";\necho valid_date(\"02-29-2021\") ? \"true\" : \"false\"\
    ;\necho \"<br>\";\necho valid_date(\"04-30-2021\") ? \"true\" : \"false\";\necho\
    \ \"<br>\";\necho valid_date(\"02-31-2020\") ? \"true\" : \"false\";\necho \"\
    <br>\";\necho valid_date(\"02-31-2021\") ?\nfunction candidate(...$args) {\n \
    \   return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp6vjhlhqp.php on line 64

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (strlen($date) ==\
    \ 0 || substr_count($date, \"-\") != 2) {\n    return false;\n  }\n  $dateArray\
    \ = explode(\"-\", $date);\n  if ($dateArray[0] == \"\" || $dateArray[1] == \"\
    \" || $dateArray[2] == \"\") {\n    return false;\n  }\n  $month = $dateArray[0];\n\
    \  $day = $dateArray[1];\n  $year = $dateArray[2];\n  if ($month == 2) {\n   \
    \ if ($day > 29 || $day < 1) {\n      return false;\n    }\n  } else if ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30 ||\
    \ $day < 1) {\n      return false;\n    }\n  } else if ($month == 1 || $month\
    \ == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month\
    \ == 12) {\n    if ($day > 31 || $day < 1) {\n      return false;\n    }\n  }\
    \ else {\n    return false;\n  }\n  if ($month > 12 || $month < 1) {\n    return\
    \ false;\n  }\n  if ($year < 0) {\n    return false;\n  }\n  return true;\n}\n\
    \necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\")\
    \ . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $re = '/^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$/';\n\
    \  if (preg_match($re, $date, $matches) === 1) {\n    $arr = explode('-', $date);\n\
    \    if (count($arr) === 3) {\n      $months = $arr[0];\n      $days = $arr[1];\n\
    \      $years = $arr[2];\n      if ($months < 1 || $months > 12) {\n        return\
    \ false;\n      }\n      if ($months === 1 || $months === 3 || $months === 5 ||\
    \ $months === 7 || $months === 8 || $months === 10 || $months === 12) {\n    \
    \    if ($days < 1 || $days > 31) {\n          return false;\n        }\n    \
    \  }\n      if ($months === 4 || $months === 6 || $months === 9 || $months ===\
    \ 11) {\n        if ($days < 1 || $days > 30) {\n          return false;\n   \
    \     }\n      }\n      if ($months === 2) {\n        if ($days < 1 || $days >\
    \ 29) {\n          return false;\n        }\n      }\n      return true;\n   \
    \ }\n  }\n  return false;\n}\n$date = '03-11-2000';\n$re = '/^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$/';\n\
    if (preg_match($re, $date, $matches) === 1) {\n  print_r($matches);\n}\necho valid_date($date);\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 03-11-2000\n    [1] => 03\n    [2] => 11\n    [3]\
    \ => 2000\n)\n1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmx4an21q.php:71\n\
    Stack trace:\n#0 /tmp/tmpmx4an21q.php(82): test()\n#1 {main}\n  thrown in /tmp/tmpmx4an21q.php\
    \ on line 71\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (preg_match(\"/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/\"\
    , $date)) {\n    $dateArray = explode(\"-\", $date);\n    if ($dateArray[0] ==\
    \ 2) {\n      if ($dateArray[2] % 4 == 0 && $dateArray[2] % 100 != 0 || $dateArray[2]\
    \ % 400 == 0) {\n        if ($dateArray[1] > 29) {\n          return false;\n\
    \        }\n      } else if ($dateArray[1] > 28) {\n        return false;\n  \
    \    }\n    } else if (in_array($dateArray[0], [1, 3, 5, 7, 8, 10, 12])) {\n \
    \     if ($dateArray[1] > 31) {\n        return false;\n      }\n    } else if\
    \ ($dateArray[1] > 30) {\n      return false;\n    }\n    return true;\n  }\n\
    \  return false;\n}\n\nvar_dump(valid_date(\"03-11-2000\"));\nvar_dump(valid_date(\"\
    15-01-2012\"));\nvar_dump(valid_date(\"04-0-2040\"));\nvar_dump(valid_date(\"\
    06-04-2020\"));\nvar_dump(valid_date(\"06/04/2020\"));\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (!$date) {\n   \
    \     return false;\n    }\n    $date_arr = explode('-', $date);\n    $months\
    \ = [1, 3, 5, 7, 8, 10, 12];\n    if (count($date_arr) != 3) {\n        return\
    \ false;\n    }\n    if (in_array($date_arr[0], $months)) {\n        if ($date_arr[1]\
    \ < 1 || $date_arr[1] > 31) {\n            return false;\n        }\n    } elseif\
    \ ($date_arr[0] == 2) {\n        if ($date_arr[1] < 1 || $date_arr[1] > 29) {\n\
    \            return false;\n        }\n    } else {\n        if ($date_arr[1]\
    \ < 1 || $date_arr[1] > 30) {\n            return false;\n        }\n    }\n \
    \   if ($date_arr[0] < 1 || $date_arr[0] > 12) {\n        return false;\n    }\n\
    \    if (strlen($date_arr[2]) != 4) {\n        return false;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $arr_date = explode('-',\
    \ $date);\n    if (count($arr_date) != 3) return false;\n    if ($arr_date[0]\
    \ < 1 || $arr_date[0] > 12) return false;\n    if ($arr_date[1] < 1 || $arr_date[1]\
    \ > 31) return false;\n    if ($arr_date[0] == 2 && $arr_date[1] > 29) return\
    \ false;\n    if ($arr_date[0] % 2 == 0 && $arr_date[0] < 8 && $arr_date[1] >\
    \ 30) return false;\n    if ($arr_date[0] % 2 == 0 && $arr_date[0] > 7 && $arr_date[1]\
    \ > 31) return false;\n    if ($arr_date[0] % 2 != 0 && $arr_date[0] < 8 && $arr_date[1]\
    \ > 31) return false;\n    if ($arr_date[0] % 2 != 0 && $arr_date[0] > 7 && $arr_date[1]\
    \ > 30) return false;\n    if ($arr_date[2] < 0) return false;\n    return true;\n\
    }\n\necho valid_date(\"06-04-2020\") . '<br>';\necho valid_date(\"06/04/2020\"\
    ) . '<br>';\necho valid_date(\"03-11-2000\") . '<br>';\necho valid_date(\"15-01-2012\"\
    ) . '<br>';\necho valid_date(\"04-0-2040\") . '<br>';\necho valid_date(\"06-04-2020\"\
    ) . '<br>';\necho valid_date(\"06/04/2020\") . '<br>';\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br>1<br><br>
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if(empty($date)) {\n\
    \    return false;\n  }\n  $dateArray = explode('-', $date);\n  if(count($dateArray)\
    \ !== 3) {\n    return false;\n  }\n  list($m, $d, $y) = $dateArray;\n  if(!is_numeric($m)\
    \ || !is_numeric($d) || !is_numeric($y)) {\n    return false;\n  }\n  $m = (int)\
    \ $m;\n  $d = (int) $d;\n  $y = (int) $y;\n  if($m < 1 || $m > 12) {\n    return\
    \ false;\n  }\n  if($d < 1 || $d > 31) {\n    return false;\n  }\n  if($m ===\
    \ 2) {\n    if($d > 29) {\n      return false;\n    }\n  }\n  if($m === 4 || $m\
    \ === 6 || $m === 9 || $m === 11) {\n    if($d > 30) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nprint_r(valid_date(\"03-11-2000\") . \"\\n\"\
    );\nprint_r(valid_date(\"15-01-2012\") . \"\\n\");\nprint_r(valid_date(\"04-0-2040\"\
    ) . \"\\n\");\nprint_r(valid_date(\"06-04-2020\") . \"\\n\");\nprint_r(valid_date(\"\
    06/04/2020\") . \"\\n\");\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (!$date) {\n    return\
    \ false;\n  }\n  if (!preg_match('/^\\d{2}-\\d{2}-\\d{4}$/', $date)) {\n    return\
    \ false;\n  }\n  $parts = explode('-', $date);\n  switch (intval($parts[0])) {\n\
    \    case 1:\n    case 3:\n    case 5:\n    case 7:\n    case 8:\n    case 10:\n\
    \    case 12:\n      $max = 31;\n      break;\n    case 4:\n    case 6:\n    case\
    \ 9:\n    case 11:\n      $max = 30;\n      break;\n    case 2:\n      $max =\
    \ 29;\n      break;\n    default:\n      return false;\n  }\n  return intval($parts[1])\
    \ >= 1 && intval($parts[1]) <= $max;\n}\necho valid_date(\"03-11-2000\") . PHP_EOL;\n\
    echo valid_date(\"15-01-2012\") . PHP_EOL;\necho valid_date(\"04-0-2040\") . PHP_EOL;\n\
    echo valid_date(\"06-04-2020\") . PHP_EOL;\necho valid_date(\"06/04/2020\") .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t$arr = explode(\"-\"\
    , $date);\n\tif ($arr[0] == 1 || $arr[0] == 3 || $arr[0] == 5 || $arr[0] == 7\
    \ || $arr[0] == 8 || $arr[0] == 10 || $arr[0] == 12) {\n\t\tif ($arr[1] < 1 ||\
    \ $arr[1] > 31) {\n\t\t\treturn false;\n\t\t}\n\t} else if ($arr[0] == 4 || $arr[0]\
    \ == 6 || $arr[0] == 9 || $arr[0] == 11) {\n\t\tif ($arr[1] < 1 || $arr[1] > 30)\
    \ {\n\t\t\treturn false;\n\t\t}\n\t} else if ($arr[0] == 2) {\n\t\tif ($arr[1]\
    \ < 1 || $arr[1] > 29) {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\
    \t}\n\tif ($arr[0] < 1 || $arr[0] > 12) {\n\t\treturn false;\n\t}\n\tif (strlen($arr[2])\
    \ != 4) {\n\t\treturn false;\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t$months = array('1' =>\
    \ \"31\", '2' => \"29\", '3' => \"31\", '4' => \"30\", '5' => \"31\", '6' => \"\
    30\", '7' => \"31\", '8' => \"31\", '9' => \"30\", '10' => \"31\", '11' => \"\
    30\", '12' => \"31\");\n\t$regex = '/^\\d{2}[-]\\d{2}[-]\\d{4}$/';\n\t$parts =\
    \ explode('-', $date);\n\t$month = $parts[0];\n\t$day = $parts[1];\n\t$year =\
    \ $parts[2];\n\tif(empty($date)) {\n\t\treturn false;\n\t}\n\tif(!preg_match($regex,\
    \ $date)) {\n\t\treturn false;\n\t}\n\tif($month < 1 || $month > 12) {\n\t\treturn\
    \ false;\n\t}\n\tif($day < 1 || $day > $months[$month]) {\n\t\treturn false;\n\
    \t}\n\treturn true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"03\" in /tmp/tmp2i0wwmn4.php on line 35\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2i0wwmn4.php:45\nStack\
    \ trace:\n#0 /tmp/tmp2i0wwmn4.php(63): test()\n#1 {main}\n  thrown in /tmp/tmp2i0wwmn4.php\
    \ on line 45\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    // your code here\n\
    \    $isValid = false;\n    $month = $date[0].$date[1];\n    $day = $date[3].$date[4];\n\
    \    $year = $date[6].$date[7].$date[8].$date[9];\n    if ($month == \"01\" ||\
    \ $month == \"03\" || $month == \"05\" || $month == \"07\" || $month == \"08\"\
    \ || $month == \"10\" || $month == \"12\") {\n        if ($day >= 1 && $day <=\
    \ 31) {\n            $isValid = true;\n        }\n    } else if ($month == \"\
    04\" || $month == \"06\" || $month == \"09\" || $month == \"11\") {\n        if\
    \ ($day >= 1 && $day <= 30) {\n            $isValid = true;\n        }\n    }\
    \ else if ($month == \"02\") {\n        if ($day >= 1 && $day <= 29) {\n     \
    \       $isValid = true;\n        }\n    }\n    if ($month < 1 || $month > 12)\
    \ {\n        $isValid = false;\n    }\n    if ($isValid == true) {\n        if\
    \ (strlen($year) == 4) {\n            $isValid = true;\n        } else {\n   \
    \         $isValid = false;\n        }\n    }\n    return $isValid;\n}\necho \"\
    <pre>\";\necho \"valid_date(\\\"03-11-2000\\\")\";\necho \"</pre>\";\necho valid_date(\"\
    03-11-2000\");\necho \"<pre>\";\necho \"valid_date(\\\"15-01-2012\\\")\";\necho\
    \ \"</pre>\";\necho valid_date(\"15-01-2012\");\necho \"<pre>\";\necho \"valid_date(\\\
    \"04-0-2040\\\")\";\necho \"</pre>\";\necho valid_date(\"04-0-2040\");\necho \"\
    <pre>\";\necho \"valid_date(\\\"06-04-2020\\\")\";\necho \"</pre>\";\necho valid_date(\"\
    06-04-2020\");\necho \"<pre>\";\necho \"valid_date(\\\"06/04/\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected integer "03", expecting "," or ";" in /tmp/tmpaetgfzht.php
    on line 73

    '
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxn3d0w9o.php:29\n\
    Stack trace:\n#0 /tmp/tmpxn3d0w9o.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpxn3d0w9o.php\
    \ on line 29\n"
  timestamp: 1660028824
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\"\
    , $date, $matches)) {\n    if ($matches[2] <= 31 && $matches[2] >= 1) {\n    \
    \  if ($matches[1] <= 12 && $matches[1] >= 1) {\n        return true;\n      }\n\
    \    }\n  }\n  return false;\n}\n$answer1 = valid_date(\"03-11-2000\");\n$answer2\
    \ = valid_date(\"15-01-2012\");\n$answer3 = valid_date(\"04-0-2040\");\n$answer4\
    \ = valid_date(\"06-04-2020\");\n$answer5 = valid_date(\"06/04/2020\");\necho\
    \ \"<b>Q2: valid_date()</b><br>\";\necho \"Answer1: \";\nvar_dump($answer1);\n\
    echo \"<br>Answer2: \";\nvar_dump($answer2);\necho \"<br>Answer3: \";\nvar_dump($answer3);\n\
    echo \"<br>Answer4: \";\nvar_dump($answer4);\necho \"<br>Answer5: \";\nvar_dump($answer5);\n\
    echo \"<br><br>\";\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<b>Q2: valid_date()</b><br>Answer1: bool(true)\n<br>Answer2: bool(false)\n\
    <br>Answer3: bool(false)\n<br>Answer4: bool(true)\n<br>Answer5: bool(false)\n\
    <br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpghaclew0.php:59\n\
    Stack trace:\n#0 /tmp/tmpghaclew0.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpghaclew0.php\
    \ on line 59\n"
  timestamp: 1660028824
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date = str_replace(\"\
    -\", \"/\", $date);\n  $date = explode(\"/\", $date);\n  if (empty($date[0]) ||\
    \ empty($date[1]) || empty($date[2])) {\n    return false;\n  }\n  if ($date[0]\
    \ > 12 || $date[0] < 1) {\n    return false;\n  }\n  if ($date[0] == 1 || $date[0]\
    \ == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 ||\
    \ $date[0] == 12) {\n    if ($date[1] > 31 || $date[1] < 1) {\n      return false;\n\
    \    }\n  }\n  if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0]\
    \ == 11) {\n    if ($date[1] > 30 || $date[1] < 1) {\n      return false;\n  \
    \  }\n  }\n  if ($date[0] == 2) {\n    if ($date[1] > 29 || $date[1] < 1) {\n\
    \      return false;\n    }\n  }\n  if (strlen($date[2]) != 4) {\n    return false;\n\
    \  }\n  return true;\n}\necho valid_date(\"03-11-2000\");\necho \"\\n\";\necho\
    \ valid_date(\"15-01-2012\");\necho \"\\n\";\necho valid_date(\"04-0-2040\");\n\
    echo \"\\n\";\necho valid_date(\"06-04-2020\");\necho \"\\n\";\necho valid_date(\"\
    06/04/2020\");\necho \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1

    1

    '
  timestamp: 1660028824

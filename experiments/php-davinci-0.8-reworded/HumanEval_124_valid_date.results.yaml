language: php
name: HumanEval_124_valid_date
results:
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\tif(!empty($date)) {\n\
    \t\t$split = explode(\"-\", $date);\n\t\tif(count($split) == 3) {\n\t\t\t$months\
    \ = array(1,3,5,7,8,10,12);\n\t\t\t$month = (int)$split[0];\n\t\t\t$day = (int)$split[1];\n\
    \t\t\t$year = (int)$split[2];\n\t\t\tif($month > 0 && $month < 13) {\n\t\t\t\t\
    if(in_array($month, $months)) {\n\t\t\t\t\tif($day > 0 && $day < 32) {\n\t\t\t\
    \t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$months = array(4,6,9,11);\n\
    \t\t\t\t\tif(in_array($month, $months)) {\n\t\t\t\t\t\tif($day > 0 && $day < 31)\
    \ {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\
    \tif($month == 2) {\n\t\t\t\t\t\t\tif($day > 0 && $day < 30) {\n\t\t\t\t\t\t\t\
    \treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $months = array(\n\
    \        '01' => 'January',\n        '02' => 'February',\n        '03' => 'March',\n\
    \        '04' => 'April',\n        '05' => 'May',\n        '06' => 'June',\n \
    \       '07' => 'July',\n        '08' => 'August',\n        '09' => 'September',\n\
    \        '10' => 'October',\n        '11' => 'November',\n        '12' => 'December'\n\
    \    );\n    $validDays = array(\n        '01' => 31,\n        '02' => 28,\n \
    \       '03' => 31,\n        '04' => 30,\n        '05' => 31,\n        '06' =>\
    \ 30,\n        '07' => 31,\n        '08' => 31,\n        '09' => 30,\n       \
    \ '10' => 31,\n        '11' => 30,\n        '12' => 31\n    );\n    if (preg_match('/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/',\
    \ $date)) {\n        $dateArray = explode('-', $date);\n        $month = $dateArray[0];\n\
    \        $day = $dateArray[1];\n        $year = $dateArray[2];\n        if (isset($months[$month]))\
    \ {\n            if ($year % 4 == 0) {\n                $validDays['02'] = 29;\n\
    \            }\n            if ($day > 0 && $day <= $validDays[$month]) {\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $splitDate = explode(\"\
    -\", $date);\n    $day = $splitDate[0];\n    $month = $splitDate[1];\n    $year\
    \ = $splitDate[2];\n    $result = false;\n    if (!empty($date)) {\n        if\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n            if ($day >= 1 && $day <= 31) {\n\
    \                $result = true;\n            }\n        } else if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n            if ($day >=\
    \ 1 && $day <= 30) {\n                $result = true;\n            }\n       \
    \ } else if ($month == 2) {\n            if ($day >= 1 && $day <= 29) {\n    \
    \            $result = true;\n            }\n        }\n        if ($month >=\
    \ 1 && $month <= 12) {\n            $result = true;\n        }\n        if ($year\
    \ >= 1 && $year <= 9999) {\n            $result = true;\n        }\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3eh_r2w.php:55\n\
    Stack trace:\n#0 /tmp/tmpe3eh_r2w.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpe3eh_r2w.php\
    \ on line 55\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (substr_count($date,\
    \ \"-\") == 2) {\n    $date = explode(\"-\", $date);\n    $mm = $date[0];\n  \
    \  $dd = $date[1];\n    $yyyy = $date[2];\n    if ($mm > 0 && $mm < 13) {\n  \
    \    if ($mm == 1 || $mm == 3 || $mm == 5 || $mm == 7 || $mm == 8 || $mm == 10\
    \ || $mm == 12) {\n        if ($dd > 0 && $dd < 32) {\n          if ($yyyy > 0)\
    \ {\n            return true;\n          }\n        }\n      } else if ($mm ==\
    \ 4 || $mm == 6 || $mm == 9 || $mm == 11) {\n        if ($dd > 0 && $dd < 31)\
    \ {\n          if ($yyyy > 0) {\n            return true;\n          }\n     \
    \   }\n      } else if ($mm == 2) {\n        if ($dd > 0 && $dd < 30) {\n    \
    \      if ($yyyy > 0) {\n            return true;\n          }\n        }\n  \
    \    }\n    }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $retval = false;\n  if (!empty($date)) {\n    if\
    \ (preg_match('/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/', $date))\
    \ {\n      $d = explode('-', $date);\n      $m = $d[0];\n      $d = $d[1];\n \
    \     $y = $d[2];\n      if (($m >= 1 && $m <= 12) && ($d >= 1 && $d <= 31) &&\
    \ ($y >= 1 && $y <= 9999)) {\n        if (($m == 1 || $m == 3 || $m == 5 || $m\
    \ == 7 || $m == 8 || $m == 10 || $m == 12) && ($d >= 1 && $d <= 31)) {\n     \
    \     $retval = true;\n        } else if (($m == 4 || $m == 6 || $m == 9 || $m\
    \ == 11) && ($d >= 1 && $d <= 30)) {\n          $retval = true;\n        } else\
    \ if ($m == 2 && ($d >= 1 && $d <= 29)) {\n          $retval = true;\n       \
    \ }\n      }\n    }\n  }\n  return $retval;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 2 in /tmp/tmpkk5in_91.php on line\
    \ 29\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkk5in_91.php:49\n\
    Stack trace:\n#0 /tmp/tmpkk5in_91.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpkk5in_91.php\
    \ on line 49\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  $months_30 = array(4,6,9,11);\n  $months_31 = array(1,3,5,7,8,10,12);\n  $date_arr\
    \ = explode(\"-\", $date);\n  if(!empty($date_arr) && count($date_arr) == 3) {\n\
    \    $day = intval($date_arr[1]);\n    $month = intval($date_arr[0]);\n    $year\
    \ = intval($date_arr[2]);\n    if(in_array($month, $months_30) && ($day > 30 ||\
    \ $day < 1)) {\n      return false;\n    }\n    if(in_array($month, $months_31)\
    \ && ($day > 31 || $day < 1)) {\n      return false;\n    }\n    if($month ==\
    \ 2 && $day > 29) {\n      return false;\n    }\n    if($month < 1 || $month >\
    \ 12) {\n      return false;\n    }\n    if($year < 0) {\n      return false;\n\
    \    }\n    return true;\n  }\n  return false;\n}\n\necho valid_date(\"03-11-2000\"\
    );\necho valid_date(\"15-01-2012\");\necho valid_date(\"04-0-2040\");\necho valid_date(\"\
    06-04-2020\");\necho valid_date(\"06/04/2020\");\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (empty($date)) {\n\
    \        return false;\n    }\n    $months = [\n        1 => 31,\n        2 =>\
    \ 29,\n        3 => 31,\n        4 => 30,\n        5 => 31,\n        6 => 30,\n\
    \        7 => 31,\n        8 => 31,\n        9 => 30,\n        10 => 31,\n   \
    \     11 => 30,\n        12 => 31\n    ];\n    $date_parts = explode('-', $date);\n\
    \    if (count($date_parts) !== 3) {\n        return false;\n    }\n    if (strlen($date_parts[0])\
    \ !== 2 || $date_parts[0] < 1 || $date_parts[0] > 12) {\n        return false;\n\
    \    }\n    if (strlen($date_parts[1]) !== 2 || $date_parts[1] < 1 || $date_parts[1]\
    \ > $months[$date_parts[0]]) {\n        return false;\n    }\n    if (strlen($date_parts[2])\
    \ !== 4 || $date_parts[2] < 1) {\n        return false;\n    }\n    return true;\n\
    }\nvar_dump(valid_date(\"03-11-2000\"));\nvar_dump(valid_date(\"15-01-2012\"));\n\
    var_dump(valid_date(\"04-0-2040\"));\nvar_dump(valid_date(\"06-04-2020\"));\n\
    var_dump(valid_date(\"06/04/2020\"));\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"03\" in /tmp/tmp1ahei5rp.php on line 44\n\
    bool(false)\nbool(false)\nbool(false)\n\nWarning: Undefined array key \"06\" in\
    \ /tmp/tmp1ahei5rp.php on line 44\nbool(false)\nbool(false)\n\nWarning: Undefined\
    \ array key \"03\" in /tmp/tmp1ahei5rp.php on line 44\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp1ahei5rp.php:62\nStack trace:\n#0 /tmp/tmp1ahei5rp.php(80):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1ahei5rp.php on line 62\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $valid = false;\n  $date_array\
    \ = explode(\"-\", $date);\n  $month = $date_array[0];\n  $day = $date_array[1];\n\
    \  $year = $date_array[2];\n  if ($month == 1 or $month == 3 or $month == 5 or\
    \ $month == 7 or $month == 8 or $month == 10 or $month == 12) {\n    if ($day\
    \ >= 1 and $day <= 31) {\n      $valid = true;\n    }\n  }\n  if ($month == 4\
    \ or $month == 6 or $month == 9 or $month == 11) {\n    if ($day >= 1 and $day\
    \ <= 30) {\n      $valid = true;\n    }\n  }\n  if ($month == 2) {\n    if ($day\
    \ >= 1 and $day <= 29) {\n      $valid = true;\n    }\n  }\n  if ($month >= 1\
    \ and $month <= 12) {\n    $valid = true;\n  }\n  if ($year >= 1 and $year <=\
    \ 9999) {\n    $valid = true;\n  }\n  return $valid;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc5kwgms.php:54\n\
    Stack trace:\n#0 /tmp/tmpoc5kwgms.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpoc5kwgms.php\
    \ on line 54\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $validMonth = \"01-01-2000\"\
    ;\n  $validDay = \"00-00-2000\";\n  $validYear = \"00-00-0000\";\n  if (empty($date))\
    \ {\n    return false;\n  } else {\n    $month = substr($date, 0, 2);\n    $day\
    \ = substr($date, 3, 2);\n    $year = substr($date, 6, 4);\n    if (substr($date,\
    \ 2, 1) != \"-\" || substr($date, 5, 1) != \"-\") {\n      return false;\n   \
    \ } else if (substr($month, 0, 1) == \"0\" && substr($month, 1, 1) == \"0\") {\n\
    \      return false;\n    } else if (substr($day, 0, 1) == \"0\" && substr($day,\
    \ 1, 1) == \"0\") {\n      return false;\n    } else if (substr($year, 0, 1) ==\
    \ \"0\" && substr($year, 1, 1) == \"0\" && substr($year, 2, 1) == \"0\" && substr($year,\
    \ 3, 1) == \"0\") {\n      return false;\n    } else if ($month < 1 || $month\
    \ > 12) {\n      return false;\n    } else if (($month == 1 || $month == 3 ||\
    \ $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) &&\
    \ ($day < 1 || $day > 31)) {\n      return false;\n    } else if (($month == 4\
    \ || $month == 6 || $month == 9 || $month == 11) && ($day < 1 || $day > 30)) {\n\
    \      return false;\n    } else if ($month == 2 && $day < 1) {\n      return\
    \ false;\n    } else if ($month == 2 && $day > 29) {\n      return false;\n  \
    \  } else if ($month == 2 && $day == 29 && ($year % 4 != 0 || ($year % 100 ==\
    \ 0 && $year % 400 != 0))) {\n      return false;\n    } else {\n      return\
    \ true;\n    }\n  }\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date = explode(\"-\"\
    , $date);\n  if (!is_array($date) || count($date) != 3) {\n    return false;\n\
    \  }\n  $month = intval($date[0]);\n  $day = intval($date[1]);\n  $year = intval($date[2]);\n\
    \  if ($year < 2000 || $year > 2100) {\n    return false;\n  }\n  if ($month <\
    \ 1 || $month > 12) {\n    return false;\n  }\n  if ($day < 1 || $day > 31) {\n\
    \    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n      return\
    \ false;\n    }\n  }\n  if (in_array($month, [4, 6, 9, 11])) {\n    if ($day >\
    \ 30) {\n      return false;\n    }\n  }\n  return true;\n}\necho valid_date(\"\
    03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"\
    04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"\
    06/04/2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (!$date) return\
    \ false;\n    $dateArray = explode('-', $date);\n    if (sizeof($dateArray) !=\
    \ 3) return false;\n    $day = $dateArray[1];\n    $month = $dateArray[0];\n \
    \   $year = $dateArray[2];\n    if ($day < 1 || $day > 31) return false;\n   \
    \ if ($month < 1 || $month > 12) return false;\n    if ($year < 1000 || $year\
    \ > 9999) return false;\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvyew9yh2.php:44\n\
    Stack trace:\n#0 /tmp/tmpvyew9yh2.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpvyew9yh2.php\
    \ on line 44\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $part = explode(\"-\"\
    , $date);\n  $month = (int)$part[0];\n  $day = (int)$part[1];\n  $year = (int)$part[2];\n\
    \  $isValidDate = checkdate($month, $day, $year);\n  if(count($part) != 3 || $part[2]\
    \ > date(\"Y\") || $part[2] < 1000 || $part[0] > 12 || $part[0] <= 0 || $part[1]\
    \ > 31 || $part[1] <= 0 || $isValidDate == false) {\n    return false;\n  } else\
    \ {\n    return true;\n  }\n}\necho valid_date(\"03-11-2000\") ? \"true\\n\" :\
    \ \"false\\n\";\necho valid_date(\"15-01-2012\") ? \"true\\n\" : \"false\\n\"\
    ;\necho valid_date(\"04-0-2040\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"\
    06-04-2020\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"06/04/2020\") ?\
    \ \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true


    Warning: Undefined array key 1 in /tmp/tmpgrxxovky.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpgrxxovky.php on line 23

    false


    Warning: Undefined array key 1 in /tmp/tmpgrxxovky.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpgrxxovky.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpgrxxovky.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpgrxxovky.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpgrxxovky.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpgrxxovky.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpgrxxovky.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpgrxxovky.php on line 23

    '
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (strlen($date) ==\
    \ 0) {\n    return false;\n  }\n  $month = explode(\"-\", $date)[0];\n  $day =\
    \ explode(\"-\", $date)[1];\n  $year = explode(\"-\", $date)[2];\n  if ($month\
    \ < 1 || $month > 12) {\n    return false;\n  }\n  if ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n    if ($day < 1 || $day > 31) {\n      return false;\n    }\n  }\n \
    \ if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day\
    \ < 1 || $day > 30) {\n      return false;\n    }\n  }\n  if ($month == 2) {\n\
    \    if ($day < 1 || $day > 29) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\n$date = \"01-01-2016\";\necho valid_date($date);\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    Warning: Undefined array key 1 in /tmp/tmpy0h6jg7x.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpy0h6jg7x.php on line 25


    Warning: Undefined array key 1 in /tmp/tmpy0h6jg7x.php on line 24


    Warning: Undefined array key 2 in /tmp/tmpy0h6jg7x.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpy0h6jg7x.php on line 25


    Warning: Undefined array key 2 in /tmp/tmpy0h6jg7x.php on line 25

    '
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $months = [\n    \"January\"\
    \ => 1,\n    \"February\" => 2,\n    \"March\" => 3,\n    \"April\" => 4,\n  \
    \  \"May\" => 5,\n    \"June\" => 6,\n    \"July\" => 7,\n    \"August\" => 8,\n\
    \    \"September\" => 9,\n    \"October\" => 10,\n    \"November\" => 11,\n  \
    \  \"December\" => 12\n  ];\n  $date_array = explode(\"-\", $date);\n  $year =\
    \ $date_array[2];\n  $month = $date_array[0];\n  $day = $date_array[1];\n  if(!empty($date))\
    \ {\n    if($month < 1 || $month > 12) {\n      return false;\n    }\n    if($month\
    \ == 2) {\n      if($day < 1 || $day > 29) {\n        return false;\n      }\n\
    \    }\n    if($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n      if($day < 1 || $day > 31) {\n\
    \        return false;\n      }\n    }\n    if($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n      if($day < 1 || $day > 30) {\n        return false;\n\
    \      }\n    }\n    return true;\n  }\n  return false;\n}\nprint_r(valid_date(\"\
    03-11-2000\"));\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    Warning: Undefined array key 2 in /tmp/tmpoe89dn33.php on line 35


    Warning: Undefined array key 1 in /tmp/tmpoe89dn33.php on line 37


    Warning: Undefined array key 2 in /tmp/tmpoe89dn33.php on line 35


    Warning: Undefined array key 1 in /tmp/tmpoe89dn33.php on line 37


    Warning: Undefined array key 2 in /tmp/tmpoe89dn33.php on line 35


    Warning: Undefined array key 1 in /tmp/tmpoe89dn33.php on line 37


    Warning: Undefined array key 2 in /tmp/tmpoe89dn33.php on line 35


    Warning: Undefined array key 2 in /tmp/tmpoe89dn33.php on line 35

    '
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $date_arr = explode('-',\
    \ $date);\n    if (count($date_arr) !== 3) {\n        return false;\n    }\n \
    \   $months = [1,3,5,7,8,10,12];\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n\
    \    $year = $date_arr[2];\n    if ($month > 12 || $month < 1) {\n        return\
    \ false;\n    }\n    if (in_array($month, $months)) {\n        if ($day > 31 ||\
    \ $day < 1) {\n            return false;\n        }\n    } else if ($month ==\
    \ 2) {\n        if ($day > 29 || $day < 1) {\n            return false;\n    \
    \    }\n    } else {\n        if ($day > 30 || $day < 1) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  \n  $monthList = [1 =>\
    \ 31, 3 => 31, 5 => 31, 7 => 31, 8 => 31, 10 => 31, 12 => 31, 4 => 30, 6 => 30,\
    \ 9 => 30, 11 => 30, 2 => 29];\n  $dateList = explode(\"-\", $date);\n  $dateLen\
    \ = count($dateList);\n  if($dateLen !== 3) {\n    return false;\n  }\n  $month\
    \ = $dateList[0];\n  $day = $dateList[1];\n  $year = $dateList[2];\n  if($month\
    \ > 12 || $month < 1) {\n    return false;\n  }\n  if($day > $monthList[$month]\
    \ || $day < 1) {\n    return false;\n  }\n  if($year < 1) {\n    return false;\n\
    \  }\n  return true;\n}\n\n$year = 0;\nvar_dump(valid_date(\"03-11-2000\"));\n\
    var_dump(valid_date(\"15-01-2012\"));\nvar_dump(valid_date(\"04-0-2040\"));\n\
    var_dump(valid_date(\"06-04-2020\"));\nvar_dump(valid_date(\"06/04/2020\"));\n\
    \nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"03\" in /tmp/tmpflk5eon_.php on line 33\n\
    bool(false)\nbool(false)\n\nWarning: Undefined array key \"04\" in /tmp/tmpflk5eon_.php\
    \ on line 33\nbool(false)\n\nWarning: Undefined array key \"06\" in /tmp/tmpflk5eon_.php\
    \ on line 33\nbool(false)\nbool(false)\n\nWarning: Undefined array key \"03\"\
    \ in /tmp/tmpflk5eon_.php on line 33\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpflk5eon_.php:54\nStack trace:\n#0 /tmp/tmpflk5eon_.php(72):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpflk5eon_.php on line 54\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $months = array(1,3,5,7,8,10,12);\n\
    \  $months2 = array(4,6,9,11);\n  $date = str_replace('/', '-', $date);\n  $date\
    \ = explode('-', $date);\n  // check if month is in valid range\n  if ($date[0]\
    \ < 1 || $date[0] > 12) {\n    return false;\n  }\n  // check if date is in valid\
    \ range\n  // check if month is one of the months that contains 31 days\n  if\
    \ (in_array($date[0], $months)) {\n    if ($date[1] < 1 || $date[1] > 31) {\n\
    \      return false;\n    }\n  }\n  // check if month is one of the months that\
    \ contains 30 days\n  if (in_array($date[0], $months2)) {\n    if ($date[1] <\
    \ 1 || $date[1] > 30) {\n      return false;\n    }\n  }\n  // check if month\
    \ is February\n  if ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1] > 29)\
    \ {\n      return false;\n    }\n  }\n  // check if year is in valid range\n \
    \ if ($date[2] < 1 || $date[2] > 9999) {\n    return false;\n  }\n  return true;\n\
    }\necho valid_date(\"03-11-2000\");\necho \"\\n\";\necho valid_date(\"15-01-2012\"\
    );\necho \"\\n\";\necho valid_date(\"04-0-2040\");\necho \"\\n\";\necho valid_date(\"\
    06-04-2020\");\necho \"\\n\";\necho valid_date(\"06/04/2020\");\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1

    1

    '
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $d = explode('-', $date);\n\
    \  if (count($d) == 3) {\n    if (checkdate($d[0], $d[1], $d[2])) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (!preg_match('/^(\\\
    d{2})-(\\d{2})-(\\d{4})$/', $date, $matches)) {\n        return false;\n    }\n\
    \    list(, $month, $day, $year) = $matches;\n    if ($month > 12 || $month <\
    \ 1) {\n        return false;\n    }\n    if ($day > 31 || $day < 1) {\n     \
    \   return false;\n    }\n    if ($month == 2) {\n        if ($day > 29) {\n \
    \           return false;\n        }\n    } elseif (in_array($month, [4, 6, 9,\
    \ 11])) {\n        if ($day > 30) {\n            return false;\n        }\n  \
    \  }\n    return true;\n}\n\necho valid_date(\"06-04-2020\");\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  if (empty($date)) {\n\
    \    return false;\n  }\n  $date_arr = explode('-', $date);\n  if (count($date_arr)\
    \ != 3) {\n    return false;\n  }\n  $day = $date_arr[1];\n  $month = $date_arr[0];\n\
    \  $year = $date_arr[2];\n  if (!is_numeric($day) || !is_numeric($month) || !is_numeric($year))\
    \ {\n    return false;\n  }\n  if ($day > 31 || $day < 1) {\n    return false;\n\
    \  }\n  if ($month > 12 || $month < 1) {\n    return false;\n  }\n  if ($year\
    \ < 1) {\n    return false;\n  }\n  if ($month == 2) {\n    if ($day > 29) {\n\
    \      return false;\n    }\n  }\n  if ($month == 4 || $month == 6 || $month ==\
    \ 9 || $month == 11) {\n    if ($day > 30) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\necho valid_date(\"06-04-2020\");\necho \"<br>\";\necho valid_date(\"\
    03-11-2000\");\necho \"<br>\";\necho valid_date(\"06/04/2020\");\necho \"<br>\"\
    ;\necho valid_date(\"15-01-2012\");\necho \"<br>\";\necho valid_date(\"04-0-2040\"\
    );\necho \"<br>\";\n ?>\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "1<br>1<br><br><br><br>function candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    $arr = explode('-',\
    \ $date);\n    if (count($arr) != 3) {\n        return false;\n    }\n    $days\
    \ = (int)$arr[1];\n    $months = (int)$arr[0];\n    $years = (int)$arr[2];\n \
    \   if ($days < 1 || $days > 31 || $months < 1 || $months > 12 || $years < 1)\
    \ {\n        return false;\n    }\n    if ($months == 2) {\n        if ($days\
    \ > 29) {\n            return false;\n        }\n    }\n    if ($months == 4 ||\
    \ $months == 6 || $months == 9 || $months == 11) {\n        if ($days > 30) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\n$date = \"\
    03-11-2000\";\nvar_dump(valid_date($date));\n$date = \"15-01-2012\";\nvar_dump(valid_date($date));\n\
    $date = \"04-0-2040\";\nvar_dump(valid_date($date));\n$date = \"06-04-2020\";\n\
    var_dump(valid_date($date));\n$date = \"06/04/2020\";\nvar_dump(valid_date($date));\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $regex = '/^\\d{2}-\\\
    d{2}-\\d{4}$/';\n  $matches = array();\n  preg_match($regex, $date, $matches);\n\
    \  if (empty($matches)) {\n    return false;\n  }\n  $date_parts = explode('-',\
    \ $date);\n  $month = $date_parts[0];\n  $day = $date_parts[1];\n  $year = $date_parts[2];\n\
    \  if (checkdate($month, $day, $year)) {\n    return true;\n  }\n  return false;\n\
    }\n\n$date = '03-11-2000';\n$test_0 = valid_date($date);\necho \"<br/>\";\necho\
    \ \"valid_date('03-11-2000') is: \" . ($test_0 ? 'true' : 'false');\n\n$date =\
    \ '15-01-2012';\n$test_1 = valid_date($date);\necho \"<br/>\";\necho \"valid_date('15-01-2012')\
    \ is: \" . ($test_1 ? 'true' : 'false');\n\n$date = '04-0-2040';\n$test_2 = valid_date($date);\n\
    echo \"<br/>\";\necho \"valid_date('04-0-2040') is: \" . ($test_2 ? 'true' : 'false');\n\
    \n$date = '06-04-2020';\n$test_3 = valid_date($date);\necho \"<br/>\";\necho \"\
    valid_date('06-04-2020') is: \" . ($test_3 ? 'true' : 'false');\n\n$date = '06/04/2020';\n\
    $test_4 = valid_date($date);\necho \"<br/>\";\necho \"valid_date('06/04/2020')\
    \ is: \" . ($test_4 ? 'true' : 'false');\nfunction candidate(...$args) {\n   \
    \ return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '<br/>valid_date(''03-11-2000'') is: true<br/>valid_date(''15-01-2012'')
    is: false<br/>valid_date(''04-0-2040'') is: false<br/>valid_date(''06-04-2020'')
    is: true<br/>valid_date(''06/04/2020'') is: false'
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (!preg_match('/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/',\
    \ $date)) {\n        return false;\n    }\n\n    $date = explode('-', $date);\n\
    \    $year = $date[2];\n    $month = $date[0];\n    $day = $date[1];\n\n    if\
    \ ($month < 1 || $month > 12) {\n        return false;\n    }\n\n    if ($day\
    \ < 1) {\n        return false;\n    }\n\n    switch ($month) {\n        case\
    \ 1:\n        case 3:\n        case 5:\n        case 7:\n        case 8:\n   \
    \     case 10:\n        case 12:\n            if ($day > 31) {\n             \
    \   return false;\n            }\n            break;\n        case 4:\n      \
    \  case 6:\n        case 9:\n        case 11:\n            if ($day > 30) {\n\
    \                return false;\n            }\n            break;\n        case\
    \ 2:\n            if ($day > 29) {\n                return false;\n          \
    \  }\n            break;\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date = explode(\"-\"\
    , $date);\n  if (count($date) != 3 || $date[0] > 12 || $date[0] < 1 || $date[1]\
    \ > 31 || $date[1] < 1 || $date[2] < 1)\n    return false;\n  if ($date[0] ==\
    \ 2 && $date[1] > 29)\n    return false;\n  if (($date[0] == 4 || $date[0] ==\
    \ 6 || $date[0] == 9 || $date[0] == 11) && $date[1] > 30)\n    return false;\n\
    \  return true;\n}\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"\
    15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"\
    06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date_array = explode(\"\
    -\", $date);\n  if (empty($date_array[0]) or empty($date_array[1]) or empty($date_array[2]))\
    \ {\n    return false;\n  }\n  else {\n    if ($date_array[0] > 0 and $date_array[0]\
    \ < 13) {\n      if ($date_array[0] == 1 or $date_array[0] == 3 or $date_array[0]\
    \ == 5 or $date_array[0] == 7 or $date_array[0] == 8 or $date_array[0] == 10 or\
    \ $date_array[0] == 12) {\n        if ($date_array[1] > 0 and $date_array[1] <\
    \ 32) {\n          return true;\n        }\n        else {\n          return false;\n\
    \        }\n      }\n      elseif ($date_array[0] == 4 or $date_array[0] == 6\
    \ or $date_array[0] == 9 or $date_array[0] == 11) {\n        if ($date_array[1]\
    \ > 0 and $date_array[1] < 31) {\n          return true;\n        }\n        else\
    \ {\n          return false;\n        }\n      }\n      elseif ($date_array[0]\
    \ == 2) {\n        if ($date_array[1] > 0 and $date_array[1] < 30) {\n       \
    \   return true;\n        }\n        else {\n          return false;\n       \
    \ }\n      }\n    }\n    else {\n      return false;\n    }\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  $date_split = explode(\"-\", $date);\n  if(count($date_split)\
    \ != 3){\n    return false;\n  }\n  $day = $date_split[1];\n  $month = $date_split[0];\n\
    \  $year = $date_split[2];\n  $max_day = 0;\n  switch($month){\n    case 1:\n\
    \    case 3:\n    case 5:\n    case 7:\n    case 8:\n    case 10:\n    case 12:\n\
    \      $max_day = 31;\n      break;\n    case 4:\n    case 6:\n    case 9:\n \
    \   case 11:\n      $max_day = 30;\n      break;\n    case 2:\n      $max_day\
    \ = 28;\n      break;\n    default:\n      return false;\n  }\n  if($day < 1 ||\
    \ $day > $max_day){\n    return false;\n  }\n  if($month < 1 || $month > 12){\n\
    \    return false;\n  }\n  if($year < 1900 || $year > 2099){\n    return false;\n\
    \  }\n  return true;\n}\necho valid_date(\"03-11-2000\");\necho valid_date(\"\
    15-01-2012\");\necho valid_date(\"04-0-2040\");\necho valid_date(\"06-04-2020\"\
    );\necho valid_date(\"06/04/2020\");\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $date = explode(\"-\"\
    , $date);\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n  if\
    \ ($month > 12 || $month < 1) {\n    return false;\n  }\n  elseif ($month == 1\
    \ || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n    if ($day > 31 || $day < 1) {\n      return false;\n\
    \    }\n  }\n  elseif ($month == 4 || $month == 6 || $month == 9 || $month ==\
    \ 11) {\n    if ($day > 30 || $day < 1) {\n      return false;\n    }\n  }\n \
    \ elseif ($month == 2) {\n    if ($day > 29 || $day < 1) {\n      return false;\n\
    \    }\n  }\n  else {\n    return false;\n  }\n  if ($year < 0) {\n    return\
    \ false;\n  }\n  else {\n    return true;\n  }\n}\necho valid_date(\"04-0-2040\"\
    ).\"\\n\";\necho valid_date(\"06-04-2020\").\"\\n\";\necho valid_date(\"06/04/2020\"\
    ).\"\\n\";\necho valid_date(\"15-01-2012\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    1


    Warning: Undefined array key 1 in /tmp/tmphwwquw26.php on line 22


    Warning: Undefined array key 2 in /tmp/tmphwwquw26.php on line 23




    Warning: Undefined array key 1 in /tmp/tmphwwquw26.php on line 22


    Warning: Undefined array key 2 in /tmp/tmphwwquw26.php on line 23


    Warning: Undefined array key 1 in /tmp/tmphwwquw26.php on line 22


    Warning: Undefined array key 2 in /tmp/tmphwwquw26.php on line 23


    Warning: Undefined array key 1 in /tmp/tmphwwquw26.php on line 22


    Warning: Undefined array key 2 in /tmp/tmphwwquw26.php on line 23


    Warning: Undefined array key 2 in /tmp/tmphwwquw26.php on line 23


    Warning: Undefined array key 2 in /tmp/tmphwwquw26.php on line 23

    '
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n\t$arr = explode(\"-\"\
    , $date);\n\t$month = $arr[0];\n\t$day = $arr[1];\n\t$year = $arr[2];\n\tif ($month\
    \ < 1 || $month > 12) {\n\t\treturn false;\n\t}\n\tif ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n\t\tif ($day < 1 || $day > 31) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\
    if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\t\tif ($day\
    \ < 1 || $day > 30) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif ($month == 2) {\n\
    \t\tif ($day < 1 || $day > 29) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (strlen($year)\
    \ != 4) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\necho valid_date(\"03-11-2000\"\
    );\necho \"<br>\";\necho valid_date(\"15-01-2012\");\necho \"<br>\";\necho valid_date(\"\
    04-0-2040\");\necho \"<br>\";\necho valid_date(\"06-04-2020\");\necho \"<br>\"\
    ;\necho valid_date(\"06/04/2020\");\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1<br><br><br>1<br>

    Warning: Undefined array key 1 in /tmp/tmpu_96n5j8.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpu_96n5j8.php on line 23

    <br>

    Warning: Undefined array key 1 in /tmp/tmpu_96n5j8.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpu_96n5j8.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpu_96n5j8.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpu_96n5j8.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpu_96n5j8.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpu_96n5j8.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpu_96n5j8.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpu_96n5j8.php on line 23

    '
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n  $months = [1,3,5,7,8,10,12];\n\
    \  $months2 = [4,6,9,11];\n  if (empty($date)) {\n    return false;\n  }\n  if\
    \ (preg_match('/^\\d{2}-\\d{2}-\\d{4}$/', $date)) {\n    $parts = explode('-',\
    \ $date);\n    if (in_array($parts[0], $months)) {\n      if ($parts[1] > 31 ||\
    \ $parts[1] < 1) {\n        return false;\n      }\n    } elseif (in_array($parts[0],\
    \ $months2)) {\n      if ($parts[1] > 30 || $parts[1] < 1) {\n        return false;\n\
    \      }\n    } elseif ($parts[0] == 2) {\n      if ($parts[1] > 29 || $parts[1]\
    \ < 1) {\n        return false;\n      }\n    } else {\n      return false;\n\
    \    }\n    return true;\n  }\n  return false;\n}\n\necho valid_date(\"03-11-2000\"\
    ) ? \"true\" : \"false\";\necho \"\\n\";\necho valid_date(\"15-01-2012\") ? \"\
    true\" : \"false\";\necho \"\\n\";\necho valid_date(\"04-0-2040\") ? \"true\"\
    \ : \"false\";\necho \"\\n\";\necho valid_date(\"06-04-2020\") ? \"true\" : \"\
    false\";\necho \"\\n\";\necho valid_date(\"06/04/2020\") ? \"true\" : \"false\"\
    ;\necho \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660009037
- exit_code: 0
  program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns true if the date is valid otherwise false.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// >>> valid_date(\"\
    03-11-2000\")\n// true\n// >>> valid_date(\"15-01-2012\")\n// false\n// >>> valid_date(\"\
    04-0-2040\")\n// false\n// >>> valid_date(\"06-04-2020\")\n// true\n// >>> valid_date(\"\
    06/04/2020\")\n// false\nfunction valid_date($date) {\n    if (empty($date)) {\n\
    \        return false;\n    }\n    list($m, $d, $y) = explode('-', $date);\n \
    \   if (is_numeric($m) && is_numeric($d) && is_numeric($y)) {\n        if ($m\
    \ < 1 || $m > 12) {\n            return false;\n        }\n        if (($m ==\
    \ 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12) && ($d\
    \ < 1 || $d > 31)) {\n            return false;\n        }\n        if (($m ==\
    \ 4 || $m == 6 || $m == 9 || $m == 11) && ($d < 1 || $d > 30)) {\n           \
    \ return false;\n        }\n        if ($m == 2 && ((($y % 4 == 0) && ($y % 100\
    \ != 0)) || ($y % 400 == 0)) && ($d < 1 || $d > 29)) {\n            return false;\n\
    \        }\n        if ($m == 2 && ((($y % 4 != 0) || ($y % 100 == 0)) && ($y\
    \ % 400 != 0)) && ($d < 1 || $d > 28)) {\n            return false;\n        }\n\
    \        return true;\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmpc1m34jgd.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpc1m34jgd.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpc1m34jgd.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpc1m34jgd.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpc1m34jgd.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpc1m34jgd.php on line 23

    '
  timestamp: 1660009037

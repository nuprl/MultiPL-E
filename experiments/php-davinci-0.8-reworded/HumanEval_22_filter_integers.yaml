name: HumanEval_22_filter_integers
language: php
prompt: "<?php\n// Filter given array of any phpthon values only for integers\n//\
  \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
  \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
  \ {\n"
tests: "function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
  )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
  \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    return array_filter($values, function($value) {\n        return\
    \ (is_int($value) || is_integer($value));\n    });\n}", "\t$numbers = array();\n\
    \tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\t$numbers[] =\
    \ $value;\n\t\t}\n\t}\n\treturn $numbers;\n}\n", "    $retArr = array();\n   \
    \ foreach ($values as $value) {\n        if (is_int($value)) {\n            $retArr[]\
    \ = $value;\n        }\n    }\n    return $retArr;\n}", "    // BEGIN\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n    // END\n}\n", "    return array_filter($values, 'is_int');\n}",
  "    $length = count($values);\n    $i = 0;\n    while ($i < $length) {\n      \
    \  if (!is_int($values[$i])) {\n            unset($values[$i]);\n        }\n \
    \       $i++;\n    }\n    return $values;\n}\n\n$arr = array(\"a\", 3.14, 5);\n\
    $arr2 = array(1, 2, 3, \"abc\", array(), array());\nprint_r(filter_integers($arr));\n\
    print_r(filter_integers($arr2));\n", "    $result = array();\n    foreach ($values\
    \ as $value) {\n        if (is_int($value)) {\n            $result[] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "  $res = array();\n  foreach ($values\
    \ as $value) {\n    if (is_int($value)) {\n      $res[] = $value;\n    }\n  }\n\
    \  return $res;\n}", "\treturn array_filter($values, function($value) {\n\t\t\
    return is_int($value);\n\t});\n}\n", "  $result = array();\n  foreach ($values\
    \ as $value) {\n    if(is_int($value))\n      $result[] = $value;\n  }\n  return\
    \ $result;\n}", "    return array_filter($values, function($var) { return is_int($var);\
    \ });\n}\n", "\t$filtered_values = array();\n\t$values_count = count($values);\n\
    \tfor ($i = 0; $i < $values_count; $i++) {\n\t\tif (is_integer($values[$i])) {\n\
    \t\t\t$filtered_values[] = $values[$i];\n\t\t}\n\t}\n\treturn $filtered_values;\n\
    }", "  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n", "\t$filtered = array();\n\tforeach ($values as $value) {\n\t\tif\
    \ (is_int($value)) {\n\t\t\t$filtered[] = $value;\n\t\t}\n\t}\n\treturn $filtered;\n\
    }\n", "}\n", "\tforeach ($values as $key => $value) {\n\t\tif ( is_int($value)\
    \ ) {\n\t\t\t$filtered_values[] = $value;\n\t\t}\n\t}\n\treturn $filtered_values;\n\
    }\n", "\treturn array_filter($values, function($v) {\n\t\treturn is_int($v);\n\
    \t});\n}\n", "    $result = array();\n    foreach ($values as $value) {\n    \
    \    if (is_int($value)) {\n            $result[] = $value;\n        }\n    }\n\
    \    return $result;\n}\n$arr = array(\"a\", 3.14, 5);\necho \"<pre>\";\nprint_r(filter_integers($arr));\n\
    echo \"</pre>\";\n", "  return array_filter($values, function($v) { return is_int($v);\
    \ });\n}\n", "    $new_values = array();\n    foreach ($values as $value) {\n\
    \        if (is_int($value)) {\n            $new_values[] = $value;\n        }\n\
    \    }\n    return $new_values;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

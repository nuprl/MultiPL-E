name: HumanEval_22_filter_integers
language: php
prompt: "<?php\n// Filter given array of any phpthon values only for integers\n//\
  \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
  \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
  \ {\n"
tests: "function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
  )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
  \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    return array_filter($values, function($value) {\n        return\
    \ (is_int($value) || is_integer($value));\n    });\n}", "\t$numbers = array();\n\
    \tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\t$numbers[] =\
    \ $value;\n\t\t}\n\t}\n\treturn $numbers;\n}\n", "    $retArr = array();\n   \
    \ foreach ($values as $value) {\n        if (is_int($value)) {\n            $retArr[]\
    \ = $value;\n        }\n    }\n    return $retArr;\n}", "    // BEGIN\n    return\
    \ array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n    // END\n}\n", "    return array_filter($values, 'is_int');\n}",
  "    $length = count($values);\n    $i = 0;\n    while ($i < $length) {\n      \
    \  if (!is_int($values[$i])) {\n            unset($values[$i]);\n        }\n \
    \       $i++;\n    }\n    return $values;\n}\n\n$arr = array(\"a\", 3.14, 5);\n\
    $arr2 = array(1, 2, 3, \"abc\", array(), array());\nprint_r(filter_integers($arr));\n\
    print_r(filter_integers($arr2));\n", "    $result = array();\n    foreach ($values\
    \ as $value) {\n        if (is_int($value)) {\n            $result[] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "  $res = array();\n  foreach ($values\
    \ as $value) {\n    if (is_int($value)) {\n      $res[] = $value;\n    }\n  }\n\
    \  return $res;\n}", "\treturn array_filter($values, function($value) {\n\t\t\
    return is_int($value);\n\t});\n}\n", "  $result = array();\n  foreach ($values\
    \ as $value) {\n    if(is_int($value))\n      $result[] = $value;\n  }\n  return\
    \ $result;\n}", "    return array_filter($values, function($var) { return is_int($var);\
    \ });\n}\n", "\t$filtered_values = array();\n\t$values_count = count($values);\n\
    \tfor ($i = 0; $i < $values_count; $i++) {\n\t\tif (is_integer($values[$i])) {\n\
    \t\t\t$filtered_values[] = $values[$i];\n\t\t}\n\t}\n\treturn $filtered_values;\n\
    }", "  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n", "\t$filtered = array();\n\tforeach ($values as $value) {\n\t\tif\
    \ (is_int($value)) {\n\t\t\t$filtered[] = $value;\n\t\t}\n\t}\n\treturn $filtered;\n\
    }\n", "}\n", "\tforeach ($values as $key => $value) {\n\t\tif ( is_int($value)\
    \ ) {\n\t\t\t$filtered_values[] = $value;\n\t\t}\n\t}\n\treturn $filtered_values;\n\
    }\n", "\treturn array_filter($values, function($v) {\n\t\treturn is_int($v);\n\
    \t});\n}\n", "    $result = array();\n    foreach ($values as $value) {\n    \
    \    if (is_int($value)) {\n            $result[] = $value;\n        }\n    }\n\
    \    return $result;\n}\n$arr = array(\"a\", 3.14, 5);\necho \"<pre>\";\nprint_r(filter_integers($arr));\n\
    echo \"</pre>\";\n", "  return array_filter($values, function($v) { return is_int($v);\
    \ });\n}\n", "    $new_values = array();\n    foreach ($values as $value) {\n\
    \        if (is_int($value)) {\n            $new_values[] = $value;\n        }\n\
    \    }\n    return $new_values;\n}\n", "    $res = array();\n    foreach ($values\
    \ as $val) {\n        if (is_integer($val)) {\n            $res[] = $val;\n  \
    \      }\n    }\n    return $res;\n}", "    return array_filter($values, function($value)\
    \ {\n        return is_int($value);\n    });\n}\n\n$a = array(0, 1, \"a\", array(),\
    \ 3, \"b\");\n$a = filter_integers($a);\n\nvar_dump($a);", "\t$integers = array();\n\
    \tforeach ($values as $value) {\n\t\tif (is_integer($value)) {\n\t\t\t$integers[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $integers;\n}\n", "    return array_filter($values,\
    \ function($x) {\n        return is_int($x);\n    });\n}\n", "    return array_filter($values,\
    \ function($element) {\n        return is_int($element);\n    });\n}", "\treturn\
    \ array_filter($values, function($value) {\n\t\treturn is_int($value);\n\t});\n\
    }\n", "\treturn array_filter($values, function($val) { return is_int($val); });\n\
    }\n", "    return array_filter($values, function($var) {\n        return is_int($var);\n\
    \    });\n}\n\n$arr1 = array(1, 2, 3, \"abc\", array(), array());\n$arr2 = array(\"\
    a\", 3.14, 5);\n\necho \"<pre>\";\necho \"arr1 = \";\nprint_r($arr1);\necho \"\
    arr2 = \";\nprint_r($arr2);\necho \"</pre>\";\n\necho \"<pre>\";\necho \"filter_integers(arr1)\
    \ = \";\nprint_r(filter_integers($arr1));\necho \"filter_integers(arr2) = \";\n\
    print_r(filter_integers($arr2));\necho \"</pre>\";", "    $result = array();\n\
    \    foreach ($values as $value) {\n        if (is_int($value)) {\n          \
    \  $result[] = $value;\n        }\n    }\n    return $result;\n}", "    $integer_values\
    \ = array();\n    foreach ($values as $value) {\n        if (is_int($value)) {\n\
    \            $integer_values[] = $value;\n        }\n    }\n    return $integer_values;\n\
    }\n$values = array(1, 2, 3, \"abc\", array(), array());\nprint_r(filter_integers($values));\n",
  "    $filtered_array = array();\n    for ($i = 0; $i < count($values); $i++) {\n\
    \        if (is_int($values[$i])) {\n            array_push($filtered_array, $values[$i]);\n\
    \        }\n    }\n    return $filtered_array;\n}\n", "\t// TODO\n\t$integers\
    \ = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\
    \tarray_push($integers, $value);\n\t\t}\n\t}\n\treturn $integers;\n}", "    $integers\
    \ = array();\n    foreach ($values as $value) {\n        if (is_int($value)) {\n\
    \            $integers[] = $value;\n        }\n    }\n    return $integers;\n}",
  "    $result = array();\n    $int_values = array_filter($values, \"is_int\");\n\
    \    foreach ($int_values as $int_value) {\n        $result[] = $int_value;\n\
    \    }\n    return $result;\n}\n", "    $filtered = array();\n    foreach ($values\
    \ as $v) {\n        if (is_int($v)) {\n            $filtered[] = $v;\n       \
    \ }\n    }\n    return $filtered;\n}\n", "  // we need to use a reference so we\
    \ can modify the original array\n  $values = array_filter($values, function($v)\
    \ {\n    return is_integer($v);\n  });\n  return $values;\n}\n", "    $output\
    \ = array();\n    foreach ($values as $val) {\n        if (gettype($val) === \"\
    integer\") {\n            array_push($output, $val);\n        }\n    }\n    return\
    \ $output;\n}\n", "    $result = array();\n    foreach ($values as $value) {\n\
    \        if (is_integer($value)) {\n            $result[] = $value;\n        }\n\
    \    }\n    return $result;\n}\n", "\t$integers = array();\n\tforeach ($values\
    \ as $value) {\n\t\tif (is_integer($value)) {\n\t\t\t$integers[] = $value;\n\t\
    \t}\n\t}\n\treturn $integers;\n}\n", "    $filtered_values = array();\n    foreach\
    \ ($values as $value) {\n        if (is_integer($value)) {\n            $filtered_values[]\
    \ = $value;\n        }\n    }\n    return $filtered_values;\n}", "    $ints =\
    \ [];\n    foreach ($values as $v) {\n        if (is_int($v)) {\n            $ints[]\
    \ = $v;\n        }\n    }\n    return $ints;\n}\n", "    return array_filter($values,\
    \ function($value) {\n        return (is_integer($value));\n    });\n}\n\nprint_r(filter_integers(array(\"\
    a\", 3.14, 5)));\necho '<br>';\nprint_r(filter_integers(array(1, 2, 3, \"abc\"\
    , array(), array())));", "    return array_filter($values, function($value) {\n\
    \        return is_int($value);\n    });\n}\n", "  $new_values = array();\n  foreach\
    \ ($values as $value) {\n    if (is_int($value)) {\n      $new_values[] = $value;\n\
    \    }\n  }\n  return $new_values;\n}\n", "\treturn array_filter($values, \"is_int\"\
    );\n}\n", "    // Your solution goes here\n}", "    foreach ($values as $key =>\
    \ $value) {\n        if (is_array($value)) {\n            $values[$key] = filter_integers($value);\n\
    \        } elseif (!is_int($value)) {\n            unset($values[$key]);\n   \
    \     }\n    }\n    return $values;\n}\n", "    $filtered_values = array();\n\
    \    foreach ($values as $value) {\n        if (gettype($value) === \"integer\"\
    ) {\n            array_push($filtered_values, $value);\n        }\n    }\n   \
    \ return $filtered_values;\n}\n", "    return array_filter($values, function($value)\
    \ {\n        return (is_int($value));\n    });\n}\n", "  return array_filter($values,\
    \ function($val) {\n    return is_int($val);\n  });\n}\n", "    $result = array();\n\
    \    foreach ($values as $value) {\n        if (is_integer($value)) {\n      \
    \      $result[] = $value;\n        }\n    }\n    return $result;\n}", "    foreach\
    \ ($values as $value) {\n        if (gettype($value) === \"integer\") {\n    \
    \        $result[] = $value;\n        }\n    }\n    return $result;\n}", "\t$result\
    \ = array();\n\tfor ($i = 0; $i < count($values); $i++) {\n\t\tif (is_int($values[$i]))\
    \ {\n\t\t\tarray_push($result, $values[$i]);\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "\t$result = array();\n\tfor ($i = 0; $i < count($values); $i++) {\n\t\t\
    if (is_integer($values[$i])) {\n\t\t\tarray_push($result, $values[$i]);\n\t\t\
    }\n\t}\n\treturn $result;\n}\n", "    $res = array();\n    foreach ($values as\
    \ $v) {\n        if (is_int($v)) {\n            $res[] = $v;\n        }\n    }\n\
    \    return $res;\n}\n", "    return array_filter($values, \"filter_is_integer\"\
    );\n}\n", "  $result = array();\n  foreach ($values as $value) {\n    if (is_integer($value))\
    \ {\n      $result[] = $value;\n    }\n  }\n  return $result;\n}\n", "    $ints\
    \ = array();\n    for ($i = 0; $i < count($values); $i++){\n        if (is_int($values[$i]))\
    \ {\n            array_push($ints, $values[$i]);\n        }\n    }\n    return\
    \ $ints;\n}\n", "    $values = array_filter($values, \"is_integer\");\n    $values\
    \ = array_values($values);\n\n    return $values;\n}\n", "\treturn array_filter($values,\
    \ \"is_int\");\n}", "  $result = array();\n  foreach ($values as $value) {\n \
    \   if(is_int($value)){\n      $result[] = $value;\n    }\n  }\n  return $result;\n\
    }\n", "\t$integers = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$integers[] = $value;\n\t\t}\n\t}\n\treturn $integers;\n}\n", "   \
    \ return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n", "    return array_filter($values, function($val) {\n        return\
    \ is_int($val);\n    });\n}\n", "    // TODO\n    $integerValues = array();\n\
    \    for ($i = 0; $i < count($values); $i++) {\n        if (gettype($values[$i])\
    \ == \"integer\") {\n            array_push($integerValues, $values[$i]);\n  \
    \      }\n    }\n    return $integerValues;\n}", "  foreach ($values as $key =>\
    \ $value) {\n    if (is_int($value)) {\n      $result[] = $value;\n    }\n  }\n\
    \  return $result;\n}", "    return array_filter($values, \"is_int\");\n}\n",
  "    $integers = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $integers[] = $value;\n        }\n    }\n    return $integers;\n\
    }\n\n$values = array(\"a\", 3.14, 5);\n$integers = filter_integers($values);\n\
    print_r($integers);\necho \"<br/>\";\n\n$values = array(1, 2, 3, \"abc\", array(),\
    \ array());\n$integers = filter_integers($values);\nprint_r($integers);\necho\
    \ \"<br/>\";\n", "    $return = array();\n    foreach ($values as $value) {\n\
    \        if (gettype($value) == \"integer\") {\n            array_push($return,\
    \ $value);\n        }\n    }\n    return $return;\n}\n", "    $filtered_values\
    \ = array();\n    foreach ($values as $value) {\n        if (is_integer($value))\
    \ {\n            $filtered_values[] = $value;\n        }\n    }\n    return $filtered_values;\n\
    }\n", "    return array_filter($values, function($v) { return is_int($v); });\n\
    }\n", "    $number_array = array();\n    foreach ($values as $value) {\n     \
    \   if (is_int($value)) {\n            array_push($number_array, $value);\n  \
    \      }\n    }\n    return $number_array;\n}\n", "    $numbers = array();\n \
    \   foreach ($values as $value) {\n        if (is_int($value)) {\n           \
    \ $numbers[] = $value;\n        }\n    }\n    return $numbers;\n}\n", "\t$res\
    \ = array();\n\tfor ($i = 0; $i < count($values); $i++) {\n\t\tif (is_int($values[$i]))\
    \ {\n\t\t\t$res[] = $values[$i];\n\t\t}\n\t}\n\treturn $res;\n}", "  $new_values\
    \ = array();\n  foreach ($values as $value) {\n    if (is_int($value)) {\n   \
    \   $new_values[] = $value;\n    }\n  }\n  return $new_values;\n}\n", "  if (is_array($values))\
    \ {\n    foreach ($values as $key => $value) {\n      if (!is_int($value)) {\n\
    \        unset($values[$key]);\n      }\n    }\n  }\n  return $values;\n}\n",
  "    $result = array();\n    foreach ($values as $value) {\n        if (is_integer($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}",
  "    //TODO;\n    $result = array();\n    foreach ($values as $val) {\n        if\
    \ (gettype($val) === \"integer\") {\n            array_push($result, $val);\n\
    \        }\n    }\n    return $result;\n}\n\n$a = array(\"a\", 3.14, 5);\nprint_r(filter_integers($a));\n\
    echo \"<br>\";\n\n$b = array(1, 2, 3, \"abc\", array(), array());\nprint_r(filter_integers($b));\n\
    echo \"<br>\";\n", "    $result = array();\n    foreach ($values as $value) {\n\
    \        if (is_int($value)) {\n            $result[] = $value;\n        }\n \
    \   }\n    return $result;\n}\n", "    $arr = array();\n    foreach ($values as\
    \ $value) {\n        if (is_int($value)) {\n            $arr[] = $value;\n   \
    \     }\n    }\n    return $arr;\n}", "\t$values = array_filter($values, 'is_integer');\n\
    \treturn $values;\n}\n", "\t$result = array();\n\tforeach ($values as $value)\
    \ {\n\t\tif (is_int($value)) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\n", "    // $int_array = [];\n    // foreach ($values as $value)\
    \ {\n    //     if (gettype($value) === \"integer\") {\n    //         array_push($int_array,\
    \ $value);\n    //     }\n    // }\n    // return $int_array;\n    return array_filter($values,\
    \ function($value) {\n        return gettype($value) === \"integer\";\n    });\n\
    }", "\t$filtered = array();\n\tfor ($i = 0; $i < count($values); $i++) {\n\t\t\
    if (is_integer($values[$i])) {\n\t\t\t$filtered[] = $values[$i];\n\t\t}\n\t}\n\
    \treturn $filtered;\n}\n", "\t$new_values = array();\n\tforeach ($values as $k\
    \ => $v) {\n\t\tif (is_int($v)) {\n\t\t\t$new_values[] = $v;\n\t\t}\n\t}\n\treturn\
    \ $new_values;\n}\n", "  // your code here\n}\n", "\treturn array_filter($values,\
    \ \"is_int\");\n}\n", "    return array_filter($values, function($value) {\n \
    \       return is_int($value);\n    });\n}\n", "\t$values_array = [];\n\tfor ($i\
    \ = 0; $i < count($values); $i++) {\n\t\tif (is_int($values[$i])) {\n\t\t\tarray_push($values_array,\
    \ $values[$i]);\n\t\t}\n\t}\n\treturn $values_array;\n}\n", "\treturn array_filter($values,\
    \ \"is_int\");\n}", "    $filtered = array();\n    foreach ($values as $value)\
    \ {\n        if (is_integer($value)) {\n            $filtered[] = $value;\n  \
    \      }\n    }\n    return $filtered;\n}\n", "  $result = array();\n  foreach\
    \ ($values as $value) {\n    if (is_integer($value)) {\n      $result[] = $value;\n\
    \    }\n  }\n  return $result;\n}\n", "    return array_filter($values, function($value)\
    \ {\n        return is_int($value);\n    });\n}\n\necho '<pre>';\nvar_dump(filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array())));\necho '</pre>';", "    // TODO: Implement\
    \ this function\n}\n", "  // your code here\n}", "\t$re = [];\n\tforeach ($values\
    \ as $v) {\n\t\tif (is_int($v)) {\n\t\t\t$re[] = $v;\n\t\t}\n\t}\n\treturn $re;\n\
    }\n", "\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (gettype($value)\
    \ === \"integer\") {\n\t\t\tarray_push($result, $value);\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\n", "    return filter_var_array($values, FILTER_VALIDATE_INT);\n\
    }\n", "  return array_filter($values, 'is_int');\n}\n", "\t$result = array();\n\
    \tforeach ($values as $value) {\n\t\tif (is_integer($value)) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n", "  return array_filter($values,\
    \ function($value) {\n    return is_int($value);\n  });\n}\n", "  $result = array();\n\
    \  foreach ($values as $v) {\n    if (is_integer($v)) {\n      $result[] = $v;\n\
    \    }\n  }\n  return $result;\n}", "    $result = array();\n    foreach ($values\
    \ as $value) {\n        if (is_int($value)) {\n            $result[] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = array();\n    foreach\
    \ ($values as $v) {\n        if (is_int($v)) {\n            $result[] = $v;\n\
    \        }\n    }\n    return $result;\n}\n", "  return array_filter($values,\
    \ function($value) {\n    return is_int($value);\n  });\n}\n", "\t// TODO\n\t\
    $result = array();\n\tfor ($i = 0; $i < count($values); $i++) {\n\t\tif (is_int($values[$i]))\
    \ {\n\t\t\tarray_push($result, $values[$i]);\n\t\t}\n\t}\n\treturn $result;\n}",
  "    $integers = array();\n    foreach ($values as $value) {\n        if (is_integer($value))\
    \ {\n            $integers[] = $value;\n        }\n    }\n    return $integers;\n\
    }\n", "    return array_filter($values, function($a) { return is_int($a); });\n\
    }\n", "  $res = array();\n  foreach ($values as $v) {\n    if (is_int($v)) {\n\
    \      $res[] = $v;\n    }\n  }\n  return $res;\n}", "  $int_values = array();\n\
    \  foreach ($values as $val) {\n    if (is_int($val)) {\n      $int_values[] =\
    \ $val;\n    }\n  }\n  return $int_values;\n}\n", "    foreach ($values as $key\
    \ => $value) {\n        if (gettype($value) !== \"integer\")\n            unset($values[$key]);\n\
    \    }\n    return $values;\n}\n", "    return array_filter($values, function($value)\
    \ {\n        return is_int($value);\n    });\n}\n", "    // array_filter(arr,\
    \ callback_func)\n    // callback_func: function to call for each element in array.\n\
    \    // callback_func in this case is a lambda function.\n    return array_filter($values,\
    \ function($value) {\n        return is_int($value);\n    });\n}\n", "    $integers\
    \ = array();\n    foreach ($values as $value) {\n        if (is_int($value)) {\n\
    \            $integers[] = $value;\n        }\n    }\n    return $integers;\n\
    }\n$values = array(\"a\", 3.14, 5);\nvar_dump(filter_integers($values));\n$values\
    \ = array(1, 2, 3, \"abc\", array(), array());\nvar_dump(filter_integers($values));",
  "    $result = array();\n    foreach ($values as $val) {\n        if (is_int($val))\
    \ {\n            $result[] = $val;\n        }\n    }\n    return $result;\n}",
  "\treturn array_filter($values, 'is_int');\n}\n", "  return array_filter($values,\
    \ function($value) {\n    return is_int($value);\n  });\n}\n\n$values = [\"a\"\
    , 3.14, 5];\n\nvar_dump(filter_integers($values));", "\t$result = array();\n\t\
    foreach ($values as $value) {\n\t\tif (is_integer($value)) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $ints = array();\n    foreach\
    \ ($values as $value) {\n        if (is_int($value)) {\n            $ints[] =\
    \ $value;\n        }\n    }\n    return $ints;\n}\n", "  $result = array();\n\
    \  foreach ($values as $value) {\n    if (is_int($value)) {\n      $result[] =\
    \ $value;\n    }\n  }\n  return $result;\n}\n\necho \"\\n*** Test array with a\
    \ float and an integer ***\\n\";\n$values = array(\"a\", 3.14, 5);\nvar_dump(filter_integers($values));\n\
    \necho \"\\n*** Test array with several integers ***\\n\";\n$values = array(1,\
    \ 2, 3, \"abc\", array(), array());\nvar_dump(filter_integers($values));\n\necho\
    \ \"\\n*** Test array with empty array ***\\n\";\n$values = array();\nvar_dump(filter_integers($values));\n\
    \necho \"\\n*** Test array with a boolean ***\\n\";\n$values = array(true);\n\
    var_dump(filter_integers($values));\n\necho \"\\n*** Test array with a boolean\
    \ ***\\n\";\n$values = array(false);\nvar_dump(filter_integers($values));\n\n\
    echo \"\\n*** Test array with NULL ***\\n\";\n$values = array(NULL);\nvar_dump(filter_integers($values));\n\
    \necho \"\\n*** Test array with an empty String ***\\n\";\n$values = array(\"\"\
    );\nvar_dump(filter_integers($values));\n\necho \"\\n*** Test array with a String\
    \ ***\\n\";\n$values = array(\"abc\");\nvar_dump(filter_integers($values));\n\n\
    echo \"\\n*** Test array with a binary literal ***\\n\";\n$values = array(b\"\
    abc\");\nvar_dump(filter_integers($values));\n\necho \"\\n*** Test array with\
    \ a float ***\\n\";\n$values = array(3.14);\nvar_dump(filter_integers($values));\n\
    \necho \"\\n*** Test array with an octal literal ***\\n\";\n$values = array(0123);\n\
    var_dump(filter_integers($values));\n\necho \"\\n*** Test array with a hexadecimal\
    \ literal ***\\n\";\n$values = array(0x1A);\nvar_dump(filter_integers($values));\n\
    \necho \"\\n*** Test array", "    $newArray = array();\n    foreach ($values as\
    \ $val) {\n        if (is_int($val)) {\n            array_push($newArray, $val);\n\
    \        }\n    }\n    return $newArray;\n}\n", "    $arr = [];\n    foreach ($values\
    \ as $value) {\n        if (is_int($value)) {\n            $arr[] = $value;\n\
    \        }\n    }\n    return $arr;\n}", "    return array_filter($values, \"\
    is_int\");\n}\n", "\t$ret = array();\n\tforeach ($values as $value) {\n\t\tif\
    \ (is_int($value)) {\n\t\t\t$ret[] = $value;\n\t\t}\n\t}\n\treturn $ret;\n}",
  "    return array_filter($values, function($value) {\n        return gettype($value)\
    \ == \"integer\";\n    });\n}\n\nprint_r(filter_integers(array(\"a\", 3.14, 5)));\n\
    print_r(filter_integers(array(1, 2, 3, \"abc\", array(), array())));\n", "\treturn\
    \ array_filter($values, function($a) {\n\t\treturn is_int($a);\n\t});\n}", " \
    \   $return = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $return[] = $value;\n        }\n    }\n    return $return;\n\
    }\n", "    // ...\n}", "    return array_filter($values, function($value) {\n\
    \        return is_int($value);\n    });\n}\n", "    return array_filter($values,\
    \ function($element) {\n        return is_int($element);\n    });\n}\n", "   \
    \ return array_filter($values, \"is_int\");\n}", "    return array_filter($values,\
    \ 'is_int');\n}\n", "  $return = array();\n  foreach ($values as $value) {\n \
    \   if(is_int($value)) {\n      $return[] = $value;\n    }\n  }\n  return $return;\n\
    }\n", "  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n$test_values = array(\n  \"a\",\n  3.14,\n  5,\n  array(),\n  array()\n\
    );\nprint_r(filter_integers($test_values));\n\necho \"<br>\";\necho \"<br>\";\n",
  "    $integers = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $integers[] = $value;\n        }\n    }\n    return $integers;\n\
    }", "    // Your code goes here\n    $result = array();\n    foreach ($values\
    \ as $value) {\n        if (is_int($value)) {\n            array_push($result,\
    \ $value);\n        }\n    }\n    return $result;\n}", "\t$array = array();\n\t\
    foreach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\t$array[] = $value;\n\
    \t\t}\n\t}\n\treturn $array;\n}\n", "  return array_filter($values, \"is_int\"\
    );\n}\n", "  return filter_integer_values($values, array(null, null));\n}\n",
  "\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_integer($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n", "\t// TESTED\n\
    \t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $values\
    \ = array_filter($values, function($item) {\n        return is_int($item);\n \
    \   });\n    return $values;\n}", "    $integers = array();\n    foreach ($values\
    \ as $value) {\n        if (is_int($value)) {\n            $integers[] = $value;\n\
    \        }\n    }\n    return $integers;\n}\n", "\t$integers = array();\n\tforeach\
    \ ($values as $value) {\n\t\tif (is_integer($value)) {\n\t\t\t$integers[] = $value;\n\
    \t\t}\n\t}\n\treturn $integers;\n}", "\t$integers = array();\n\tforeach ($values\
    \ as $value) {\n\t\tif (is_int($value)) {\n\t\t\t$integers[] = $value;\n\t\t}\n\
    \t}\n\treturn $integers;\n}\n", "  $array = array();\n  foreach ($values as $v)\
    \ {\n    if (is_int($v)) {\n      $array[] = $v;\n    }\n  }\n  return $array;\n\
    }\n\nprint_r(filter_integers(array(\"a\", 3.14, 5)));\nprint_r(filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array())));", "  return array_filter($values, function($value)\
    \ {\n    return is_int($value);\n  });\n}\n\nprint_r(filter_integers(array(\"\
    a\", 3.14, 5)));\necho \"<br>\";\nprint_r(filter_integers(array(1, 2, 3, \"abc\"\
    , array(), array())));\necho \"<br>\";\n", "    $integers = array();\n    foreach\
    \ ($values as $value) {\n        if (is_int($value)) {\n            $integers[]\
    \ = $value;\n        }\n    }\n    return $integers;\n}\n", "    return array_filter($values,\
    \ function($item) {\n        return is_int($item);\n    });\n}\n", "    return\
    \ array_filter($values, 'is_int');\n}", "    $values = filter_var_array($values,\
    \ FILTER_VALIDATE_INT);\n    $values = array_filter($values, function($item) {\n\
    \        return $item !== null;\n    });\n    return $values;\n}\n", "    $filter\
    \ = function($value) {\n        return is_int($value);\n    };\n    return array_filter($values,\
    \ $filter);\n}\n", "\t// filter_var can have second value, filter, that can filter\
    \ the input\n\treturn array_filter($values, function($value) {\n\t\t// returns\
    \ if the given value is an integer\n\t\treturn filter_var($value, FILTER_VALIDATE_INT);\n\
    \t});\n}\n", "\t$values = array_filter($values, function($a) {\n\t\treturn is_int($a);\n\
    \t});\n\treturn $values;\n}\n", "\t$output = array();\n\tforeach ($values as $value)\
    \ {\n\t\tif (is_int($value)) {\n\t\t\t$output[] = $value;\n\t\t}\n\t}\n\treturn\
    \ $output;\n}\n", "    $result = array();\n    foreach ($values as $value) {\n\
    \        if (is_integer($value)) {\n            $result[] = $value;\n        }\n\
    \    }\n    return $result;\n}", "    return array_filter($values, function($x)\
    \ {\n        return is_int($x);\n    });\n}\n", "    $results = array();\n   \
    \ foreach ($values as $value) {\n        if (is_int($value)) {\n            $results[]\
    \ = $value;\n        }\n    }\n    return $results;\n}\n", "    $numbers = array();\n\
    \    foreach ($values as $value) {\n        if (is_int($value)) {\n          \
    \  $numbers[] = $value;\n        }\n    }\n    return $numbers;\n}\n", "    $res\
    \ = array();\n    foreach ($values as $value) {\n        if (is_int($value)) {\n\
    \            $res[] = $value;\n        }\n    }\n    return $res;\n}\n", "   \
    \ foreach ($values as $value) {\n        if (is_int($value)) {\n            $fvalues[]\
    \ = $value;\n        }\n    }\n    return $fvalues;\n}", "\treturn array_filter($values,\
    \ function($value) {\n\t\treturn is_int($value);\n\t});\n}\n", "    $new_values\
    \ = array();\n    for ($i = 0; $i < count($values); $i++) {\n        if (is_int($values[$i]))\
    \ {\n            array_push($new_values, $values[$i]);\n        }\n    }\n   \
    \ return $new_values;\n}", "    return array_filter($values, 'is_int');\n}", " \
    \   foreach ($values as $key => $value) {\n        if (!is_int($value)) {\n  \
    \          unset($values[$key]);\n        }\n    }\n    return $values;\n}\n",
  "    return array_filter($values, function($item) {\n        return is_int($item);\n\
    \    });\n}\n", "    $result = array();\n    $type = 'integer';\n    foreach ($values\
    \ as $v) {\n        if (gettype($v) == $type) {\n            array_push($result,\
    \ $v);\n        }\n    }\n    return $result;\n}\n", "    $res = array();\n  \
    \  foreach ($values as $value) {\n        if (is_int($value)) {\n            $res[]\
    \ = $value;\n        }\n    }\n    return $res;\n}", "\t// your code\n}", "\t\
    // Your code goes here\n}", "    $result = array();\n    foreach ($values as $value)\
    \ {\n        if (gettype($value) == \"integer\") {\n            array_push($result,\
    \ $value);\n        }\n    }\n    return $result;\n}", "  $output = array();\n\
    \  foreach ($values as $value) {\n    if (is_int($value)) {\n      $output[] =\
    \ $value;\n    }\n  }\n  return $output;\n}\n", "\tforeach ($values as $key =>\
    \ $value) {\n\t\tif (!is_int($value)) {\n\t\t\tunset($values[$key]);\n\t\t}\n\t\
    }\n\treturn $values;\n}\n", "\treturn array_filter($values, 'is_int');\n}\n",
  "    $result = array();\n    foreach ($values as $item) {\n        if (is_int($item))\
    \ {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
  "    // TODO: write your code here\n    $new_array = [];\n    foreach ($values as\
    \ $item) {\n        if (is_int($item)) {\n            $new_array[] = $item;\n\
    \        }\n    }\n    return $new_array;\n}\n", "  $result = array();\n  foreach\
    \ ($values as $value) {\n    if (is_int($value)) {\n      $result[] = $value;\n\
    \    }\n  }\n  return $result;\n}\n", "\t$result = array();\n\tif (is_array($values)){\n\
    \t\tforeach ($values as $value) {\n\t\t\tif (is_int($value)) {\n\t\t\t\t$result[]\
    \ = $value;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n", "\treturn array_filter($values,\
    \ function($value) {\n\t\treturn is_int($value);\n\t});\n}\n", "\treturn array_filter($values,\
    \ function($v) { return is_int($v); });\n}", "\treturn array_filter($values, 'is_int');\n\
    }\n", "    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n", "    $array = [];\n    foreach ($values as $value) {\n       \
    \ if (is_integer($value)) {\n            $array[] = $value;\n        }\n    }\n\
    \    return $array;\n}\n", "    return array_filter($values, function($value)\
    \ {\n        return is_int($value);\n    });\n}", "    return array_filter($values,\
    \ function($val) {\n        return is_int($val);\n    });\n}\n", "\tif (!is_array($values))\
    \ {\n\t\tthrow new Exception(\"Invalid parameter \\$values: must be an array\"\
    );\n\t}\n\tforeach ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\t$new[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $new;\n}\n", "\t$new_array = array();\n\tforeach\
    \ ($values as $value) {\n\t\tif (is_int($value)) {\n\t\t\t$new_array[] = $value;\n\
    \t\t}\n\t}\n\treturn $new_array;\n}\n", "    // remove any non-integer values\n\
    \    foreach ($values as $key => $value) {\n        if (! is_int($value)) {\n\
    \            unset($values[$key]);\n        }\n    }\n    return $values;\n}\n",
  "  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n", "  if (count($values) == 0) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($values as $value) {\n    if (is_int($value)) {\n   \
    \   $result[] = $value;\n    }\n  }\n  return $result;\n}\n", "    return array_filter($values,\
    \ function($value) {\n        return is_int($value);\n    });\n}\n\n$integers\
    \ = filter_integers(array(\"a\", 3.14, 5));\n\nvar_dump($integers);\n", "    return\
    \ array_filter($values, function($v) {\n        return gettype($v) == \"integer\"\
    ;\n    });\n}\n", "    return array_filter($values, function($value) {\n     \
    \   return is_int($value);\n    });\n}\n", "    $result = array();\n    foreach\
    \ ($values as $value) {\n        if (is_integer($value)) {\n            $result[]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n", "\t// TODO\n}", "  \
    \  return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n", "    $arr = array();\n    foreach ($values as $val) {\n      \
    \  if (is_int($val)) {\n            $arr[] = $val;\n        }\n    }\n    return\
    \ $arr;\n}", "    return array_filter($values, \"filter_integers_helper\");\n\
    }\n", "    $final_array = array();\n    foreach ($values as $value) {\n      \
    \  if (is_integer($value)) {\n            array_push($final_array, $value);\n\
    \        }\n    }\n    return $final_array;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

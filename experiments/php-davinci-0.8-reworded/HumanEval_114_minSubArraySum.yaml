name: HumanEval_114_minSubArraySum
language: php
prompt: "<?php\n// Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2, 3, 4, 1, 2,\
  \ 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction minSubArraySum($nums)\
  \ {\n"
tests: "function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3,\
  \ 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
  \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
  \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
  \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-10)) !== -10) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(7)) !== 7) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, -1)) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $sum = PHP_INT_MAX;\n    $tmp = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $tmp += $nums[$i];\n        if ($tmp < $sum) {\n          \
    \  $sum = $tmp;\n        }\n        if ($tmp > 0) {\n            $tmp = 0;\n \
    \       }\n    }\n    return $sum;\n}", "    $currentSum = 0;\n    $globalMin\
    \ = $nums[0];\n    for ($i = 0; $i < count($nums); $i++) {\n        $currentSum\
    \ += $nums[$i];\n        if ($currentSum < $globalMin) {\n            $globalMin\
    \ = $currentSum;\n        }\n        if ($currentSum > 0) {\n            $currentSum\
    \ = 0;\n        }\n    }\n    return $globalMin;\n}", "    $len = count($nums);\n\
    \    if ($len === 0) {\n        return 0;\n    }\n    $min = $minSum = $nums[0];\n\
    \    for ($i = 1; $i < $len; $i++) {\n        $min = min($nums[$i], $min + $nums[$i]);\n\
    \        $minSum = min($min, $minSum);\n    }\n    return $minSum;\n}", "    $current_sum\
    \ = $nums[0];\n    $best_sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $current_sum = max($nums[$i], $current_sum + $nums[$i]);\n\
    \        $best_sum = max($best_sum, $current_sum);\n    }\n    return $best_sum;\n\
    }", "    if (count($nums) < 1) {\n        return 0;\n    }\n    $min = $min_here\
    \ = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $min_here\
    \ = min($nums[$i], $min_here + $nums[$i]);\n        $min = min($min, $min_here);\n\
    \    }\n    return $min;\n}\n", "    if (empty($nums)) return 0;\n    $min = array_sum($nums);\n\
    \    $current = 0;\n    foreach ($nums as $num) {\n        $current += $num;\n\
    \        $min = min($min, $current);\n        $current = max(0, $current);\n \
    \   }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho\
    \ PHP_EOL;\necho minSubArraySum(array(-1, -2, -3));\necho PHP_EOL;", "\t$result\
    \ = PHP_INT_MAX;\n\t$sum = 0;\n\t$minSum = 0;\n\tfor ($i = 0; $i < count($nums);\
    \ $i++) {\n\t\t$sum += $nums[$i];\n\t\t$result = min($result, $sum - $minSum);\n\
    \t\t$minSum = min($minSum, $sum);\n\t}\n\treturn $result;\n}", "    $minSum =\
    \ $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n    \
    \    $sum += $nums[$i];\n        if ($sum < $minSum) {\n            $minSum =\
    \ $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $minSum;\n}\n", "    $sum = 0;\n    $min = PHP_INT_MAX;\n \
    \   $start = 0;\n    $end = 0;\n    $len = count($nums);\n    while ($end < $len)\
    \ {\n        $sum += $nums[$end];\n        while ($sum >= 0) {\n            $min\
    \ = min($min, $sum);\n            $sum -= $nums[$start];\n            $start++;\n\
    \        }\n        $end++;\n    }\n    return $min;\n}\n", "    $length = count($nums);\n\
    \    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i < $length;\
    \ $i++) {\n        $currentSum = min($currentSum + $nums[$i], $nums[$i]);\n  \
    \      $minSum = min($minSum, $currentSum);\n    }\n    return $minSum;\n}\n",
  "    $min = NULL;\n    $sum = 0;\n    $i = 0;\n    while ($i < count($nums)) {\n\
    \        $sum += $nums[$i];\n        if ($min === NULL || $sum < $min) {\n   \
    \         $min = $sum;\n        }\n        $i++;\n    }\n    return $min;\n}",
  "    $i = 0;\n    $j = count($nums) - 1;\n    $min = PHP_INT_MAX;\n    $sum = 0;\n\
    \    for ($p = 0; $p < count($nums); $p++) {\n        $sum += $nums[$p];\n   \
    \     if ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n", " \
    \   $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    $end = 0;\n  \
    \  while ($end < count($nums)) {\n        while ($sum <= 0 && $start < count($nums))\
    \ {\n            $sum += $nums[$start];\n            $start++;\n        }\n  \
    \      $minSum = min($minSum, $sum);\n        $sum -= $nums[$end];\n        $end++;\n\
    \    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\n\
    echo PHP_EOL;\necho minSubArraySum(array(-1, -2, -3));\necho PHP_EOL;", "  if\
    \ (empty($nums)) {\n    return 0;\n  }\n  $sum = $min = PHP_INT_MAX;\n  for ($i\
    \ = 0; $i < count($nums); $i++) {\n    $sum = min($sum + $nums[$i], $nums[$i]);\n\
    \    $min = min($min, $sum);\n  }\n  return $min;\n}\n\n$arr = array(2, 3, 4,\
    \ 1, 2, 4);\necho minSubArraySum($arr);\necho PHP_EOL;\n\n$arr = array(-1, -2,\
    \ -3);\necho minSubArraySum($arr);\necho PHP_EOL;", "    $minSum = $nums[0];\n\
    \    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n       \
    \ $minSum = min($minSum, $sum);\n        if ($sum < 0) {\n            $sum = 0;\n\
    \        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3, 4,\
    \ 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;", " \
    \   $sum = 0;\n    $min = $nums[0];\n    foreach ($nums as $num) {\n        $sum\
    \ += $num;\n        if ($sum < $min) {\n            $min = $sum;\n        }\n\
    \    }\n    return $min;\n}\n", "\t$len = count($nums);\n\tif ($len == 0) {\n\t\
    \treturn 0;\n\t}\n\t$min = PHP_INT_MAX;\n\t$sum = 0;\n\tfor ($i = 0; $i < $len;\
    \ $i++) {\n\t\t$sum += $nums[$i];\n\t\tif ($sum < $min) {\n\t\t\t$min = $sum;\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$sum = 0;\n\t\t}\n\t}\n\treturn $min;\n}\n",
  "    $minSum = $nums[0];\n    $sum = 0;\n    foreach ($nums as $num) {\n       \
    \ $sum += $num;\n        $minSum = min($minSum, $sum);\n        if ($sum < 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\n$input1\
    \ = array(2, 3, 4, 1, 2, 4);\n$input2 = array(-1, -2, -3);\necho minSubArraySum($input1);\n\
    echo PHP_EOL;\necho minSubArraySum($input2);\necho PHP_EOL;", "    $min = null;\n\
    \    $length = count($nums);\n    $sum = 0;\n    for ($i = 0; $i < $length; $i++)\
    \ {\n        $sum += $nums[$i];\n        if ($min === null || $sum < $min) {\n\
    \            $min = $sum;\n        }\n        for ($j = $i + 1; $j < $length;\
    \ $j++) {\n            $sum += $nums[$j];\n            if ($sum < $min) {\n  \
    \              $min = $sum;\n            }\n        }\n        $sum = 0;\n   \
    \ }\n    return $min;\n}\n", "    if (empty($nums)) {\n        return 0;\n   \
    \ }\n    $min_sum = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min_sum = min($min_sum, $sum);\n\
    \        if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $min_sum;\n}", "    if (empty($nums)) return null;\n    $min = $nums[0];\n \
    \   $sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $sum\
    \ += $nums[$i];\n        if ($sum < $min) {\n            $min = $sum;\n      \
    \  }\n        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1,\
    \ -2, -3)) . PHP_EOL;", "    if (!$nums) {\n        return 0;\n    }\n    $min\
    \ = $currentMin = INF;\n    $sum = 0;\n    foreach ($nums as $n) {\n        $sum\
    \ += $n;\n        $currentMin = min($sum, $currentMin);\n        $min = min($min,\
    \ $sum - $currentMin);\n    }\n    return $min;\n}", "    $currentSum = $minSum\
    \ = 0;\n    $numsLength = count($nums);\n    for ($i = 0; $i < $numsLength; $i++)\
    \ {\n        $currentSum += $nums[$i];\n        if ($i === 0 || $currentSum <\
    \ $minSum) {\n            $minSum = $currentSum;\n        }\n        if ($currentSum\
    \ > 0) {\n            $currentSum = 0;\n        }\n    }\n    return $minSum;\n\
    }", "  $minSum = 0;\n  $currSum = 0;\n  for ($i = 0; $i < count($nums); $i++)\
    \ {\n    $currSum += $nums[$i];\n    if ($i == 0 || $currSum < $minSum) {\n  \
    \    $minSum = $currSum;\n    }\n    if ($currSum > 0) {\n      $currSum = 0;\n\
    \    }\n  }\n  return $minSum;\n}\n\nprint_r(minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL);\nprint_r(minSubArraySum(array(-1, -2, -3)) . PHP_EOL);",
  "    $sum = 0;\n    $min = $nums[0];\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n            $min\
    \ = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n       \
    \ }\n    }\n    return $min;\n}", "  $res = PHP_INT_MAX;\n  $sum = 0;\n  $start\
    \ = 0;\n  $end = 0;\n  while ($end < count($nums)) {\n    while ($sum <= 0 &&\
    \ $start < count($nums)) {\n      $sum += $nums[$start];\n      $start++;\n  \
    \  }\n    $res = min($res, $sum);\n    $sum -= $nums[$end];\n    $end++;\n  }\n\
    \  return $res;\n}\n\n$input = array(2, 3, 4, 1, 2, 4);\necho minSubArraySum($input);\n\
    echo PHP_EOL;", "    if (empty($nums)) {\n        return 0;\n    }\n    $min =\
    \ null;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum\
    \ += $nums[$i];\n        if ($min === null || $sum < $min) {\n            $min\
    \ = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n       \
    \ }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));",
  "  $len = count($nums);\n  if ($len < 1) {\n    return false;\n  }\n  $min = PHP_INT_MAX;\n\
    \  $currSum = 0;\n  for ($i = 0; $i < $len; $i++) {\n    $currSum += $nums[$i];\n\
    \    if ($currSum < $min) {\n      $min = $currSum;\n    }\n    if ($currSum >\
    \ 0) {\n      $currSum = 0;\n    }\n  }\n  return $min;\n}\n", "    $min = PHP_INT_MAX;\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        $min = min($min, $sum);\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $min;\n}\n\n$input0 = array(2, 3, 4, 1, 2,\
    \ 4);\n$expected0 = 1;\n$result0 = minSubArraySum($input0);\nassert($expected0\
    \ === $result0);\n\n$input1 = array(-1, -2, -3);\n$expected1 = -6;\n$result1 =\
    \ minSubArraySum($input1);\nassert($expected1 === $result1);\n\n$input2 = array(0,\
    \ 0, 0);\n$expected2 = 0;\n$result2 = minSubArraySum($input2);\nassert($expected2\
    \ === $result2);\n\necho \"All test passed. minSubArraySum works fine.\" . PHP_EOL;",
  "    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n        $minSum\
    \ = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;",
  "    $sum = 0;\n    $min = $nums[0];\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n            $min\
    \ = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n       \
    \ }\n    }\n    return $min;\n}", "    if (count($nums) === 0) {\n        return\
    \ 0;\n    }\n    $max = $nums[0];\n    $min = $nums[0];\n    $sum = $nums[0];\n\
    \    $minimumSum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n  \
    \      $sum += $nums[$i];\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n        if ($sum > $max) {\n            $max = $sum;\n        }\n\
    \        if ($minimumSum > $min) {\n            $minimumSum = $min;\n        }\n\
    \    }\n    if ($minimumSum < 0) {\n        $minimumSum = 0;\n    }\n    return\
    \ $minimumSum;\n}", "    $length = count($nums);\n    $min = $nums[0];\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $length; $i++) {\n        $sum += $nums[$i];\n \
    \       if ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));", "\tif (count($nums) === 0) {\n\t\treturn 0;\n\t}\n\t$minSum\
    \ = $nums[0];\n\t$currSum = $nums[0];\n\tfor ($i = 1; $i < count($nums); $i++)\
    \ {\n\t\t$currSum = max($nums[$i], $currSum + $nums[$i]);\n\t\t$minSum = min($minSum,\
    \ $currSum);\n\t}\n\treturn $minSum;\n}\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4));\necho minSubArraySum(array(-1, -2, -3));", "  if(count($nums) == 0)\
    \ return false;\n  $n = count($nums);\n  $min = $nums[0];\n  $sum = $nums[0];\n\
    \  for($i = 1; $i < $n; $i++) {\n    $sum = min($nums[$i], $sum + $nums[$i]);\n\
    \    $min = min($min, $sum);\n  }\n  return $min;\n}", "    $currSum = $minSum\
    \ = 0;\n    $len = count($nums);\n    for ($i = 0; $i < $len; $i++) {\n      \
    \  $currSum += $nums[$i];\n        if ($i === 0 || $currSum < $minSum) {\n   \
    \         $minSum = $currSum;\n        }\n        if ($currSum > 0) {\n      \
    \      $currSum = 0;\n        }\n    }\n    return $minSum;\n}\n", "    if (count($nums)\
    \ < 1) {\n        return 0;\n    }\n    $sum = $nums[0];\n    $min = $sum;\n \
    \   for ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n    \
    \    if ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}", "   \
    \ $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}", "   \
    \ $arr = [];\n    $total = 0;\n    $min = null;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $num = $nums[$i];\n        $total += $num;\n        $arr[]\
    \ = $total;\n        if ($i === 0) {\n            $min = $total;\n        } else\
    \ {\n            $min = min($min, $total);\n        }\n    }\n    if ($min >=\
    \ 0) {\n        return $min;\n    }\n    $result = null;\n    for ($i = count($arr)\
    \ - 1; $i >= 0; $i--) {\n        if ($arr[$i] > 0) {\n            $result = $arr[$i];\n\
    \            break;\n        }\n    }\n    if ($result === null) {\n        return\
    \ $min;\n    }\n    for ($i = 0; $i < count($arr); $i++) {\n        $num = $arr[$i];\n\
    \        if ($num >= 0) {\n            $result = min($result, $arr[$i] - $total);\n\
    \        }\n    }\n    return $result;\n}\n$nums = array(2, 3, 4, 1, 2, 4);\n\
    $nums = array(-1, -2, -3);\necho minSubArraySum($nums) . PHP_EOL;", "    $min\
    \ = $nums[0];\n    $curr = $nums[0];\n    for ($i = 1; $i < count($nums); $i++)\
    \ {\n        $curr = min($nums[$i], $curr + $nums[$i]);\n        $min = min($min,\
    \ $curr);\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;", "   \
    \ if (!$nums) {\n        return 0;\n    }\n    $minSum = $nums[0];\n    $curSum\
    \ = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $curSum =\
    \ min($nums[$i], $curSum + $nums[$i]);\n        $minSum = min($minSum, $curSum);\n\
    \    }\n    return $minSum;\n}\n", "    $minSum = PHP_INT_MAX;\n    $currentSum\
    \ = 0;\n    $len = count($nums);\n    for ($i = 0; $i < $len; $i++) {\n      \
    \  $currentSum += $nums[$i];\n        if ($currentSum < $minSum) {\n         \
    \   $minSum = $currentSum;\n        }\n        if ($currentSum > 0) {\n      \
    \      $currentSum = 0;\n        }\n    }\n    return $minSum;\n}\n", "    $minSum\
    \ = PHP_INT_MAX;\n    $currentSum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $currentSum += $nums[$i];\n        if ($currentSum < $minSum) {\n\
    \            $minSum = $currentSum;\n        }\n        if ($currentSum > 0) {\n\
    \            $currentSum = 0;\n        }\n    }\n    return $minSum;\n}\n", " \
    \   $i = 0;\n    $j = 0;\n    $min = 0;\n    $sum = 0;\n    $length = count($nums);\n\
    \    while ($i < $length) {\n        $sum += $nums[$i];\n        if ($sum < $min)\
    \ {\n            $min = $sum;\n        }\n        $i++;\n    }\n    return $min;\n\
    }\n", "    $n = count($nums);\n    $minSum = PHP_INT_MAX;\n    $minStart = 0;\n\
    \    $minEnd = 0;\n    $curSum = 0;\n    $curStart = 0;\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $curSum += $nums[$i];\n        if ($curSum < $minSum) {\n\
    \            $minSum = $curSum;\n            $minStart = $curStart;\n        \
    \    $minEnd = $i;\n        }\n        if ($curSum > 0) {\n            $curSum\
    \ = 0;\n            $curStart = $i + 1;\n        }\n    }\n    return $minSum;\n\
    }\n$nums = [2, 3, 4, 1, 2, 4];\necho minSubArraySum($nums) . PHP_EOL;\n$nums =\
    \ [-1, -2, -3];\necho minSubArraySum($nums) . PHP_EOL;", "    $minSum = null;\n\
    \    $currentSum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $currentSum\
    \ += $nums[$i];\n        if (is_null($minSum) || $currentSum < $minSum) {\n  \
    \          $minSum = $currentSum;\n        }\n        if ($currentSum > 0) {\n\
    \            $currentSum = 0;\n        }\n    }\n    return $minSum;\n}\n", " \
    \   if (empty($nums)) return 0;\n    $min = 0;\n    $subMin = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $subMin += $nums[$i];\n        if ($subMin\
    \ < $min) {\n            $min = $subMin;\n        }\n        if ($subMin > 0)\
    \ {\n            $subMin = 0;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;",
  "    if (!$nums) {\n        return 0;\n    }\n    $ans = $nums[0];\n    $sum = 0;\n\
    \    foreach ($nums as $n) {\n        $sum += $n;\n        $ans = min($ans, $sum);\n\
    \        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $ans;\n}\n", "    $min = $nums[0];\n    $total = $nums[0];\n    for ($i = 1;\
    \ $i < count($nums); $i++) {\n        $total += $nums[$i];\n        if ($total\
    \ < $min) {\n            $min = $total;\n        }\n    }\n    return $min;\n\
    }\n", "    $cursum = $nums[0];\n    $minsum = $nums[0];\n    $minpos = 0;\n  \
    \  $minposend = 0;\n    $numslen = count($nums);\n    for ($i = 1; $i < $numslen;\
    \ $i++) {\n        if ($cursum < 0) {\n            $cursum = $nums[$i];\n    \
    \        $minpos = $i;\n        } else {\n            $cursum += $nums[$i];\n\
    \        }\n        if ($cursum < $minsum) {\n            $minsum = $cursum;\n\
    \            $minposend = $i;\n        }\n    }\n    return \"$minsum:$minpos:$minposend\"\
    ;\n}\n", "    if (empty($nums)) {\n        return 0;\n    }\n    $globalMin =\
    \ INF;\n    $localMin = 0;\n    foreach ($nums as $value) {\n        $localMin\
    \ = min($localMin + $value, $value);\n        $globalMin = min($globalMin, $localMin);\n\
    \    }\n    return $globalMin;\n}", "    if (empty($nums)) {\n        return false;\n\
    \    }\n    $min_sum = $nums[0];\n    $curr_sum = $nums[0];\n    for ($i = 1;\
    \ $i < count($nums); $i++) {\n        $curr_sum = max($nums[$i], $curr_sum + $nums[$i]);\n\
    \        $min_sum = min($min_sum, $curr_sum);\n    }\n    return $min_sum;\n}\n",
  "    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum < 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho \"minSubArraySum(array(2, 3, 4, 1,\
    \ 2, 4))\\n\";\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho \"\\n\";\n\
    echo \"minSubArraySum(array(-1, -2, -3))\\n\";\necho minSubArraySum(array(-1,\
    \ -2, -3));\necho \"\\n\";", "    $minSum = $nums[0];\n    $currSum = $nums[0];\n\
    \    $total = count($nums);\n    for ($i = 1; $i < $total; $i++) {\n        $currSum\
    \ = min($nums[$i], $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n\
    \    }\n    return $minSum;\n}", "    $cnt = count($nums);\n    if ($cnt < 1)\
    \ {\n        return 0;\n    }\n    $sum = $minSum = $nums[0];\n    for ($i = 1;\
    \ $i < $cnt; $i++) {\n        $sum = min($nums[$i], $sum + $nums[$i]);\n     \
    \   $minSum = min($minSum, $sum);\n    }\n    return $minSum;\n}", "    if (count($nums)\
    \ === 0) {\n        return 0;\n    }\n    $min = 0;\n    $current = 0;\n    foreach\
    \ ($nums as $num) {\n        $current += $num;\n        if ($current < $min) {\n\
    \            $min = $current;\n        }\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)).PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)).PHP_EOL;",
  "    $min = $nums[0];\n    $current = $nums[0];\n    $len = count($nums);\n    for\
    \ ($i = 1; $i < $len; $i++) {\n        $current = min($nums[$i], $current + $nums[$i]);\n\
    \        $min = min($min, $current);\n    }\n    return $min;\n}\n\n$nums = array(2,\
    \ 3, 4, 1, 2, 4);\necho minSubArraySum($nums);\necho PHP_EOL;\n$nums = array(-1,\
    \ -2, -3);\necho minSubArraySum($nums);\necho PHP_EOL;", "    $p = 0;\n    $q\
    \ = 0;\n    $min = INF;\n    $sum = 0;\n    $len = count($nums);\n    while ($q\
    \ < $len) {\n        $sum += $nums[$q];\n        while ($sum >= 0) {\n       \
    \     $min = min($min, $sum);\n            $sum -= $nums[$p];\n            $p++;\n\
    \        }\n        $q++;\n    }\n    return $min;\n}", "    $min = $nums[0];\n\
    \    $sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $sum\
    \ += $nums[$i];\n        if ($sum < $min) {\n            $min = $sum;\n      \
    \  }\n        if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL; // 1\necho\
    \ minSubArraySum(array(-1, -2, -3)) . PHP_EOL; // -6", "    $min = NULL;\n   \
    \ for ($i = 0; $i < count($nums); $i++) {\n        for ($j = 0; $j < count($nums);\
    \ $j++) {\n            $range = array_slice($nums, $i, $j - $i + 1);\n       \
    \     $sum = array_sum($range);\n            if ($min === NULL || $sum < $min)\
    \ {\n                $min = $sum;\n            }\n        }\n    }\n    return\
    \ $min;\n}", "    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($right = 0, $left\
    \ = 0; $right < count($nums); $right++) {\n        $sum += $nums[$right];\n  \
    \      if ($sum <= $min) {\n            $min = $sum;\n        }\n        while\
    \ ($sum > $min) {\n            $sum -= $nums[$left];\n            $left++;\n \
    \       }\n    }\n    return $min;\n}\n\n$input1 = array(2, 3, 4, 1, 2, 4);\n\
    $input2 = array(-1, -2, -3);\necho minSubArraySum($input1) . PHP_EOL;\necho minSubArraySum($input2)\
    \ . PHP_EOL;", "    $min = PHP_INT_MAX;\n    $len = count($nums);\n    for ($i\
    \ = 0; $i < $len; $i++) {\n        $sum = 0;\n        for ($j = $i; $j < $len;\
    \ $j++) {\n            $sum += $nums[$j];\n            if ($sum < $min) {\n  \
    \              $min = $sum;\n            }\n        }\n    }\n    return $min;\n\
    }\n", "    $length = count($nums);\n    $left = 0;\n    $minSum = $nums[0];\n\
    \    $currentSum = 0;\n    for ($i = 0; $i < $length; $i++) {\n        $currentSum\
    \ += $nums[$i];\n        if ($currentSum < $minSum) {\n            $minSum = $currentSum;\n\
    \        }\n        if ($currentSum > 0) {\n            $currentSum = 0;\n   \
    \     }\n    }\n    return $minSum;\n}\n", "    $minSum = array_sum($nums);\n\
    \    $currentSum = 0;\n    $start = 0;\n    $end = 0;\n    while($end < count($nums))\
    \ {\n        $currentSum += $nums[$end];\n        if($currentSum < $minSum) {\n\
    \            $minSum = $currentSum;\n        }\n        if($currentSum > 0) {\n\
    \            $currentSum = 0;\n            $start = $end + 1;\n        }\n   \
    \     $end++;\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1, -2, -3));", "  \
    \  $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n    $startIndex = 0;\n    for\
    \ ($i = 0; $i < count($nums); $i++) {\n        $currentSum += $nums[$i];\n   \
    \     if ($currentSum < $minSum) {\n            $minSum = $currentSum;\n     \
    \   }\n        if ($currentSum > 0) {\n            $currentSum = 0;\n        \
    \    $startIndex = $i + 1;\n        }\n    }\n    return $minSum;\n}\n\nclass\
    \ MinSubArraySumTest extends TestCase {\n    public function testMinSubArraySum()\
    \ {\n        $this->assertEquals(1, minSubArraySum(array(2, 3, 4, 1, 2, 4)));\n\
    \        $this->assertEquals(-6, minSubArraySum(array(-1, -2, -3)));\n    }\n}",
  "    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n        if ($sum\
    \ > 0) $sum = 0;\n    }\n    return $min;\n}", "    $minSum = $nums[0];\n    $currSum\
    \ = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $currSum =\
    \ min($nums[$i], $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n\
    \    }\n    return $minSum;\n}\n", "  $length = count($nums);\n  $minSum = $nums[0];\n\
    \  $start = 0;\n  $sum = 0;\n  for ($i = 0; $i < $length; $i++) {\n    $sum +=\
    \ $nums[$i];\n    if ($sum < $minSum) {\n      $minSum = $sum;\n    }\n    if\
    \ ($sum > 0) {\n      $sum = 0;\n    }\n  }\n  return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\necho PHP_EOL;\necho minSubArraySum(array(-1, -2, -3));\necho\
    \ PHP_EOL;", "    if (empty($nums)) {\n        return 0;\n    }\n    $minSum =\
    \ PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n \
    \       $sum += $nums[$i];\n        $minSum = min($minSum, $sum);\n        if\
    \ ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n\
    }\n", "    $n = count($nums);\n    $min = $nums[0];\n    $sum = $nums[0];\n  \
    \  for ($i = 1; $i < $n; $i++) {\n        $sum = $sum < 0 ? $nums[$i] : $sum +\
    \ $nums[$i];\n        $min = min($min, $sum);\n    }\n    return $min;\n}\n",
  "    $len = count($nums);\n    if ($len === 0) {\n        return 0;\n    }\n   \
    \ $minSum = $curSum = $nums[0];\n    for ($i = 1; $i < $len; $i++) {\n       \
    \ $curSum = min($curSum + $nums[$i], $nums[$i]);\n        $minSum = min($minSum,\
    \ $curSum);\n    }\n    return $minSum;\n}", "    $min = PHP_INT_MAX;\n    $sum\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        $min = min($min, $sum);\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4));", "    if(count($nums) === 0) return 0;\n    if(count($nums) ===\
    \ 1) return $nums[0];\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if($sum < $min)\
    \ {\n            $min = $sum;\n        }\n        if($sum > 0) {\n           \
    \ $sum = 0;\n        }\n    }\n    return $min;\n}\n$nums = array(2, 3, 4, 1,\
    \ 2, 4);\necho minSubArraySum($nums);", "    if (empty($nums)) {\n        return\
    \ 0;\n    }\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min)\
    \ {\n            $min = $sum;\n        }\n        if ($sum > 0) {\n          \
    \  $sum = 0;\n        }\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)).PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)).PHP_EOL;",
  "    $minSum = 0;\n    $currentSum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $currentSum += $nums[$i];\n        if ($currentSum < $minSum) {\n\
    \            $minSum = $currentSum;\n        }\n        if ($currentSum > 0) {\n\
    \            $currentSum = 0;\n        }\n    }\n    return $minSum;\n}\n", " \
    \ $min = $nums[0];\n  $sum = $nums[0];\n  for ($i = 1; $i < count($nums); $i++)\
    \ {\n    $sum = min($nums[$i], $sum + $nums[$i]);\n    $min = min($min, $sum);\n\
    \  }\n  return $min;\n}", "    $min = INF;\n    $n = count($nums);\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $sum = 0;\n        for ($j = $i; $j < $n; $j++)\
    \ {\n            $sum += $nums[$j];\n            $min = min($min, $sum);\n   \
    \     }\n    }\n    return $min;\n}", "    $sum = PHP_INT_MAX;\n    $maxSum =\
    \ 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $maxSum += $nums[$i];\n\
    \        if ($maxSum < $sum) {\n            $sum = $maxSum;\n        }\n     \
    \   if ($maxSum > 0) {\n            $maxSum = 0;\n        }\n    }\n    return\
    \ $sum;\n}", "    $min_sum = $nums[0];\n    $sum = 0;\n    foreach ($nums as $num)\
    \ {\n        $sum += $num;\n        $min_sum = min($min_sum, $sum);\n        if\
    \ ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return $min_sum;\n\
    }\n\nif (require(__DIR__ . \"/util/cli.php\")) {\n    $nums = array_map(function\
    \ ($num) {\n        return (int)$num;\n    }, $argv);\n    array_shift($nums);\n\
    \    echo minSubArraySum($nums) . PHP_EOL;\n}", "    $min_sum = $nums[0];\n  \
    \  $curr_sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n      \
    \  $curr_sum = min($nums[$i], $curr_sum + $nums[$i]);\n        $min_sum = min($min_sum,\
    \ $curr_sum);\n    }\n    return $min_sum;\n}", "  $best = INF;\n  $curr = 0;\n\
    \  for ($i = 0; $i < count($nums); $i++) {\n    $curr += $nums[$i];\n    $best\
    \ = min($best, $curr);\n    $curr = max($curr, 0);\n  }\n  return $best;\n}\n",
  "    $min = $nums[0];\n    $sum = $nums[0];\n    $len = count($nums);\n    for ($i\
    \ = 1; $i < $len; $i++) {\n        $sum = $sum + $nums[$i];\n        if ($sum\
    \ < $min) {\n            $min = $sum;\n        }\n    }\n    return $min;\n}\n",
  "    if (empty($nums)) {\n        return null;\n    }\n    $minSoFar = $nums[0];\n\
    \    $minEndingHere = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n\
    \        $minEndingHere = min($nums[$i], $minEndingHere + $nums[$i]);\n      \
    \  $minSoFar = min($minSoFar, $minEndingHere);\n    }\n    return $minSoFar;\n\
    }\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1,\
    \ -2, -3));", "    if (empty($nums)) {\n        return 0;\n    }\n    $minSum\
    \ = $nums[0];\n    $sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++)\
    \ {\n        $sum = min($nums[$i], $sum + $nums[$i]);\n        $minSum = min($minSum,\
    \ $sum);\n    }\n    return $minSum;\n}", "  if (count($nums) === 0) {\n    return\
    \ 0;\n  }\n  $min = $nums[0];\n  $sum = $nums[0];\n  for ($i = 1; $i < count($nums);\
    \ $i++) {\n    $sum = min($sum + $nums[$i], $nums[$i]);\n    $min = min($min,\
    \ $sum);\n  }\n  return $min;\n}\n\nprint_r(minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4)) . PHP_EOL);\nprint_r(minSubArraySum(array(-1, -2, -3)) . PHP_EOL);", " \
    \   $minSum = 0;\n    $minTemp = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $minTemp += $nums[$i];\n        if ($minTemp < $minSum) {\n     \
    \       $minSum = $minTemp;\n        }\n        if ($minTemp > 0) {\n        \
    \    $minTemp = 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;",
  "\t$currentSum = 0;\n\t$minSum = PHP_INT_MAX;\n\t$size = count($nums);\n\t$startIndex\
    \ = 0;\n\t$endIndex = 0;\n\tfor ($i = 0; $i < $size; $i++) {\n\t\t$currentSum\
    \ += $nums[$i];\n\t\tif ($currentSum < $minSum) {\n\t\t\t$minSum = $currentSum;\n\
    \t\t\t$endIndex = $i;\n\t\t}\n\t\tif ($currentSum > 0) {\n\t\t\t$currentSum =\
    \ 0;\n\t\t\t$startIndex = $i + 1;\n\t\t}\n\t}\n\treturn $minSum;\n}\n", "\t$minSum\
    \ = null;\n\t$subArraySum = null;\n\t$subArrayStart = 0;\n\t$subArrayEnd = 0;\n\
    \tfor ($subArrayEnd = 0; $subArrayEnd < count($nums); $subArrayEnd++) {\n\t\t\
    $subArraySum += $nums[$subArrayEnd];\n\t\tif ($subArraySum < $minSum || $minSum\
    \ === null) {\n\t\t\t$minSum = $subArraySum;\n\t\t}\n\t\tif ($subArraySum >= 0)\
    \ {\n\t\t\twhile ($subArraySum >= 0) {\n\t\t\t\t$subArraySum -= $nums[$subArrayStart];\n\
    \t\t\t\t$subArrayStart++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $minSum;\n}", "    $min_sum\
    \ = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n\
    \        $sum += $nums[$i];\n        if ($sum < $min_sum) {\n            $min_sum\
    \ = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n       \
    \ }\n    }\n    return $min_sum;\n}\n", "    $bestSum = $nums[0];\n    $minSum\
    \ = $nums[0];\n    $numLength = count($nums);\n    for ($i = 1; $i < $numLength;\
    \ $i++) {\n        $bestSum = max($nums[$i], $bestSum + $nums[$i]);\n        $minSum\
    \ = min($bestSum, $minSum);\n    }\n    return $minSum;\n}\n", "    $sum = 0;\n\
    \    $min = PHP_INT_MAX;\n    $length = count($nums);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\n/**\n * DP solution.\n * Time: O(n)\n\
    \ * Space: O(1)\n */", "  $n = count($nums);\n  $min = INF;\n  $sum = 0;\n  for\
    \ ($i = 0; $i < $n; $i++) {\n    $sum += $nums[$i];\n    $min = min($min, $sum);\n\
    \    if ($sum > 0) {\n      $sum = 0;\n    }\n  }\n  return $min;\n}", "    $min\
    \ = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n\
    \        if ($sum > 0) {\n            $sum = $nums[$i];\n        } else {\n  \
    \          $sum += $nums[$i];\n        }\n        $min = min($min, $sum);\n  \
    \  }\n    return $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho\
    \ PHP_EOL;\necho minSubArraySum(array(-1, -2, -3));\necho PHP_EOL;", "    $min\
    \ = INF;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n       \
    \ $sum += $nums[$i];\n        $min = min($min, $sum);\n        if ($sum > 0) {\n\
    \            $sum = 0;\n        }\n    }\n    return $min;\n}\n$arr1 = array(2,\
    \ 3, 4, 1, 2, 4);\n$arr2 = array(-1, -2, -3);\nprint minSubArraySum($arr1).\"\\\
    n\";\nprint minSubArraySum($arr2).\"\\n\";", "    $n = count($nums);\n    $max_sum\
    \ = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum\
    \ += $nums[$i];\n        if ($sum < $max_sum) {\n            $max_sum = $sum;\n\
    \        }\n        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n\
    \    return $max_sum;\n}\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\n\
    echo minSubArraySum(array(-1, -2, -3)) . PHP_EOL;", "    $res = $nums[0];\n  \
    \  $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n        $res\
    \ = min($res, $sum);\n        $sum = max($sum, 0);\n    }\n    return $res;\n\
    }\n\n$res = minSubArraySum(array(2, 3, 4, 1, 2, 4));\nvar_dump($res);\n$res =\
    \ minSubArraySum(array(-1, -2, -3));\nvar_dump($res);", "    if (count($nums)\
    \ === 0) {\n        return 0;\n    }\n    $minSum = $nums[0];\n    $sum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $sum = min($nums[$i], $sum\
    \ + $nums[$i]);\n        $minSum = min($minSum, $sum);\n    }\n    return $minSum;\n\
    }", "    if (count($nums) < 1) {\n        return 0;\n    }\n    $minSum = $nums[0];\n\
    \    $currentSum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n  \
    \      $currentSum = min($currentSum + $nums[$i], $nums[$i]);\n        $minSum\
    \ = min($minSum, $currentSum);\n    }\n    return $minSum;\n}\n", "  $min = $nums[0];\n\
    \  $max = $nums[0];\n  $sum = $nums[0];\n  $len = count($nums);\n  for ($i = 1;\
    \ $i < $len; $i++) {\n    $sum += $nums[$i];\n    if ($sum < $min) {\n      $min\
    \ = $sum;\n    }\n    if ($sum > $max) {\n      $max = $sum;\n    }\n  }\n  $prefix_sum\
    \ = array_fill(0, $len, 0);\n  $prefix_sum[0] = $nums[0];\n  for ($i = 1; $i <\
    \ $len; $i++) {\n    $prefix_sum[$i] = $prefix_sum[$i - 1] + $nums[$i];\n  }\n\
    \  $max_index = $len - 1;\n  for ($i = $len - 2; $i >= 0; $i--) {\n    if ($prefix_sum[$i]\
    \ <= $min) {\n      $min = $prefix_sum[$i];\n      $max_index = $i;\n    }\n \
    \ }\n  $min_subarray_sum = $max - $min;\n  if ($max_index == $len - 1) {\n   \
    \ $max_subarray_sum = $max;\n  } else {\n    $max_subarray_sum = $max - $prefix_sum[$max_index];\n\
    \  }\n  return $min_subarray_sum + $max_subarray_sum;\n}\n\nprint_r(minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)));\nprint_r(minSubArraySum(array(-1, -2, -3)));", "    $n = count($nums);\n\
    \    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n \
    \       if ($sum < 0) {\n            $sum = $nums[$i];\n        } else {\n   \
    \         $sum += $nums[$i];\n        }\n        $min = min($min, $sum);\n   \
    \ }\n    return $min;\n}\n", "    $sum = 0;\n    $min = null;\n    $len = count($nums);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $sum += $nums[$i];\n        if ($min\
    \ === null || $sum < $min) {\n            $min = $sum;\n        }\n        if\
    \ ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n",
  "    if (sizeof($nums) < 1) return 0;\n    $min = $nums[0];\n    $sum = $nums[0];\n\
    \    for ($i = 1; $i < sizeof($nums); $i++) {\n        $sum += $nums[$i];\n  \
    \      if ($sum < $min) $min = $sum;\n        if ($sum > 0) $sum = 0;\n    }\n\
    \    return $min;\n}\n$result = minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho\
    \ $result . PHP_EOL;", "  $minimum = null;\n  $sum = 0;\n  $length = count($nums);\n\
    \  for ($i = 0; $i < $length; $i++) {\n    for ($j = $i; $j < $length; $j++) {\n\
    \      $sum += $nums[$j];\n      if ($minimum === null || $sum < $minimum) {\n\
    \        $minimum = $sum;\n      }\n    }\n    $sum = 0;\n  }\n  return $minimum;\n\
    }\n", "    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\necho\
    \ minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2,\
    \ -3));", "    $min = PHP_INT_MAX;\n    $sum = 0;\n    $left = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min =\
    \ min($min, $sum - $left);\n        $left = min($left, $sum);\n    }\n    return\
    \ $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1,\
    \ -2, -3)) . PHP_EOL;", "  if (empty($nums)) {\n    return 0;\n  }\n  $min = $sum\
    \ = 0;\n  $minSum = PHP_INT_MAX;\n  for ($i = 0; $i < count($nums); $i++) {\n\
    \    $sum += $nums[$i];\n    if ($sum - $min < $minSum) {\n      $minSum = $sum\
    \ - $min;\n    }\n    if ($sum < $min) {\n      $min = $sum;\n    }\n  }\n  return\
    \ $minSum;\n}\n\n$input = array(2, 3, 4, 1, 2, 4);\n$result = minSubArraySum($input);\n\
    echo $result;", "    if (empty($nums)) {\n        return 0;\n    }\n    $min_sum\
    \ = $nums[0];\n    $current_sum = $nums[0];\n    $size = count($nums);\n    for\
    \ ($i = 1; $i < $size; $i++) {\n        $current_sum = min($nums[$i], $current_sum\
    \ + $nums[$i]);\n        $min_sum = min($min_sum, $current_sum);\n    }\n    return\
    \ $min_sum;\n}\necho 'Min: '.minSubArraySum(array(2, 3, 4, 1, 2, 4)).PHP_EOL;\n\
    echo 'Min: '.minSubArraySum(array(-1, -2, -3)).PHP_EOL;", "    $min = null;\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        if ($min === null || $sum < $min) {\n            $min = $sum;\n     \
    \   }\n        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $min;\n}", "    $min = PHP_INT_MAX;\n    $sum = 0;\n    $i = 0;\n    while ($i\
    \ < count($nums)) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n\
    \            $min = $sum;\n        }\n        $i++;\n    }\n    return $min;\n\
    }\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1,\
    \ -2, -3)) . PHP_EOL;", "    $i = 0;\n    $j = 0;\n    $min = PHP_INT_MAX;\n \
    \   $tmp = 0;\n    $len = count($nums);\n    for ($i = 0; $i < $len; $i++) {\n\
    \        if ($tmp < 0) {\n            $tmp = 0;\n        }\n        $tmp += $nums[$i];\n\
    \        $min = min($min, $tmp);\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;",
  "    $result = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        if ($nums[$i] >= $result) {\n            continue;\n      \
    \  }\n        $sum = $nums[$i];\n        for ($j = $i + 1; $j < count($nums);\
    \ $j++) {\n            $sum += $nums[$j];\n            if ($sum < $result) {\n\
    \                $result = $sum;\n            }\n        }\n    }\n    return\
    \ $result;\n}", "    $minSum = $currentSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currentSum = min($currentSum + $nums[$i], $nums[$i]);\n\
    \        $minSum = min($minSum, $currentSum);\n    }\n    return $minSum;\n}\n\
    \n$tests = array(\n    array(2, 3, 4, 1, 2, 4),\n    array(-1, -2, -3),\n);\n\n\
    foreach ($tests as $test) {\n    echo minSubArraySum($test) . PHP_EOL;\n}", " \
    \ if (count($nums) == 0) {\n    return null;\n  }\n  $min = $nums[0];\n  $current\
    \ = $nums[0];\n  for ($i = 1; $i < count($nums); $i++) {\n    $current = max($nums[$i],\
    \ $current + $nums[$i]);\n    $min = min($min, $current);\n  }\n  return $min;\n\
    }\n\n$res = minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho $res . PHP_EOL;\n$res\
    \ = minSubArraySum(array(-1, -2, -3));\necho $res . PHP_EOL;", "    $sum = 0;\n\
    \    $min = PHP_INT_MAX;\n    $size = count($nums);\n    for ($i = 0; $i < $size;\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;", "    $minSum\
    \ = array_sum($nums);\n    $length = count($nums);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $j = $i;\n        $sum = 0;\n        while ($j < $length) {\n\
    \            $sum += $nums[$j];\n            if ($sum < $minSum) {\n         \
    \       $minSum = $sum;\n            }\n            $j++;\n        }\n    }\n\
    \    return $minSum;\n}\n", "    if (!is_array($nums) || empty($nums)) {\n   \
    \     return 0;\n    }\n    $min = $nums[0];\n    $sum = $nums[0];\n    for ($i\
    \ = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0) {\n  \
    \          $sum = 0;\n        }\n    }\n    return $min;\n}\n", "    $min = $nums[0];\n\
    \    $sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $sum\
    \ += $nums[$i];\n        if ($sum < $min) {\n            $min = $sum;\n      \
    \  }\n        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $min;\n}\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL; // 1\necho\
    \ minSubArraySum(array(-1, -2, -3)) . PHP_EOL; // -6", "\tif(empty($nums)) return\
    \ 0;\n\tif(count($nums) == 1) return $nums[0];\n\t$min = $nums[0];\n\t$curSum\
    \ = $nums[0];\n\tfor($i = 1; $i < count($nums); $i++) {\n\t\t$curSum = min($curSum+$nums[$i],\
    \ $nums[$i]);\n\t\t$min = min($min, $curSum);\n\t}\n\treturn $min;\n}", "    $n\
    \ = count($nums);\n    $start = 0;\n    $end = 0;\n    $sum = 0;\n    $minSum\
    \ = PHP_INT_MAX;\n    while ($end < $n) {\n        $sum += $nums[$end];\n    \
    \    while ($sum >= 0) {\n            $minSum = min($minSum, $sum);\n        \
    \    $sum -= $nums[$start];\n            $start++;\n        }\n        $end++;\n\
    \    }\n    return $minSum;\n}", "    $len = count($nums);\n    if ($len == 0)\
    \ return 0;\n    $sum = $nums[0];\n    $tmp = $nums[0];\n    for ($i = 1; $i <\
    \ $len; $i++) {\n        $tmp = max($nums[$i], $tmp + $nums[$i]);\n        $sum\
    \ = min($sum, $tmp);\n    }\n    return $sum;\n}\n", "    if (count($nums) ===\
    \ 0) {\n        return 0;\n    }\n    $minSum = $nums[0];\n    $runningSum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $runningSum = max($nums[$i],\
    \ $runningSum + $nums[$i]);\n        $minSum = min($minSum, $runningSum);\n  \
    \  }\n    return $minSum;\n}", "    $sum = $min = PHP_INT_MAX;\n    $cnt = 0;\n\
    \    foreach ($nums as $n) {\n        $sum += $n;\n        if ($sum > 0) {\n \
    \           $sum = 0;\n            $cnt = 0;\n        } elseif ($sum == 0) {\n\
    \            $cnt++;\n        } else {\n            $min = min($min, $sum);\n\
    \        }\n    }\n    if ($cnt > 0) {\n        return 0;\n    }\n    return $min;\n\
    }", "    $minSum = INF;\n    $currSum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currSum += $nums[$i];\n        $minSum = min($minSum, $currSum);\n\
    \        if ($currSum > 0) {\n            $currSum = 0;\n        }\n    }\n  \
    \  return $minSum;\n}", "  $min = min($nums);\n  $min_sub = $min;\n  for ($i =\
    \ 0; $i < count($nums); $i++) {\n    $sub = 0;\n    for ($j = $i; $j < count($nums);\
    \ $j++) {\n      $sub += $nums[$j];\n      if ($sub < $min_sub) {\n        $min_sub\
    \ = $sub;\n      }\n    }\n  }\n  return $min_sub;\n}\n\n$cases = [\n  'array(2,\
    \ 3, 4, 1, 2, 4)' => 1,\n  'array(-1, -2, -3)' => -6,\n  'array(1, 1, -1, -1)'\
    \ => -1,\n  'array(0, 0, 0, 0)' => 0,\n  'array(1, 1, 1, -1)' => 0,\n  'array(1,\
    \ 2, 3, 4, -10)' => -10,\n  'array(1, 2, 4, 2, 5, 1, 5, 8)' => 1,\n  'array(1,\
    \ -1, -2, 2)' => -3,\n  'array(2, 1, 3, 4, 1)' => 1,\n  'array(3, -4, 2, -3, -1,\
    \ 7, -5)' => -6,\n  'array(-2, -3, 4, -1, -2, 1, 5, -3)' => -6,\n];\n\nforeach\
    \ ($cases as $k => $v) {\n  if (minSubArraySum(eval(\"return $k;\")) == $v) {\n\
    \    echo 'PASS';\n  } else {\n    echo 'FAIL';\n  }\n  echo PHP_EOL;\n}", " \
    \   if (count($nums) === 0) {\n        return 0;\n    }\n    $min = INF;\n   \
    \ $currentSum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $currentSum\
    \ += $nums[$i];\n        $min = min($min, $currentSum);\n        if ($currentSum\
    \ > 0) {\n            $currentSum = 0;\n        }\n    }\n    return $min;\n}",
  "    $currSum = 0;\n    $minSum = $nums[0];\n    foreach ($nums as $n) {\n     \
    \   $currSum += $n;\n        if ($currSum < $minSum) {\n            $minSum =\
    \ $currSum;\n        }\n        if ($currSum > 0) {\n            $currSum = 0;\n\
    \        }\n    }\n    return $minSum;\n}", "  $minSum = 0;\n  $minSoFar = PHP_INT_MAX;\n\
    \  foreach ($nums as $num) {\n    $minSum += $num;\n    $minSoFar = min($minSoFar,\
    \ $minSum);\n    $minSum = max($minSum, 0);\n  }\n  return $minSoFar;\n}\n", " \
    \   $arr_sum = array_sum($nums);\n    $min_sum = $arr_sum;\n    $temp_sum = 0;\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        for ($j = $i; $j < count($nums);\
    \ $j++) {\n            $temp_sum += $nums[$j];\n            if ($temp_sum < $min_sum)\
    \ {\n                $min_sum = $temp_sum;\n            }\n        }\n       \
    \ $temp_sum = 0;\n    }\n    return $min_sum;\n}\n", "    $numLen = count($nums);\n\
    \    $minSum = PHP_INT_MAX;\n    $curSum = 0;\n    for ($i = 0; $i < $numLen;\
    \ $i++) {\n        $curSum += $nums[$i];\n        if ($curSum < $minSum) {\n \
    \           $minSum = $curSum;\n        }\n        if ($curSum > 0) {\n      \
    \      $curSum = 0;\n        }\n    }\n    return $minSum;\n}\n", "  $min = $nums[0];\n\
    \  $sum = $nums[0];\n  for ($i = 1; $i < count($nums); $i++) {\n    $sum = max($nums[$i],\
    \ $sum + $nums[$i]);\n    $min = min($min, $sum);\n  }\n  return $min;\n}\n\n\
    print_r(minSubArraySum(array(2, 3, 4, 1, 2, 4)));\nprint_r(minSubArraySum(array(-1,\
    \ -2, -3)));", "    if (count($nums) == 0) {\n        return null;\n    }\n  \
    \  $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n        $minSum\
    \ = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n", "    $min = PHP_INT_MAX;\n\
    \    $currentSum = 0;\n    $numsLen = count($nums);\n    $low = 0;\n    $high\
    \ = 0;\n    while ($high < $numsLen) {\n        $currentSum += $nums[$high];\n\
    \        if ($currentSum < $min) {\n            $min = $currentSum;\n        }\n\
    \        if ($currentSum > 0) {\n            $currentSum = 0;\n            $low\
    \ = $high + 1;\n        }\n        $high++;\n    }\n    return $min;\n}\n\n$nums\
    \ = [2, 3, 4, 1, 2, 4];\necho minSubArraySum($nums);\necho \"\\n\";\n$nums = [-1,\
    \ -2, -3];\necho minSubArraySum($nums);\necho \"\\n\";", "    if (empty($nums))\
    \ {\n        return null;\n    }\n    $curr = $min = $nums[0];\n    for ($i =\
    \ 1; $i < count($nums); $i++) {\n        $curr = min($nums[$i], $curr + $nums[$i]);\n\
    \        $min = min($min, $curr);\n    }\n    return $min;\n}", "    $min = $sum\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        if ($i == 0 || $sum < $min) {\n            $min = $sum;\n        }\n\
    \        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $min;\n}", "    $min_sum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min_sum) {\n      \
    \      $min_sum = $sum;\n        }\n        if ($sum > 0) {\n            $sum\
    \ = 0;\n        }\n    }\n    return $min_sum;\n}\n\nvar_dump(minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)));\necho PHP_EOL;\nvar_dump(minSubArraySum(array(-1, -2, -3)));\n\
    echo PHP_EOL;", "  $n = count($nums);\n  $minSofar = PHP_INT_MAX;\n  $minEndingHere\
    \ = 0;\n  for ($i = 0; $i < $n; $i++) {\n    $minEndingHere = min($minEndingHere\
    \ + $nums[$i], $nums[$i]);\n    $minSofar = min($minSofar, $minEndingHere);\n\
    \  }\n  return $minSofar;\n}\n\n$inputArray = array(2, 3, 4, 1, 2, 4);\necho minSubArraySum($inputArray);",
  "    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\nprint_r(minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL);\nprint_r(minSubArraySum(array(-1, -2, -3)) . PHP_EOL);",
  "    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    $start = 0;\n    $end\
    \ = 0;\n    while ($end < count($nums)) {\n        if ($currentSum > 0) {\n  \
    \          $currentSum = $nums[$end];\n            $start = $end;\n        } else\
    \ {\n            $currentSum += $nums[$end];\n        }\n        if ($currentSum\
    \ < $minSum) {\n            $minSum = $currentSum;\n        }\n        $end++;\n\
    \    }\n    return $minSum;\n}\n", "    $n = count($nums);\n    $min = $nums[0];\n\
    \    $sum = $nums[0];\n    for ($i = 1; $i < $n; $i++) {\n        $sum = $sum\
    \ + $nums[$i];\n        if ($sum < $min) {\n            $min = $sum;\n       \
    \ }\n    }\n    return $min;\n}\n", "    $min_sum = PHP_INT_MAX;\n    $curr_sum\
    \ = 0;\n    $start = 0;\n    $end = 0;\n    while($end < count($nums)) {\n   \
    \     $curr_sum += $nums[$end];\n        while($curr_sum > 0) {\n            $min_sum\
    \ = min($min_sum, $curr_sum);\n            $curr_sum -= $nums[$start];\n     \
    \       $start++;\n        }\n        $end++;\n    }\n    return $min_sum;\n}\n\
    \nprint_r(minSubArraySum(array(2, 3, 4, 1, 2, 4)));\necho PHP_EOL;\nprint_r(minSubArraySum(array(-1,\
    \ -2, -3)));\necho PHP_EOL;", "    if(count($nums) === 0) {\n        return false;\n\
    \    }\n    $min = $nums[0];\n    $sum = $nums[0];\n    for($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if($sum < $min) {\n           \
    \ $min = $sum;\n        }\n    }\n    return $min;\n}", "    $minSum = PHP_INT_MAX;\n\
    \    $currSum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $currSum\
    \ += $nums[$i];\n        if ($currSum < $minSum) {\n            $minSum = $currSum;\n\
    \        }\n        if ($currSum > 0) {\n            $currSum = 0;\n        }\n\
    \    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) .\
    \ PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;", "    $min = $nums[0];\n\
    \    $sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $sum\
    \ += $nums[$i];\n        if ($sum < $min) {\n            $min = $sum;\n      \
    \  }\n        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $min;\n}\n\n$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sum = minSubArraySum($a);\n\
    echo $sum;", "    $min = $nums[0];\n    $sub_sum = $nums[0];\n    for ($i = 1;\
    \ $i < count($nums); $i++) {\n        $sub_sum = min($sub_sum + $nums[$i], $nums[$i]);\n\
    \        $min = min($min, $sub_sum);\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)).PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)).PHP_EOL;",
  "    $sum = $nums[0];\n    $minSum = $sum;\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum = min($nums[$i], $sum + $nums[$i]);\n        $minSum =\
    \ min($minSum, $sum);\n    }\n    return $minSum;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)), \"\\n\";\necho minSubArraySum(array(-1, -2, -3)), \"\\n\";",
  "    $sums = [];\n    $min = PHP_INT_MAX;\n    $sums[0] = $nums[0];\n    for ($i\
    \ = 1; $i < count($nums); $i++) {\n        $sums[$i] = $sums[$i - 1] + $nums[$i];\n\
    \    }\n    for ($i = 0; $i < count($nums); $i++) {\n        for ($j = $i; $j\
    \ < count($nums); $j++) {\n            $sum = $sums[$j] - ($i > 0 ? $sums[$i -\
    \ 1] : 0);\n            if ($sum < $min) {\n                $min = $sum;\n   \
    \         }\n        }\n    }\n    return $min;\n}\n", "    $s = $nums[0];\n \
    \   $e = $nums[0];\n    $min = $nums[0];\n    $arr_size = count($nums);\n    if\
    \ ($arr_size > 1) {\n        for ($i = 1; $i < $arr_size; $i++) {\n          \
    \  $e += $nums[$i];\n            if ($e > $nums[$i]) {\n                $e = $nums[$i];\n\
    \            }\n            if ($e < $min) {\n                $min = $e;\n   \
    \         }\n            $s += $nums[$i];\n            if ($s < $min) {\n    \
    \            $min = $s;\n            }\n        }\n    }\n    return $min;\n}\n",
  "    $len = count($nums);\n    $min = $sum = $nums[0];\n    for ($i = 1; $i < $len;\
    \ $i++) {\n        $sum = $sum + $nums[$i];\n        if ($sum < $min) {\n    \
    \        $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $min;\n}\n\nvar_dump(minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)));", "  $length = count($nums);\n  $max = array_fill(0, $length,\
    \ null);\n  $max[0] = $nums[0];\n  for ($i = 1; $i < $length; $i++) {\n    $max[$i]\
    \ = max($max[$i - 1] + $nums[$i], $nums[$i]);\n  }\n  return min($max);\n}\n\n\
    print_r(minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL);\nprint_r(minSubArraySum(array(-1,\
    \ -2, -3)) . PHP_EOL);", "    $runningSum = $min = $nums[0];\n    for ($i = 1;\
    \ $i < count($nums); $i++) {\n        $runningSum = min($runningSum + $nums[$i],\
    \ $nums[$i]);\n        $min = min($min, $runningSum);\n    }\n    return $min;\n\
    }\n", "    $min = PHP_INT_MAX;\n    $s = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $s += $nums[$i];\n        $min = min($min, $s);\n        if\
    \ ($s > 0) {\n            $s = 0;\n        }\n    }\n    return $min;\n}\necho\
    \ minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1,\
    \ -2, -3)) . PHP_EOL;", "    $minSum = $nums[0];\n    $currSum = $nums[0];\n \
    \   for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($nums[$i],\
    \ $currSum + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n \
    \   return $minSum;\n}\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\n\
    echo minSubArraySum(array(-1, -2, -3)) . PHP_EOL;", "    if (empty($nums)) {\n\
    \        return 0;\n    }\n    $sum = $result = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $sum = min($nums[$i], $sum + $nums[$i]);\n\
    \        $result = min($result, $sum);\n    }\n    return $result;\n}\n", "  \
    \  $preSum = array();\n    $preSum[0] = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $preSum[$i] = $preSum[$i - 1] + $nums[$i];\n    }\n    $min\
    \ = $preSum[0];\n    for ($i = 0; $i < count($preSum); $i++) {\n        for ($j\
    \ = $i; $j < count($preSum); $j++) {\n            $min = min($min, $preSum[$j]\
    \ - $preSum[$i]);\n        }\n    }\n    return $min;\n}", "\t$sum = $nums[0];\n\
    \t$currentSum = $nums[0];\n\t$count = count($nums);\n\tfor ($i = 1; $i < $count;\
    \ $i++) {\n\t\t$currentSum = min($currentSum + $nums[$i], $nums[$i]);\n\t\t$sum\
    \ = min($sum, $currentSum);\n\t}\n\treturn $sum;\n}", "  if (empty($nums)) {\n\
    \    return 0;\n  }\n  $minSum = $total = 0;\n  for ($i = 0; $i < count($nums);\
    \ $i++) {\n    $total += $nums[$i];\n    if ($total < $minSum) {\n      $minSum\
    \ = $total;\n    }\n  }\n  return $minSum;\n}\n\nprint_r(minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)));", "    $minSum = PHP_INT_MAX;\n    $len = count($nums);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $subSum = 0;\n        for ($j =\
    \ $i; $j < $len; $j++) {\n            $subSum += $nums[$j];\n            if ($subSum\
    \ < $minSum) {\n                $minSum = $subSum;\n            }\n        }\n\
    \    }\n    return $minSum;\n}\n", "    $curr_min = 0;\n    $min = 99999;\n  \
    \  for ($i = 0; $i < count($nums); $i++) {\n        $curr_min += $nums[$i];\n\
    \        if ($curr_min < $min) {\n            $min = $curr_min;\n        }\n \
    \       if ($curr_min > 0) {\n            $curr_min = 0;\n        }\n    }\n \
    \   return $min;\n}\n", "    $current_sum = $min_sum = $nums[0];\n    for ($i\
    \ = 1; $i < count($nums); $i++) {\n        $current_sum = min($nums[$i], $current_sum\
    \ + $nums[$i]);\n        $min_sum = min($min_sum, $current_sum);\n    }\n    return\
    \ $min_sum;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\necho\
    \ minSubArraySum(array(-1, -2, -3)) . PHP_EOL;", "    $sub_sum = $nums[0];\n \
    \   $best_sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n     \
    \   $sub_sum = max($nums[$i], $sub_sum + $nums[$i]);\n        $best_sum = min($best_sum,\
    \ $sub_sum);\n    }\n    return $best_sum;\n}\n\n$example1 = minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\nvar_dump($example1);\n$example2 = minSubArraySum(array(-1,\
    \ -2, -3));\nvar_dump($example2);", "  $min_sum = $nums[0];\n  $sum = 0;\n  for\
    \ ($i = 0; $i < count($nums); $i++) {\n    $sum += $nums[$i];\n    if ($sum <\
    \ $min_sum) {\n      $min_sum = $sum;\n    }\n    if ($sum > 0) {\n      $sum\
    \ = 0;\n    }\n  }\n  return $min_sum;\n}\necho minSubArraySum(array(2, 3, 4,\
    \ 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;", "\t\
    // ERROR: no numbers in array\n\tif (empty($nums)) return 0;\n\t// ERROR: negative\
    \ numbers in array\n\t// if (min($nums) < 0) return false;\n\t$sums = array_fill(0,\
    \ count($nums), 0);\n\t$sums[0] = $nums[0];\n\tfor ($i = 1; $i < count($nums);\
    \ $i++) {\n\t\t$sums[$i] = $sums[$i - 1] + $nums[$i];\n\t}\n\t// print_r($sums);\n\
    \t$min_sum = $sums[0];\n\tfor ($i = 0; $i < count($sums); $i++) {\n\t\tfor ($j\
    \ = $i; $j < count($sums); $j++) {\n\t\t\tif ($sums[$j] - $sums[$i] + $nums[$i]\
    \ < $min_sum) {\n\t\t\t\t$min_sum = $sums[$j] - $sums[$i] + $nums[$i];\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn $min_sum;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;", "    $minSum\
    \ = 0;\n    $currSum = 0;\n    $numsLen = count($nums);\n    for ($i = 0; $i <\
    \ $numsLen; $i++) {\n        $currSum += $nums[$i];\n        if ($currSum < $minSum)\
    \ {\n            $minSum = $currSum;\n        }\n        if ($currSum > 0) {\n\
    \            $currSum = 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;",
  "    $min = null;\n    $total = 0;\n    $left = 0;\n    $right = 0;\n    while ($right\
    \ < count($nums)) {\n        $total += $nums[$right];\n        while ($total >\
    \ 0) {\n            if ($min === null || $total < $min) {\n                $min\
    \ = $total;\n            }\n            $total -= $nums[$left];\n            $left++;\n\
    \        }\n        $right++;\n    }\n    return $min;\n}", "  $sum = 0;\n  $minSum\
    \ = PHP_INT_MAX;\n  $rangeStart = 0;\n  $rangeEnd = 0;\n  while ($rangeEnd < count($nums))\
    \ {\n    $sum += $nums[$rangeEnd];\n    if ($sum < $minSum) {\n      $minSum =\
    \ $sum;\n    }\n    if ($sum > 0) {\n      $sum = 0;\n      $rangeStart = $rangeEnd\
    \ + 1;\n    }\n    $rangeEnd++;\n  }\n  return $minSum;\n}", "    $min = PHP_INT_MAX;\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n\
    \        $min = min($min, $sum);\n        if ($sum < 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $min;\n}\n$tests = array(\n    array(2, 3,\
    \ 4, 1, 2, 4),\n    array(-1, -2, -3),\n);\nforeach ($tests as $test) {\n    echo\
    \ minSubArraySum($test) . \"\\n\";\n}", "    if (!$nums) {\n        return;\n\
    \    }\n    $min = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currentSum = max($nums[$i], $currentSum +\
    \ $nums[$i]);\n        $min = min($min, $currentSum);\n    }\n    return $min;\n\
    }\n", "    $length = count($nums);\n    $min = PHP_INT_MAX;\n    $sum = 0;\n \
    \   for ($i = 0; $i < $length; $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;",
  "    $minSoFar = 0;\n    $minEndingHere = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $minEndingHere = min($minEndingHere + $nums[$i], 0);\n    \
    \    $minSoFar = min($minSoFar, $minEndingHere);\n    }\n    return $minSoFar;\n\
    }\n", "  $minSum = PHP_INT_MAX;\n  $runningSum = 0;\n  for ($i = 0; $i < count($nums);\
    \ $i++) {\n    $runningSum += $nums[$i];\n    if ($runningSum < $minSum) {\n \
    \     $minSum = $runningSum;\n    }\n    if ($runningSum > 0) {\n      $runningSum\
    \ = 0;\n    }\n  }\n  return $minSum;\n}\n\nprint_r(minSubArraySum(array(2, 3,\
    \ 4, 1, 2, 4)));\necho \"\\n\";\nprint_r(minSubArraySum(array(-1, -2, -3)));",
  "  $count = count($nums);\n  $min = $nums[0];\n  $current = $nums[0];\n  for ($i\
    \ = 1; $i < $count; $i++) {\n    $current = min($nums[$i], $current + $nums[$i]);\n\
    \    $min = min($min, $current);\n  }\n  return $min;\n}\n\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;",
  "    $minSum = $nums[0];\n    $currSum = $nums[0];\n    $len = count($nums);\n \
    \   for ($i = 1; $i < $len; $i++) {\n        $currSum = min($nums[$i], $currSum\
    \ + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n    return\
    \ $minSum;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1,\
    \ -2, -3)) . PHP_EOL;", "\t$min = $nums[0];\n\t$currentSum = $nums[0];\n\t$len\
    \ = count($nums);\n\tfor ($i = 1; $i < $len; $i++) {\n\t\t$currentSum = max($nums[$i],\
    \ $currentSum + $nums[$i]);\n\t\t$min = min($min, $currentSum);\n\t}\n\treturn\
    \ $min;\n}\n", "  if (!$nums) {\n    return 0;\n  }\n  $min = $nums[0];\n  $total\
    \ = $nums[0];\n  for ($i = 1; $i < count($nums); $i++) {\n    $total += $nums[$i];\n\
    \    if ($total < $min) {\n      $min = $total;\n    }\n  }\n  return $min;\n\
    }\n\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho \"\\n\";\necho minSubArraySum(array(-1,\
    \ -2, -3));\necho \"\\n\";", "    $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n\
    \    $start = 0;\n    $end = 0;\n    $numsCount = count($nums);\n    if ($numsCount\
    \ === 0) {\n        return $minSum;\n    }\n    while ($end < $numsCount) {\n\
    \        $currentSum += $nums[$end];\n        while ($currentSum >= $minSum) {\n\
    \            $minSum = min($minSum, $currentSum);\n            $currentSum -=\
    \ $nums[$start];\n            $start++;\n        }\n        $end++;\n    }\n \
    \   return $minSum;\n}\necho PHP_EOL;\necho minSubArraySum(array(2, 3, 4, 1, 2,\
    \ 4));\necho PHP_EOL;\necho minSubArraySum(array(-1, -2, -3));\necho PHP_EOL;",
  "    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n        if ($sum\
    \ < 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\necho minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4));\necho minSubArraySum(array(-1, -2, -3));", "    $size = count($nums);\n\
    \    $result = $nums[0];\n    $minSum = $nums[0];\n    for ($i = 1; $i < $size;\
    \ $i++) {\n        $result = max($nums[$i], $result + $nums[$i]);\n        $minSum\
    \ = min($minSum, $result);\n    }\n    return $minSum;\n}\n", "    $min = PHP_INT_MAX;\n\
    \    $current = 0;\n    foreach ($nums as $n) {\n        $current += $n;\n   \
    \     $min = min($min, $current);\n        $current = max($current, 0);\n    }\n\
    \    return $min;\n}\n", "\t$min = $nums[0];\n\t$min_current = $nums[0];\n\tfor\
    \ ($i = 1; $i < count($nums); $i++) {\n\t\t$min_current = max($nums[$i], $min_current\
    \ + $nums[$i]);\n\t\t$min = min($min, $min_current);\n\t}\n\treturn $min;\n}\n",
  "    $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currentSum += $nums[$i];\n        if ($currentSum < $minSum)\
    \ {\n            $minSum = $currentSum;\n        }\n        if ($currentSum >\
    \ 0) {\n            $currentSum = 0;\n        }\n    }\n    return $minSum;\n\
    }\necho minSubArraySum(array(2, 3, 4, 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1,\
    \ -2, -3)) . PHP_EOL;", "\t$minSum = $nums[0];\n\t$currSum = $nums[0];\n\t$len\
    \ = count($nums);\n\tfor ($i = 1; $i < $len; $i++) {\n\t\t$currSum = max($nums[$i],\
    \ $currSum + $nums[$i]);\n\t\t$minSum = min($minSum, $currSum);\n\t}\n\treturn\
    \ $minSum;\n}\n", "    $minSum = 0;\n    $currentSum = 0;\n    for ($i = 0; $i\
    \ < count($nums); $i++) {\n        $currentSum += $nums[$i];\n        if ($currentSum\
    \ < $minSum) {\n            $minSum = $currentSum;\n        }\n        if ($currentSum\
    \ > 0) {\n            $currentSum = 0;\n        }\n    }\n    return $minSum;\n\
    }", "\t$sums = array();\n\tfor ($i = 0; $i < count($nums); $i++) {\n\t\tfor ($j\
    \ = $i; $j < count($nums); $j++) {\n\t\t\t$sums[] = array_sum(array_slice($nums,\
    \ $i, $j - $i + 1));\n\t\t}\n\t}\n\treturn min($sums);\n}", "  $sum = 0;\n  $min\
    \ = PHP_INT_MAX;\n  $sums = [];\n  for ($i = 0; $i < count($nums); $i++) {\n \
    \   $sum += $nums[$i];\n    $sums[] = $sum;\n    $min = min($min, $sum);\n  }\n\
    \  for ($i = 0; $i < count($sums); $i++) {\n    for ($j = $i; $j < count($sums);\
    \ $j++) {\n      $min = min($min, $sums[$j] - $sums[$i]);\n    }\n  }\n  return\
    \ $min;\n}\n\n$nums = array(2, 3, 4, 1, 2, 4);\necho minSubArraySum($nums) . PHP_EOL;",
  "    $result = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $result = min($result, $sum);\n\
    \        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $result;\n}\n", "  $min_sum = $sum = $nums[0];\n  for ($i = 1; $i < count($nums);\
    \ $i++) {\n    $sum = $sum + $nums[$i];\n    if ($sum < $min_sum) {\n      $min_sum\
    \ = $sum;\n    }\n    if ($sum > 0) {\n      $sum = 0;\n    }\n  }\n  return $min_sum;\n\
    }\n\nprint minSubArraySum(array(2, 3, 4, 1, 2, 4));\nprint PHP_EOL;\nprint minSubArraySum(array(-1,\
    \ -2, -3));\nprint PHP_EOL;", "    $sum = 0;\n    $min = PHP_INT_MAX;\n    for\
    \ ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min\
    \ = min($min, $sum);\n        if ($sum > 0) {\n            $sum = 0;\n       \
    \ }\n    }\n    return $min;\n}\n", "    $sum = 0;\n    $res = PHP_INT_MAX;\n\
    \    $lo = 0;\n    for ($hi = 0; $hi < count($nums); $hi++) {\n        $sum +=\
    \ $nums[$hi];\n        if ($sum > 0) {\n            $sum = 0;\n            $lo\
    \ = $hi + 1;\n        }\n        $res = min($res, $sum);\n    }\n    return $res;\n\
    }", "    $sum = 0;\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $minSum = min($minSum, $sum);\n\
    \        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $minSum;\n}", "    $result = $nums[0];\n    $partialSum = 0;\n    foreach ($nums\
    \ as $num) {\n        $partialSum += $num;\n        $result = min($result, $partialSum);\n\
    \        if ($partialSum > 0) {\n            $partialSum = 0;\n        }\n   \
    \ }\n    return $result;\n}\n", "    $min = PHP_INT_MAX;\n    $currSum = 0;\n\
    \    $count = count($nums);\n    for ($i = 0; $i < $count; $i++) {\n        $currSum\
    \ += $nums[$i];\n        if ($currSum < $min) {\n            $min = $currSum;\n\
    \        }\n        if ($currSum > 0) {\n            $currSum = 0;\n        }\n\
    \    }\n    return $min;\n}\n\n$array = array(2, 3, 4, 1, 2, 4);\necho \"minSubArraySum(array(2,\
    \ 3, 4, 1, 2, 4))\\n\";\nvar_dump(minSubArraySum($array));\n$array = array(-1,\
    \ -2, -3);\necho \"minSubArraySum(array(-1, -2, -3))\\n\";\nvar_dump(minSubArraySum($array));",
  "    $min = $minArr = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum += $nums[$i];\n        if ($nums[$i]\
    \ < $currSum) {\n            $minArr = $currSum;\n        } else {\n         \
    \   $minArr = $nums[$i];\n        }\n        if ($minArr < $min) {\n         \
    \   $min = $minArr;\n        }\n    }\n    return $min;\n}", "    $result = $nums[0];\n\
    \    $min = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $result\
    \ = max($nums[$i], $result + $nums[$i]);\n        $min = min($min, $result);\n\
    \    }\n    return $min;\n}\n", "    $i = $j = 0;\n    $sum = $min = INF;\n  \
    \  while ($j < count($nums)) {\n        $sum += $nums[$j];\n        while ($sum\
    \ >= 0) {\n            $min = min($min, $sum);\n            $sum -= $nums[$i];\n\
    \            $i++;\n        }\n        $j++;\n    }\n    return $min;\n}", " \
    \   $min = $nums[0];\n    $max = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum = $nums[$i] + $max;\n        if ($sum < $min) {\n    \
    \        $min = $sum;\n        }\n        if ($sum > $max) {\n            $max\
    \ = $sum;\n        }\n    }\n    return $min;\n}", "    if (empty($nums)) {\n\
    \        return 0;\n    }\n    $min = $nums[0];\n    $sum = $nums[0];\n    for\
    \ ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($nums[$i] < $sum) {\n            $sum = $nums[$i];\n        }\n        if ($sum\
    \ < $min) {\n            $min = $sum;\n        }\n    }\n    return $min;\n}",
  "\t$sum = $minSum = $nums[0];\n\t$n = count($nums);\n\tfor ($i = 1; $i < $n; $i++)\
    \ {\n\t\t$sum = min($nums[$i], $sum + $nums[$i]);\n\t\t$minSum = min($minSum,\
    \ $sum);\n\t}\n\treturn $minSum;\n}", "    $curSum = $nums[0];\n    $minSum =\
    \ $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $curSum = max($nums[$i],\
    \ $curSum + $nums[$i]);\n        $minSum = min($minSum, $curSum);\n    }\n   \
    \ return $minSum;\n}", "    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}", "    $min\
    \ = $nums[0];\n    $curr = $nums[0];\n    $len = count($nums);\n    for ($i =\
    \ 1; $i < $len; $i++) {\n        $curr = min($nums[$i], $curr + $nums[$i]);\n\
    \        $min = min($min, $curr);\n    }\n    return $min;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

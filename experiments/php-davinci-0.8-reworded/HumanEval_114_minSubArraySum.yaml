name: HumanEval_114_minSubArraySum
language: php
prompt: "<?php\n// Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n// of nums.\n// Example\n// >>> minSubArraySum(array(2, 3, 4, 1, 2,\
  \ 4))\n// 1\n// >>> minSubArraySum(array(-1, -2, -3))\n// -6\nfunction minSubArraySum($nums)\
  \ {\n"
tests: "function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3,\
  \ 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
  \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
  \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
  \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-10)) !== -10) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(7)) !== 7) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, -1)) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $sum = PHP_INT_MAX;\n    $tmp = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $tmp += $nums[$i];\n        if ($tmp < $sum) {\n          \
    \  $sum = $tmp;\n        }\n        if ($tmp > 0) {\n            $tmp = 0;\n \
    \       }\n    }\n    return $sum;\n}", "    $currentSum = 0;\n    $globalMin\
    \ = $nums[0];\n    for ($i = 0; $i < count($nums); $i++) {\n        $currentSum\
    \ += $nums[$i];\n        if ($currentSum < $globalMin) {\n            $globalMin\
    \ = $currentSum;\n        }\n        if ($currentSum > 0) {\n            $currentSum\
    \ = 0;\n        }\n    }\n    return $globalMin;\n}", "    $len = count($nums);\n\
    \    if ($len === 0) {\n        return 0;\n    }\n    $min = $minSum = $nums[0];\n\
    \    for ($i = 1; $i < $len; $i++) {\n        $min = min($nums[$i], $min + $nums[$i]);\n\
    \        $minSum = min($min, $minSum);\n    }\n    return $minSum;\n}", "    $current_sum\
    \ = $nums[0];\n    $best_sum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $current_sum = max($nums[$i], $current_sum + $nums[$i]);\n\
    \        $best_sum = max($best_sum, $current_sum);\n    }\n    return $best_sum;\n\
    }", "    if (count($nums) < 1) {\n        return 0;\n    }\n    $min = $min_here\
    \ = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $min_here\
    \ = min($nums[$i], $min_here + $nums[$i]);\n        $min = min($min, $min_here);\n\
    \    }\n    return $min;\n}\n", "    if (empty($nums)) return 0;\n    $min = array_sum($nums);\n\
    \    $current = 0;\n    foreach ($nums as $num) {\n        $current += $num;\n\
    \        $min = min($min, $current);\n        $current = max(0, $current);\n \
    \   }\n    return $min;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\necho\
    \ PHP_EOL;\necho minSubArraySum(array(-1, -2, -3));\necho PHP_EOL;", "\t$result\
    \ = PHP_INT_MAX;\n\t$sum = 0;\n\t$minSum = 0;\n\tfor ($i = 0; $i < count($nums);\
    \ $i++) {\n\t\t$sum += $nums[$i];\n\t\t$result = min($result, $sum - $minSum);\n\
    \t\t$minSum = min($minSum, $sum);\n\t}\n\treturn $result;\n}", "    $minSum =\
    \ $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n    \
    \    $sum += $nums[$i];\n        if ($sum < $minSum) {\n            $minSum =\
    \ $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n        }\n\
    \    }\n    return $minSum;\n}\n", "    $sum = 0;\n    $min = PHP_INT_MAX;\n \
    \   $start = 0;\n    $end = 0;\n    $len = count($nums);\n    while ($end < $len)\
    \ {\n        $sum += $nums[$end];\n        while ($sum >= 0) {\n            $min\
    \ = min($min, $sum);\n            $sum -= $nums[$start];\n            $start++;\n\
    \        }\n        $end++;\n    }\n    return $min;\n}\n", "    $length = count($nums);\n\
    \    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i < $length;\
    \ $i++) {\n        $currentSum = min($currentSum + $nums[$i], $nums[$i]);\n  \
    \      $minSum = min($minSum, $currentSum);\n    }\n    return $minSum;\n}\n",
  "    $min = NULL;\n    $sum = 0;\n    $i = 0;\n    while ($i < count($nums)) {\n\
    \        $sum += $nums[$i];\n        if ($min === NULL || $sum < $min) {\n   \
    \         $min = $sum;\n        }\n        $i++;\n    }\n    return $min;\n}",
  "    $i = 0;\n    $j = count($nums) - 1;\n    $min = PHP_INT_MAX;\n    $sum = 0;\n\
    \    for ($p = 0; $p < count($nums); $p++) {\n        $sum += $nums[$p];\n   \
    \     if ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n", " \
    \   $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    $end = 0;\n  \
    \  while ($end < count($nums)) {\n        while ($sum <= 0 && $start < count($nums))\
    \ {\n            $sum += $nums[$start];\n            $start++;\n        }\n  \
    \      $minSum = min($minSum, $sum);\n        $sum -= $nums[$end];\n        $end++;\n\
    \    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3, 4, 1, 2, 4));\n\
    echo PHP_EOL;\necho minSubArraySum(array(-1, -2, -3));\necho PHP_EOL;", "  if\
    \ (empty($nums)) {\n    return 0;\n  }\n  $sum = $min = PHP_INT_MAX;\n  for ($i\
    \ = 0; $i < count($nums); $i++) {\n    $sum = min($sum + $nums[$i], $nums[$i]);\n\
    \    $min = min($min, $sum);\n  }\n  return $min;\n}\n\n$arr = array(2, 3, 4,\
    \ 1, 2, 4);\necho minSubArraySum($arr);\necho PHP_EOL;\n\n$arr = array(-1, -2,\
    \ -3);\necho minSubArraySum($arr);\necho PHP_EOL;", "    $minSum = $nums[0];\n\
    \    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n       \
    \ $minSum = min($minSum, $sum);\n        if ($sum < 0) {\n            $sum = 0;\n\
    \        }\n    }\n    return $minSum;\n}\necho minSubArraySum(array(2, 3, 4,\
    \ 1, 2, 4)) . PHP_EOL;\necho minSubArraySum(array(-1, -2, -3)) . PHP_EOL;", " \
    \   $sum = 0;\n    $min = $nums[0];\n    foreach ($nums as $num) {\n        $sum\
    \ += $num;\n        if ($sum < $min) {\n            $min = $sum;\n        }\n\
    \    }\n    return $min;\n}\n", "\t$len = count($nums);\n\tif ($len == 0) {\n\t\
    \treturn 0;\n\t}\n\t$min = PHP_INT_MAX;\n\t$sum = 0;\n\tfor ($i = 0; $i < $len;\
    \ $i++) {\n\t\t$sum += $nums[$i];\n\t\tif ($sum < $min) {\n\t\t\t$min = $sum;\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$sum = 0;\n\t\t}\n\t}\n\treturn $min;\n}\n",
  "    $minSum = $nums[0];\n    $sum = 0;\n    foreach ($nums as $num) {\n       \
    \ $sum += $num;\n        $minSum = min($minSum, $sum);\n        if ($sum < 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\n\n$input1\
    \ = array(2, 3, 4, 1, 2, 4);\n$input2 = array(-1, -2, -3);\necho minSubArraySum($input1);\n\
    echo PHP_EOL;\necho minSubArraySum($input2);\necho PHP_EOL;", "    $min = null;\n\
    \    $length = count($nums);\n    $sum = 0;\n    for ($i = 0; $i < $length; $i++)\
    \ {\n        $sum += $nums[$i];\n        if ($min === null || $sum < $min) {\n\
    \            $min = $sum;\n        }\n        for ($j = $i + 1; $j < $length;\
    \ $j++) {\n            $sum += $nums[$j];\n            if ($sum < $min) {\n  \
    \              $min = $sum;\n            }\n        }\n        $sum = 0;\n   \
    \ }\n    return $min;\n}\n", "    if (empty($nums)) {\n        return 0;\n   \
    \ }\n    $min_sum = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min_sum = min($min_sum, $sum);\n\
    \        if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $min_sum;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

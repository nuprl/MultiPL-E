language: php
name: HumanEval_8_sum_product
results:
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  // Write a function body\n  $sum = 0;\n  $product\
    \ = 1;\n  if (empty($numbers)) {\n    return array($sum, $product);\n  }\n  foreach\
    \ ($numbers as $value) {\n    $sum += $value;\n    $product *= $value;\n  }\n\
    \  return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    if(empty($numbers))\
    \ {\n        return array($sum, $product);\n    }\n    else {\n        foreach($numbers\
    \ as $value) {\n            $sum += $value;\n            $product *= $value;\n\
    \        }\n        return array($sum, $product);\n    }\n}\nprint_r(sum_product(array(1,\
    \ 2, 3, 4)));\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $number) {\n\t\t$sum += $number;\n\t\t$product *= $number;\n\t}\n\treturn array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $s = 0;\n    $p = 1;\n    foreach ($numbers as\
    \ $number) {\n        $s += $number;\n        $p *= $number;\n    }\n    return\
    \ array($s, $p);\n}\n\nprint_r(sum_product(array(1, 2, 3, 4)));\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  if (count($numbers)\
    \ > 0) {\n    foreach ($numbers as $number) {\n      $sum += $number;\n      $product\
    \ *= $number;\n    }\n  }\n  return array($sum, $product);\n}\n\n$numbers = array(1,\
    \ 2, 3, 4);\n$result = sum_product($numbers);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = array_sum($numbers);\n    $product = array_product($numbers);\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $product = 1;\n  $sum = 0;\n  foreach ($numbers as\
    \ $number) {\n    $product *= $number;\n    $sum += $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprsbmm7fk.php:16\n\
    Stack trace:\n#0 /tmp/tmprsbmm7fk.php(23): test()\n#1 {main}\n  thrown in /tmp/tmprsbmm7fk.php\
    \ on line 16\n"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = array_sum($numbers);\n  $product = array_product($numbers);\n\
    \  $result = [$sum, $product];\n  return $result;\n}\nprint_r(sum_product([1,\
    \ 2, 3, 4]));\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    if (empty($numbers))\
    \ {\n        return array($sum, $product);\n    }\n    foreach ($numbers as $number)\
    \ {\n        $sum += $number;\n        $product *= $number;\n    }\n    return\
    \ array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t// Don't forget to return the result!\n\t$sum = 0;\n\
    \t$product = 1;\n\tforeach ($numbers as $key => $value) {\n\t\t$sum += $value;\n\
    \t\t$product *= $value;\n\t}\n\treturn [$sum, $product];\n}\nprint_r(sum_product([1,\
    \ 2, 3, 4]));\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $num) {\n        $sum += $num;\n        $product *= $num;\n    }\n    return\
    \ array($sum, $product);\n}\nprint_r(sum_product(array(1, 2, 3, 4)));\nfunction\
    \ candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\t$empty = [];\n\tforeach\
    \ ($numbers as $key => $value) {\n\t\t$sum += $value;\n\t\t$product *= $value;\n\
    \t}\n\t$result = array($sum, $product);\n\treturn $result;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $value) {\n    $sum += $value;\n    $product *= $value;\n  }\n  $result = array($sum,\
    \ $product);\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    if (!empty($numbers))\
    \ {\n        foreach ($numbers as $value) {\n            $sum += $value;\n   \
    \         $product *= $value;\n        }\n    }\n    return [$sum, $product];\n\
    }\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $v) {\n\t\t$sum += $v;\n\t\t$product *= $v;\n\t}\n\treturn array($sum, $product);\n\
    }\nprint_r(sum_product(array(1, 2, 3, 4)));\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n<br>"
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\necho(json_encode(sum_product(array(1, 2,\
    \ 3, 4))));\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[10,24]'
  timestamp: 1660009161
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\necho '<h2>sum_product</h2>';\n$example_numbers\
    \ = array(1, 2, 3, 4);\nprint_r(sum_product($example_numbers));\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<h2>sum_product</h2>Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660009161
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = array_sum($numbers);\n  $product = array_product($numbers);\n\
    \  return [$sum, $product];\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009161
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $number) {\n\t\t$sum += $number;\n\t\t$product *= $number;\n\t}\n\treturn array($sum,\
    \ $product);\n}\necho '<pre>';\nprint_r(sum_product(array(2, 3, 4)));\necho '</pre>';\n\
    function candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 9\n    [1] => 24\n)\n</pre>"
  timestamp: 1660009161
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$s = 0;\n\t$p = 1;\n\tforeach ($numbers as $number)\
    \ {\n\t\t$s += $number;\n\t\t$p *= $number;\n\t}\n\treturn array($s, $p);\n}\n\
    \nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009161
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $value) {\n\t\t$sum += $value;\n\t\t$product *= $value;\n\t}\n\treturn array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009161
- exit_code: 255
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa27b8qmn.php:17\n\
    Stack trace:\n#0 /tmp/tmpa27b8qmn.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa27b8qmn.php\
    \ on line 17\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $product = 1;\n  $sum = 0;\n  foreach ($numbers as\
    \ $number) {\n    $product *= $number;\n    $sum += $number;\n  }\n  return array($sum,\
    \ $product);\n}\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $numb) {\n\t\t$sum += $numb;\n\t\t$product *= $numb;\n\t}\n\t$result = array();\n\
    \t$result[] = $sum;\n\t$result[] = $product;\n\treturn $result;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  if (empty($numbers))\
    \ {\n    return [$sum, $product];\n  }\n  foreach ($numbers as $number) {\n  \
    \  $sum += $number;\n    $product *= $number;\n  }\n  return [$sum, $product];\n\
    }\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = array_sum($numbers);\n    $product = array_product($numbers);\n\
    \    return [$sum, $product];\n}\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $num) {\n        $sum += $num;\n        $product *= $num;\n    }\n    return\
    \ array($sum, $product);\n}\necho json_encode(sum_product(array(1, 2, 3, 4)))\
    \ . PHP_EOL;\necho json_encode(sum_product(array())) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[10,24]

    [0,1]

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = array_sum($numbers);\n    $product = array_product($numbers);\n\
    \    return [$sum, $product];\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $num) {\n\t\t$sum += $num;\n\t\t$product *= $num;\n\t}\n\treturn array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = array_sum($numbers);\n    $product = array_product($numbers);\n\
    \    return array($sum, $product);\n}\nprint_r(sum_product(array(1, 2, 3, 4)));\n\
    function candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  if(!empty($numbers))\
    \ {\n    foreach($numbers as $number) {\n      $sum += $number;\n      $product\
    \ *= $number;\n    }\n  }\n  return array($sum, $product);\n}\nprint_r(sum_product(array(1,\
    \ 2, 3, 4)));\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $number) {\n\t\t$sum += $number;\n\t\t$product *= $number;\n\t}\n\treturn array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\treturn array(array_sum($numbers), array_product($numbers));\n\
    }\necho '<pre>';\nprint_r(sum_product(array(1, 2, 3, 4)));\necho '</pre>';\nfunction\
    \ candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 10\n    [1] => 24\n)\n</pre>"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $numbers = array_sum($numbers);\n  $numbers2 = array_product($numbers);\n\
    \  return array($numbers, $numbers2);\n}\n\nfunction candidate(...$args) {\n \
    \   return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_product(): Argument #1 ($array)\
    \ must be of type array, int given in /tmp/tmp3h9yhrpz.php:10\nStack trace:\n\
    #0 /tmp/tmp3h9yhrpz.php(10): array_product(0)\n#1 /tmp/tmp3h9yhrpz.php(15): sum_product(0)\n\
    #2 /tmp/tmp3h9yhrpz.php(19): candidate(Array)\n#3 /tmp/tmp3h9yhrpz.php(26): test()\n\
    #4 {main}\n  thrown in /tmp/tmp3h9yhrpz.php on line 10\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $num) {\n        $sum += $num;\n        $product *= $num;\n    }\n    return\
    \ array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\t$sum += $numbers[$i];\n\t\t$product *= $numbers[$i];\n\t}\n\treturn\
    \ array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = array_sum($numbers);\n\t$prod = array_product($numbers);\n\
    \tif ($sum == NULL) {\n\t\t$sum = 0;\n\t}\n\tif ($prod == NULL) {\n\t\t$prod =\
    \ 1;\n\t}\n\treturn array($sum, $prod);\n}\nfunction candidate(...$args) {\n \
    \   return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplizo633p.php:26\n\
    Stack trace:\n#0 /tmp/tmplizo633p.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplizo633p.php\
    \ on line 26\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    // TODO: return a resulting array with a sum and\
    \ a product of an array\n}\n$test_arrays = array(\n    array(),\n    array(1,\
    \ 2, 3, 4),\n    array(1.1, 2.2, 3.3),\n    array(1, 0),\n    array(1, -1, 2,\
    \ -2),\n    array(1, -1, -2, -2)\n);\nforeach ($test_arrays as $test_array) {\n\
    \    print_r(sum_product($test_array));\n}\nfunction candidate(...$args) {\n \
    \   return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpblklhxgw.php:27\n\
    Stack trace:\n#0 /tmp/tmpblklhxgw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpblklhxgw.php\
    \ on line 27\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  if(empty($numbers)) {\n    return array(0, 1);\n\
    \  }\n  $sum = 0;\n  $product = 1;\n  foreach($numbers as $value) {\n    $sum\
    \ += $value;\n    $product *= $value;\n  }\n  return array($sum, $product);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $number) {\n\t\t$sum += $number;\n\t\t$product *= $number;\n\t}\n\treturn array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = array_sum($numbers);\n    $product = 1;\n\
    \    foreach ($numbers as $n) {\n        $product *= $n;\n    }\n    return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$arr = array();\n\t$sum = 0;\n\t$prod = 1;\n\tforeach\
    \ ($numbers as $value) {\n\t\t$sum += $value;\n\t\t$prod *= $value;\n\t}\n\tarray_push($arr,\
    \ $sum, $prod);\n\treturn $arr;\n}\nprint_r(sum_product(array(1, 2, 3, 4)));\n\
    echo \"<br>\";\nprint_r(sum_product(array()));\necho \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n<br>Array\n(\n    [0] => 0\n\
    \    [1] => 1\n)\n<br>"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\treturn [array_sum($numbers), array_product($numbers)];\n\
    }\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $num) {\n        $sum += $num;\n        $product *= $num;\n    }\n    return\
    \ array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum=0;\n\t$product=1;\n\tfor ($i=0; $i < count($numbers);\
    \ $i++) { \n\t\t$sum+=$numbers[$i];\n\t\t$product*=$numbers[$i];\n\t}\n\treturn\
    \ array($sum,$product);\n}\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tif (sizeof($numbers)\
    \ == 0) {\n\t\treturn array($sum, $product);\n\t} else {\n\t\tforeach ($numbers\
    \ as $number) {\n\t\t\t$sum += $number;\n\t\t\t$product *= $number;\n\t\t}\n\t\
    \treturn array($sum, $product);\n\t}\n}\n\nfunction candidate(...$args) {\n  \
    \  return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n$array = array(1, 2, 3, 4);\nprint_r(sum_product($array));\n\
    \nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    if (!empty($numbers))\
    \ {\n        foreach ($numbers as $number) {\n            $sum += $number;\n \
    \           $product *= $number;\n        }\n    }\n    return array($sum, $product);\n\
    }\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    if (empty($numbers))\
    \ {\n        $sum = 0;\n        $product = 1;\n    } else {\n        for ($i =\
    \ 0; $i < count($numbers); $i++) {\n            $sum += $numbers[$i];\n      \
    \      $product *= $numbers[$i];\n        }\n    }\n    $result = array($sum,\
    \ $product);\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$array = array();\n\t$sum = 0;\n\t$product = 1;\n\
    \tforeach ($numbers as $key => $value) {\n\t\t$sum += $value;\n\t\t$product *=\
    \ $value;\n\t}\n\t$array[] = $sum;\n\t$array[] = $product;\n\treturn $array;\n\
    }\n\nprint_r(sum_product(array(1, 2, 3, 4)));\n\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  for ($i = 0; $i < count($numbers);\
    \ $i++) {\n    $sum += $numbers[$i];\n    $product *= $numbers[$i];\n  }\n  return\
    \ array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $num) {\n    $sum += $num;\n    $product *= $num;\n  }\n  return array($sum,\
    \ $product);\n}\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    if(!empty($numbers))\
    \ {\n        foreach($numbers as $number) {\n            $sum += $number;\n  \
    \          $product *= $number;\n        }\n    }\n    return array($sum, $product);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = array_sum($numbers);\n  $product = array_product($numbers);\n\
    \  return array($sum, $product);\n}\nprint_r(sum_product(array(1, 2, 3, 4)));\n\
    function candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    if (count($numbers)\
    \ == 0) {\n        return array($sum, $product);\n    }\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    if(empty($numbers)) {\n        return array(0,\
    \ 1);\n    } else {\n        $sum = 0;\n        $product = 1;\n        foreach($numbers\
    \ as $number) {\n            $sum += $number;\n            $product *= $number;\n\
    \        }\n        return array($sum, $product);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\tif (empty($numbers)) {\n\t\treturn [0, 1];\n\t}\n\
    \n\t$product = 1;\n\t$sum = 0;\n\tforeach ($numbers as $number) {\n\t\t$product\
    \ *= $number;\n\t\t$sum += $number;\n\t}\n\n\treturn [$sum, $product];\n}\n\n\
    var_dump(sum_product([]));\nvar_dump(sum_product([1, 2, 3, 4]));\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n}\narray(2) {\n  [0]=>\n\
    \  int(10)\n  [1]=>\n  int(24)\n}\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $value) {\n        $sum += $value;\n        $product *= $value;\n    }\n\
    \    return array($sum, $product);\n}\n$numbers = array(1, 2, 3, 4);\n$sum_product\
    \ = sum_product($numbers);\nprint_r($sum_product);\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    if (count($numbers)\
    \ == 0) {\n        return array($sum, $product);\n    }\n    foreach ($numbers\
    \ as $key => $value) {\n        $sum += $value;\n        $product *= $value;\n\
    \    }\n    return array($sum, $product);\n}\nfunction candidate(...$args) {\n\
    \    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  for ($i = 0; $i < count($numbers);\
    \ $i++) {\n    $sum += $numbers[$i];\n    $product *= $numbers[$i];\n  }\n  return\
    \ array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n$numbers = array(1, 2, 3, 4);\nprint_r(sum_product($numbers));\n\
    function candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $n) {\n\t\t$sum += $n;\n\t\t$product *= $n;\n\t}\n\treturn array($sum, $product);\n\
    }\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nprint_r(sum_product(array(1, 2, 3, 4)));\n\
    function candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  if(count($numbers) == 0) {\n    return array(0, 1);\n\
    \  }\n  else {\n    $sum = 0;\n    $product = 1;\n    foreach($numbers as $number)\
    \ {\n      $sum += $number;\n      $product *= $number;\n    }\n    return array($sum,\
    \ $product);\n  }\n}\necho \"sum_product([1, 2, 3, 4]) == [10, 24]? \" . (sum_product([1,\
    \ 2, 3, 4]) == [10, 24] ? \"true\" : \"false\") . \"\\n\";\necho \"sum_product([])\
    \ == [0, 1]? \" . (sum_product([]) == [0, 1] ? \"true\" : \"false\") . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'sum_product([1, 2, 3, 4]) == [10, 24]? true

    sum_product([]) == [0, 1]? true

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = array_sum($numbers);\n    $product = array_product($numbers);\n\
    \    return [$sum, $product];\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    // $sum = 0;\n    // $product = 1;\n    // foreach\
    \ ($numbers as $number) {\n    //     $sum += $number;\n    //     $product *=\
    \ $number;\n    // }\n    $sum = array_sum($numbers);\n    $product = array_product($numbers);\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    if (count($numbers) === 0) {\n        return array(0,\
    \ 1);\n    } else {\n        $sum = array_sum($numbers);\n        $product = array_product($numbers);\n\
    \        return array($sum, $product);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    if (count($numbers) === 0) {\n        return array(0,\
    \ 1);\n    }\n    return array(array_sum($numbers), array_product($numbers));\n\
    }\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $result = array();\n  $sum = 0;\n  $product = 1;\n\
    \  foreach ($numbers as $n) {\n    $sum += $n;\n    $product *= $n;\n  }\n  array_push($result,\
    \ $sum, $product);\n  return $result;\n}\necho implode(\", \", sum_product(array(1,\
    \ 2, 3, 4)));\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 10, 24
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = array_sum($numbers);\n  $product = array_product($numbers);\n\
    \  return array($sum, $product);\n}\nprint_r(sum_product(array(1, 2, 3, 4)));\n\
    function candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    // To do...\n    if (count($numbers) == 0) {\n\
    \        return array(0, 1);\n    }\n    $sum = array_sum($numbers);\n    $prod\
    \ = array_product($numbers);\n    return array($sum, $prod);\n}\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = array_sum($numbers);\n    $product = array_product($numbers);\n\
    \    return array($sum, $product);\n}\n\necho '\u041F\u0440\u0438\u043C\u0435\u0440\
    \ 1:<br/>';\n$numbers = [1, 2, 3, 4];\nprint_r(sum_product($numbers));\n\necho\
    \ '<br/><br/>\u041F\u0440\u0438\u043C\u0435\u0440 2:<br/>';\n$numbers = [];\n\
    print_r(sum_product($numbers));\n\necho '<br/><br/>\u041F\u0440\u0438\u043C\u0435\
    \u0440 3:<br/>';\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(sum_product($numbers));\n\
    \nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "\u041F\u0440\u0438\u043C\u0435\u0440 1:<br/>Array\n(\n    [0] => 10\n \
    \   [1] => 24\n)\n<br/><br/>\u041F\u0440\u0438\u043C\u0435\u0440 2:<br/>Array\n\
    (\n    [0] => 0\n    [1] => 1\n)\n<br/><br/>\u041F\u0440\u0438\u043C\u0435\u0440\
    \ 3:<br/>Array\n(\n    [0] => 55\n    [1] => 3628800\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  if (count($numbers) == 0) {\n    return array(0,\
    \ 1);\n  } else {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n      $sum += $number;\n      $product *= $number;\n    }\n    return\
    \ array($sum, $product);\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  // TODO: write a function that returns an array of\
    \ sum and product of an array\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8juscjyq.php:17\n\
    Stack trace:\n#0 /tmp/tmp8juscjyq.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8juscjyq.php\
    \ on line 17\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t// TODO: Implement the sum_product() function\n\t\
    if(empty($numbers)){\n\t\t$numbers = array(0,1);\n\t}\n\t$result = 0;\n\t$product\
    \ = 1;\n\t$len = count($numbers);\n\tfor($i = 0; $i < $len; $i++){\n\t\t$result\
    \ += $numbers[$i];\n\t\t$product *= $numbers[$i];\n\t}\n\t$answer = array($result,\
    \ $product);\n\tprint_r($answer);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 0\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp7bok8uy3.php:28\nStack trace:\n#0 /tmp/tmp7bok8uy3.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7bok8uy3.php on line 28\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $num) {\n    $sum += $num;\n    $product *= $num;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $product = 1;\n  $sum = 0;\n  foreach ($numbers as\
    \ $number) {\n    $product *= $number;\n    $sum += $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n$numbers = array(1, 2, 3, 4);\nprint_r(sum_product($numbers));\n\
    \nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    // Write your code here...\n}\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55b1q4t7.php:16\n\
    Stack trace:\n#0 /tmp/tmp55b1q4t7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp55b1q4t7.php\
    \ on line 16\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$s = 0;\n\t$p = 1;\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\t$s += $numbers[$i];\n\t\t$p *= $numbers[$i];\n\t}\n\treturn array($s,\
    \ $p);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    if (!$numbers) {\n        return array(0, 1);\n\
    \    }\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    //if ($numbers) {\n        $sum = array_sum($numbers);\n\
    \        $product = array_product($numbers);\n        $result = array($sum, $product);\n\
    \        return $result;\n    //}\n}\n\n\nfunction candidate(...$args) {\n   \
    \ return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  if (empty($numbers)) {\n    return array(0, 1);\n\
    \  } else {\n    $sum = array_sum($numbers);\n    $product = array_product($numbers);\n\
    \    return array($sum, $product);\n  }\n}\n\necho \"sum_product(array()) = \"\
    ;\nvar_dump(sum_product(array()));\necho \"\\n\";\n\necho \"sum_product(array(1,\
    \ 2, 3, 4)) = \";\nvar_dump(sum_product(array(1, 2, 3, 4)));\necho \"\\n\";\n\n\
    function candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "sum_product(array()) = array(2) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n\
    }\n\nsum_product(array(1, 2, 3, 4)) = array(2) {\n  [0]=>\n  int(10)\n  [1]=>\n\
    \  int(24)\n}\n\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = array_sum($numbers);\n    $product = array_product($numbers);\n\
    \    $result = array($sum, $product);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = array_sum($numbers);\n  $product = array_product($numbers);\n\
    \  return [$sum, $product];\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009161
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = array_sum($numbers);\n    $product = 1;\n\
    \    foreach ($numbers as $number) {\n        $product *= $number;\n    }\n  \
    \  return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\necho implode(\", \", sum_product(array(1,\
    \ 2, 3, 4))).\"\\n\";\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '10, 24

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $product = 1;\n    $sum = 0;\n    foreach ($numbers\
    \ as $number) {\n        $product *= $number;\n        $sum += $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $num) {\n        $sum += $num;\n        $product *= $num;\n    }\n    return\
    \ array($sum, $product);\n}\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $number) {\n\t\t$sum += $number;\n\t\t$product *= $number;\n\t}\n\treturn array($sum,\
    \ $product);\n}\nvar_dump(sum_product(array()));\nvar_dump(sum_product(array(1,\
    \ 2, 3, 4)));\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n}\narray(2) {\n  [0]=>\n\
    \  int(10)\n  [1]=>\n  int(24)\n}\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\necho \"sum_product(array(1, 2, 3, 4))\\n\";\nvar_dump(sum_product(array(1,\
    \ 2, 3, 4)));\necho \"sum_product(array())\\n\";\nvar_dump(sum_product(array()));\n\
    function candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "sum_product(array(1, 2, 3, 4))\narray(2) {\n  [0]=>\n  int(10)\n  [1]=>\n\
    \  int(24)\n}\nsum_product(array())\narray(2) {\n  [0]=>\n  int(0)\n  [1]=>\n\
    \  int(1)\n}\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = array_sum($numbers);\n    $product = array_product($numbers);\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\tif (!$numbers) {\n\t\treturn array(0, 1);\n\t}\n\t\
    $sum = 0;\n\t$product = 1;\n\tforeach ($numbers as $number) {\n\t\t$sum += $number;\n\
    \t\t$product *= $number;\n\t}\n\treturn array($sum, $product);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\tif(sizeof($numbers) == 0) {\n\t\treturn array(0,\
    \ 1);\n\t} else {\n\t\t$sum = 0;\n\t\t$product = 1;\n\t\tforeach($numbers as $num)\
    \ {\n\t\t\t$sum += $num;\n\t\t\t$product *= $num;\n\t\t}\n\t\treturn array($sum,\
    \ $product);\n\t}\n}\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\tif (empty($numbers)) {\n\t\treturn [0, 1];\n\t}\n\
    \t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as $number) {\n\t\t$sum += $number;\n\
    \t\t$product *= $number;\n\t}\n\treturn [$sum, $product];\n}\necho '<h1>Sum Product</h1>';\n\
    $numbers = [1, 2, 3, 4];\necho 'Input: ' . implode(', ', $numbers) . '<br>';\n\
    echo 'Output: [' . implode(', ', sum_product($numbers)) . ']';\necho '<hr>';\n\
    \nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '<h1>Sum Product</h1>Input: 1, 2, 3, 4<br>Output: [10, 24]<hr>'
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  \n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsml268ha.php:17\n\
    Stack trace:\n#0 /tmp/tmpsml268ha.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpsml268ha.php\
    \ on line 17\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $value) {\n\t\t$sum += $value;\n\t\t$product *= $value;\n\t}\n\treturn array($sum,\
    \ $product);\n}\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = array_sum($numbers);\n  $product = array_product($numbers);\n\
    \  return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    if(count($numbers) == 0) {\n        return array(0,\
    \ 1);\n    }\n    $numbers = array_map(function($value) {\n        return $value+0;\n\
    \    }, $numbers);\n    return array(array_sum($numbers), array_product($numbers));\n\
    }\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\t$sum += $numbers[$i];\n\t\t$product *= $numbers[$i];\n\t}\n\treturn\
    \ array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $result = [0, 1];\n  if (!empty($numbers)) {\n  \
    \  $result[0] = array_sum($numbers);\n    $result[1] = array_product($numbers);\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  for ($i = 0; $i < count($numbers);\
    \ $i++) {\n    $sum += $numbers[$i];\n    $product *= $numbers[$i];\n  }\n  return\
    \ array($sum, $product);\n}\necho \"<br>\";\nprint_r(sum_product(array(1, 2, 3,\
    \ 4)));\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<br>Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = array_sum($numbers);\n  $product = array_product($numbers);\n\
    \  return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = array_sum($numbers);\n  $prod = array_product($numbers);\n\
    \  $newArr = array($sum, $prod);\n  return $newArr;\n}\n\n$numbers = array(1,\
    \ 2, 3, 4);\n\nprint_r(sum_product($numbers));\nfunction candidate(...$args) {\n\
    \    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    if (empty($numbers))\
    \ {\n        return array($sum, $product);\n    } else {\n        foreach ($numbers\
    \ as $number) {\n            $sum += $number;\n            $product *= $number;\n\
    \        }\n        return array($sum, $product);\n    }\n}\n\n$sum_product =\
    \ sum_product(array(1, 2, 3, 4));\nprint_r($sum_product);\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $numbers = [1, 2, 3, 4];\n  if (empty($numbers))\
    \ {\n    $empty = array(0, 1);\n    return $empty;\n  }\n  else {\n    $sum =\
    \ array_sum($numbers);\n    $product = array_product($numbers);\n    $result =\
    \ array($sum, $product);\n    return $result;\n  }\n}\necho \"Using array_sum()\
    \ and array_product() functions, the output is: \";\nprint_r(sum_product($numbers));\n\
    \nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Using array_sum() and array_product() functions, the output is: \nWarning:\
    \ Undefined variable $numbers in /tmp/tmp0munzdge.php on line 22\nArray\n(\n \
    \   [0] => 10\n    [1] => 24\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp0munzdge.php:29\nStack trace:\n#0 /tmp/tmp0munzdge.php(36): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0munzdge.php on line 29\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = array_sum($numbers);\n\t$product = 1;\n\t\
    foreach ($numbers as $number) {\n\t\t$product *= $number;\n\t}\n\treturn array($sum,\
    \ $product);\n}\necho \"<br>--Sum and Product--<br>\";\n$numbers = array(1, 2,\
    \ 3, 4);\nvar_dump(sum_product($numbers));\nfunction candidate(...$args) {\n \
    \   return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<br>--Sum and Product--<br>array(2) {\n  [0]=>\n  int(10)\n  [1]=>\n  int(24)\n\
    }\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  if(sizeof($numbers) == 0) {\n    return array(0,\
    \ 1);\n  }\n  $sum = 0;\n  $product = 1;\n  foreach($numbers as $num) {\n    $sum\
    \ += $num;\n    $product *= $num;\n  }\n  return array($sum, $product);\n}\n\n\
    function candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $total = 0;\n  $product = 1;\n  foreach ($numbers\
    \ as $number) {\n    $total += $number;\n    $product *= $number;\n  }\n  return\
    \ array($total, $product);\n}\n\necho sum_product(array(1, 2, 3, 4));\necho \"\
    \\n\";\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Array to string conversion in /tmp/tmp7ccpjk9h.php on line 18

    Array

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $num) {\n    $sum += $num;\n    $product *= $num;\n  }\n  return array($sum,\
    \ $product);\n}\necho implode(', ', sum_product(array(1, 2, 3, 4))); // 10, 24\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '10, 24

    '
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  if(count($numbers)\
    \ == 0) {\n    $sum = 0;\n    $product = 1;\n  } else {\n    for($i = 0; $i <\
    \ count($numbers); $i++) {\n      $sum += $numbers[$i];\n      $product *= $numbers[$i];\n\
    \    }\n  }\n  return array($sum, $product);\n}\n\nprint_r(sum_product(array(1,\
    \ 2, 3, 4)));\nprint_r(sum_product(array()));\n\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\nArray\n(\n    [0] => 0\n   \
    \ [1] => 1\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    if (empty($numbers))\n        return array(0, 1);\n\
    \    $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n     \
    \   $sum += $number;\n        $product *= $number;\n    }\n    return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    if (count($numbers) === 0) {\n        return array(0,\
    \ 1);\n    }\n    return array(array_sum($numbers), array_product($numbers));\n\
    }\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n   $result = array();\n   if(!empty($numbers)) {\n\
    \     $result = array(array_sum($numbers), array_product($numbers));\n   } else\
    \ {\n     $result = array(0, 1);\n   }\n   return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  if(count($numbers)\
    \ > 0) {\n    foreach($numbers as $i => $v) {\n      $sum += $v;\n      $product\
    \ *= $v;\n    }\n  }\n  return array($sum, $product);\n}\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    if(empty($numbers)) {\n        return [0, 1];\n\
    \    }\n    $sum = 0;\n    $product = 1;\n    foreach($numbers as $number) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return [$sum,\
    \ $product];\n}\n\nprint_r(sum_product([])); // array(0, 1)\nprint_r(sum_product([1,\
    \ 2, 3, 4])); // array(10, 24)\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n)\nArray\n(\n    [0] => 10\n    [1]\
    \ => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t// \u043D\u0430\u043F\u0438\u0448\u0438\u0442\u0435\
    \ \u043A\u043E\u0434 \u0437\u0434\u0435\u0441\u044C\n\t$summ = 0;\n\t$prod = 1;\n\
    \tforeach ($numbers as $value) {\n\t\t$summ += $value;\n\t\t$prod *= $value;\n\
    \t}\n\treturn array($summ, $prod);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    if(count($numbers) == 0) {\n        return array(0,\
    \ 1);\n    } else {\n        $sum = 0;\n        $product = 1;\n        foreach($numbers\
    \ as $number) {\n            $sum += $number;\n            $product *= $number;\n\
    \        }\n        return array($sum, $product);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $prod = 1;\n  $sum = 0;\n  foreach ($numbers as $key\
    \ => $value) {\n    $prod *= $value;\n    $sum += $value;\n  }\n  return array($sum,\
    \ $prod);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  if (empty($numbers)) {\n    return array(0, 1);\n\
    \  }\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as $value) {\n    $sum\
    \ += $value;\n    $product *= $value;\n  }\n  return array($sum, $product);\n\
    }\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = array_sum($numbers);\n\t$prod = array_product($numbers);\n\
    \treturn [$sum, $prod];\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    if (sizeof($numbers) == 0) {\n        return array(0,\
    \ 1);\n    }\n    $sum = array_sum($numbers);\n    $product = array_product($numbers);\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n   return [array_sum($numbers), array_product($numbers)];\n\
    }\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = array_sum($numbers);\n\t$product = 1;\n\t\
    foreach ($numbers as $number) {\n\t\t$product *= $number;\n\t}\n\treturn array($sum,\
    \ $product);\n}\n\n$sum_product = sum_product(array(1, 2, 3, 4));\nprint_r($sum_product);\n\
    echo \"<br />\";\n\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n<br />"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    if (empty($numbers))\
    \ {\n        return array($sum, $product);\n    } else {\n        foreach ($numbers\
    \ as $number) {\n            $sum += $number;\n            $product *= $number;\n\
    \        }\n        return array($sum, $product);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n$numbers = array(1, 2, 3, 4);\nprint_r(sum_product($numbers));\n\
    function candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa27b8qmn.php:17\n\
    Stack trace:\n#0 /tmp/tmpa27b8qmn.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa27b8qmn.php\
    \ on line 17\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = array_sum($numbers);\n    $prod = array_product($numbers);\n\
    \    return array($sum, $prod);\n}\nprint_r(sum_product(array(1, 2, 3, 4)));\n\
    function candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $value) {\n\t\t$sum += $value;\n\t\t$product *= $value;\n\t}\n\t$result = array($sum,\
    \ $product);\n\treturn $result;\n}\n$numbers = array(1, 2, 3, 4);\necho \"<pre>\"\
    ;\nprint_r(sum_product($numbers));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 10\n    [1] => 24\n)\n</pre>"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = array_sum($numbers);\n  $product = 1;\n  if\
    \ ($sum === 0) {\n    return array(0, 1);\n  }\n  foreach ($numbers as $number)\
    \ {\n    $product *= $number;\n  }\n  return array($sum, $product);\n}\n\necho\
    \ \"<pre>\";\nprint_r(sum_product(array(1, 2, 3, 4)));\necho \"</pre>\";\nfunction\
    \ candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 10\n    [1] => 24\n)\n</pre>"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        $sum += $numbers[$i];\n        $product\
    \ *= $numbers[$i];\n    }\n    return [$sum, $product];\n}\n$test_case = sum_product(array(1,\
    \ 2, 3, 4));\necho \"Expected: array(10, 24) -- Actual: \";\nprint_r($test_case);\n\
    function candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Expected: array(10, 24) -- Actual: Array\n(\n    [0] => 10\n    [1] =>\
    \ 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\treturn [array_sum($numbers), array_product($numbers)];\n\
    }\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $result = array(0, 1);\n    foreach ($numbers as\
    \ $value) {\n        $result[0] += $value;\n        $result[1] *= $value;\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tif (empty($numbers))\
    \ {\n\t\treturn array(0, 1);\n\t} else {\n\t\tforeach ($numbers as $number) {\n\
    \t\t\t$sum += $number;\n\t\t\t$product *= $number;\n\t\t}\n\t\treturn array($sum,\
    \ $product);\n\t}\n}\nprint_r(sum_product(array(1, 2, 3, 4)));\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $value) {\n        $sum += $value;\n        $product *= $value;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $num) {\n        $sum += $num;\n        $product *= $num;\n    }\n    return\
    \ array($sum, $product);\n}\n\n$numbers = array(1, 2, 3, 4);\nprint_r(sum_product($numbers));\n\
    \nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\tif (empty($numbers)) {\n\t\treturn array(0, 1);\n\
    \t}\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as $number) {\n\t\t$sum\
    \ += $number;\n\t\t$product *= $number;\n\t}\n\treturn array($sum, $product);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n$sumProduct = sum_product(array(1, 2,\
    \ 3, 4));\nvar_dump($sumProduct);\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  int(10)\n  [1]=>\n  int(24)\n}\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    // start your code here\n    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\nfunction\
    \ candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\tif (empty($numbers)) return array(0, 1);\n\telse\
    \ {\n\t\t$sum = 0;\n\t\t$product = 1;\n\t\tforeach ($numbers as $number) {\n\t\
    \t\t$sum += $number;\n\t\t\t$product *= $number;\n\t\t}\n\t\treturn array($sum,\
    \ $product);\n\t}\n}\necho \"<pre>\";\necho \"sum_product(array(1, 2, 3, 4))\"\
    ;\nvar_dump(sum_product(array(1, 2, 3, 4)));\necho \"sum_product(array())\";\n\
    var_dump(sum_product(array()));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>sum_product(array(1, 2, 3, 4))array(2) {\n  [0]=>\n  int(10)\n  [1]=>\n\
    \  int(24)\n}\nsum_product(array())array(2) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n\
    }\n</pre>"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $key => $value) {\n    $sum += $value;\n    $product *= $value;\n  }\n  return\
    \ array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tif (!empty($numbers))\
    \ {\n\t\tforeach ($numbers as $number) {\n\t\t\t$sum += $number;\n\t\t\t$product\
    \ *= $number;\n\t\t}\n\t}\n\treturn array($sum, $product);\n}\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 255
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa27b8qmn.php:17\n\
    Stack trace:\n#0 /tmp/tmpa27b8qmn.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa27b8qmn.php\
    \ on line 17\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $product = array_product($numbers);\n    $sum =\
    \ array_sum($numbers);\n    return array($sum, $product);\n}\n\necho '<br>';\n\
    echo implode(', ', sum_product(array(1, 2, 3, 4)));\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: <br>10, 24
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  if (empty($numbers)) {\n    return array(0, 1);\n\
    \  }\n  $sum = array_sum($numbers);\n  $product = array_product($numbers);\n \
    \ return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as\
    \ $number) {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 255
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  // Write your code here\n  // To print results to\
    \ the standard output you can use print\n  // Example: print \"Hello world!\"\
    ;\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as $num) {\n    $sum += $num;\n\
    \    $product *= $num;\n  }\n  print_r([$sum, $product]);\n}\n\nsum_product([1,\
    \ 2, 3, 4]);\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 24\n)\nArray\n(\n    [0] => 0\n   \
    \ [1] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgvdpe97j.php:27\n\
    Stack trace:\n#0 /tmp/tmpgvdpe97j.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgvdpe97j.php\
    \ on line 27\n"
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n  if (empty($numbers)) {\n    return array(0, 1);\n\
    \  }\n  $sum = 0;\n  $product = 1;\n  foreach ($numbers as $num) {\n    $sum +=\
    \ $num;\n    $product *= $num;\n  }\n  return array($sum, $product);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
    \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
    \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $number) {\n\t\t$sum += $number;\n\t\t$product *= $number;\n\t}\n\treturn array($sum,\
    \ $product);\n}\n\nfunction candidate(...$args) {\n    return sum_product(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3,\
    \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824447
- exit_code: 0
  program: "<?php\n// For a given array of integers, return an array consisting of\
    \ a sum and a product of all the integers in an array.\n// Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n// >>> sum_product(array())\n\
    // array(0, 1)\n// >>> sum_product(array(1, 2, 3, 4))\n// array(10, 24)\nfunction\
    \ sum_product($numbers) {\n    // you code here\n\n    $sum = 0;\n    $product\
    \ = 1;\n\n    if (empty($numbers)) {\n        return array(0, 1);\n    }\n\n \
    \   foreach ($numbers as $num) {\n        $sum += $num;\n        $product *= $num;\n\
    \    }\n\n    return array($sum, $product);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1)) !== array(3, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 0)) !== array(100, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 5, 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(10)) !== array(10, 10)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028946

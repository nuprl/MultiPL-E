language: php
name: HumanEval_91_is_bored
results:
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = explode(' ', $S);\n    $boredoms = 0;\n    foreach ($words as $word) {\n \
    \       if ($word == 'I') {\n            $boredoms++;\n        }\n    }\n    return\
    \ $boredoms;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_fq0h79b.php:30\n\
    Stack trace:\n#0 /tmp/tmp_fq0h79b.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_fq0h79b.php\
    \ on line 30\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $sentences = explode('. ', $S);\n    foreach ($sentences as $sentence)\
    \ {\n        $sentence = explode(' ', $sentence);\n        if ($sentence[0] ==\
    \ 'I') {\n            $boredoms += 1;\n        }\n    }\n    return $boredoms;\n\
    }\necho is_bored(\"I love you, but I love cakes too!\");\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode(' ', $S);\n    $boredom = 0;\n    foreach ($S as $word) {\n      \
    \  if ($word == 'I') {\n            $boredom++;\n        }\n    }\n    return\
    \ $boredom;\n}\necho is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\").PHP_EOL;\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshqqfb4u.php:31\n\
    Stack trace:\n#0 /tmp/tmpshqqfb4u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpshqqfb4u.php\
    \ on line 31\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $i=0;\n\
    \  $a = explode(\" \", $S);\n  foreach ($a as $key => $value) {\n    if(strtolower($value)===\"\
    i\")\n      $i++;\n  }\n  return $i;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8acyr1hx.php:30\n\
    Stack trace:\n#0 /tmp/tmp8acyr1hx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8acyr1hx.php\
    \ on line 30\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n   $tok\
    \ = strtok($S, \" \\n\\t.!?\");\n   $count = 0;\n   while ($tok !== false) {\n\
    \     if (strtolower($tok) == \"i\") $count++;\n     $tok = strtok(\" \\n\\t.!?\"\
    );\n   }\n   return $count;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8vu6ddi.php:29\n\
    Stack trace:\n#0 /tmp/tmpw8vu6ddi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpw8vu6ddi.php\
    \ on line 29\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode(' ', $S);\n    $i = 0;\n    foreach ($S as $s) {\n        if ($s ==\
    \ 'I') {\n            $i++;\n        }\n    }\n    return $i;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4jq2n33z.php:31\n\
    Stack trace:\n#0 /tmp/tmp4jq2n33z.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4jq2n33z.php\
    \ on line 31\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ your code here\n    $S_array = explode(\" \", $S);\n    $result = 0;\n    for\
    \ ($i = 0; $i < count($S_array); $i++) {\n        if ($S_array[$i] == \"I\") {\n\
    \            $result++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpocn6yddz.php:32\n\
    Stack trace:\n#0 /tmp/tmpocn6yddz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpocn6yddz.php\
    \ on line 32\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $split\
    \ = preg_split('/[!?.]/', $S);\n  $words = [];\n  $count = 0;\n  foreach ($split\
    \ as $sentence) {\n    $words = explode(' ', $sentence);\n    if ($words[0] ==\
    \ 'I') {\n      $count++;\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvk2lirp.php:31\n\
    Stack trace:\n#0 /tmp/tmpzvk2lirp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzvk2lirp.php\
    \ on line 31\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = explode(\" \", $S);\n  $count = 0;\n  foreach ($S as $word) {\n    if ($word\
    \ == \"I\") {\n      $count++;\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjc14hd_s.php:30\n\
    Stack trace:\n#0 /tmp/tmpjc14hd_s.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjc14hd_s.php\
    \ on line 30\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $s\
    \ = preg_split('/\\.|\\?|!/', $S);\n    $count = 0;\n    foreach ($s as $i) {\n\
    \        if (preg_match('/^I /', $i)) {\n            $count++;\n        }\n  \
    \  }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn2ytdt7u.php:30\n\
    Stack trace:\n#0 /tmp/tmpn2ytdt7u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpn2ytdt7u.php\
    \ on line 30\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $a\
    \ = explode(' ', $S);\n  $count = 0;\n  foreach ($a as $key => $value) {\n   \
    \ if ($value == 'I') {\n      $count++;\n    }\n  }\n  return $count;\n}\n$S =\
    \ \"The sky is blue. The sun is shining. I love this weather\";\necho is_bored($S);\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiebe2bot.php:32\n\
    Stack trace:\n#0 /tmp/tmpiebe2bot.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpiebe2bot.php\
    \ on line 32\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ preg_match_all('/I\\s(.*?)\\s(\\.|\\?|\\!)/', $S, $matches);\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuuxnm4nd.php:23\n\
    Stack trace:\n#0 /tmp/tmpuuxnm4nd.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpuuxnm4nd.php\
    \ on line 23\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ count(explode('.', $S)) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_9u82dc_.php:21\n\
    Stack trace:\n#0 /tmp/tmp_9u82dc_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_9u82dc_.php\
    \ on line 21\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, 'I');\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_v6hw3_l.php:20\n\
    Stack trace:\n#0 /tmp/tmp_v6hw3_l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_v6hw3_l.php\
    \ on line 20\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $counter\
    \ = 0;\n  $arr = explode(' ', $S);\n  for ($i = 0; $i < count($arr); $i++) {\n\
    \    if ($arr[$i] == 'I') {\n      $counter++;\n    }\n  }\n  return $counter;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_9rpe6e.php:31\n\
    Stack trace:\n#0 /tmp/tmpx_9rpe6e.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpx_9rpe6e.php\
    \ on line 31\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, \"I\") + substr_count($S, \"i\");\n}\n\nif (!debug_backtrace())\
    \ {\n    // this function is being executed directly\n    $input = file_get_contents(\"\
    php://stdin\");\n    echo is_bored($input) . \"\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynifnvf2.php:25\n\
    Stack trace:\n#0 /tmp/tmpynifnvf2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpynifnvf2.php\
    \ on line 25\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $sentences = explode(\".|!|?\", $S);\n    foreach ($sentences as $sentence)\
    \ {\n        if ($sentence[0] == \"I\") {\n            $count += 1;\n        }\n\
    \    }\n    return $count;\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\") . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0tldq4in.php:27\n\
    Stack trace:\n#0 /tmp/tmp0tldq4in.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0tldq4in.php\
    \ on line 27\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('. ', $S);\n    $boredoms = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        if (preg_match('/^I\\W/', $sentence)) {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $result\
    \ = [];\n    $index = 0;\n    $str = str_replace('!', '.', $S);\n    $str = str_replace('?',\
    \ '.', $str);\n    $split = explode('.', $str);\n    foreach ($split as $key =>\
    \ $value) {\n        $result[$index] = $value;\n        $index++;\n    }\n   \
    \ $new_arr = array_map('trim', $result);\n    $new_arr = array_filter($new_arr);\n\
    \    $result = 0;\n    foreach ($new_arr as $key => $value) {\n        if (strpos($value,\
    \ 'I') === 0) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi0zl81fp.php:36\n\
    Stack trace:\n#0 /tmp/tmpi0zl81fp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpi0zl81fp.php\
    \ on line 36\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $s\
    \ = explode(' ', $S);\n    $j = 0;\n    for ($i = 0; $i < count($s); $i++) {\n\
    \        if ($s[$i] == 'I') {\n            $j++;\n        }\n    }\n    return\
    \ $j;\n}\n\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    );\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6vx2lk9.php:33\n\
    Stack trace:\n#0 /tmp/tmpg6vx2lk9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpg6vx2lk9.php\
    \ on line 33\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $arr\
    \ = explode(\" \", $S);\n    $count = 0;\n    foreach ($arr as $item) {\n    \
    \    if ($item == \"I\") {\n            $count += 1;\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmhd9zcvw.php:30\n\
    Stack trace:\n#0 /tmp/tmpmhd9zcvw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmhd9zcvw.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $sentences = explode(['.', '?', '!'], $S);\n    foreach ($sentences\
    \ as $sentence) {\n        if (strtoupper(substr($sentence, 0, 1)) == 'I') {\n\
    \            $boredoms++;\n        }\n    }\n    return $boredoms;\n}\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #1 ($separator)\
    \ must be of type string, array given in /tmp/tmpvd2iy7zb.php:12\nStack trace:\n\
    #0 /tmp/tmpvd2iy7zb.php(12): explode(Array, 'Hello world')\n#1 /tmp/tmpvd2iy7zb.php(21):\
    \ is_bored('Hello world')\n#2 /tmp/tmpvd2iy7zb.php(25): candidate('Hello world')\n\
    #3 /tmp/tmpvd2iy7zb.php(33): test()\n#4 {main}\n  thrown in /tmp/tmpvd2iy7zb.php\
    \ on line 12\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$arr\
    \ = explode(\" \", $S);\n\t$boredoms = 0;\n\t$broken = false;\n\tfor ($i = 0;\
    \ $i < count($arr); $i++) {\n\t\tif ($arr[$i] == \"I\") {\n\t\t\t$boredoms++;\n\
    \t\t\t$broken = true;\n\t\t}\n\t\tif ($broken && ($arr[$i] == \".\" || $arr[$i]\
    \ == \"?\" || $arr[$i] == \"!\")) {\n\t\t\t$broken = false;\n\t\t}\n\t}\n\treturn\
    \ $boredoms;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6h7vdfc.php:36\n\
    Stack trace:\n#0 /tmp/tmpd6h7vdfc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpd6h7vdfc.php\
    \ on line 36\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$found\
    \ = 0;\n\t$sentences = explode(array('.', '?', '!'), $S);\n\tforeach ($sentences\
    \ as $sentence) {\n\t\tif (substr($sentence, 0, 2) == 'I ') {\n\t\t\t$found++;\n\
    \t\t}\n\t}\n\treturn $found;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #1 ($separator)\
    \ must be of type string, array given in /tmp/tmpef1_rco3.php:12\nStack trace:\n\
    #0 /tmp/tmpef1_rco3.php(12): explode(Array, 'Hello world')\n#1 /tmp/tmpef1_rco3.php(21):\
    \ is_bored('Hello world')\n#2 /tmp/tmpef1_rco3.php(25): candidate('Hello world')\n\
    #3 /tmp/tmpef1_rco3.php(33): test()\n#4 {main}\n  thrown in /tmp/tmpef1_rco3.php\
    \ on line 12\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Your code here\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqekmnp1b.php:18\n\
    Stack trace:\n#0 /tmp/tmpqekmnp1b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqekmnp1b.php\
    \ on line 18\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode('.', $S);\n    $S = implode('', $S);\n    $S = explode('?', $S);\n\
    \    $S = implode('', $S);\n    $S = explode('!', $S);\n    $S = implode('', $S);\n\
    \    $S = explode(' ', $S);\n    $c = 0;\n    foreach ($S as $v) {\n        if\
    \ (strtolower($v) == 'i') {\n            $c++;\n        }\n    }\n    return $c;\n\
    }\n\necho is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\") . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpms0080qu.php:40\n\
    Stack trace:\n#0 /tmp/tmpms0080qu.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpms0080qu.php\
    \ on line 40\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $string_array\
    \ = explode(\" \", $S);\n    $boredoms = 0;\n    foreach ($string_array as $key\
    \ => $value) {\n        if ($value === \"I\") {\n            $boredoms++;\n  \
    \      }\n    }\n    return $boredoms;\n}\nfunction candidate(...$args) {\n  \
    \  return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjh068xp.php:30\n\
    Stack trace:\n#0 /tmp/tmpgjh068xp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgjh068xp.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $sentences = explode(\". \", $S);\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(\" \", $sentence);\n        if (strtolower($words[0])\
    \ == \"i\") {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    );\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = explode(\" \", $S);\n  $S = implode(\"\", $S);\n  $S = explode(\".\", $S);\n\
    \  $S = implode(\"\", $S);\n  $S = explode(\"?\", $S);\n  $S = implode(\"\", $S);\n\
    \  $S = explode(\"!\", $S);\n  $S = implode(\"\", $S);\n  if (strpos($S, \"I\"\
    ) === 0) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\necho is_bored(\"\
    I am happy\") . PHP_EOL;\necho is_bored(\"You are sad\") . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpks5pzxvm.php:33\n\
    Stack trace:\n#0 /tmp/tmpks5pzxvm.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpks5pzxvm.php\
    \ on line 33\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ count(explode('I', $S)) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrffcild.php:20\n\
    Stack trace:\n#0 /tmp/tmpwrffcild.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwrffcild.php\
    \ on line 20\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$boredom\
    \ = 0;\n\t$arr = explode(\" \", $S);\n\tfor ($i = 0; $i < count($arr); $i++) {\n\
    \t\tif ($arr[$i] == \"I\") {\n\t\t\t$boredom++;\n\t\t}\n\t}\n\treturn $boredom;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjxpalt7.php:30\n\
    Stack trace:\n#0 /tmp/tmpsjxpalt7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsjxpalt7.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Breaks the string into sentences\n    $sentences = preg_split('/(?<=[.?!])\\\
    s*/', $S, -1, PREG_SPLIT_NO_EMPTY);\n    $count = 0;\n    // This can be done\
    \ with a loop as well, but I wanted to try a one-liner :)\n    // The count_if_bored($sentence)\
    \ function simply checks if the string starts with \"I\"\n    return array_reduce($sentences,\
    \ function($count, $sentence) {\n        return $count + count_if_bored($sentence);\n\
    \    }, 0);\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_if_bored()\
    \ in /tmp/tmpjkgzso2p.php:17\nStack trace:\n#0 [internal function]: {closure}(0,\
    \ 'Hello world')\n#1 /tmp/tmpjkgzso2p.php(18): array_reduce(Array, Object(Closure),\
    \ 0)\n#2 /tmp/tmpjkgzso2p.php(22): is_bored('Hello world')\n#3 /tmp/tmpjkgzso2p.php(26):\
    \ candidate('Hello world')\n#4 /tmp/tmpjkgzso2p.php(34): test()\n#5 {main}\n \
    \ thrown in /tmp/tmpjkgzso2p.php on line 17\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $s\
    \ = explode(' ',$S);\n    $boredoms = 0;\n    foreach ($s as $word) {\n      \
    \  if($word == 'I'){\n            $boredoms += 1;\n        }\n    }\n    return\
    \ $boredoms;\n}\necho is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\");\necho is_bored(\"Hello world\");\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiev_lc3e.php:33\n\
    Stack trace:\n#0 /tmp/tmpiev_lc3e.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpiev_lc3e.php\
    \ on line 33\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode(['.', '?', '!'], $S);\n    $boredoms = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        $words = explode(' ', $sentence);\n        if ($words[0]\
    \ == 'I') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #1 ($separator)\
    \ must be of type string, array given in /tmp/tmpasc5l0lk.php:11\nStack trace:\n\
    #0 /tmp/tmpasc5l0lk.php(11): explode(Array, 'Hello world')\n#1 /tmp/tmpasc5l0lk.php(23):\
    \ is_bored('Hello world')\n#2 /tmp/tmpasc5l0lk.php(27): candidate('Hello world')\n\
    #3 /tmp/tmpasc5l0lk.php(35): test()\n#4 {main}\n  thrown in /tmp/tmpasc5l0lk.php\
    \ on line 11\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $arr\
    \ = explode(\" \", $S);\n    foreach ($arr as $value) {\n        if ($value ==\
    \ \"I\") {\n            return 1;\n        }\n    }\n    return 0;\n}\n\necho\
    \ is_bored(\"I love PHP!\");\necho \"\\n\";\necho is_bored(\"I love Java!\");\n\
    echo \"\\n\";\necho is_bored(\"I love JavaScript! She loves C#!\");\necho \"\\\
    n\";\necho is_bored(\"The sky is blue. The sun is shining. I love this weather!\"\
    );\necho \"\\n\";\necho is_bored(\"PHP is my favourite programming language. I\
    \ love it!\");\necho \"\\n\";\necho is_bored(\"I love Pascal! I love programming!\
    \ :)\");\necho \"\\n\";\necho is_bored(\"Hello world\");\necho \"\\n\";\necho\
    \ is_bored(\"I'm boring. She's boring. They're boring. We're boring.\");\necho\
    \ \"\\n\";\necho is_bored(\"Greetings, user! All is well. I'm a simple chatbot.\"\
    );\necho \"\\n\";\necho is_bored(\"I love PHP! I love programming! :)\");\necho\
    \ \"\\n\";\necho is_bored(\"I love PHP! I love programming! :) She loves Pascal!\
    \ She loves programming! :)\");\necho \"\\n\";\necho is_bored(\"I love PHP! I\
    \ love programming! :) She loves Pascal! She loves programming! :) He loves Python!\
    \ He loves coding! :)\");\necho \"\\n\";\necho is_bored(\"I love PHP! I love programming!\
    \ :) She loves Pascal! She loves programming! :) He loves Python! He loves coding!\
    \ :) We love JavaScript! We love web development! :)\");\necho \"\\n\";\necho\
    \ is_bored(\"I love PHP! I love programming! :) She loves Pascal! She loves programming!\
    \ :) He loves Python! He loves coding! :) We love JavaScript! We love web development!\
    \ :) You love Java! You love coding! :)\");\necho \"\\n\";\necho is_bored(\"I\
    \ love PHP! I love programming! :) She loves Pascal! She loves programming! :)\
    \ He loves Python! He loves coding! :) We love JavaScript! We love web development!\
    \ :) You love Java! You love coding! :) They love\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Hello", expecting ")" in /tmp/tmpeqxcxth0.php
    on line 54

    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $result\
    \ = 0;\n    $delimiters = array('.', '?', '!');\n    foreach($delimiters as $value)\
    \ {\n        $splits = explode($value, $S);\n        if(count($splits) > 1) {\n\
    \            foreach($splits as $split) {\n                if(preg_match('/^\\\
    s*I/', $split)) {\n                    $result += 1;\n                }\n    \
    \        }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4652murv.php:31\n\
    Stack trace:\n#0 /tmp/tmp4652murv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4652murv.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('. ', $S);\n    $count = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        if (substr($sentence, 0, 2) == 'I ') {\n            $count++;\n \
    \       }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ Your code here.\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0dcagds6.php:19\n\
    Stack trace:\n#0 /tmp/tmp0dcagds6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp0dcagds6.php\
    \ on line 19\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('.', $S);\n    $boredoms = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        if (strpos($sentence, 'I') === 0) {\n            $boredoms++;\n \
    \       }\n    }\n    return $boredoms;\n}\n\nif (is_bored(\"Hello world\") ==\
    \ 0) {\n    echo \"correct\\n\";\n} else {\n    echo \"wrong\\n\";\n}\n\nif (is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") == 1) {\n    echo\
    \ \"correct\\n\";\n} else {\n    echo \"wrong\\n\";\n}\n\nif (is_bored(\"I am\
    \ bored. I need to do something. Hey, can you play with me?\") == 3) {\n    echo\
    \ \"correct\\n\";\n} else {\n    echo \"wrong\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "correct\nwrong\nwrong\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmps3wrkai7.php:44\nStack trace:\n#0 /tmp/tmps3wrkai7.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmps3wrkai7.php on line 44\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode(\" \", $S);\n    $count = 0;\n    for ($i = 0; $i < count($S); $i++)\
    \ {\n        if ($S[$i] == \"I\") {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3g409em6.php:32\n\
    Stack trace:\n#0 /tmp/tmp3g409em6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3g409em6.php\
    \ on line 32\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$S\
    \ = preg_split('/[.?!]/', $S);\n\t$count = 0;\n\tforeach ($S as $word) {\n\t\t\
    if (strpos($word, 'I') === 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa6opc2xl.php:26\n\
    Stack trace:\n#0 /tmp/tmpa6opc2xl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpa6opc2xl.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = explode(' ', str_replace(['.', '?', '!'], '', $S));\n    return count(array_filter($words,\
    \ function($word) {\n        return strtolower($word) === 'i';\n    }));\n}\n\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd7adsync.php:27\n\
    Stack trace:\n#0 /tmp/tmpd7adsync.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd7adsync.php\
    \ on line 27\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ Your code goes here\n  $sentences = explode(\" \", $S);\n  $bored = 0;\n  foreach\
    \ ($sentences as $sentence) {\n    $first_letter = substr($sentence, 0, 1);\n\
    \    if ($first_letter == \"I\") {\n      $bored++;\n    }\n  }\n  return $bored;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxkk0rxl.php:29\n\
    Stack trace:\n#0 /tmp/tmpsxkk0rxl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsxkk0rxl.php\
    \ on line 29\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $B\
    \ = 0;\n    $S = explode(' ', str_replace(['!', '.', '?'], ' ', $S));\n    for\
    \ ($i = 0; $i < count($S); $i++) {\n        if ($S[$i] == 'I') {\n           \
    \ $B++;\n        }\n    }\n    return $B;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk8fvnkr.php:31\n\
    Stack trace:\n#0 /tmp/tmpzk8fvnkr.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzk8fvnkr.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode('.', $S);\n    $S = array_filter($S);\n    $S = array_map('trim',\
    \ $S);\n    $S = array_map('strtolower', $S);\n    $S = array_map('explode', array_fill(0,\
    \ count($S), ' '), $S);\n    foreach ($S as $i => $s) {\n        if ($s[0] ==\
    \ 'i') {\n            return 1;\n        }\n    }\n    return 0;\n}\n\n$a = 'Hello\
    \ world';\n$b = 'The sky is blue. The sun is shining. I love this weather';\n\
    $r = is_bored($a);\nprint_r($r);\n$r = is_bored($b);\nprint_r($r);\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "01\nFatal error: Uncaught Exception: Test failed! in /tmp/tmploxdii9e.php:39\n\
    Stack trace:\n#0 /tmp/tmploxdii9e.php(43): test()\n#1 {main}\n  thrown in /tmp/tmploxdii9e.php\
    \ on line 39\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('.|!|?', $S);\n    $boredoms = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(' ', $sentence);\n        if ($words[0] == 'I')\
    \ {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbe_hjp2.php:31\n\
    Stack trace:\n#0 /tmp/tmpvbe_hjp2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvbe_hjp2.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ count(array_filter(explode(\".\",$S), function($x) { return strtolower(substr($x,0,2))\
    \ == \"i \"; }));\n}\n\necho is_bored(\"The sky is blue. The sun is shining. I\
    \ love this weather\").\"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxtc8ndd.php:24\n\
    Stack trace:\n#0 /tmp/tmpmxtc8ndd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmxtc8ndd.php\
    \ on line 24\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ substr_count($S, \"I \");\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\").\"\\n\";\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4g1aqfk.php:24\n\
    Stack trace:\n#0 /tmp/tmpr4g1aqfk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpr4g1aqfk.php\
    \ on line 24\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = preg_split('/(?<=[.?!])\\s*/', $S, -1, PREG_SPLIT_NO_EMPTY);\n    $r = 0;\n\
    \    foreach ($S as $s) {\n        if (substr($s, 0, 1) == 'I') {\n          \
    \  $r++;\n        }\n    }\n    return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv63ra14g.php:27\n\
    Stack trace:\n#0 /tmp/tmpv63ra14g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpv63ra14g.php\
    \ on line 27\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $arr\
    \ = explode(\" \", $S);\n    foreach ($arr as $key => $word) {\n        if (0\
    \ === $key && 'I' === $word) {\n            return 1;\n        }\n    }\n    return\
    \ 0;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ft6azbr.php:29\n\
    Stack trace:\n#0 /tmp/tmp9ft6azbr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9ft6azbr.php\
    \ on line 29\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = preg_split('/\\.|\\?|\\!/', $S);\n    $c = 0;\n    foreach ($S as $s) {\n\
    \        if (preg_match('/^I/', $s)) {\n            $c++;\n        }\n    }\n\
    \    return $c;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1ftz1i_.php:26\n\
    Stack trace:\n#0 /tmp/tmpw1ftz1i_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpw1ftz1i_.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ substr_count($S, 'I');\n}\necho is_bored(\"I am so bored.\");\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6iautt9.php:21\n\
    Stack trace:\n#0 /tmp/tmpe6iautt9.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe6iautt9.php\
    \ on line 21\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$sentences\
    \ = explode(['.', '?', '!'], $S);\n\t$i = 0;\n\tforeach ($sentences as $s) {\n\
    \t\tif (substr($s, 0, 2) == 'I ') {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn $i;\n}\n\
    $result = is_bored(\"This is not boring. This is too boring. I am so bored.\"\
    );\necho $result;\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #1 ($separator)\
    \ must be of type string, array given in /tmp/tmpkgoytqyw.php:11\nStack trace:\n\
    #0 /tmp/tmpkgoytqyw.php(11): explode(Array, 'This is not bor...')\n#1 /tmp/tmpkgoytqyw.php(20):\
    \ is_bored('This is not bor...')\n#2 {main}\n  thrown in /tmp/tmpkgoytqyw.php\
    \ on line 11\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$arr\
    \ = explode(\" \", $S);\n\t$count = 0;\n\tforeach ($arr as $key => $value) {\n\
    \t\tif (strtolower($value) == \"i\") {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\necho is_bored(\"I am never bored.\");\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvxph6vd.php:31\n\
    Stack trace:\n#0 /tmp/tmpmvxph6vd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmvxph6vd.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ ...\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9lod_79v.php:18\n\
    Stack trace:\n#0 /tmp/tmp9lod_79v.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9lod_79v.php\
    \ on line 18\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = explode(\".\", $S);\n  $S = array_merge($S, explode(\"?\", $S));\n  $S = array_merge($S,\
    \ explode(\"!\", $S));\n  $count = 0;\n  foreach ($S as $word) {\n    if (substr($word,\
    \ 0, 1) == \"I\") {\n      $count++;\n    }\n  }\n  return $count;\n}\n\necho\
    \ is_bored(\"Hello world\");\necho \"\\n\";\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\");\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmprl4bztp0.php:12\nStack trace:\n#0\
    \ /tmp/tmprl4bztp0.php(12): explode('?', Array)\n#1 /tmp/tmprl4bztp0.php(23):\
    \ is_bored(Array)\n#2 {main}\n  thrown in /tmp/tmprl4bztp0.php on line 12\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredom\
    \ = 0;\n    $sentences = explode(\".\", $S);\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(\" \", $sentence);\n        if ($words[0] == \"\
    I\") {\n            $boredom++;\n        }\n    }\n    return $boredom;\n}\necho\
    \ is_bored(\"The sky is blue. The sun is shining. I love this weather\") . \"\\\
    n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4snmd9g3.php:31\n\
    Stack trace:\n#0 /tmp/tmp4snmd9g3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4snmd9g3.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('. ', $S);\n    // # !!!\n    $boredoms = 0;\n    foreach ($sentences\
    \ as $s) {\n        if (substr($s, 0, 2) == 'I ') {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\");\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $sentences = explode(\".\", $S);\n    foreach ($sentences as $S) {\n\
    \        $S = trim($S);\n        if (strncmp($S, \"I\", 1) == 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphf3hm0dt.php:28\n\
    Stack trace:\n#0 /tmp/tmphf3hm0dt.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphf3hm0dt.php\
    \ on line 28\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ $S: string of words\n\n  // WRITE YOUR CODE HERE\n\n  // DO NOT CHANGE THE RETURNED\
    \ VALUE\n  return 0;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxlsaxrmn.php:25\n\
    Stack trace:\n#0 /tmp/tmpxlsaxrmn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxlsaxrmn.php\
    \ on line 25\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $c\
    \ = 0;\n    $p = str_split($S);\n    $s = '';\n    foreach ($p as $v) {\n    \
    \    $s .= $v;\n        if ($v == '.' || $v == '?' || $v == '!') {\n         \
    \   if (strpos($s, 'I') === 0) {\n                $c++;\n            }\n     \
    \       $s = '';\n        }\n    }\n    return $c;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbs1qtkho.php:32\n\
    Stack trace:\n#0 /tmp/tmpbs1qtkho.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbs1qtkho.php\
    \ on line 32\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = explode(\". \", $S);\n  $count = 0;\n  foreach ($sentences as $sentence) {\n\
    \    if (strpos($sentence, \"I\") === 0) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6763g6sz.php:26\n\
    Stack trace:\n#0 /tmp/tmp6763g6sz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6763g6sz.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $s\
    \ = preg_split('/[!.?]/', $S);\n  $count = 0;\n  foreach ($s as $sentence) {\n\
    \    if (preg_match('/^I/', $sentence)) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr3fbm7hs.php:27\n\
    Stack trace:\n#0 /tmp/tmpr3fbm7hs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpr3fbm7hs.php\
    \ on line 27\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = preg_split('/[.?!]/', $S);\n    $boredoms = 0;\n    foreach ($sentences as\
    \ $s) {\n        if (preg_match('/^(i|I)/', $s)) {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvkj5edye.php:27\n\
    Stack trace:\n#0 /tmp/tmpvkj5edye.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvkj5edye.php\
    \ on line 27\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ your code goes here\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84kyfx2c.php:18\n\
    Stack trace:\n#0 /tmp/tmp84kyfx2c.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp84kyfx2c.php\
    \ on line 18\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode(\". \", $S);\n    $boredoms = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        if (substr($sentence, 0, 2) == \"I \") {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\n\necho is_bored(\"I am bored. I am\
    \ bored.\") . \"\\n\";\necho is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2

    0

    1

    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $s\
    \ = explode(' ', $S);\n  $boredoms = 0;\n  for ($i = 0; $i < count($s); $i++)\
    \ {\n    if ($s[$i] == 'I') {\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n\
    }\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56mxyomo.php:31\n\
    Stack trace:\n#0 /tmp/tmp56mxyomo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp56mxyomo.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $cnt\
    \ = 0;\n    $sen = explode(['.', '?', '!'], $S);\n    foreach ($sen as $s) {\n\
    \        if (strpos($s, 'I') === 0) {\n            $cnt++;\n        }\n    }\n\
    \    return $cnt;\n}\n\necho is_bored(\"The sky is blue. The sun is shining. I\
    \ love this weather\") . PHP_EOL;\necho is_bored(\"Hello world\") . PHP_EOL;\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #1 ($separator)\
    \ must be of type string, array given in /tmp/tmprrrh_pns.php:12\nStack trace:\n\
    #0 /tmp/tmprrrh_pns.php(12): explode(Array, 'The sky is blue...')\n#1 /tmp/tmprrrh_pns.php(21):\
    \ is_bored('The sky is blue...')\n#2 {main}\n  thrown in /tmp/tmprrrh_pns.php\
    \ on line 12\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $sentences = explode('.', $S);\n  foreach ($sentences as $sentence)\
    \ {\n    $words = explode(' ', $sentence);\n    if ($words[0] == 'I') {\n    \
    \  $boredoms++;\n    }\n  }\n  return $boredoms;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpseso09va.php:30\n\
    Stack trace:\n#0 /tmp/tmpseso09va.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpseso09va.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $numBoredoms\
    \ = 0;\n  $sentences = explode(\". \", $S);\n  foreach ($sentences as $s) {\n\
    \    if (substr($s, 0, 2) == \"I \") {\n      $numBoredoms++;\n    }\n  }\n  return\
    \ $numBoredoms;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $c\
    \ = 0;\n  $a = explode('.', $S);\n  foreach ($a as $v) {\n    $w = explode(' ',\
    \ $v);\n    if ($w[0] == 'I') $c++;\n  }\n  return $c;\n}\necho is_bored(\"Hello\
    \ world\").'<br>';\necho is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\").'<br>';\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather!\").'<br>';\necho is_bored(\"I love this weather!\").'<br>';\n\
    echo is_bored(\"The sky is blue! The sun is shining! I love this weather.\").'<br>';\n\
    echo is_bored(\"The sky is blue. The sun is shining. I love this weather?\").'<br>';\n\
    echo is_bored(\"I love this weather? The sky is blue. The sun is shining.\").'<br>';\n\
    echo is_bored(\"I love this weather? The sky is blue! The sun is shining?\").'<br>';\n\
    echo is_bored(\"The sky is blue? The sun is shining. I love this weather!\").'<br>';\n\
    echo is_bored(\"The sky is blue. The sun is shining. I love this weather. I love\
    \ this weather. I love this weather.\").'<br>';\necho is_bored(\"I love this weather.\
    \ I love this weather. I love this weather!\").'<br>';\necho is_bored(\"I love\
    \ this weather. I love this weather. I love this weather.\").'<br>';\necho is_bored(\"\
    The sky is blue! The sun is shining! I love this weather. I love this weather.\
    \ I love this weather.\").'<br>';\necho is_bored(\"The sky is blue. The sun is\
    \ shining. I love this weather. I love this weather. I love this weather?\").'<br>';\n\
    echo is_bored(\"I love this weather. I love this weather. I love this weather.\
    \ The sky is blue. The sun is shining. I love this weather. I love this weather.\
    \ I love this weather.\"\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpcxzc5q4l.php
    on line 34

    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $split = explode(\" \", $S);\n    foreach ($split as $key => $value)\
    \ {\n        if ($value == \"I\") {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptt6jul80.php:32\n\
    Stack trace:\n#0 /tmp/tmptt6jul80.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptt6jul80.php\
    \ on line 32\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, 'I');\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7uc7xylp.php:19\n\
    Stack trace:\n#0 /tmp/tmp7uc7xylp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7uc7xylp.php\
    \ on line 19\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ substr_count($S, \"I\");\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz8s99kek.php:20\n\
    Stack trace:\n#0 /tmp/tmpz8s99kek.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpz8s99kek.php\
    \ on line 20\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $m\
    \ = explode(' ',$S);\n    $count = 0;\n    for($i=0;$i<count($m);$i++){\n    \
    \    if($m[$i] == 'I'){\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqlb6vu79.php:30\n\
    Stack trace:\n#0 /tmp/tmpqlb6vu79.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqlb6vu79.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = preg_split('/[.!?]/', $S);\n    foreach ($words as $word) {\n        if (strpos($word,\
    \ 'I') === 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmploq614w3.php:26\n\
    Stack trace:\n#0 /tmp/tmploq614w3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmploq614w3.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('.', $S);\n    $count = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(' ', $sentence);\n        if ($words[0] == 'I')\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$result\
    \ = is_bored(\"The sky is blue. The sun is shining. I love this weather\");\n\
    echo $result;\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnc4142m.php:33\n\
    Stack trace:\n#0 /tmp/tmplnc4142m.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplnc4142m.php\
    \ on line 33\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $sentences = explode('. ', $S);\n    foreach ($sentences as $key =>\
    \ $value) {\n        $first_word = explode(' ', $value)[0];\n        if ($first_word\
    \ == 'I') {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $parts\
    \ = explode(\".\", $S);\n    foreach ($parts as $part) {\n        $words = explode(\"\
    \ \", $part);\n        if ($words[0] == \"I\") {\n            return 1;\n    \
    \    }\n    }\n    return 0;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ua9mkck.php:29\n\
    Stack trace:\n#0 /tmp/tmp0ua9mkck.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0ua9mkck.php\
    \ on line 29\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = array_filter(explode(' ', $S));\n  $i = 0;\n  foreach ($S as $word) {\n  \
    \  if (strtolower($word) == 'i') {\n      $i++;\n    }\n  }\n  return $i;\n}\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_abv_85a.php:30\n\
    Stack trace:\n#0 /tmp/tmp_abv_85a.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_abv_85a.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $r\
    \ = preg_match_all('/\\bI\\b(.+?)(?=(\\.|\\?|\\!))/', $S, $matches);\n    return\
    \ $r;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $str\
    \ = str_replace(['.', '?', '!'], ' ', $S);\n    $arr = explode(' ', $str);\n \
    \   for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == 'I') return\
    \ 1;\n    }\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplfesgjia.php:28\n\
    Stack trace:\n#0 /tmp/tmplfesgjia.php(32): test()\n#1 {main}\n  thrown in /tmp/tmplfesgjia.php\
    \ on line 28\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ preg_match_all('/I/', $S);\n}\n\necho is_bored(\"I have a pen. I have an apple.\
    \ I have a goat. Who has an idea?\");\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpln5msu3c.php:21\n\
    Stack trace:\n#0 /tmp/tmpln5msu3c.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpln5msu3c.php\
    \ on line 21\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $count\
    \ = 0;\n  $pos = strpos($S, \"I\");\n  if ($pos === FALSE) {\n    return $count;\n\
    \  } else {\n    while ($pos !== FALSE) {\n      $count++;\n      $pos = strpos($S,\
    \ \"I\", $pos + 1);\n    }\n    return $count;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkxuixqe.php:30\n\
    Stack trace:\n#0 /tmp/tmprkxuixqe.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprkxuixqe.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ count(explode('I', $S));\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzq55sxl.php:19\n\
    Stack trace:\n#0 /tmp/tmpdzq55sxl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdzq55sxl.php\
    \ on line 19\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode(\".\", $S);\n    $S = implode(\" \", $S);\n    $S = explode(\"?\"\
    , $S);\n    $S = implode(\" \", $S);\n    $S = explode(\"!\", $S);\n    $S = implode(\"\
    \ \", $S);\n    $S = explode(\" \", $S);\n    $count = 0;\n    foreach ($S as\
    \ $key => $value) {\n        if ($value === \"I\") {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mnz4yiv.php:37\n\
    Stack trace:\n#0 /tmp/tmp7mnz4yiv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7mnz4yiv.php\
    \ on line 37\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredom_count\
    \ = 0;\n    $sentences = explode(['.', '?', '!'], $S);\n    foreach ($sentences\
    \ as $sentence) {\n        $sentence = trim($sentence);\n        if (strpos($sentence,\
    \ 'I') === 0) {\n            $boredom_count++;\n        }\n    }\n    return $boredom_count;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #1 ($separator)\
    \ must be of type string, array given in /tmp/tmpztb3ju8o.php:12\nStack trace:\n\
    #0 /tmp/tmpztb3ju8o.php(12): explode(Array, 'Hello world')\n#1 /tmp/tmpztb3ju8o.php(23):\
    \ is_bored('Hello world')\n#2 /tmp/tmpztb3ju8o.php(27): candidate('Hello world')\n\
    #3 /tmp/tmpztb3ju8o.php(35): test()\n#4 {main}\n  thrown in /tmp/tmpztb3ju8o.php\
    \ on line 12\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S1\
    \ = explode(\".\", $S);\n  $S2 = explode(\"?\", $S);\n  $S3 = explode(\"!\", $S);\n\
    \  $Ss = array_merge($S1, $S2, $S3);\n  $Ss = array_filter($Ss);\n  $Ss = array_map(\"\
    trim\", $Ss);\n  $bs = 0;\n  foreach ($Ss as $s) {\n    if (strtolower(substr($s,\
    \ 0, 2)) == \"i \") {\n      $bs++;\n    }\n  }\n  return $bs;\n}\n\nprint \"\
    Enter a string: \";\n$f = fopen(\"php://stdin\", \"r\");\n$S = fgets($f);\nfclose($f);\n\
    echo is_bored($S);\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Enter a string: 0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5jw2udsj.php:38\n\
    Stack trace:\n#0 /tmp/tmp5jw2udsj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5jw2udsj.php\
    \ on line 38\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $arr\
    \ = explode(\" \", $S);\n  foreach ($arr as $word) {\n    if ($word == \"I\")\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_jvqfvz.php:24\n\
    Stack trace:\n#0 /tmp/tmp9_jvqfvz.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9_jvqfvz.php\
    \ on line 24\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ substr_count($S, \"I\") - substr_count($S, \"I'm\") - substr_count($S, \"I'd\"\
    );\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_fc7yxey.php:19\n\
    Stack trace:\n#0 /tmp/tmp_fc7yxey.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_fc7yxey.php\
    \ on line 19\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $array\
    \ = explode(\" \", $S);\n  $num_boredoms = 0;\n  for ($i = 0; $i < count($array);\
    \ $i++) {\n    if (strtolower($array[$i]) == \"i\") {\n      $num_boredoms++;\n\
    \    }\n  }\n  return $num_boredoms;\n}\n\necho is_bored(\"Hello world\") . \"\
    \\n\";\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdm9__ly.php:33\n\
    Stack trace:\n#0 /tmp/tmpzdm9__ly.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzdm9__ly.php\
    \ on line 33\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $result\
    \ = 0;\n    $sentences = explode(['.', '?', '!'], $S);\n    foreach ($sentences\
    \ as $sentence) {\n        if ($sentence[0] == 'I') {\n            $result++;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #1 ($separator)\
    \ must be of type string, array given in /tmp/tmp70c4kg95.php:12\nStack trace:\n\
    #0 /tmp/tmp70c4kg95.php(12): explode(Array, 'Hello world')\n#1 /tmp/tmp70c4kg95.php(21):\
    \ is_bored('Hello world')\n#2 /tmp/tmp70c4kg95.php(25): candidate('Hello world')\n\
    #3 /tmp/tmp70c4kg95.php(33): test()\n#4 {main}\n  thrown in /tmp/tmp70c4kg95.php\
    \ on line 12\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ split the string by delimiters\n    $arr = explode(\".?!\", $S);\n    $count\
    \ = 0;\n    // for each sentence, remove all whitespace and check if it starts\
    \ with \"I\"\n    foreach ($arr as $sentence) {\n        $sentence = trim($sentence);\n\
    \        if (substr($sentence, 0, 1) == \"I\") {\n            $count++;\n    \
    \    }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7fk0xfks.php:30\n\
    Stack trace:\n#0 /tmp/tmp7fk0xfks.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7fk0xfks.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$words\
    \ = explode(\" \", $S);\n\t$boredom = 0;\n\tfor ($i = 0; $i < count($words); $i++)\
    \ {\n\t\tif ($words[$i] == \"I\") {\n\t\t\t$boredom++;\n\t\t}\n\t}\n\treturn $boredom;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5scu_qk.php:30\n\
    Stack trace:\n#0 /tmp/tmpb5scu_qk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpb5scu_qk.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = preg_split('/[.?!]/', $S);\n  $count = 0;\n  foreach ($sentences as $sentence)\
    \ {\n    if (strpos($sentence, 'I') === 0) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpah968aod.php:26\n\
    Stack trace:\n#0 /tmp/tmpah968aod.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpah968aod.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ count(array_filter(explode('.', $S), function($v) {\n    return substr(trim($v),\
    \ 0, 1) == 'I';\n  }));\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvam3y5as.php:22\n\
    Stack trace:\n#0 /tmp/tmpvam3y5as.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvam3y5as.php\
    \ on line 22\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ count(explode('I', $S)) - 1;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppw__r90p.php:19\n\
    Stack trace:\n#0 /tmp/tmppw__r90p.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppw__r90p.php\
    \ on line 19\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = preg_split('/[.?!]/', $S);\n  $n = 0;\n  foreach ($S as $s) {\n    if (strpos($s,\
    \ 'I') === 0) {\n      $n++;\n    }\n  }\n  return $n;\n}\n\nprint_r(is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\"));\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi47gy04l.php:28\n\
    Stack trace:\n#0 /tmp/tmpi47gy04l.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpi47gy04l.php\
    \ on line 28\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $c\
    \ = 0;\n    foreach (explode('.', $S) as $s) {\n        $c += (bool) preg_match('/^i\\\
    s/i', $s);\n    }\n    return $c;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdl9c5mly.php:26\n\
    Stack trace:\n#0 /tmp/tmpdl9c5mly.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdl9c5mly.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = preg_split('/[?!.]+/', $S);\n    $boredoms = 0;\n    foreach ($sentences as\
    \ $sentence) {\n        if (substr($sentence, 0, 2) == 'I ') {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkfwmban1.php:30\n\
    Stack trace:\n#0 /tmp/tmpkfwmban1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkfwmban1.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\tif\
    \ (empty($S)) {\n\t\treturn 0;\n\t}\n\t$S = explode(' ', $S);\n\t$count = 0;\n\
    \tforeach ($S as $k => $v) {\n\t\tif ($v == 'I') {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}\n\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\") . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqx7zwiti.php:36\n\
    Stack trace:\n#0 /tmp/tmpqx7zwiti.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqx7zwiti.php\
    \ on line 36\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, 'I');\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_v6hw3_l.php:20\n\
    Stack trace:\n#0 /tmp/tmp_v6hw3_l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_v6hw3_l.php\
    \ on line 20\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$a\
    \ = explode(' ', $S);\n\t$count = 0;\n\tforeach ($a as $key => $value) {\n\t\t\
    if ($value === 'I') {\n\t\t\tif ($a[$key-1] === '.' || $a[$key-1] === '?' || $a[$key-1]\
    \ === '!') {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n$S\
    \ = \"The sky is blue. The sun is shining. I love this weather.\";\necho is_bored($S);\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nWarning: Undefined array key -1 in /tmp/tmp4blay196.php on line 15\n\
    \nWarning: Undefined array key -1 in /tmp/tmp4blay196.php on line 15\n\nWarning:\
    \ Undefined array key -1 in /tmp/tmp4blay196.php on line 15\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp4blay196.php:31\nStack trace:\n#0 /tmp/tmp4blay196.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4blay196.php on line 31\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, 'I');\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_v6hw3_l.php:20\n\
    Stack trace:\n#0 /tmp/tmp_v6hw3_l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_v6hw3_l.php\
    \ on line 20\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode('.', $S);\n    $S = implode(' ', $S);\n    $S = explode('?', $S);\n\
    \    $S = implode(' ', $S);\n    $S = explode('!', $S);\n    $S = implode(' ',\
    \ $S);\n    $S = explode(' ', $S);\n    $count = 0;\n    foreach ($S as $key =>\
    \ $value) {\n        if (strtolower($value) == 'i') {\n            $count += 1;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp3hfgstj.php:36\n\
    Stack trace:\n#0 /tmp/tmpp3hfgstj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpp3hfgstj.php\
    \ on line 36\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = preg_split('/[\\.!\\?]/', $S);\n  $s = 0;\n  for ($i = 0; $i < count($sentences);\
    \ $i++) {\n    if (preg_match('/^\\s*I/', $sentences[$i])) {\n      $s++;\n  \
    \  }\n  }\n  return $s;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfd0rxgg1.php:27\n\
    Stack trace:\n#0 /tmp/tmpfd0rxgg1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfd0rxgg1.php\
    \ on line 27\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = explode(' ', $S);\n    $boredoms = 0;\n    for ($i = 0; $i < count($words);\
    \ $i++) {\n        if ($words[$i] == 'I') {\n            $boredoms++;\n      \
    \  }\n    }\n    return $boredoms;\n}\necho is_bored(\"Hello world\") . PHP_EOL;\n\
    echo is_bored(\"The sky is blue. The sun is shining. I love this weather\") .\
    \ PHP_EOL;\necho is_bored(\"I love this weather\") . PHP_EOL;\necho is_bored(\"\
    I love this weather.\") . PHP_EOL;\necho is_bored(\"I love this weather! I love\
    \ this weather?\") . PHP_EOL;\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n1\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp89fviw0s.php:36\n\
    Stack trace:\n#0 /tmp/tmp89fviw0s.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp89fviw0s.php\
    \ on line 36\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $sentences = explode('. ', $S);\n    for ($i = 0; $i < count($sentences);\
    \ $i++) {\n        $words = explode(' ', $sentences[$i]);\n        if ($words[0]\
    \ == 'I') {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = explode(' ', $S);\n    $count = 0;\n    foreach ($words as $word) {\n    \
    \    if (strtolower($word) == 'i') {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcpqmu9nb.php:31\n\
    Stack trace:\n#0 /tmp/tmpcpqmu9nb.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpcpqmu9nb.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = explode(' ', $S);\n    $count = 0;\n    foreach ($words as $word) {\n    \
    \    if (strpos($word, 'I') === 0) {\n            $count += 1;\n        }\n  \
    \  }\n    return $count;\n}\n$sum = is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");\necho $sum;\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmhi8_xsh.php:28\n\
    Stack trace:\n#0 /tmp/tmpmhi8_xsh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmhi8_xsh.php\
    \ on line 28\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ substr_count($S, '!') + substr_count($S, '?') + substr_count($S, '.');\n}\n\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyr_yms8.php:20\n\
    Stack trace:\n#0 /tmp/tmpyyr_yms8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpyyr_yms8.php\
    \ on line 20\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $a\
    \ = explode(\" \", $S);\n  $boredoms = 0;\n  foreach ($a as $b) {\n    if ($b\
    \ == \"I\") $boredoms++;\n  }\n  return $boredoms;\n}\necho is_bored(\"Hello world\"\
    ) . \"<br>\";\necho is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\") . \"<br>\";\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0<br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xpt0to7.php:31\n\
    Stack trace:\n#0 /tmp/tmp0xpt0to7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0xpt0to7.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $counter\
    \ = 0;\n  $sentences = explode(\". \", $S);\n  foreach ($sentences as $sentence)\
    \ {\n    if (substr($sentence, 0, 2) == \"I \") {\n      $counter += 1;\n    }\n\
    \  }\n  return $counter;\n}\n\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\").\"\\n\";\necho is_bored(\"I love this weather\").\"\\\
    n\";\necho is_bored(\"Hello world\").\"\\n\";\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    1

    0

    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $sentences = preg_split('/(\\.|\\?|\\!)/', $S);\n    for ($i = 0;\
    \ $i < count($sentences); $i++) {\n        $first_word = strstr($sentences[$i],\
    \ ' ', true);\n        if ($first_word === 'I') {\n            $count++;\n   \
    \     }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ue70ak3.php:30\n\
    Stack trace:\n#0 /tmp/tmp6ue70ak3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6ue70ak3.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $chars\
    \ = str_split($S);\n    $is_bored = false;\n    $boredoms = 0;\n    for ($i =\
    \ 0; $i < count($chars); $i++) {\n        $c = $chars[$i];\n        if ($c ==\
    \ 'I') {\n            $is_bored = true;\n        }\n        if ($is_bored && ($c\
    \ == '.' || $c == '?' || $c == '!')) {\n            $boredoms++;\n           \
    \ $is_bored = false;\n        }\n    }\n    return $boredoms;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62o3dl15.php:34\n\
    Stack trace:\n#0 /tmp/tmp62o3dl15.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp62o3dl15.php\
    \ on line 34\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n   $sum\
    \ = 0;\n   $arr = explode(\" \",$S);\n   foreach($arr as $word) {\n      if($word\
    \ == \"I\") {\n         $sum++;\n      }\n   }\n   return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5uoe87kv.php:30\n\
    Stack trace:\n#0 /tmp/tmp5uoe87kv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5uoe87kv.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, 'I');\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprhe3jwv4.php:20\n\
    Stack trace:\n#0 /tmp/tmprhe3jwv4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprhe3jwv4.php\
    \ on line 20\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ preg_match_all('/\\bI\\b/', $S, $matches);\n}\n\necho is_bored(\"The sky is\
    \ blue. The sun is shining. I love this weather\") . PHP_EOL;\necho is_bored(\"\
    Hello world\") . PHP_EOL;\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpprfu1jws.php:26\n\
    Stack trace:\n#0 /tmp/tmpprfu1jws.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpprfu1jws.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = explode(\" \", $S);\n  $S = preg_replace(\"/\\W/\", \"\", $S);\n  $S = array_filter($S);\n\
    \  $boredom = 0;\n  foreach ($S as $s) {\n    if (strtolower($s) == \"i\") $boredom++;\n\
    \  }\n  return $boredom;\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu9yf4mol.php:31\n\
    Stack trace:\n#0 /tmp/tmpu9yf4mol.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpu9yf4mol.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ your code here\n    $arr = explode(' ',$S);\n    $str = preg_replace('/[^a-zA-Z]+/',\
    \ '', $arr);\n    $str = array_filter($str);\n    $str = array_slice($str,0,1);\n\
    \    if ($str[0] == 'I') {\n      return 1;\n    }\n    else {\n      return 0;\n\
    \    }\n  }\n\n\n  // You are given a string s, consisting of lowercase English\
    \ letters,\n  // and an integer n. For example, \"abacab\" and 3, or \"bloomberg\"\
    \ and 2.\n  // In the first case, find an occurrence of \"abacab\", and remove\
    \ it.\n  // Find the second occurrence of \"abacab\", and remove it.\n  // Find\
    \ the third occurrence of \"abacab\", and remove it.\n  // Return the modified\
    \ string.\n  //\n  // In the second case, find an occurrence of \"bloomberg\"\
    , and remove it.\n  // Find the second occurrence of \"bloomberg\", and remove\
    \ it.\n  // Return the modified string.\n  //\n  // If there is no nth occurrence\
    \ of \"abacab\" or \"bloomberg\",\n  // return an empty string \"\".\n  // >>>\
    \ remove_nth_occurrence(\"abacab\", 1)\n  // \"bacab\"\n  // >>> remove_nth_occurrence(\"\
    abacab\", 2)\n  // \"acab\"\n  // >>> remove_nth_occurrence(\"abacab\", 3)\n \
    \ // \"ab\"\n  // >>> remove_nth_occurrence(\"abacab\", 4)\n  // \"\"\n  // >>>\
    \ remove_nth_occurrence(\"abacab\", 5)\n  // \"\"\n  // >>> remove_nth_occurrence(\"\
    abacab\", 6)\n  // \"\"\n  // >>> remove_nth_occurrence(\"bloomberg\", 1)\n  //\
    \ \"oomberg\"\n  // >>> remove_nth_occurrence(\"bloomberg\", 2)\n  // \"blomberg\"\
    \n  // >>> remove_nth_occurrence(\"bloomberg\", 3)\n  // \"\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqsoqpch_.php:65\n\
    Stack trace:\n#0 /tmp/tmpqsoqpch_.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpqsoqpch_.php\
    \ on line 65\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$a\
    \ = explode(' ', str_replace(array('.', '?', '!'), '', $S));\n\t$b = 0;\n\tforeach\
    \ ($a as $s)\n\t\tif (strtolower($s) == 'i')\n\t\t\t$b++;\n\treturn $b;\n}\n\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphy1l6ysm.php:29\n\
    Stack trace:\n#0 /tmp/tmphy1l6ysm.php(32): test()\n#1 {main}\n  thrown in /tmp/tmphy1l6ysm.php\
    \ on line 29\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $S = explode(\".\", $S);\n  foreach ($S as $sentence) {\n    $words\
    \ = explode(\" \", $sentence);\n    if ($words[0] == \"I\") {\n      $boredoms++;\n\
    \    }\n  }\n  return $boredoms;\n}\necho is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\");\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33yk6j3d.php:31\n\
    Stack trace:\n#0 /tmp/tmp33yk6j3d.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp33yk6j3d.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Use your right hand and point your index finger at the screen. Now,\n    //\
    \ extend your middle finger, ring finger and pinky. Count the number of\n    //\
    \ boredoms.\n    return 1;\n}\n\nassert(0 == is_bored(\"Hello world\"));\nassert(1\
    \ == is_bored(\"The sky is blue. The sun is shining. I love this weather\"));\n\
    assert(1 == is_bored(\"I. I love you. You. That's it.\"));\nassert(2 == is_bored(\"\
    I've got another I for you. I love you. I need you. I want you.\"));\nassert(2\
    \ == is_bored(\"I. I love you. You. That's it. I. I love you. You. That's it.\"\
    ));\nassert(3 == is_bored(\"I, I, I, I, I love you. I, I, I, I, I love you. I,\
    \ I, I, I, I love you. I, I, I, I, I love you.\"));\nassert(11 == is_bored(\"\
    I love you. I need you. I want you. I love you. I need you. I want you. I love\
    \ you. I need you. I want you. I love you. I need you. I want you.\"));\nassert(1\
    \ == is_bored(\"I love you. I need you. I want you. I love you. I need you. I\
    \ want you. I love you. I need you. I want you. I love you. I need you. I want\
    \ you. I.\"));\nassert(2 == is_bored(\"I love you. I need you. I want you. I love\
    \ you. I need you. I want you. I love you. I need you. I want you. I love you.\
    \ I need you. I want you. I. I\"));\necho \"Done!\";\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(0 == is_bored('Hello world'))\
    \ in /tmp/tmpdzm9sc_c.php:17\nStack trace:\n#0 /tmp/tmpdzm9sc_c.php(17): assert(false,\
    \ 'assert(0 == is_...')\n#1 {main}\n  thrown in /tmp/tmpdzm9sc_c.php on line 17\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Your code here\n    $sentences = explode(\".\", $S);\n    $n = 0;\n    foreach\
    \ ($sentences as $sentence) {\n        $arr = explode(\" \", $sentence);\n   \
    \     if ($arr[0] == \"I\") {\n            $n++;\n        }\n    }\n    return\
    \ $n;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkvhk3ic_.php:32\n\
    Stack trace:\n#0 /tmp/tmpkvhk3ic_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkvhk3ic_.php\
    \ on line 32\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $exclam\
    \ = explode('!', $S);\n  $quest = explode('?', $S);\n  $dot = explode('.', $S);\n\
    \  $i = 0;\n  foreach ($exclam as $value) {\n    if (count(explode('I', $value))\
    \ > 1) {\n      $i++;\n    }\n  }\n  foreach ($quest as $value) {\n    if (count(explode('I',\
    \ $value)) > 1) {\n      $i++;\n    }\n  }\n  foreach ($dot as $value) {\n   \
    \ if (count(explode('I', $value)) > 1) {\n      $i++;\n    }\n  }\n  return $i;\n\
    }\n\necho \"Hello world: \" . is_bored(\"Hello world\") . \"<br>\";\necho \"The\
    \ sky is blue. The sun is shining. I love this weather: \" . is_bored(\"The sky\
    \ is blue. The sun is shining. I love this weather\") . \"<br>\";\necho \"This\
    \ is a test!: \" . is_bored(\"This is a test!\") . \"<br>\";\necho \"This is a\
    \ test of I. This is a test of! This is a test of? This is a test of . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . .\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Hello", expecting "," or ";"
    in /tmp/tmpf40szioi.php on line 42

    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$pattern\
    \ = '/I[\\.]*/';\n\tpreg_match_all($pattern, $S, $matches);\n\t$counter = 0;\n\
    \tforeach ($matches[0] as $match) {\n\t\t$counter += substr_count($match, 'I');\n\
    \t}\n\treturn $counter;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp280okz8v.php:25\n\
    Stack trace:\n#0 /tmp/tmp280okz8v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp280okz8v.php\
    \ on line 25\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$S\
    \ = explode(\" \", $S);\n\t$i = 0;\n\tforeach ($S as $sentence) {\n\t\tif ($sentence\
    \ == \"I\") {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn $i;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjrkyvqaf.php:30\n\
    Stack trace:\n#0 /tmp/tmpjrkyvqaf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjrkyvqaf.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = preg_split('/[.?!]/', $S);\n    $boredoms = 0;\n    foreach ($sentences as\
    \ $sentence) {\n        if (preg_match('/^I/', $sentence)) {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqqe69x6n.php:26\n\
    Stack trace:\n#0 /tmp/tmpqqe69x6n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqqe69x6n.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $ex\
    \ = explode(\".\", $S);\n    $arr = [];\n    foreach ($ex as $value) {\n     \
    \   if (strtoupper(substr($value, 0, 1)) == \"I\") {\n            $arr[] = $value;\n\
    \        }\n    }\n    return count($arr);\n}\n\n$arr = [\n    'This is great!',\n\
    \    'What is the weather today?',\n    'When is the last exam?',\n    'I want\
    \ to go to Spain.',\n    'I am happy!',\n    'I am not happy with the weather\
    \ today.',\n    'Let us dance!',\n    'We are losing money!',\n    'I should buy\
    \ some new clothes.',\n    'I will love to go to the park today.',\n    'I am\
    \ having fun.',\n    'I think I will go to Germany.',\n    'He is a good boy.',\n\
    \    'I love you.',\n    'I play football.',\n    'I will not play football.',\n\
    \    'I am the best.',\n    'I am the first',\n    'I am a good boy.',\n    'I\
    \ am not feeling well.',\n    'I will join you.',\n    'I will not join you.',\n\
    \    'I am travelling.',\n    'I am not travelling.',\n    'I will be back soon.',\n\
    \    'I will not be back soon.',\n    'I want to go back home.',\n    'I am at\
    \ home.',\n    'I want to be at home.',\n    'I want to be a millionaire.',\n\
    \    'I like playing football.',\n    'I will like to go to the club today.',\n\
    \    'I am not happy with you.',\n    'I can do all things.',\n    'I will do\
    \ all things.',\n    'I will not do all things.',\n    'I can play football.',\n\
    \    'I like you.',\n    'I will like you.',\n    'I will not like you.',\n  \
    \  'I love my life.',\n    'I will marry you.',\n    'I will not marry you.',\n\
    \    'I like reading.'\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmpnp330occ.php
    on line 66

    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Make an array of the sentence\n    $sentence = explode(\" \", $S);\n    $boredom\
    \ = 0;\n    // Count the number of times the first word of a sentence is I\n \
    \   for ($i = 0; $i < count($sentence); $i++) {\n        if ($sentence[$i] ==\
    \ \"I\") {\n            $boredom++;\n        }\n    }\n    return $boredom;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__t2xwqv.php:32\n\
    Stack trace:\n#0 /tmp/tmp__t2xwqv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp__t2xwqv.php\
    \ on line 32\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = preg_split('/\\.|\\?|\\!/', $S);\n  $c = 0;\n  foreach ($S as $s) {\n    if\
    \ (strtolower(substr($s, 0, 1)) == 'i') $c++;\n  }\n  return $c;\n}\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnj47h68d.php:24\n\
    Stack trace:\n#0 /tmp/tmpnj47h68d.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnj47h68d.php\
    \ on line 24\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $parts\
    \ = explode(' ', $S);\n    $boredoms = 0;\n    foreach ($parts as $word) {\n \
    \       if ($word == 'I') {\n            $boredoms++;\n        }\n    }\n    return\
    \ $boredoms;\n}\necho is_bored(\"Hello world\") . PHP_EOL;\necho is_bored(\"The\
    \ sky is blue. The sun is shining. I love this weather\") . PHP_EOL;\necho is_bored(\"\
    My name is I, I am the most boring person I know.\") . PHP_EOL;\necho is_bored(\"\
    Oh gosh! I am bored!\") . PHP_EOL;\necho is_bored(\"Where did I go wrong?\") .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n2\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjr851x6g.php:35\n\
    Stack trace:\n#0 /tmp/tmpjr851x6g.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjr851x6g.php\
    \ on line 35\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $sentences = explode(\". \", $S);\n  foreach ($sentences as $sentence)\
    \ {\n    $sentence = explode(\" \", $sentence);\n    if ($sentence[0] == \"I\"\
    ) {\n      $boredoms += 1;\n    }\n  }\n  return $boredoms;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ substr_count($S, \"I \");\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7k5t70ch.php:23\n\
    Stack trace:\n#0 /tmp/tmp7k5t70ch.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7k5t70ch.php\
    \ on line 23\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $ar\
    \ = preg_split('/(\\.|\\?|\\!)/', $S);\n  $i = 0;\n  foreach ($ar as $v) {\n \
    \   if(substr($v, 0, 1) == 'I') {\n      $i++;\n    }\n  }\n  return $i;\n}\n\n\
    $list = \"Hello world\";\necho is_bored($list);\necho \"\\n\";\n$list = \"The\
    \ sky is blue. The sun is shining. I love this weather\";\necho is_bored($list);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojjnzunw.php:33\n\
    Stack trace:\n#0 /tmp/tmpojjnzunw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpojjnzunw.php\
    \ on line 33\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $count\
    \ = 0;\n  $arr = explode(' ', $S);\n  foreach ($arr as $value) {\n    if ($value\
    \ == 'I') {\n      $count++;\n    }\n  }\n  return $count;\n}\necho is_bored(\"\
    I am bored.\");\necho \"<br>\";\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjtq_1el6.php:33\n\
    Stack trace:\n#0 /tmp/tmpjtq_1el6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjtq_1el6.php\
    \ on line 33\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ strlen(\n    preg_replace('/I.+?[?!.]/', '', $S)\n  ) == strlen($S);\n}\necho\
    \ is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\") . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2tmjimtb.php:23\n\
    Stack trace:\n#0 /tmp/tmp2tmjimtb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2tmjimtb.php\
    \ on line 23\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Your code goes here.\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpifo4kpd5.php:18\n\
    Stack trace:\n#0 /tmp/tmpifo4kpd5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpifo4kpd5.php\
    \ on line 18\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $p\
    \ = 0;\n    $boredoms = 0;\n    for ($i = 0; $i < strlen($S); $i++) {\n      \
    \  if ($S[$i] == '.' || $S[$i] == '?' || $S[$i] == '!') {\n            $p = 0;\n\
    \        } else if ($S[$i] == ' ') {\n            $p = 1;\n        } else if ($p\
    \ == 1 && $S[$i] == 'I') {\n            $boredoms++;\n            $p = 0;\n  \
    \      }\n    }\n    return $boredoms;\n}\nfunction candidate(...$args) {\n  \
    \  return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsz3ye49.php:35\n\
    Stack trace:\n#0 /tmp/tmplsz3ye49.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplsz3ye49.php\
    \ on line 35\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ YOUR CODE GOES HERE\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4ogcjal.php:19\n\
    Stack trace:\n#0 /tmp/tmpt4ogcjal.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpt4ogcjal.php\
    \ on line 19\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = explode(\". \", $S);\n  //var_dump($sentences);\n  $c = 0;\n  foreach ($sentences\
    \ as $sentence) {\n    $words = explode(\" \", $sentence);\n    if ($words[0]\
    \ == \"I\") $c++;\n  }\n  return $c;\n}\n\nprint(is_bored(\"Hello world\"));\n\
    print(is_bored(\"The sky is blue. The sun is shining. I love this weather\"));\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '01'
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, \"I\");\n}\n\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\") . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp92j6ckct.php:21\n\
    Stack trace:\n#0 /tmp/tmp92j6ckct.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp92j6ckct.php\
    \ on line 21\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S=str_replace(\"\
    ?\", \".\", $S);\n    $S=str_replace(\"!\", \".\", $S);\n    $S=str_replace(\"\
    ..\", \".\", $S);\n    $S=str_replace(\"...\", \".\", $S);\n    $S=str_replace(\"\
    ....\", \".\", $S);\n    $S=str_replace(\".....\", \".\", $S);\n    $S=str_replace(\"\
    ......\", \".\", $S);\n    $S=str_replace(\".......\", \".\", $S);\n    $S=str_replace(\"\
    ........\", \".\", $S);\n    $S=str_replace(\".........\", \".\", $S);\n    $S=str_replace(\"\
    ..........\", \".\", $S);\n    $S=str_replace(\"...........\", \".\", $S);\n \
    \   $S=str_replace(\"............\", \".\", $S);\n    $S=str_replace(\".............\"\
    , \".\", $S);\n    $S=str_replace(\"..............\", \".\", $S);\n    $S=str_replace(\"\
    ...............\", \".\", $S);\n    $S=str_replace(\"..................\", \"\
    .\", $S);\n    $S=str_replace(\"...................\", \".\", $S);\n    $S=str_replace(\"\
    ....................\", \".\", $S);\n    $S=str_replace(\".....................\"\
    , \".\", $S);\n    $S=str_replace(\"......................\", \".\", $S);\n  \
    \  $S=str_replace(\".......................\", \".\", $S);\n    $S=str_replace(\"\
    ........................\", \".\", $S);\n    $S=str_replace(\".........................\"\
    , \".\", $S);\n    $S=str_replace(\"......................... \", \".\", $S);\n\
    \    $S=str_replace(\".........................  \", \".\", $S);\n    $S=str_replace(\"\
    .........................   \", \".\", $S);\n    $S=str_replace(\".........................\
    \    \", \".\", $S);\n    $S=str_replace(\".........................     \", \"\
    .\", $S);\n    $S=str_replace(\".........................      \", \".\", $S);\n\
    \    $S=str_replace(\"\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Hello", expecting ")" in /tmp/tmp7h7r8ieb.php
    on line 47

    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = preg_split('/[.!?]/', $S);\n    $boredoms = 0;\n    foreach ($sentences as\
    \ $sentence) {\n        $parts = explode(' ', $sentence);\n        if ($parts[0]\
    \ == 'I') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    );\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ane3s3j.php:33\n\
    Stack trace:\n#0 /tmp/tmp3ane3s3j.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3ane3s3j.php\
    \ on line 33\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n   return\
    \ preg_match_all('/I[^!?.]+[.!?]/', $S, $matches);\n}\n$S = \"Hello world\";\n\
    $S = \"The sky is blue. The sun is shining. I love this weather\";\n$result =\
    \ is_bored($S);\necho $result;\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4s7ubqy.php:23\n\
    Stack trace:\n#0 /tmp/tmpo4s7ubqy.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpo4s7ubqy.php\
    \ on line 23\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, 'I');\n}\n\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmiqwmo2.php:21\n\
    Stack trace:\n#0 /tmp/tmpwmiqwmo2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwmiqwmo2.php\
    \ on line 21\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$i\
    \ = 0;\n\t$words = preg_split('/(\\.|\\?|\\!)/', $S, -1, PREG_SPLIT_NO_EMPTY);\n\
    \tforeach ($words as $value) {\n\t\tif (strpos($value, 'I') === 0) {\n\t\t\t$i++;\n\
    \t\t}\n\t}\n\treturn $i;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq2e9gadx.php:26\n\
    Stack trace:\n#0 /tmp/tmpq2e9gadx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpq2e9gadx.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $split\
    \ = explode(\" \", $S);\n    $i = 0;\n    foreach ($split as $item) {\n      \
    \  if ($item == \"I\") {\n            $i++;\n        }\n    }\n    return $i;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ru9cds_.php:30\n\
    Stack trace:\n#0 /tmp/tmp5ru9cds_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5ru9cds_.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = trim($S);\n    $S = preg_replace('/[.!?]+/', '.', $S);\n    $S = preg_replace('/\\\
    s\\.\\s/', '.', $S);\n    $S = preg_replace('/[ ]+/', ' ', $S);\n    $S = preg_replace('/\\\
    .\\s/', '.', $S);\n    $S = preg_replace('/[\\.]+/', '.', $S);\n    $words = explode(\"\
    .\", $S);\n    $boredoms = 0;\n    foreach ($words as $word) {\n        if (strtolower(trim($word))\
    \ === \"i\") {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\necho is_bored(\"Hello world.\");\necho PHP_EOL;\necho is_bored(\"The sky is\
    \ blue. The sun is shining. I love this weather\");\necho PHP_EOL;\necho is_bored(\"\
    I. I love. I love this weather.\");\necho PHP_EOL;\necho is_bored(\"I love you.\
    \ You love me. I love this weather\");\necho PHP_EOL;\necho is_bored(\"You are\
    \ so brave! I'm so brave. We are so brave!\");\necho PHP_EOL;\necho is_bored(\"\
    You are so brave! I'm so brave. I love this weather!\");\necho PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n1\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiunwn33t.php:45\n\
    Stack trace:\n#0 /tmp/tmpiunwn33t.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpiunwn33t.php\
    \ on line 45\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ preg_match_all('/I[.!?]/', $S);\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzxmfnbhm.php:20\n\
    Stack trace:\n#0 /tmp/tmpzxmfnbhm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzxmfnbhm.php\
    \ on line 20\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$result\
    \ = 0;\n\t$S = explode(\".\", $S);\n\t$S = array_map('trim', $S);\n\tforeach ($S\
    \ as $key => $value) {\n\t\tif (substr($value, 0, 1) == \"I\") {\n\t\t\t$result++;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n$result = is_bored(\"Hello world\");\necho $result;\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7c8dm597.php:29\n\
    Stack trace:\n#0 /tmp/tmp7c8dm597.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7c8dm597.php\
    \ on line 29\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = preg_split('/[.?!]/', $S);\n    $count = 0;\n    foreach ($S as $s) {\n  \
    \      if (strlen($s) > 0 && strtoupper($s[0]) == 'I') {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\necho is_bored(\"Hello world\") . \"\\\
    n\";\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt1a70vd.php:28\n\
    Stack trace:\n#0 /tmp/tmpjt1a70vd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjt1a70vd.php\
    \ on line 28\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = preg_split('/[.!?]/', $S);\n    $boredoms = 0;\n    foreach ($sentences as\
    \ $sentence) {\n        if (strpos($sentence, 'I') === 0) {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmg9zi54w.php:27\n\
    Stack trace:\n#0 /tmp/tmpmg9zi54w.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmg9zi54w.php\
    \ on line 27\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $sentences = explode('. ', $S);\n  foreach ($sentences as $sentence)\
    \ {\n    $sentence = explode(' ', $sentence);\n    if ($sentence[0] == 'I') {\n\
    \      $boredoms++;\n    }\n  }\n  return $boredoms;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('. ', $S);\n    $num_boredoms = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(' ', $sentence);\n        if ($words[0] == 'I')\
    \ {\n            $num_boredoms++;\n        }\n    }\n    return $num_boredoms;\n\
    }\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    );\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Your code goes here.\n    $B = 0;\n    $S = explode(\" \", $S);\n    for ($i\
    \ = 0; $i < count($S); $i++) {\n        if ($S[$i] == \"I\") {\n            $B++;\n\
    \        }\n    }\n    return $B;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgb1tpqkn.php:32\n\
    Stack trace:\n#0 /tmp/tmpgb1tpqkn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgb1tpqkn.php\
    \ on line 32\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $array\
    \ = explode(\" \", $S);\n    $result = 0;\n    for ($i = 0; $i < count($array);\
    \ $i++) {\n        if ($array[$i] == \"I\") {\n            $result++;\n      \
    \  }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38siqhag.php:31\n\
    Stack trace:\n#0 /tmp/tmp38siqhag.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp38siqhag.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ split the string into sentences\n    $sentences = explode(\". \", $S);\n   \
    \ $sentences = array_map(function($sentence) {\n        // remove trailing periods\n\
    \        return preg_replace(\"/\\.$/\", \"\", $sentence);\n    }, $sentences);\n\
    \    // count the number of boredoms\n    $n_boredoms = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        $sentence = explode(\" \", $sentence);\n        if\
    \ ($sentence[0] == \"I\") {\n            $n_boredoms++;\n        }\n    }\n  \
    \  return $n_boredoms;\n}\necho is_bored(\"I am bored\");\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $arr\
    \ = explode(' ', $S);\n  $count = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n\
    \    if ($arr[$i] == 'I') {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    echo is_bored(\"The sky is blue. The sun is shining. I love this weather\");\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0t4oukdx.php:32\n\
    Stack trace:\n#0 /tmp/tmp0t4oukdx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0t4oukdx.php\
    \ on line 32\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S, 'I') -\n            substr_count($S, 'I ') -\n            substr_count($S,\
    \ ' I') -\n            substr_count($S, ' I ');\n}\n\necho(is_bored(\"The sky\
    \ is blue. The sun is shining. I love this weather\"));\necho(\"\\n\");\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpro56xspa.php:26\n\
    Stack trace:\n#0 /tmp/tmpro56xspa.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpro56xspa.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ INSERT YOUR CODE HERE\n  $arr = explode(' ', $S);\n  $boredoms = 0;\n  foreach\
    \ ($arr as $key => $val) {\n    if ($val === 'I') {\n      $boredoms++;\n    }\n\
    \  }\n  return $boredoms;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpimfybc6z.php:32\n\
    Stack trace:\n#0 /tmp/tmpimfybc6z.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpimfybc6z.php\
    \ on line 32\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = str_replace('.', ' ', $S);\n    $S = str_replace('?', ' ', $S);\n    $S =\
    \ str_replace('!', ' ', $S);\n    $words = explode(' ', $S);\n    $count = 0;\n\
    \    foreach ($words as $word) {\n        if ($word == 'I') {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr_r44igs.php:33\n\
    Stack trace:\n#0 /tmp/tmpr_r44igs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpr_r44igs.php\
    \ on line 33\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ preg_match_all('/I[\\?\\.!]/m', $S);\n}\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoqe3inlt.php:21\n\
    Stack trace:\n#0 /tmp/tmpoqe3inlt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpoqe3inlt.php\
    \ on line 21\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ preg_match_all('/\\sI\\s/', $S, $matches);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9230zz8.php:21\n\
    Stack trace:\n#0 /tmp/tmpk9230zz8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk9230zz8.php\
    \ on line 21\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $ss\
    \ = explode(\" \", $S);\n    $n = count($ss);\n    $res = 0;\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        if ($ss[$i] == \"I\") {\n            $res++;\n   \
    \     }\n    }\n    return $res;\n}\necho is_bored(\"I want to go home\");\necho\
    \ \"\\n\";\necho is_bored(\"Hello world\");\necho \"\\n\";\necho is_bored(\"The\
    \ sky is blue. The sun is shining. I love this weather\");\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n0\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphji0v4__.php:37\n\
    Stack trace:\n#0 /tmp/tmphji0v4__.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphji0v4__.php\
    \ on line 37\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $s\
    \ = explode('.', $S);\n  $r = 0;\n  foreach ($s as $x) {\n    if (substr($x, 0,\
    \ 1) == 'I') {\n      $r++;\n    }\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz6tt7tsj.php:27\n\
    Stack trace:\n#0 /tmp/tmpz6tt7tsj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpz6tt7tsj.php\
    \ on line 27\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $words\
    \ = explode(' ',$S);\n  $boredoms = 0;\n  for ($i=0; $i < count($words); $i++)\
    \ {\n    if (preg_match('/^I/',$words[$i])) {\n      $boredoms++;\n    }\n  }\n\
    \  return $boredoms;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkcbqvx7q.php:26\n\
    Stack trace:\n#0 /tmp/tmpkcbqvx7q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkcbqvx7q.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $words = explode(\" \", $S);\n    foreach ($words as $word) {\n  \
    \      if ($word[0] == \"I\") {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpraomz_lj.php:26\n\
    Stack trace:\n#0 /tmp/tmpraomz_lj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpraomz_lj.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t//\
    \ store the number of boredoms\n\t$boredoms = 0;\n\t// split the string into an\
    \ array\n\t$sentences = explode(\".?!\", $S);\n\t// loop through the array\n\t\
    foreach ($sentences as $sentence) {\n\t\t// check if the sentence starts with\
    \ 'I'\n\t\tif (strpos($sentence, \"I\") === 0) {\n\t\t\t// add 1 to the number\
    \ of boredoms\n\t\t\t$boredoms++;\n\t\t}\n\t}\n\t// return the number of boredoms\n\
    \treturn $boredoms;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpispk8aw9.php:32\n\
    Stack trace:\n#0 /tmp/tmpispk8aw9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpispk8aw9.php\
    \ on line 32\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0;\n  $sentences = explode(\". \", $S);\n  foreach ($sentences as $s) {\n\
    \    if (strpos($s, \"I\") === 0) {\n      $boredoms++;\n    }\n  }\n  return\
    \ $boredoms;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps1vg2ewm.php:26\n\
    Stack trace:\n#0 /tmp/tmps1vg2ewm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmps1vg2ewm.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$p\
    \ = explode(\" \", $S);\n\t$ret = 0;\n\tforeach ($p as $v) {\n\t\tif ($v == \"\
    I\") $ret++;\n\t}\n\treturn $ret;\n}\n\n$TESTS = array(\n\t\"Hello world\",\n\t\
    \"The sky is blue. The sun is shining. I love this weather\",\n\t\"I love the\
    \ days when it rains. When the sky goes dark, I know it's going to rain. Sometimes\
    \ I can hear it, like a drum on the roof. I also love to smell the rain. It is\
    \ like a nice perfume. If I had a choice, I would rather it rain than to be sunny\
    \ all the time. I love the rain\",\n\t\"I love the days when it rains. When the\
    \ sky goes dark, I know it's going to rain. Sometimes I can hear it, like a drum\
    \ on the roof. I also love to smell the rain. It is like a nice perfume. If I\
    \ had a choice, I would rather it rain than to be sunny all the time. I love the\
    \ rain\",\n\t\"I love the days when it rains. When the sky goes dark, I know it's\
    \ going to rain. Sometimes I can hear it, like a drum on the roof. I also love\
    \ to smell the rain. It is like a nice perfume. If I had a choice, I would rather\
    \ it rain than to be sunny all the time. I love the rain\",\n\t\"I love the days\
    \ when it rains. When the sky goes dark, I know it's going to rain. Sometimes\
    \ I can hear it, like a drum on the roof. I also love to smell the rain. It is\
    \ like a nice perfume. If I had a choice, I would rather it rain than to be sunny\
    \ all the time. I love the rain\",\n\t\"I love the days when it rains. When the\
    \ sky goes dark, I know it's going to rain. Sometimes I can hear it, like a drum\
    \ on the roof. I also love to smell the rain. It is like a nice perfume. If I\
    \ had a choice, I would rather it rain than to be sunny all the time. I love the\
    \ rain\",\n\t\"I love the days when it rains. When the sky goes dark, I know it's\
    \ going to rain. Sometimes I can hear it, like a drum on the roof. I also love\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Hello", expecting ")" in /tmp/tmp3_5z_qqo.php
    on line 33

    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = preg_split('/[.?!]/', $S);\n    $boredoms = 0;\n    foreach ($sentences as\
    \ $s) {\n        $words = explode(' ', $s);\n        $boredoms += ($words[0] ==\
    \ 'I') ? 1 : 0;\n    }\n    return $boredoms;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcbeit7i1.php:29\n\
    Stack trace:\n#0 /tmp/tmpcbeit7i1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpcbeit7i1.php\
    \ on line 29\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $parts\
    \ = preg_split('/[.?!]/', $S);\n  $count = 0;\n  foreach ($parts as $part) {\n\
    \    if (preg_match('/^\\s*I/', $part)) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\necho is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\") . \"\\n\";\necho is_bored(\"I like cats\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3b857ofi.php:28\n\
    Stack trace:\n#0 /tmp/tmp3b857ofi.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3b857ofi.php\
    \ on line 28\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $sentences\
    \ = array_filter(explode(' ', $S));\n  $count = 0;\n  foreach ($sentences as $sentence)\
    \ {\n    if (preg_match('#^I[.]?$#', $sentence)) {\n      $count++;\n    }\n \
    \ }\n  return $count;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjo2wasdv.php:30\n\
    Stack trace:\n#0 /tmp/tmpjo2wasdv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjo2wasdv.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('.|?|!', $S);\n    $count = 0;\n    foreach ($sentences as $i => $sentence)\
    \ {\n        $words = explode(' ', $sentence);\n        if ($words[0] == 'I')\
    \ {\n            $count += 1;\n        }\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_5tcz26p.php:30\n\
    Stack trace:\n#0 /tmp/tmp_5tcz26p.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_5tcz26p.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ substr_count($S, 'I');\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g13xrv0.php:20\n\
    Stack trace:\n#0 /tmp/tmp2g13xrv0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2g13xrv0.php\
    \ on line 20\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode(\". \", $S);\n    $boredoms = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        if (strpos($sentence, \"I\") === 0) {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0unlaon.php:27\n\
    Stack trace:\n#0 /tmp/tmp_0unlaon.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_0unlaon.php\
    \ on line 27\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\treturn\
    \ (substr_count($S, \"I\"));\n}\necho is_bored(\"Hello world\");\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "01\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz6sdrvj9.php:22\n\
    Stack trace:\n#0 /tmp/tmpz6sdrvj9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz6sdrvj9.php\
    \ on line 22\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode(\" \", $S);\n    $count = 0;\n    foreach ($S as $word) {\n      \
    \  if ($word == \"I\") {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\necho is_bored(\"I am so bored.\");\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8gnc9_8k.php:33\n\
    Stack trace:\n#0 /tmp/tmp8gnc9_8k.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8gnc9_8k.php\
    \ on line 33\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $is_bored\
    \ = 0;\n    $words = explode(\" \", $S);\n    foreach ($words as $w) {\n     \
    \   if ($w == \"I\") {\n            $is_bored++;\n        }\n    }\n    return\
    \ $is_bored;\n}\n\necho is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4zlulpzv.php:34\n\
    Stack trace:\n#0 /tmp/tmp4zlulpzv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4zlulpzv.php\
    \ on line 34\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $r\
    \ = preg_match_all('/I/', $S, $m);\n    return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnjoajx0n.php:21\n\
    Stack trace:\n#0 /tmp/tmpnjoajx0n.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpnjoajx0n.php\
    \ on line 21\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $arr\
    \ = explode(' ', $S);\n    $boredoms = 0;\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if ($arr[$i] == 'I') {\n            $boredoms++;\n        }\n\
    \    }\n    return $boredoms;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rmi6jcx.php:31\n\
    Stack trace:\n#0 /tmp/tmp4rmi6jcx.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4rmi6jcx.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ Replace me with your code\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3tvx6e3q.php:18\n\
    Stack trace:\n#0 /tmp/tmp3tvx6e3q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp3tvx6e3q.php\
    \ on line 18\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = explode(\" \", $S);\n  $boredoms = 0;\n  for ($i = 0; $i < count($S); $i++)\
    \ {\n    if ($S[$i] == \"I\") {\n      if ($i == 0) {\n        $boredoms++;\n\
    \      } else if ($S[$i - 1] == \".\") {\n        $boredoms++;\n      } else if\
    \ ($S[$i - 1] == \"?\") {\n        $boredoms++;\n      } else if ($S[$i - 1] ==\
    \ \"!\") {\n        $boredoms++;\n      }\n    }\n  }\n  return $boredoms;\n}\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjhwa9vx.php:37\n\
    Stack trace:\n#0 /tmp/tmppjhwa9vx.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppjhwa9vx.php\
    \ on line 37\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = preg_split('/[.?!]/', $S);\n    $I = preg_grep('/^\\s*I/', $S);\n    return\
    \ count($I);\n}\n$S = \"The sky is blue. The sun is shining. I love this weather\"\
    ;\necho is_bored($S);\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rjxou29.php:23\n\
    Stack trace:\n#0 /tmp/tmp4rjxou29.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4rjxou29.php\
    \ on line 23\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('. ', $S);\n    $boredom_count = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        if (substr($sentence, 0, 2) == 'I ') {\n            $boredom_count++;\n\
    \        }\n    }\n    return $boredom_count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $s\
    \ = explode(\".\", $S);\n    $boredoms = 0;\n    foreach ($s as $sentence) {\n\
    \        $words = explode(\" \", $sentence);\n        if (trim($words[0]) == \"\
    I\") {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n\
    \nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnq2kns6x.php:31\n\
    Stack trace:\n#0 /tmp/tmpnq2kns6x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnq2kns6x.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $arr\
    \ = explode(' ', $S);\n  $arr_len = count($arr);\n  $boredoms = 0;\n  $is_capital\
    \ = false;\n  for ($i = 0; $i < $arr_len; $i++) {\n    if ($is_capital) {\n  \
    \    $boredoms++;\n      $is_capital = false;\n    }\n    if ($arr[$i][0] == 'I')\
    \ {\n      $is_capital = true;\n    }\n  }\n  return $boredoms;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0qe_193.php:33\n\
    Stack trace:\n#0 /tmp/tmpl0qe_193.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpl0qe_193.php\
    \ on line 33\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = str_split($S);\n    $boredoms = 0;\n    for ($i = 0; $i < count($S); $i++)\
    \ {\n        if (strtoupper($S[$i]) == 'I') {\n            $boredoms++;\n    \
    \    }\n    }\n    return $boredoms;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmqvhqxy_.php:26\n\
    Stack trace:\n#0 /tmp/tmpmqvhqxy_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmqvhqxy_.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $s = explode(\" \", $S);\n    foreach ($s as $a) {\n        if ($a\
    \ == \"I\") {\n            $count = $count + 1;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3m6fedf.php:31\n\
    Stack trace:\n#0 /tmp/tmpe3m6fedf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpe3m6fedf.php\
    \ on line 31\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $split_string\
    \ = explode(' ', $S);\n    $result = [];\n    $boredom = 0;\n    foreach ($split_string\
    \ as $word) {\n        $result[] = $word;\n        if (isset($result[0]) && $result[0]\
    \ == 'I') {\n            $boredom++;\n        }\n    }\n    return $boredom;\n\
    }\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ) . \"\\n\";\necho is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"I do\
    \ not want to go to the dentist. I want to go to the cinema\") . \"\\n\";\necho\
    \ is_bored(\"I am going to the cinema today. I love films\") . \"\\n\";\necho\
    \ is_bored(\"There is a lot of traffic on the road. I am going to be late for\
    \ work. I do not like driving in the city\") . \"\\n\";\necho is_bored(\"I am\
    \ going to the cinema today. I love films. I am going to the cinema today. I love\
    \ films. I am going to the cinema today. I love films. I am going to the cinema\
    \ today. I love films. I am going to the cinema today. I love films. I am going\
    \ to the cinema today. I love films. I am going to the cinema today. I love films.\
    \ I am going to the cinema today. I love films. I am going to the cinema today.\
    \ I love films. I am going to the cinema today. I love films. I am going to the\
    \ cinema today. I love films. I am going to the cinema today. I love films. I\
    \ am going to the cinema today. I love films. I am going to the cinema today.\
    \ I love films. I am going to the cinema today. I love films. I am going to the\
    \ cinema today. I love films. I am going to the cinema today. I love films. I\
    \ am going to the cinema today. I love films. I am going to the cinema today.\
    \ I love films. I am going to the cinema today. I love films. I am going to the\
    \ cinema today. I love films. I am going to the cinema today. I love films. I\
    \ am going to the cinema today. I love films. I am going\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Hello", expecting ")" in /tmp/tmpbk2lzpeq.php
    on line 33

    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ count(array_filter(explode('.', $S), function($s) {\n        return $s && strtolower(substr($s,\
    \ 0, 1)) == 'i';\n    }));\n}\necho is_bored(\"Hello world\").\"\\n\";\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0_6y1b7.php:23\n\
    Stack trace:\n#0 /tmp/tmpl0_6y1b7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpl0_6y1b7.php\
    \ on line 23\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('.', $S);\n    $boredoms = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(' ', $sentence);\n        if ($words[0] == 'I')\
    \ $boredoms++;\n    }\n    return $boredoms;\n}\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\");\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp63zbue3v.php:29\n\
    Stack trace:\n#0 /tmp/tmp63zbue3v.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp63zbue3v.php\
    \ on line 29\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ remove unrequired characters\n    $S = preg_replace('/[^\\w\\s.?!]/', '', $S);\n\
    \    // split into sentences\n    $sentences = preg_split('/[.?!]/', $S);\n  \
    \  // count I sentences\n    $count = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        if (substr($sentence, 0, strlen('I')) == 'I') {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkn3q_ldn.php:30\n\
    Stack trace:\n#0 /tmp/tmpkn3q_ldn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkn3q_ldn.php\
    \ on line 30\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $parts\
    \ = preg_split('/[.?!]/', $S);\n    $parts = array_filter($parts);\n    $result\
    \ = 0;\n    foreach ($parts as $part) {\n        $arr = explode(' ', $part);\n\
    \        if ($arr[0] == 'I') {\n            $result++;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9n13h9wz.php:32\n\
    Stack trace:\n#0 /tmp/tmp9n13h9wz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9n13h9wz.php\
    \ on line 32\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ ... your code goes here ...\n  $S = preg_split('/[.?!]/', $S);\n  $i = 0;\n\
    \  foreach ($S as $s) {\n    if (preg_match('/^\\s*I\\s/', $s)) {\n      $i++;\n\
    \    }\n  }\n  return $i;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $n\
    \ = 0;\n    $sentence = explode(\".\", $S);\n    foreach ($sentence as $s) {\n\
    \        $s = trim($s);\n        if (strpos($s, \"I\") === 0) {\n            $n++;\n\
    \        }\n    }\n    return $n;\n}\n\nvar_dump(is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\"));\nfunction candidate(...$args) {\n \
    \   return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "int(1)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq34ciirn.php:29\n\
    Stack trace:\n#0 /tmp/tmpq34ciirn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpq34ciirn.php\
    \ on line 29\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ count(array_filter(explode(\" \", $S), function($el) {\n        return $el ==\
    \ \"I\";\n    }));\n}\necho is_bored(\"The sky is blue. The sun is shining. I\
    \ love this weather\");\necho \"<br/>\";\necho is_bored(\"Hello world\");\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br/>0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43g1b4it.php:28\n\
    Stack trace:\n#0 /tmp/tmp43g1b4it.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp43g1b4it.php\
    \ on line 28\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = preg_split('/[.?!]/', $S);\n    $counter = 0;\n    foreach ($sentences as\
    \ $sentence) {\n        if (preg_match('/^I/', $sentence)) {\n            $counter++;\n\
    \        }\n    }\n    return $counter;\n}\n\n$assertions = array(\n    array(\n\
    \        'input' => 'Hello world',\n        'expected' => 0\n    ),\n    array(\n\
    \        'input' => 'The sky is blue. The sun is shining. I love this weather',\n\
    \        'expected' => 1\n    ),\n    array(\n        'input' => 'The sky is blue.\
    \ The sun is shining. I love this weather! The weather is so nice I love it',\n\
    \        'expected' => 2\n    ),\n    array(\n        'input' => 'The sky is blue.\
    \ The sun is shining. I love this weather? Yeah, it is really nice and I love\
    \ it',\n        'expected' => 2\n    ),\n    array(\n        'input' => 'The sky\
    \ is blue. The sun is shining. I love this weather. It is raining. I hate the\
    \ rain',\n        'expected' => 2\n    ),\n    array(\n        'input' => 'The\
    \ sky is blue. The sun is shining. I love this weather. It is raining. I hate\
    \ the rain.',\n        'expected' => 2\n    ),\n    array(\n        'input' =>\
    \ 'The sky is blue. The sun is shining. I love this weather. It is raining. I\
    \ hate the rain. The raining is so boring',\n        'expected' => 2\n    ),\n\
    \    array(\n        'input' => 'The sky is blue. The sun is shining. I love this\
    \ weather. It is raining. I hate the rain. The raining is so boring. I am not\
    \ happy today',\n        'expected' => 3\n    ),\n    array(\n        'input'\
    \ => 'The sky is blue. The sun is shining. I love this weather. It is raining.\
    \ I hate the rain. The raining is so boring. I am not happy today. I do not want\
    \ to go to school today',\n        'expected' => 4\n    ),\n    array(\n     \
    \   '\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "", expecting ")" in /tmp/tmpfz633vix.php
    on line 59

    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\treturn\
    \ preg_match_all('/I/', $S, $matches);\n}\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66qv51p0.php:20\n\
    Stack trace:\n#0 /tmp/tmp66qv51p0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp66qv51p0.php\
    \ on line 20\n"
  timestamp: 1660028086

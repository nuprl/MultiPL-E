language: php
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = \"aeiouAEIOU\"\
    ;\n    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n        $char = $word[$i];\n\
    \        if (strpos($vowels, $char) !== false) {\n            return $char;\n\
    \        }\n    }\n    return \"\";\n}\n\necho get_closest_vowel(\"yogurt\");\n\
    echo \"\\n\";\necho get_closest_vowel(\"FULL\");\necho \"\\n\";\necho get_closest_vowel(\"\
    quick\");\necho \"\\n\";\necho get_closest_vowel(\"ab\");\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nU\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmped9xbdcj.php:42\n\
    Stack trace:\n#0 /tmp/tmped9xbdcj.php(55): test()\n#1 {main}\n  thrown in /tmp/tmped9xbdcj.php\
    \ on line 42\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\"a\",\"e\"\
    ,\"i\",\"o\",\"u\"];\n    $check = false;\n    for ($i=strlen($word)-1; $i > 0;\
    \ $i--) { \n        if (in_array($word[$i], $vowels)) {\n            if ($check)\
    \ {\n                return $word[$i];\n            }\n        } else {\n    \
    \        $check = true;\n        }\n    }\n    return \"\";\n}\nprint_r(get_closest_vowel(\"\
    yogurt\").\"\\n\");\nprint_r(get_closest_vowel(\"FULL\").\"\\n\");\nprint_r(get_closest_vowel(\"\
    quick\").\"\\n\");\nprint_r(get_closest_vowel(\"ab\").\"\\n\");\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk12idvo3.php:41\n\
    Stack trace:\n#0 /tmp/tmpk12idvo3.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpk12idvo3.php\
    \ on line 41\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $reversed_word = strrev($word);\n    $closest_vowel = '';\n\
    \    $flag = false;\n    for ($i = 0; $i < strlen($reversed_word); $i++) {\n \
    \       if (in_array($reversed_word[$i], $vowels)) {\n            if (!$flag)\
    \ {\n                $closest_vowel = $reversed_word[$i];\n                $flag\
    \ = true;\n            }\n        } else {\n            if ($flag) {\n       \
    \         return strrev($closest_vowel);\n            }\n        }\n    }\n  \
    \  return '';\n}\n\nvar_dump(get_closest_vowel(\"yogurt\"));\nvar_dump(get_closest_vowel(\"\
    FULL\"));\nvar_dump(get_closest_vowel(\"quick\"));\nvar_dump(get_closest_vowel(\"\
    ab\"));\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string(1) \"u\"\nstring(0) \"\"\nstring(1) \"i\"\nstring(0) \"\"\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp92_d8wpu.php:49\nStack trace:\n\
    #0 /tmp/tmp92_d8wpu.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp92_d8wpu.php\
    \ on line 49\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = \"aeiouAEIOU\"\
    ;\n    $vowel_array = str_split($vowels);\n    $word_array = str_split($word);\n\
    \    $vowel_index = '';\n    $consonant_index = '';\n    foreach($word_array as\
    \ $key => $value) {\n        if(in_array($value, $vowel_array)) {\n          \
    \  $vowel_index = $key;\n            break;\n        }\n    }\n    if($vowel_index\
    \ === '') {\n        return \"\";\n    }\n    $consonant_index = $vowel_index;\n\
    \    while($consonant_index >= 0) {\n        if(!in_array($word_array[$consonant_index],\
    \ $vowel_array)) {\n            break;\n        }\n        $consonant_index -=\
    \ 1;\n    }\n    if($consonant_index === -1) {\n        return \"\";\n    }\n\
    \    $consonant_index += 1;\n    return $word_array[$consonant_index];\n}\n\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytisgpxz.php:50\n\
    Stack trace:\n#0 /tmp/tmpytisgpxz.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpytisgpxz.php\
    \ on line 50\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = \"AEIOUaeiou\"\
    ;\n\t$consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\";\n\t$strlen\
    \ = strlen($word);\n\t$vowel_index = \"\";\n\tfor ($i=$strlen-1; $i >= 0; $i--)\
    \ { \n\t\tif (strpos($vowels, $word[$i]) !== false) {\n\t\t\t$vowel_index = $i;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\tfor ($i=$vowel_index-1; $i >= 0; $i--) { \n\t\tif\
    \ (strpos($consonants, $word[$i]) !== false) {\n\t\t\treturn $word[$vowel_index];\n\
    \t\t}\n\t}\n\treturn \"\";\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuljqgemg.php:44\n\
    Stack trace:\n#0 /tmp/tmpuljqgemg.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpuljqgemg.php\
    \ on line 44\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $letter_found\
    \ = false;\n    $word_length = strlen($word);\n    if($word_length < 3) {\n  \
    \      return '';\n    }\n    for($i = $word_length - 1; $i > 0; $i--) {\n   \
    \     if(in_array($word[$i], $vowels)) {\n            $letter_found = true;\n\
    \            $vowel_position = $i;\n            if(in_array($word[$i-1], $consonants)\
    \ && in_array($word[$i+1], $consonants)) {\n                return $word[$i];\n\
    \            }\n        }\n    }\n    if($letter_found) {\n        return $word[$vowel_position];\n\
    \    }\n    return '';\n}\n\necho get_closest_vowel(\"yogurt\");\necho '<br/>';\n\
    echo get_closest_vowel(\"FULL\");\necho '<br/>';\necho get_closest_vowel(\"quick\"\
    );\necho '<br/>';\necho get_closest_vowel(\"ab\");\necho '<br/>';\necho get_closest_vowel(\"\
    sprinkles\");\necho '<br/>';\necho get_closest_vowel(\"abacabae\");\necho '<br/>';\n\
    echo get_closest_vowel(\"lxxyzo\");\necho '<br/>';\necho get_closest_vowel(\"\
    tlppx\");\necho '<br/>';\necho get_closest_vowel(\"pippie\");\necho '<br/>';\n\
    echo get_closest_vowel(\"pizzazz\");\necho '<br/>\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "<br/>" in /tmp/tmppxen5zol.php
    on line 58

    '
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $position = strlen($word);\n\
    \    $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n    $consonants\
    \ = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r',\
    \ 's', 't', 'v', 'w', 'x', 'y', 'z', 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L',\
    \ 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z');\n    $flag = false;\n\
    \    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($flag) {\n                $position = $i;\n   \
    \             break;\n            }\n        } else if (in_array($word[$i], $consonants))\
    \ {\n            $flag = true;\n        }\n    }\n    if ($position == strlen($word))\
    \ {\n        return \"\";\n    } else {\n        return $word[$position];\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ci6y7rz.php:45\n\
    Stack trace:\n#0 /tmp/tmp9ci6y7rz.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp9ci6y7rz.php\
    \ on line 45\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word = strtolower($word);\n\
    \    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word_length = strlen($word);\n\
    \    $found_vowel = FALSE;\n    $closest_vowel = \"\";\n    $closest_vowel_distance\
    \ = $word_length;\n    for ($i = $word_length-1; $i >= 0; $i--) {\n        $char\
    \ = $word[$i];\n        if (in_array($char, $vowels)) {\n            $found_vowel\
    \ = TRUE;\n            $distance = $word_length - $i;\n            if ($distance\
    \ < $closest_vowel_distance) {\n                $closest_vowel = $char;\n    \
    \            $closest_vowel_distance = $distance;\n            }\n        } else\
    \ {\n            if ($found_vowel) {\n                return $closest_vowel;\n\
    \            }\n        }\n    }\n    return \"\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9r26av2c.php:50\n\
    Stack trace:\n#0 /tmp/tmp9r26av2c.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp9r26av2c.php\
    \ on line 50\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $word = strrev($word);\n\
    \  $vowels = \"aeiou\";\n  $vowel = '';\n  for ($i = 0; $i < strlen($word); $i++)\
    \ {\n    if (strpos($vowels, $word[$i]) !== false) {\n      $vowel = $word[$i];\n\
    \      $vowelIndex = $i;\n      break;\n    }\n  }\n  if ($vowel == '') {\n  \
    \  return '';\n  }\n  $previous = '';\n  $next = '';\n  for ($i = 0; $i < $vowelIndex;\
    \ $i++) {\n    if (strpos($vowels, $word[$i]) === false) {\n      $previous =\
    \ $word[$i];\n      break;\n    }\n  }\n  for ($i = $vowelIndex + 1; $i < strlen($word);\
    \ $i++) {\n    if (strpos($vowels, $word[$i]) === false) {\n      $next = $word[$i];\n\
    \      break;\n    }\n  }\n  if ($previous == '' || $next == '') {\n    return\
    \ '';\n  }\n  return $vowel;\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\"\
    ;\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\necho get_closest_vowel(\"\
    war\") . \"\\n\";\necho get_closest_vowel(\"party\") . \"\\n\";\necho get_closest_vowel(\"\
    work\") . \"\\n\";\necho get_closest_vowel(\"joke\") . \"\\n\";\necho get_closest_vowel(\"\
    luck\") . \"\\n\";\necho get_closest_vowel(\"bad\") . \"\\n\";\necho get_closest_vowel(\"\
    taxi\") . \"\\n\";\necho get\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmpajkzlb35.php on line 61

    '
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $last_char = '';\n    $result = '';\n    for ($i = strlen($word)\
    \ - 1; $i >= 0; $i--) {\n        if ($last_char && in_array($word[$i], $vowels))\
    \ {\n            $result = $word[$i];\n            break;\n        }\n       \
    \ if (!in_array($word[$i], $vowels)) {\n            $last_char = $word[$i];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuxnasctr.php:39\n\
    Stack trace:\n#0 /tmp/tmpuxnasctr.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpuxnasctr.php\
    \ on line 39\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\"a\",\"e\"\
    ,\"i\",\"o\",\"u\"];\n    $found = '';\n    $current_closest = \"z\";\n    $found_index\
    \ = strlen($word);\n    //strrpos finds the position of the last occurrence of\
    \ a substring in a string\n    //strlen return the length of a string\n    for\
    \ ($i = 0; $i < strlen($word); $i++) {\n        $char = $word[$i];\n        if\
    \ (in_array($char, $vowels)) {\n            $is_before_consonant = (in_array($word[$i\
    \ - 1], $vowels)) ? false : true;\n            $is_after_consonant = (in_array($word[$i\
    \ + 1], $vowels)) ? false : true;\n            if ($is_before_consonant && $is_after_consonant)\
    \ {\n                $found = $char;\n                $found_index = $i;\n   \
    \             break;\n            }\n        }\n    }\n    if (empty($found))\
    \ {\n        return \"\";\n    }\n    for ($i = $found_index; $i < strlen($word);\
    \ $i++) {\n        $char = $word[$i];\n        if (in_array($char, $vowels)) {\n\
    \            $is_before_consonant = (in_array($word[$i - 1], $vowels)) ? false\
    \ : true;\n            $is_after_consonant = (in_array($word[$i + 1], $vowels))\
    \ ? false : true;\n            if ($is_before_consonant && $is_after_consonant)\
    \ {\n                if ($char < $current_closest) {\n                    $current_closest\
    \ = $char;\n                }\n            }\n        }\n    }\n    return $current_closest;\n\
    }\n\necho get_closest_vowel(\"yogurt\");\necho \"\\n\";\necho get_closest_vowel(\"\
    FULL\");\necho \"\\n\";\necho get_closest_vowel(\"quick\");\necho \"\\n\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "yogurt", expecting "," or ";"
    in /tmp/tmpre2pwrxx.php on line 64

    '
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array(\"a\"\
    , \"i\", \"u\", \"e\", \"o\");\n    $closest_vowel = \"\";\n    $distance = strlen($word);\n\
    \    $vowel_index = -1;\n    $consonant_before_index = -1;\n    $consonant_after_index\
    \ = -1;\n    $word_length = strlen($word);\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        $letter = $word[$i];\n        if (in_array($letter, $vowels))\
    \ {\n            $vowel_index = $i;\n            break;\n        }\n    }\n  \
    \  if ($vowel_index < 0) {\n        return \"\";\n    }\n    for ($i = $vowel_index\
    \ - 1; $i >= 0; $i--) {\n        $letter = $word[$i];\n        if (!in_array($letter,\
    \ $vowels)) {\n            $consonant_before_index = $i;\n            break;\n\
    \        }\n    }\n    for ($i = $vowel_index + 1; $i < $word_length; $i++) {\n\
    \        $letter = $word[$i];\n        if (!in_array($letter, $vowels)) {\n  \
    \          $consonant_after_index = $i;\n            break;\n        }\n    }\n\
    \    if ($consonant_before_index < 0 || $consonant_after_index < 0) {\n      \
    \  return \"\";\n    }\n    $distance_before = $vowel_index - $consonant_before_index;\n\
    \    $distance_after = $consonant_after_index - $vowel_index;\n    if ($distance_before\
    \ <= $distance_after) {\n        $closest_vowel = $word[$vowel_index];\n    }\
    \ else {\n        $closest_vowel = $word[$vowel_index + 1];\n    }\n    return\
    \ $closest_vowel;\n}\n\n$word = \"yogurt\";\nfunction candidate(...$args) {\n\
    \    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphf22wewk.php:67\n\
    Stack trace:\n#0 /tmp/tmphf22wewk.php(82): test()\n#1 {main}\n  thrown in /tmp/tmphf22wewk.php\
    \ on line 67\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = \"aeiouAEIOU\"\
    ;\n    $characters = str_split($word);\n    $closest_vowel = \"\";\n    $i = count($characters)\
    \ - 1;\n    $before_vowel = False;\n    $after_vowel = False;\n    $found_vowel\
    \ = False;\n    while ($i >= 0 && !$found_vowel) {\n        $char = $characters[$i];\n\
    \        if (strpos($vowels, $char) !== False) {\n            $after_vowel = True;\n\
    \            if ($before_vowel) {\n                $found_vowel = True;\n    \
    \            $closest_vowel = $char;\n            }\n        } else {\n      \
    \      $before_vowel = $after_vowel;\n            $after_vowel = False;\n    \
    \    }\n        $i--;\n    }\n    return $closest_vowel;\n}\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl5g3w86n.php:45\n\
    Stack trace:\n#0 /tmp/tmpl5g3w86n.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpl5g3w86n.php\
    \ on line 45\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n  $c = strlen($word);\n  for ($i=$c-1; $i>0; $i--)\
    \ {\n    if (in_array($word[$i], $vowels)) {\n      if (!in_array($word[$i-1],\
    \ $vowels)) {\n        return $word[$i];\n      }\n    }\n  }\n  return \"\";\n\
    }\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw38c0sxo.php:38\n\
    Stack trace:\n#0 /tmp/tmpw38c0sxo.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpw38c0sxo.php\
    \ on line 38\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = [\n    'a' =>\
    \ 0,\n    'e' => 0,\n    'i' => 0,\n    'o' => 0,\n    'u' => 0,\n    'y' => 0,\n\
    \  ];\n  $characters = str_split($word);\n  $length = count($characters);\n  for\
    \ ($i = $length - 1; $i >= 0; $i--) {\n    $char = $characters[$i];\n    if (array_key_exists($char,\
    \ $vowels)) {\n      $vowels[$char]++;\n    } else {\n      foreach ($vowels as\
    \ $vowel => $count) {\n        if ($count > 0) {\n          return $vowel;\n \
    \       }\n      }\n    }\n  }\n  return '';\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwdi368tw.php:49\n\
    Stack trace:\n#0 /tmp/tmpwdi368tw.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpwdi368tw.php\
    \ on line 49\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word = strtolower($word);\n\
    \    $length = strlen($word);\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ];\n    $prev_char = '';\n    $next_char = '';\n    $curr_vowel = '';\n    $count\
    \ = 0;\n    for ($i = $length - 1; $i >= 0; $i--) {\n        $char = $word[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $curr_vowel = $char;\n \
    \           $count++;\n        } else {\n            if ($count === 1) {\n   \
    \             $next_char = $char;\n                break;\n            }\n   \
    \     }\n    }\n    $closest_vowel = '';\n    if ($curr_vowel !== '' && $next_char\
    \ !== '') {\n        $closest_vowel = $curr_vowel;\n    }\n    return $closest_vowel;\n\
    }\n\nprint_r(get_closest_vowel(\"yogurt\"));\nprint_r(get_closest_vowel(\"FULL\"\
    ));\nprint_r(get_closest_vowel(\"quick\"));\nprint_r(get_closest_vowel(\"ab\"\
    ));\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlx5skrw.php:56\n\
    Stack trace:\n#0 /tmp/tmprlx5skrw.php(67): test()\n#1 {main}\n  thrown in /tmp/tmprlx5skrw.php\
    \ on line 56\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $ret = \"\";\n    for ($i = strlen($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     if ($i == strlen($word) - 1) {\n                $ret = \"\";\n         \
    \       break;\n            }\n            if (!in_array($word[$i - 1], $vowels)\
    \ && !in_array($word[$i + 1], $vowels)) {\n                $ret = $word[$i];\n\
    \                break;\n            }\n        }\n    }\n    return $ret;\n}\n\
    \nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnuygawo5.php:42\n\
    Stack trace:\n#0 /tmp/tmpnuygawo5.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpnuygawo5.php\
    \ on line 42\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n  $word = strtolower($word);\n  $pos = 0;\n  $max = 0;\n  for\
    \ ($i = 0; $i < strlen($word); $i++) {\n    if ($word[$i] == 'a' || $word[$i]\
    \ == 'e' || $word[$i] == 'i' || $word[$i] == 'o' || $word[$i] == 'u') {\n    \
    \  if ($max == 0) {\n        $max = $i;\n      }\n      else {\n        $pos =\
    \ $i;\n        break;\n      }\n    }\n  }\n  if ($max == 0) {\n    return '';\n\
    \  }\n  else {\n    $min = min($max, $pos);\n    return $word[$min];\n  }\n}\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51jb8bf6.php:45\n\
    Stack trace:\n#0 /tmp/tmp51jb8bf6.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp51jb8bf6.php\
    \ on line 45\n"
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n  $result = '';\n  for ($i = strlen($word) - 1; $i >= 0; $i--) {\n\
    \    if (in_array($word[$i], $vowels)) {\n      if ($i != 0 && $i != strlen($word)\
    \ - 1) {\n        if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i\
    \ + 1], $vowels)) {\n          $result = $word[$i];\n          break;\n      \
    \  }\n      }\n    }\n  }\n  return $result;\n}\n\necho get_closest_vowel(\"yogurt\"\
    );\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: u
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $word = str_split($word);\n    $len = count($word);\n\
    \    $found = FALSE;\n    for ($i = $len - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $j = $i - 1;\n            while ($j >= 0) {\n     \
    \           if (in_array($word[$j], $vowels)) {\n                    $j--;\n \
    \               } else {\n                    $found = TRUE;\n               \
    \     break;\n                }\n            }\n            if ($found) {\n  \
    \              break;\n            }\n        }\n    }\n    if ($found) {\n  \
    \      return $word[$i];\n    } else {\n        return '';\n    }\n}\nprint get_closest_vowel(\"\
    yogurt\");\necho \"\\n\";\nprint get_closest_vowel(\"FULL\");\necho \"\\n\";\n\
    print get_closest_vowel(\"quick\");\necho \"\\n\";\nprint get_closest_vowel(\"\
    ab\");\necho \"\\n\";\nprint get_closest_vowel(\"desk\");\necho \"\\n\";\nprint\
    \ get_closest_vowel(\"bear\");\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\n\ne\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1p81nzh.php:64\n\
    Stack trace:\n#0 /tmp/tmpc1p81nzh.php(75): test()\n#1 {main}\n  thrown in /tmp/tmpc1p81nzh.php\
    \ on line 64\n"
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t\n\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$count = strlen($word);\n\t$i = $count - 1;\n\t$vowel\
    \ = '';\n\t\n\twhile ($i > 0) {\n\t\t$letter = $word[$i];\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$vowel = $letter;\n\t\t\tbreak;\n\t\t}\n\t\t$i--;\n\t}\n\t\
    \n\tif ($vowel) {\n\t\t$before = $word[$i - 1];\n\t\t$after = $word[$i + 1];\n\
    \t\tif (in_array($before, $vowels) || in_array($after, $vowels)) {\n\t\t\t$vowel\
    \ = '';\n\t\t}\n\t}\n\t\n\treturn $vowel;\n}\nfunction candidate(...$args) {\n\
    \    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 3 in /tmp/tmphyicpx7h.php on line\
    \ 34\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyicpx7h.php:51\n\
    Stack trace:\n#0 /tmp/tmphyicpx7h.php(62): test()\n#1 {main}\n  thrown in /tmp/tmphyicpx7h.php\
    \ on line 51\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\tif (is_string($word)) {\n\
    \t\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\t$word_array\
    \ = str_split($word);\n\t\t$i = 0;\n\t\tforeach ($word_array as $key => $value)\
    \ {\n\t\t\tif (in_array($value, $vowels)) {\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t\
    \tif ($i > 1) {\n\t\t\t$j = count($word_array);\n\t\t\tfor ($k = $j; $k > 0; $k--)\
    \ {\n\t\t\t\t$flag = false;\n\t\t\t\tif (in_array($word_array[$k], $vowels)) {\n\
    \t\t\t\t\t$flag = true;\n\t\t\t\t\tfor ($l = ($k - 1); $l > 0; $l--) {\n\t\t\t\
    \t\t\tif (in_array($word_array[$l], $vowels)) {\n\t\t\t\t\t\t\t$flag = false;\n\
    \t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($flag == true)\
    \ {\n\t\t\t\t\t\treturn $word_array[$k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn '';\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 6 in /tmp/tmpk_z5w5c9.php on line 30\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpk_z5w5c9.php:53\nStack\
    \ trace:\n#0 /tmp/tmpk_z5w5c9.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpk_z5w5c9.php\
    \ on line 53\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $len = strlen($word);\n    $closest_vowel = '';\n    $closest_index\
    \ = $len;\n    $closest_left_consonant = '';\n    $closest_right_consonant = '';\n\
    \    $vowel_index = 0;\n    $index = $len - 1;\n    while($index >= 0) {\n   \
    \     $char = $word[$index];\n        if(in_array($char, $vowels)) {\n       \
    \     $vowel_index = $index;\n            for($i = $vowel_index + 1; $i < $len;\
    \ $i++) {\n                if(!in_array($word[$i], $vowels)) {\n             \
    \       $closest_right_consonant = $word[$i];\n                    break;\n  \
    \              }\n            }\n            for($i = $vowel_index - 1; $i >=\
    \ 0; $i--) {\n                if(!in_array($word[$i], $vowels)) {\n          \
    \          $closest_left_consonant = $word[$i];\n                    break;\n\
    \                }\n            }\n            if($closest_right_consonant &&\
    \ $closest_left_consonant) {\n                if($vowel_index < $closest_index)\
    \ {\n                    $closest_index = $vowel_index;\n                    $closest_vowel\
    \ = $char;\n                }\n            }\n        }\n        $index--;\n \
    \   }\n    return $closest_vowel;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8wzblzde.php:58\n\
    Stack trace:\n#0 /tmp/tmp8wzblzde.php(73): test()\n#1 {main}\n  thrown in /tmp/tmp8wzblzde.php\
    \ on line 58\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word = strrev($word);\n\
    \    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\");\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n  \
    \  $counter = 0;\n    $check = false;\n    for ($i = 0; $i < strlen($word); $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            if ($i > 0 && in_array($word[$i\
    \ - 1], $consonants)) {\n                $check = true;\n                $counter++;\n\
    \            }\n            if ($check) {\n                if ($counter > 1) {\n\
    \                    return strrev($word[$i - 1]);\n                }\n      \
    \      }\n        }\n    }\n    return \"\";\n}\n\necho get_closest_vowel(\"yogurt\"\
    );\necho \"\\n\";\necho get_closest_vowel(\"FULL\");\necho \"\\n\";\necho get_closest_vowel(\"\
    quick\");\necho \"\\n\";\necho get_closest_vowel(\"ab\");\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "g\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplhux4nni.php:51\n\
    Stack trace:\n#0 /tmp/tmplhux4nni.php(66): test()\n#1 {main}\n  thrown in /tmp/tmplhux4nni.php\
    \ on line 51\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    // your code\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz2ki3ri.php:25\n\
    Stack trace:\n#0 /tmp/tmpkz2ki3ri.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkz2ki3ri.php\
    \ on line 25\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n\t$word = strtolower($word);\n\t$current_index = strlen($word)\
    \ - 1;\n\twhile($current_index > 0) {\n\t\t$current_char = $word[$current_index];\n\
    \t\tif(in_array($current_char, $vowels)) {\n\t\t\tif(in_array($word[$current_index\
    \ - 1], $vowels)) {\n\t\t\t\t$current_index--;\n\t\t\t} else {\n\t\t\t\treturn\
    \ $current_char;\n\t\t\t}\n\t\t} else {\n\t\t\t$current_index--;\n\t\t}\n\t}\n\
    \treturn \"\";\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9a0yuj_.php:48\n\
    Stack trace:\n#0 /tmp/tmpe9a0yuj_.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpe9a0yuj_.php\
    \ on line 48\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word_array\
    \ = str_split($word);\n    $pos = count($word_array) - 1;\n    while (in_array($word_array[$pos],\
    \ $vowels)) {\n        $pos -= 1;\n    }\n    if (in_array($word_array[$pos],\
    \ $consonants)) {\n        $pos -= 1;\n        while (in_array($word_array[$pos],\
    \ $consonants)) {\n            $pos -= 1;\n        }\n        if (in_array($word_array[$pos],\
    \ $vowels)) {\n            return $word_array[$pos];\n        }\n    }\n    return\
    \ '';\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfgzmp90u.php:43\n\
    Stack trace:\n#0 /tmp/tmpfgzmp90u.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpfgzmp90u.php\
    \ on line 43\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n  $letters = str_split($word);\n  for ($i = count($letters)\
    \ - 1; $i >= 0; $i--) {\n    if (in_array($letters[$i], $vowels)) {\n      $letter\
    \ = $letters[$i];\n      break;\n    }\n  }\n  if (!isset($letter)) {\n    return\
    \ \"\";\n  }\n\n  $prev_letter = $letters[$i - 1];\n  $next_letter = $letters[$i\
    \ + 1];\n  if (in_array($prev_letter, $vowels) || in_array($next_letter, $vowels))\
    \ {\n    return \"\";\n  }\n  return $letter;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpp_p8jq0c.php on line 29\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpp_p8jq0c.php:45\nStack\
    \ trace:\n#0 /tmp/tmpp_p8jq0c.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpp_p8jq0c.php\
    \ on line 45\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n\t$consonants = range('a', 'z');\n\t$consonants = array_diff($consonants,\
    \ $vowels);\n\t$consonants[] = 'A';\n\t$consonants[] = 'E';\n\t$consonants[] =\
    \ 'I';\n\t$consonants[] = 'O';\n\t$consonants[] = 'U';\n\tfor ($i = strlen($word)\
    \ - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\tif ($i\
    \ == strlen($word) - 1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tif (in_array($word[$i\
    \ + 1], $consonants)) {\n\t\t\t\treturn $word[$i];\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ '';\n}\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5op8i7y5.php:44\n\
    Stack trace:\n#0 /tmp/tmp5op8i7y5.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp5op8i7y5.php\
    \ on line 44\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$len = strlen($word);\n\
    \t$vowels = \"aeiou\";\n\t$i = 0;\n\t$con = false;\n\t$consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n\t$cur_vowel = \"\";\n\t$cur_dist = 0;\n\t$closest_vowel = \"\";\n\t$closest_dist\
    \ = 0;\n\twhile ($i < $len) {\n\t\tif (strpos($consonants, strtolower($word[$i]))\
    \ !== false) {\n\t\t\t$con = true;\n\t\t} else if (strpos($vowels, strtolower($word[$i]))\
    \ !== false) {\n\t\t\tif ($con) {\n\t\t\t\t$cur_vowel = $word[$i];\n\t\t\t\t$cur_dist\
    \ = $i;\n\t\t\t\tif ($cur_dist < $closest_dist || $closest_dist == 0) {\n\t\t\t\
    \t\t$closest_vowel = $cur_vowel;\n\t\t\t\t\t$closest_dist = $cur_dist;\n\t\t\t\
    \t}\n\t\t\t}\n\t\t\t$con = false;\n\t\t}\n\t\t$i++;\n\t}\n\treturn $closest_vowel;\n\
    }\n\necho get_closest_vowel(\"yogurt\");\necho \"\\n\";\necho get_closest_vowel(\"\
    FULL\");\necho \"\\n\";\necho get_closest_vowel(\"quick\");\necho \"\\n\";\necho\
    \ get_closest_vowel(\"ab\");\necho \"\\n\";\necho get_closest_vowel(\"omg\");\n\
    echo \"\\n\";\necho get_closest_vowel(\"e\");\necho \"\\n\";\necho get_closest_vowel(\"\
    I\");\necho \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nU\nu\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpquaho51g.php:64\n\
    Stack trace:\n#0 /tmp/tmpquaho51g.php(79): test()\n#1 {main}\n  thrown in /tmp/tmpquaho51g.php\
    \ on line 64\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n   $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n   $word = strtolower($word);\n   $vowel_index = -1;\n   $length\
    \ = strlen($word);\n   for ($i = $length - 1; $i >= 0; $i--) {\n       if (in_array($word[$i],\
    \ $vowels)) {\n           $vowel_index = $i;\n           break;\n       }\n  \
    \ }\n   if ($vowel_index === -1) {\n       return '';\n   }\n   $i = $vowel_index;\n\
    \   while ($i < $length - 1) {\n       if (!in_array($word[$i + 1], $vowels))\
    \ {\n           break;\n       }\n       $i++;\n   }\n   if ($i === $length -\
    \ 1) {\n       return '';\n   }\n   return $word[$i + 1];\n}\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphjp0kv6s.php:47\n\
    Stack trace:\n#0 /tmp/tmphjp0kv6s.php(62): test()\n#1 {main}\n  thrown in /tmp/tmphjp0kv6s.php\
    \ on line 47\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word = strtolower($word);\n\
    \    $strlen = strlen($word);\n    for ($i = $strlen - 1; $i > 0; $i--) {\n  \
    \      if (in_array($word[$i], ['a', 'e', 'i', 'o', 'u']) && !in_array($word[$i\
    \ - 1], ['a', 'e', 'i', 'o', 'u'])) {\n            return $word[$i];\n       \
    \ }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"ab\");\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmo9v9xoc.php:40\n\
    Stack trace:\n#0 /tmp/tmpmo9v9xoc.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpmo9v9xoc.php\
    \ on line 40\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = [\"a\",\"e\"\
    ,\"i\",\"o\",\"u\"];\n\t$newWord = str_split($word);\n\t$found = 0;\n\t$vowel\
    \ = \"\";\n\tfor ($i=count($newWord)-1; $i > 0; $i--) { \n\t\tif ($found == 1)\
    \ {\n\t\t\tif (in_array($newWord[$i], $vowels)) {\n\t\t\t\t$vowel = $newWord[$i];\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (in_array($newWord[$i], $vowels)) {\n\t\
    \t\t$found = 0;\n\t\t} else {\n\t\t\t$found = 1;\n\t\t}\n\t}\n\treturn $vowel;\n\
    }\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcemlseo0.php:44\n\
    Stack trace:\n#0 /tmp/tmpcemlseo0.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpcemlseo0.php\
    \ on line 44\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  // your code here\n}\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpthg1vu5e.php:24\n\
    Stack trace:\n#0 /tmp/tmpthg1vu5e.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpthg1vu5e.php\
    \ on line 24\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word_reverse = strrev($word);\n\
    \    $word_length = strlen($word_reverse);\n    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $index = 0;\n    while ($index < $word_length) {\n        if (in_array($word_reverse[$index],\
    \ $vowels)) {\n            $index_vowel = $index;\n            $index++;\n   \
    \         if (in_array($word_reverse[$index], $vowels)) {\n                $index++;\n\
    \            } else {\n                return $word_reverse[$index_vowel];\n \
    \           }\n        } else {\n            $index++;\n        }\n    }\n   \
    \ return '';\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 4 in /tmp/tmpzgpo5_pp.php on line\
    \ 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgpo5_pp.php:45\n\
    Stack trace:\n#0 /tmp/tmpzgpo5_pp.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpzgpo5_pp.php\
    \ on line 45\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  // TODO\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnyp_h1mh.php:25\n\
    Stack trace:\n#0 /tmp/tmpnyp_h1mh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnyp_h1mh.php\
    \ on line 25\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word_array = str_split($word);\n\
    \    $word_array_reverse = array_reverse($word_array);\n    $consonants = ['b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z'];\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    for ($i\
    \ = 0; $i < count($word_array_reverse); $i++) {\n        if (in_array($word_array_reverse[$i],\
    \ $vowels)) {\n            if (in_array($word_array_reverse[$i + 1], $consonants)\
    \ && in_array($word_array_reverse[$i - 1], $consonants)) {\n                return\
    \ $word_array_reverse[$i];\n            }\n        }\n    }\n    return \"\";\n\
    }\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\n\
    echo get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'u

    Warning: Undefined array key 2 in /tmp/tmpwygc6nf_.php on line 23


    Warning: Undefined array key 4 in /tmp/tmpwygc6nf_.php on line 23


    Warning: Undefined array key 4 in /tmp/tmpwygc6nf_.php on line 23


    Warning: Undefined array key -1 in /tmp/tmpwygc6nf_.php on line 23


    Warning: Undefined array key 3 in /tmp/tmpwygc6nf_.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpwygc6nf_.php on line 23


    Warning: Undefined array key -1 in /tmp/tmpwygc6nf_.php on line 23


    Warning: Undefined array key -1 in /tmp/tmpwygc6nf_.php on line 23


    Warning: Undefined array key -1 in /tmp/tmpwygc6nf_.php on line 23

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $closest_vowel = '';\n\
    \    $right_side = '';\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants\
    \ = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r',\
    \ 's', 't', 'v', 'w', 'x', 'y', 'z');\n    $word_length = strlen($word);\n   \
    \ $word_array = str_split($word);\n    $consonant_count = 0;\n    $vowel_count\
    \ = 0;\n    for ($i=$word_length-1; $i >= 0; $i--) { \n        $right_side .=\
    \ $word_array[$i];\n    }\n    $right_side_length = strlen($right_side);\n   \
    \ $right_side_array = str_split($right_side);\n    for ($i=0; $i < $right_side_length;\
    \ $i++) { \n        if (in_array($right_side_array[$i], $vowels)) {\n        \
    \    $vowel_count++;\n        }\n        if (in_array($right_side_array[$i], $consonants))\
    \ {\n            $consonant_count++;\n        }\n        if ($vowel_count >= 1\
    \ && $consonant_count >= 1) {\n            $closest_vowel = $right_side_array[$i-1];\n\
    \            break;\n        }\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"<br>\";\necho get_closest_vowel(\"FULL\") . \"<br>\";\necho get_closest_vowel(\"\
    quick\") . \"<br>\";\necho get_closest_vowel(\"ab\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "r<br><br>c<br>b<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw2doa6dt.php:54\n\
    Stack trace:\n#0 /tmp/tmpw2doa6dt.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpw2doa6dt.php\
    \ on line 54\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n\t$word = strtolower($word);\n\tfor ($i = 0; $i < strlen($word);\
    \ $i++) {\n\t\t$char = $word[$i];\n\t\t$char2 = $word[$i + 1];\n\t\t$char3 = $word[$i\
    \ + 2];\n\t\tif (in_array($char, $vowels) && in_array($char2, $vowels)) {\n\t\t\
    \tcontinue;\n\t\t} elseif (in_array($char, $vowels) && !in_array($char2, $vowels)\
    \ && in_array($char3, $vowels)) {\n\t\t\treturn $char2;\n\t\t} elseif (in_array($char,\
    \ $vowels) && !in_array($char2, $vowels) && !in_array($char3, $vowels)) {\n\t\t\
    \treturn $char3;\n\t\t}\n\t}\n\treturn \"\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4_n__zh.php:39\n\
    Stack trace:\n#0 /tmp/tmps4_n__zh.php(54): test()\n#1 {main}\n  thrown in /tmp/tmps4_n__zh.php\
    \ on line 39\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $result = '';\n    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    for ($i = strlen($word) - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $result =\
    \ $word[$i];\n            break;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprar2aols.php:34\n\
    Stack trace:\n#0 /tmp/tmprar2aols.php(47): test()\n#1 {main}\n  thrown in /tmp/tmprar2aols.php\
    \ on line 34\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = \"aeiouAEIOU\"\
    ;\n  $result = '';\n  for ($i = strlen($word) - 1; $i >= 0; $i--) {\n    if ($i\
    \ == 0) {\n      $i = -1;\n      break;\n    }\n    $char = $word[$i];\n    $char2\
    \ = $word[$i - 1];\n    if (strpos($vowels, $char) !== false && strpos($vowels,\
    \ $char2) === false) {\n      break;\n    }\n  }\n  if ($i >= 0) {\n    $result\
    \ = $word[$i];\n  }\n  return $result;\n}\necho get_closest_vowel(\"yogurt\")\
    \ . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\necho get_closest_vowel(\"\
    fdfdfd\") . \"\\n\";\necho get_closest_vowel(\"e\") . \"\\n\";\necho get_closest_vowel(\"\
    fdfdfddfdf\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nU\nu\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw31pw0i3.php:51\n\
    Stack trace:\n#0 /tmp/tmpw31pw0i3.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpw31pw0i3.php\
    \ on line 51\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    if(empty($word)){\n \
    \       return \"\";\n    }\n\n    $word = strrev($word);\n    $consonants = 'bcdfghjklmnpqrstvwxyz';\n\
    \    $start = false;\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $chars\
    \ = array();\n    for($i = 0; $i < strlen($word); $i++){\n        $chars[] = strtolower($word[$i]);\n\
    \    }\n    $result = '';\n    for($i = 0; $i < strlen($word); $i++){\n      \
    \  if(in_array($chars[$i], $vowels)){\n            if($start == true){\n     \
    \           $result = $word[$i];\n                break;\n            }\n    \
    \    }else if(in_array($chars[$i], $consonants)){\n            $start = true;\n\
    \        }\n    }\n    return $result;\n}\n\necho get_closest_vowel(\"yogurt\"\
    );\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho\
    \ get_closest_vowel(\"ab\");\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: in_array(): Argument #2 ($haystack)\
    \ must be of type array, string given in /tmp/tmp9qkbexu7.php:36\nStack trace:\n\
    #0 /tmp/tmp9qkbexu7.php(36): in_array('t', 'bcdfghjklmnpqrs...')\n#1 /tmp/tmp9qkbexu7.php(43):\
    \ get_closest_vowel('trugoy')\n#2 {main}\n  thrown in /tmp/tmp9qkbexu7.php on\
    \ line 36\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n  $consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"];\n  $word_array = str_split($word);\n  $consonant_pairs\
    \ = [];\n  for ($i = 0; $i < sizeof($word_array) - 1; $i++) {\n    if ((in_array($word_array[$i],\
    \ $consonants)) && (in_array($word_array[$i + 1], $consonants))) {\n      $consonant_pairs[]\
    \ = $i;\n    }\n  }\n  $closest_consonant_pair = $consonant_pairs[sizeof($consonant_pairs)\
    \ - 1];\n  $closest_vowel = \"\";\n  if (sizeof($consonant_pairs) != 0) {\n  \
    \  for ($i = $closest_consonant_pair; $i < sizeof($word_array); $i++) {\n    \
    \  if (in_array($word_array[$i], $vowels)) {\n        $closest_vowel = $word_array[$i];\n\
    \        break;\n      }\n    }\n  }\n  return $closest_vowel;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcpit1bop.php:44\n\
    Stack trace:\n#0 /tmp/tmpcpit1bop.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpcpit1bop.php\
    \ on line 44\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $constonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $closest_vowel\
    \ = '';\n    $word_to_array = str_split($word);\n    $word_to_array_reversed =\
    \ array_reverse($word_to_array);\n    $check_constonants = false;\n    for ($i\
    \ = 0; $i < count($word_to_array_reversed); $i++) {\n        if (in_array($word_to_array_reversed[$i],\
    \ $vowels)) {\n            if ($check_constonants) {\n                $closest_vowel\
    \ = $word_to_array_reversed[$i];\n                break;\n            }\n    \
    \    } elseif (in_array($word_to_array_reversed[$i], $constonants)) {\n      \
    \      $check_constonants = true;\n        }\n    }\n    if ($closest_vowel ===\
    \ '') {\n        return $closest_vowel;\n    } else {\n        return array_reverse(str_split($closest_vowel))[0];\n\
    \    }\n}\n\necho get_closest_vowel(\"yogurt\") . PHP_EOL; // \"u\"\necho get_closest_vowel(\"\
    FULL\") . PHP_EOL; // \"U\"\necho get_closest_vowel(\"quick\") . PHP_EOL; // \"\
    \"\necho get_closest_vowel(\"ab\") . PHP_EOL; // \"\"\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvphsmkbz.php:51\n\
    Stack trace:\n#0 /tmp/tmpvphsmkbz.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpvphsmkbz.php\
    \ on line 51\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\n       \
    \ 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'\n    ];\n    // brute force\
    \ solution, start from the end and find the first vowel that's \n    // between\
    \ two consonants.\n    $i = strlen($word) - 1;\n    while ($i > 0) {\n       \
    \ if ($i > 1 && in_array($word[$i], $vowels) && !in_array($word[$i - 1], $vowels)\
    \ && !in_array($word[$i - 2], $vowels)) {\n            return $word[$i];\n   \
    \     }\n        $i--;\n    }\n    return '';\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogxsh9am.php:37\n\
    Stack trace:\n#0 /tmp/tmpogxsh9am.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpogxsh9am.php\
    \ on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = 'aeiouAEIOU';\n\
    \    $closest_vowel = '';\n    $closest_vowel_distance = -1;\n    for ($i = 0;\
    \ $i < strlen($word); $i++) {\n        if ($vowels[$i] === $word[$i]) {\n    \
    \        if ($i > 0 && $i < strlen($word) - 1) {\n                if ($word[$i\
    \ - 1] !== $vowels[$i - 1] && $word[$i + 1] !== $vowels[$i + 1]) {\n         \
    \           if ($closest_vowel_distance === -1 || abs($i - strlen($word)) < $closest_vowel_distance)\
    \ {\n                        $closest_vowel = $word[$i];\n                   \
    \     $closest_vowel_distance = abs($i - strlen($word));\n                   \
    \ }\n                }\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_lpv631.php:40\n\
    Stack trace:\n#0 /tmp/tmp9_lpv631.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp9_lpv631.php\
    \ on line 40\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$i = strlen($word) - 1;\n\
    \t$isConsonant = false;\n\twhile ($i >= 0) {\n\t\tif (in_array($word[$i], array('a',\
    \ 'e', 'i', 'o', 'u'))) {\n\t\t\tif ($isConsonant) {\n\t\t\t\treturn $word[$i];\n\
    \t\t\t}\n\t\t} else {\n\t\t\t$isConsonant = true;\n\t\t}\n\t\t$i--;\n\t}\n\treturn\
    \ '';\n}\n$word = \"quick\";\necho get_closest_vowel($word) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "i\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxd3rymz.php:40\n\
    Stack trace:\n#0 /tmp/tmpxxd3rymz.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpxxd3rymz.php\
    \ on line 40\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $result = '';\n    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $chars = str_split($word);\n    $i =\
    \ count($chars) - 1;\n    $has_vowel = false;\n    $has_consonant = false;\n \
    \   while ($i >= 0) {\n        if (!$has_vowel && in_array($chars[$i], $vowels))\
    \ {\n            $has_vowel = true;\n            $result = $chars[$i];\n     \
    \   } else if ($has_vowel && !in_array($chars[$i], $vowels)) {\n            $has_consonant\
    \ = true;\n            break;\n        }\n        $i--;\n    }\n    if ($has_vowel\
    \ && $has_consonant) {\n        return $result;\n    } else {\n        return\
    \ '';\n    }\n}\n\necho get_closest_vowel(\"yogurt\");\necho \"\\n\";\necho get_closest_vowel(\"\
    FULL\");\necho \"\\n\";\necho get_closest_vowel(\"quick\");\necho \"\\n\";\necho\
    \ get_closest_vowel(\"ab\");\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpruom9__u.php:57\n\
    Stack trace:\n#0 /tmp/tmpruom9__u.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpruom9__u.php\
    \ on line 57\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word_as_array = str_split($word);\n\
    \    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word_length = count($word_as_array);\n\
    \    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word_as_array[$i],\
    \ $vowels)) {\n            if ($i == 0) {\n                $i++;\n           \
    \ }\n            if ($i == ($word_length - 1)) {\n                return \"\"\
    ;\n            }\n            if (!in_array($word_as_array[$i + 1], $vowels))\
    \ {\n                if (!in_array($word_as_array[$i - 1], $vowels)) {\n     \
    \               return $word_as_array[$i];\n                }\n            }\n\
    \        }\n    }\n    return \"\";\n}\necho(get_closest_vowel(\"yogurt\") . PHP_EOL);\n\
    echo(get_closest_vowel(\"FULL\") . PHP_EOL);\necho(get_closest_vowel(\"quick\"\
    ) . PHP_EOL);\necho(get_closest_vowel(\"ab\") . PHP_EOL);\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpeogruj.php:46\n\
    Stack trace:\n#0 /tmp/tmptpeogruj.php(61): test()\n#1 {main}\n  thrown in /tmp/tmptpeogruj.php\
    \ on line 46\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_size = strlen($word);\n\
    \    $vowel_index = NULL;\n    for ($i = $word_size - 1; $i >= 0; $i--) {\n  \
    \      $letter = $word[$i];\n        if (in_array($letter, $vowels)) {\n     \
    \       $vowel_index = $i;\n            break;\n        }\n    }\n    $before_vowel\
    \ = substr($word, 0, $vowel_index);\n    $after_vowel = substr($word, $vowel_index\
    \ + 1);\n    $before_vowel_size = strlen($before_vowel);\n    $after_vowel_size\
    \ = strlen($after_vowel);\n    if ($before_vowel_size >= 2 && $after_vowel_size\
    \ >= 2) {\n        $before_vowel_last_letter = $before_vowel[$before_vowel_size\
    \ - 1];\n        $after_vowel_first_letter = $after_vowel[0];\n        if (!in_array($before_vowel_last_letter,\
    \ $vowels) && !in_array($after_vowel_first_letter, $vowels)) {\n            return\
    \ $word[$vowel_index];\n        }\n    }\n    return \"\";\n}\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuw2cz4ne.php:47\n\
    Stack trace:\n#0 /tmp/tmpuw2cz4ne.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpuw2cz4ne.php\
    \ on line 47\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n\t$rev_array = str_split(strrev($word));\n\t$match\
    \ = '';\n\t$last = '';\n\tfor ($i = 0; $i < count($rev_array); $i++) {\n\t\tif\
    \ (in_array($rev_array[$i], $vowels)) {\n\t\t\tif ($last !== '') {\n\t\t\t\t$match\
    \ = $rev_array[$i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t$last = $rev_array[$i];\n\
    \t\t}\n\t}\n\tif ($match !== '') {\n\t\treturn strrev($match);\n\t} else {\n\t\
    \treturn \"\";\n\t}\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpccpuymq7.php:45\n\
    Stack trace:\n#0 /tmp/tmpccpuymq7.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpccpuymq7.php\
    \ on line 45\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $word = strrev($word);\n    $isPrevConsonant\
    \ = true;\n    $vowel = \"\";\n    for ($i = 0; $i < strlen($word); $i++) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            if ($isPrevConsonant)\
    \ {\n                $vowel = $word[$i];\n                break;\n           \
    \ }\n            $isPrevConsonant = false;\n        } else {\n            $isPrevConsonant\
    \ = true;\n        }\n    }\n    return $vowel;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnt7i2nh2.php:42\n\
    Stack trace:\n#0 /tmp/tmpnt7i2nh2.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpnt7i2nh2.php\
    \ on line 42\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\"a\",\"e\"\
    ,\"i\",\"o\",\"u\"];\n    for ($i = 0; $i < strlen($word); $i++) {\n        $letter\
    \ = strtolower($word[$i]);\n        if (in_array($letter, $vowels)) {\n      \
    \      $previous_letter = strtolower($word[$i-1]);\n            $next_letter =\
    \ strtolower($word[$i+1]);\n            if (!in_array($previous_letter, $vowels)\
    \ && !in_array($next_letter, $vowels)) {\n                return $word[$i];\n\
    \            }\n        }\n    }\n    return \"\";\n}\necho get_closest_vowel(\"\
    yogurt\"); // \"u\"\necho \"\\n\";\necho get_closest_vowel(\"FULL\"); // \"U\"\
    \necho \"\\n\";\necho get_closest_vowel(\"quick\"); // \"\"\necho \"\\n\";\necho\
    \ get_closest_vowel(\"ab\"); // \"\"\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nU\n\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph2007d9l.php:44\n\
    Stack trace:\n#0 /tmp/tmph2007d9l.php(59): test()\n#1 {main}\n  thrown in /tmp/tmph2007d9l.php\
    \ on line 44\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word_array = str_split($word);\n\
    \    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $tmp = array();\n    $vowel_first\
    \ = array();\n    $vowel_second = array();\n    foreach ($word_array as $key =>\
    \ $value) {\n        if (in_array($value, $vowels)) {\n            $tmp[] = $key;\n\
    \        }\n    }\n    if (count($tmp) <= 1) {\n        return '';\n    }\n  \
    \  foreach ($tmp as $value) {\n        if (isset($word_array[$value - 1]) && !in_array($word_array[$value\
    \ - 1], $vowels)) {\n            $vowel_first[] = $value;\n        }\n       \
    \ if (isset($word_array[$value + 1]) && !in_array($word_array[$value + 1], $vowels))\
    \ {\n            $vowel_second[] = $value;\n        }\n    }\n    if (count($vowel_first)\
    \ == 0 || count($vowel_second) == 0) {\n        return '';\n    }\n    $max_length\
    \ = count($vowel_first) - 1;\n    $result = array();\n    for ($i = 0; $i <= $max_length;\
    \ $i++) {\n        $result[] = $vowel_second[$i] - $vowel_first[$i];\n    }\n\
    \    $min_value = min($result);\n    $min_key = array_search($min_value, $result);\n\
    \    return $word_array[$vowel_first[$min_key]];\n}\necho get_closest_vowel(\"\
    FULL\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdn9h7vlc.php:56\n\
    Stack trace:\n#0 /tmp/tmpdn9h7vlc.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpdn9h7vlc.php\
    \ on line 56\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    // replace this for solution\n\
    \    $vowels = array('a', 'e', 'i', 'o', 'u');\n    for ($i = strlen($word)-1;\
    \ $i > 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            if\
    \ (!in_array($word[$i-1], $vowels)) {\n                return $word[$i];\n   \
    \         }\n        }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"\
    yogurt\") . PHP_EOL;\necho get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"\
    quick\") . PHP_EOL;\necho get_closest_vowel(\"ab\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1j9k8dr.php:42\n\
    Stack trace:\n#0 /tmp/tmpb1j9k8dr.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpb1j9k8dr.php\
    \ on line 42\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $result = '';\n    for ($i\
    \ = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            if ((($i - 1) >= 0) && ($i + 1) < strlen($word)) {\n        \
    \        if (in_array($word[$i - 1], $consonants) && in_array($word[$i + 1], $consonants))\
    \ {\n                    $result = $word[$i];\n                    break;\n  \
    \              }\n            }\n        }\n    }\n    return $result;\n}\necho\
    \ get_closest_vowel(\"yogurt\") . PHP_EOL;\necho get_closest_vowel(\"FULL\") .\
    \ PHP_EOL;\necho get_closest_vowel(\"quick\") . PHP_EOL;\necho get_closest_vowel(\"\
    ab\") . PHP_EOL;\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfhlglyfj.php:41\n\
    Stack trace:\n#0 /tmp/tmpfhlglyfj.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpfhlglyfj.php\
    \ on line 41\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n  $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n  $word_array = str_split($word);\n\
    \  $closest_vowel = '';\n  $i = count($word_array) - 1;\n  while (is_int($i))\
    \ {\n    if (in_array($word_array[$i], $vowels)) {\n      $closest_vowel = $word_array[$i];\n\
    \      $i = false;\n    } elseif (in_array($word_array[$i], $consonants)) {\n\
    \      $i--;\n    } else {\n      $i = false;\n    }\n  }\n  return $closest_vowel;\n\
    }\necho get_closest_vowel(\"yogurt\");\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkk2zal5.php:42\n\
    Stack trace:\n#0 /tmp/tmpmkk2zal5.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpmkk2zal5.php\
    \ on line 42\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $reverse_word = array_reverse($word);\n    $result = null;\n    foreach ($reverse_word\
    \ as $key => $value) {\n        if(in_array($value, $vowels)) {\n            if($key\
    \ > 0) {\n                if(!in_array($reverse_word[$key - 1], $vowels)) {\n\
    \                    $result = $value;\n                    break;\n         \
    \       } else {\n                    $result = null;\n                }\n   \
    \         }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkk2pa55s.php:44\n\
    Stack trace:\n#0 /tmp/tmpkk2pa55s.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpkk2pa55s.php\
    \ on line 44\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $reverse_word = strrev($word);\n\
    \    $count = strlen($reverse_word);\n    $vowels = array(\"a\", \"e\", \"i\"\
    , \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\");\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        if (in_array($reverse_word[$i], $vowels)) {\n            if\
    \ (!in_array($reverse_word[$i+1], $vowels)) {\n                return $reverse_word[$i];\n\
    \            }\n        }\n    }\n    return \"\";\n}\n\necho get_closest_vowel(\"\
    yogurt\");\necho \"<br>\";\necho get_closest_vowel(\"FULL\");\necho \"<br>\";\n\
    echo get_closest_vowel(\"quick\");\necho \"<br>\";\necho get_closest_vowel(\"\
    ab\");\necho \"<br>\";\necho get_closest_vowel(\"CAB\");\necho \"<br>\";\necho\
    \ get_closest_vowel(\"yogurtCAB\");\necho \"<br>\";\necho get_closest_vowel(\"\
    FULLYogurt\");\necho \"<br>\";\necho get_closest_vowel(\"quickCAB\");\necho \"\
    <br>\";\necho get_closest_vowel(\"CABab\");\necho \"<br>\";\necho get_closest_vowel(\"\
    CABA\");\necho \"<br>\";\necho get_closest_vowel(\"yogurtCABab\");\necho \"<br>\"\
    ;\necho get_closest_vowel(\"FULLYogurtCAB\");\necho \"<br>\";\necho get_closest_vowel(\"\
    quickCABCAB\");\necho \"<br>\";\necho get_closest_vowel(\"CABabCAB\");\necho \"\
    <br>\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u<br>U<br>u<br>\nWarning: Uninitialized string offset 2 in /tmp/tmpaytvm3p4.php\
    \ on line 22\na<br>A<br>A<br>u<br>A<br>a<br>A<br>a<br>A<br>A<br>A<br>\nWarning:\
    \ Uninitialized string offset 4 in /tmp/tmpaytvm3p4.php on line 22\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpaytvm3p4.php:65\nStack trace:\n\
    #0 /tmp/tmpaytvm3p4.php(78): test()\n#1 {main}\n  thrown in /tmp/tmpaytvm3p4.php\
    \ on line 65\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n\t$split = str_split($word);\n\t$vowel = \"\"\
    ;\n\t$is_found = false;\n\t\n\tfor ($i = 0; $i < sizeof($split); $i++) {\n\t\t\
    $letter = $split[$i];\n\t\t$last_letter = $split[$i - 1];\n\t\t$next_letter =\
    \ $split[$i + 1];\n\t\tif (in_array($letter, $vowels)) {\n\t\t\tif (in_array($last_letter,\
    \ $vowels) && in_array($next_letter, $vowels)) {\n\t\t\t\tcontinue;\n\t\t\t} else\
    \ {\n\t\t\t\t$vowel = $letter;\n\t\t\t\t$is_found = true;\n\t\t\t\tbreak;\n\t\t\
    \t}\n\t\t}\n\t}\n\t\n\tif ($is_found) {\n\t\treturn $vowel;\n\t} else {\n\t\t\
    return \"\";\n\t}\n}\necho get_closest_vowel(\"yogurt\") . \"<br />\";\necho get_closest_vowel(\"\
    FULL\") . \"<br />\";\necho get_closest_vowel(\"quick\") . \"<br />\";\necho get_closest_vowel(\"\
    ab\") . \"<br />\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpgs2bq0gg.php on line 24\n\
    o<br />\nWarning: Undefined array key -1 in /tmp/tmpgs2bq0gg.php on line 24\n\n\
    Warning: Undefined array key 4 in /tmp/tmpgs2bq0gg.php on line 25\n<br />\nWarning:\
    \ Undefined array key -1 in /tmp/tmpgs2bq0gg.php on line 24\nu<br />\nWarning:\
    \ Undefined array key -1 in /tmp/tmpgs2bq0gg.php on line 24\na<br />\nWarning:\
    \ Undefined array key -1 in /tmp/tmpgs2bq0gg.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpgs2bq0gg.php:52\nStack trace:\n#0 /tmp/tmpgs2bq0gg.php(67):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgs2bq0gg.php on line 52\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n\t$word_length = strlen($word);\n\t$result = '';\n\t$min_distance\
    \ = 0;\n\t$current_distance = 0;\n\tfor ($i = $word_length - 1; $i >= 0; $i--)\
    \ {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\tif ($i == $word_length - 1)\
    \ {\n\t\t\t\treturn $word[$i];\n\t\t\t}\n\t\t\t$current_distance = $word_length\
    \ - $i - 1;\n\t\t\tif ($current_distance == 1 && !in_array($word[$i + 1], $vowels))\
    \ {\n\t\t\t\treturn $word[$i];\n\t\t\t}\n\t\t\tif ($current_distance == 1 && in_array($word[$i\
    \ + 1], $vowels)) {\n\t\t\t\t$current_distance = 0;\n\t\t\t}\n\t\t\tif ($current_distance\
    \ > $min_distance) {\n\t\t\t\t$min_distance = $current_distance;\n\t\t\t\t$result\
    \ = $word[$i];\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbkce0kr6.php:47\n\
    Stack trace:\n#0 /tmp/tmpbkce0kr6.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpbkce0kr6.php\
    \ on line 47\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $last_cons = false;\n    $word = strtolower($word);\n\
    \    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($last_cons) {\n                return $word[$i];\n\
    \            }\n        } else {\n            $last_cons = true;\n        }\n\
    \    }\n    return \"\";\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpacud44hy.php:39\n\
    Stack trace:\n#0 /tmp/tmpacud44hy.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpacud44hy.php\
    \ on line 39\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n\t$len = strlen($word);\n\tif ($len < 3) {\n\t\treturn '';\n\t}\n\
    \t$i = $len - 1;\n\t$gap = PHP_INT_MAX;\n\t$tgtVowel = null;\n\twhile ($i >= 0)\
    \ {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel = $word[$i];\n\t\t\t\
    if ($i - 1 >= 0 && $i + 1 < $len && !in_array($word[$i - 1], $vowels) && !in_array($word[$i\
    \ + 1], $vowels)) {\n\t\t\t\t$distance = $len - $i;\n\t\t\t\tif ($distance < $gap)\
    \ {\n\t\t\t\t\t$gap = $distance;\n\t\t\t\t\t$tgtVowel = $vowel;\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t\t$i--;\n\t}\n\treturn $tgtVowel === null ? '' : $tgtVowel;\n\
    }\n\n$cases = [\n\t[\"yogurt\", \"u\"],\n\t[\"FULL\", \"U\"],\n\t[\"quick\", \"\
    \"],\n\t[\"ab\", \"\"],\n\t[\"greg\", \"e\"],\n\t[\"abcdefghijklmnopqrstuvwxyz\"\
    , \"e\"],\n\t[\"grgrgrgrgrgrgrgrgrgrgrgrgr\", \"e\"],\n\t[\"gagagagagagagagagagagagagagagaga\"\
    , \"a\"],\n\t[\"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "yogurt", expecting "]" in /tmp/tmp3yvciblq.php
    on line 56

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $result = '';\n    $vowels\
    \ = 'aeiouAEIOU';\n    $word_length = strlen($word);\n    for ($i = $word_length\
    \ - 1; $i > 0; $i--) {\n        if (strpos($vowels, $word[$i]) === false) {\n\
    \            if (strpos($vowels, $word[$i - 1]) !== false) {\n               \
    \ $result = $word[$i - 1];\n                break;\n            }\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9rhfru6l.php:38\n\
    Stack trace:\n#0 /tmp/tmp9rhfru6l.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp9rhfru6l.php\
    \ on line 38\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n\t$vowelPos = NULL;\n\tfor ($i = strlen($word) - 1; $i >= 0;\
    \ $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowelPos = $i;\n\t\t\
    \tbreak;\n\t\t}\n\t}\n\treturn $vowelPos !== NULL && $vowelPos < strlen($word)\
    \ - 1 ? $word[$vowelPos] : '';\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6picp2s.php:35\n\
    Stack trace:\n#0 /tmp/tmpd6picp2s.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd6picp2s.php\
    \ on line 35\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\n       \
    \ 'a', 'e', 'i', 'o', 'u',\n        'A', 'E', 'I', 'O', 'U'\n    ];\n    $consonants\
    \ = [\n        'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z',\n        'B', 'C', 'D', 'F', 'G', 'H',\
    \ 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z'\n\
    \    ];\n    $word = str_split($word);\n    $last_found_vowel = 0;\n    $res =\
    \ '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $last_found_vowel = $i;\n        }\n        if (in_array($word[$i],\
    \ $consonants) && in_array($word[$i - 1], $consonants)) {\n            if ($last_found_vowel)\
    \ {\n                $res = $word[$last_found_vowel];\n                break;\n\
    \            }\n        }\n    }\n    return $res;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpbbaakhsl.php on line 32\n\n\
    \nWarning: Undefined array key -1 in /tmp/tmpbbaakhsl.php on line 32\n\n\nWarning:\
    \ Undefined array key -1 in /tmp/tmpbbaakhsl.php on line 32\n\n\n\nWarning: Undefined\
    \ array key -1 in /tmp/tmpbbaakhsl.php on line 32\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpbbaakhsl.php:51\nStack trace:\n#0 /tmp/tmpbbaakhsl.php(66):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbbaakhsl.php on line 51\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n  $word = str_split($word);\n  for ($i = sizeof($word) - 1; $i >=\
    \ 0; $i--) {\n    if (in_array($word[$i], $vowels)) {\n      if ($i == sizeof($word)\
    \ - 1) {\n        return '';\n      }\n      if (in_array($word[$i + 1], $vowels))\
    \ {\n        return '';\n      }\n      return $word[$i];\n    }\n  }\n  return\
    \ '';\n}\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2a1s31cs.php:39\n\
    Stack trace:\n#0 /tmp/tmp2a1s31cs.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp2a1s31cs.php\
    \ on line 39\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $result = '';\n    $prev = '';\n    $current = '';\n    $next = '';\n   \
    \ for ($i = count($word) - 1; $i >= 0; $i--) {\n        $prev = isset($word[$i\
    \ - 1]) ? $word[$i - 1] : '';\n        $current = $word[$i];\n        $next =\
    \ isset($word[$i + 1]) ? $word[$i + 1] : '';\n        if (in_array($current, $vowels)\
    \ && !in_array($prev, $vowels) && !in_array($next, $vowels)) {\n            $result\
    \ = $current;\n            break;\n        }\n    }\n    return $result;\n}\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnwpe0ji5.php:44\n\
    Stack trace:\n#0 /tmp/tmpnwpe0ji5.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpnwpe0ji5.php\
    \ on line 44\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $check_letter = [\n \
    \       'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'\n    ];\n    $vowel =\
    \ '';\n    $word_arr = str_split($word);\n    $length = count($word_arr);\n  \
    \  for ($i = $length - 1; $i >= 0; $i--) {\n        if (in_array($word_arr[$i],\
    \ $check_letter)) {\n            $vowel = $word_arr[$i];\n            break;\n\
    \        }\n    }\n    if ($vowel) {\n        $vowel_index = array_search($vowel,\
    \ $word_arr);\n        for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        \
    \    if (!in_array($word_arr[$i], $check_letter)) {\n                return $vowel;\n\
    \            }\n        }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nU\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9t2nzwd.php:53\n\
    Stack trace:\n#0 /tmp/tmpm9t2nzwd.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpm9t2nzwd.php\
    \ on line 53\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = [\"a\",\"e\"\
    ,\"i\",\"o\",\"u\"];\n\t$word = strtolower($word);\n\t$len = strlen($word);\n\t\
    for ($i = $len - 1; $i >= 1; $i--) {\n\t\tif (in_array($word[$i], $vowels) &&\
    \ !in_array($word[$i-1], $vowels))\n\t\t\treturn $word[$i];\n\t}\n\treturn \"\"\
    ;\n}\necho get_closest_vowel(\"Yogurt\") . \"\\n\"; // u\necho get_closest_vowel(\"\
    FULL\") . \"\\n\"; // U\necho get_closest_vowel(\"quick\") . \"\\n\"; // \"\"\n\
    echo get_closest_vowel(\"ab\") . \"\\n\"; // \"\"\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_keuqgc.php:39\n\
    Stack trace:\n#0 /tmp/tmpe_keuqgc.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpe_keuqgc.php\
    \ on line 39\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $length = strlen($word);\n\
    \    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z');\n    $get_closest_vowel = \"\";\n    for ($i = $length - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            if\
    \ (in_array($word[$i - 1], $consonants) && in_array($word[$i + 1], $consonants))\
    \ {\n                $get_closest_vowel = $word[$i];\n                break;\n\
    \            }\n        }\n    }\n    return $get_closest_vowel;\n}\necho \">>>\
    \ get_closest_vowel(\\\"yogurt\\\")<br>\";\necho get_closest_vowel(\"yogurt\"\
    ) . \"<br>\";\necho \">>> get_closest_vowel(\\\"FULL\\\")<br>\";\necho get_closest_vowel(\"\
    FULL\") . \"<br>\";\necho \">>> get_closest_vowel(\\\"quick\\\")<br>\";\necho\
    \ get_closest_vowel(\"quick\") . \"<br>\";\necho \">>> get_closest_vowel(\\\"\
    ab\\\")<br>\";\necho get_closest_vowel(\"ab\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ">>> get_closest_vowel(\"yogurt\")<br>u<br>>>> get_closest_vowel(\"FULL\"\
    )<br><br>>>> get_closest_vowel(\"quick\")<br><br>>>> get_closest_vowel(\"ab\"\
    )<br>a<br>\nWarning: Uninitialized string offset 3 in /tmp/tmp_e3shm4i.php on\
    \ line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_e3shm4i.php:51\n\
    Stack trace:\n#0 /tmp/tmp_e3shm4i.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp_e3shm4i.php\
    \ on line 51\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n\t$word = str_split($word);\n\t$len = count($word);\n\t$word = array_reverse($word);\n\
    \t$prev = $next = '';\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tif (!in_array($word[$i],\
    \ $vowels)) {\n\t\t\tif ($prev === '') {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\
    \t\t\treturn $prev;\n\t\t\t}\n\t\t} else {\n\t\t\tif ($prev === '') {\n\t\t\t\t\
    $prev = $word[$i];\n\t\t\t} else {\n\t\t\t\t$next = $word[$i];\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn '';\n}\n$words = [\"yogurt\", \"FULL\", \"quick\", \"ab\"];\n\
    foreach ($words as $word) {\n\techo $word . \": \" . get_closest_vowel($word)\
    \ . \"\\n\";\n}\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "yogurt: u\nFULL: \nquick: i\nab: \n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpiyoz3utr.php:52\nStack trace:\n#0 /tmp/tmpiyoz3utr.php(63):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpiyoz3utr.php on line 52\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    // your code here\n}\n\
    \n$ret = get_closest_vowel(\"yogurt\");\necho \"\\n \\n {$ret} \\n \\n\";\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n \n  \n \n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9m8vcpsx.php:27\n\
    Stack trace:\n#0 /tmp/tmp9m8vcpsx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9m8vcpsx.php\
    \ on line 27\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"];\n    $word_len = strlen($word);\n    $word_arr = str_split($word);\n\
    \    $return_str = \"\";\n    for ($i = 0; $i < $word_len; $i++) {\n        $first_letter\
    \ = $word_arr[$i];\n        if (in_array($first_letter, $vowels)) {\n        \
    \    $next_letter = $word_arr[$i + 1];\n            if (!in_array($next_letter,\
    \ $vowels)) {\n                $return_str = $first_letter;\n                break;\n\
    \            }\n        }\n    }\n    return $return_str;\n}\n\necho \"get_closest_vowel('yogurt')\
    \ -> \" . get_closest_vowel(\"yogurt\") . \"<br>\";\necho \"get_closest_vowel('FULL')\
    \ -> \" . get_closest_vowel(\"FULL\") . \"<br>\";\necho \"get_closest_vowel('quick')\
    \ -> \" . get_closest_vowel(\"quick\") . \"<br>\";\necho \"get_closest_vowel('ab')\
    \ -> \" . get_closest_vowel(\"ab\") . \"<br>\";\necho \"get_closest_vowel('AB')\
    \ -> \" . get_closest_vowel(\"AB\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "get_closest_vowel('yogurt') -> o<br>get_closest_vowel('FULL') -> <br>get_closest_vowel('quick')\
    \ -> i<br>get_closest_vowel('ab') -> a<br>get_closest_vowel('AB') -> <br>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp1bra1hfq.php:44\nStack trace:\n\
    #0 /tmp/tmp1bra1hfq.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp1bra1hfq.php\
    \ on line 44\n"
  timestamp: 1660028453
- exit_code: -1
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n\t$word_length = strlen($word);\n\t$end_word =\
    \ substr($word, -1);\n\t$start_word = substr($word, 0, 1);\n\t$step = 1;\n\t$number_vowel\
    \ = 0;\n\tif (!in_array($end_word, $vowels) && $word_length > 1) {\n\t\twhile\
    \ ($number_vowel == 0) {\n\t\t\t$end_word = substr($word, -$step);\n\t\t\tif (in_array($end_word,\
    \ $vowels)) {\n\t\t\t\t$number_vowel = 1;\n\t\t\t}\n\t\t\t$step++;\n\t\t}\n\t\
    }\n\telse {\n\t\t$end_word = \"\";\n\t}\n\tif ($word_length > 1) {\n\t\t$start_word\
    \ = substr($word, 0, -($word_length - 1));\n\t}\n\tif (in_array($start_word, $vowels))\
    \ {\n\t\t$start_word = \"\";\n\t}\n\telse {\n\t\t$start_word = substr($word, 0,\
    \ $step);\n\t}\n\t$start_word = substr($start_word, -1);\n\t$word = $start_word\
    \ . $end_word;\n\tif (in_array($word, $vowels)) {\n\t\treturn $word;\n\t}\n\t\
    else {\n\t\treturn \"\";\n\t}\n}\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028458
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n\t$word = strtolower($word);\n\t$word = str_split($word);\n\t$foundVowel\
    \ = \"\";\n\t$consonantCount = 0;\n\t$vowelCount = 0;\n\t$vowelCountArray = [];\n\
    \t$validVowel = [];\n\t$consonantCountArray = [];\n\t$offset = 0;\n\tfor ($i =\
    \ count($word) - 1; $i >= 0; $i--) {\n\t\t$letter = $word[$i];\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$vowelCount++;\n\t\t\t$vowelCountArray[] = $vowelCount;\n\
    \t\t\t$foundVowel = $letter;\n\t\t\t$offset = $i;\n\t\t\tif ($consonantCount >\
    \ 0) {\n\t\t\t\t$consonantCountArray[] = $consonantCount;\n\t\t\t\t$validVowel[]\
    \ = $foundVowel;\n\t\t\t}\n\t\t\t$consonantCount = 0;\n\t\t} else {\n\t\t\t$consonantCount++;\n\
    \t\t}\n\t}\n\t$consonantCountArray[] = $consonantCount;\n\t// var_dump($consonantCountArray);\n\
    \t// var_dump($vowelCountArray);\n\t// var_dump($validVowel);\n\t// var_dump($offset);\n\
    \tif (empty($validVowel)) {\n\t\treturn \"\";\n\t}\n\t$closestOffset = 999;\n\t\
    $closestConsonantCount = 999;\n\t$closestVowel = \"\";\n\tfor ($i = 0; $i < count($consonantCountArray);\
    \ $i++) {\n\t\tif ($consonantCountArray[$i] < $closestConsonantCount) {\n\t\t\t\
    $closestConsonantCount = $consonantCountArray[$i];\n\t\t\t$closestVowel = $validVow\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp3vhnm0_y.php
    on line 58

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\"a\",\"e\"\
    ,\"i\",\"o\",\"u\"];\n    $word = strtolower($word);\n    for ($i=strlen($word)-1;\
    \ $i >= 0; $i--) { \n        if (in_array($word[$i], $vowels)) {\n           \
    \ if ($i==0) {\n                break;\n            }\n            if (in_array($word[$i-1],\
    \ $vowels)) {\n                continue;\n            }\n            if (in_array($word[$i+1],\
    \ $vowels)) {\n                continue;\n            }\n            return $word[$i];\n\
    \        }\n    }\n    return \"\";\n}\n\nprint get_closest_vowel(\"yogurt\")\
    \ . PHP_EOL;\nprint get_closest_vowel(\"FULL\") . PHP_EOL;\nprint get_closest_vowel(\"\
    quick\") . PHP_EOL;\nprint get_closest_vowel(\"ab\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\n\n\n\nWarning: Uninitialized string offset 3 in /tmp/tmpfk7ed0iv.php\
    \ on line 27\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfk7ed0iv.php:49\n\
    Stack trace:\n#0 /tmp/tmpfk7ed0iv.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpfk7ed0iv.php\
    \ on line 49\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n  $vowel_count = 0;\n  $vowel_position = 0;\n  for ($i\
    \ = strlen($word) - 1; $i >= 0; $i--) {\n    if (in_array($word[$i], $vowels))\
    \ {\n      $vowel_count++;\n      $vowel_position = $i;\n    }\n    if ($vowel_count\
    \ == 2) {\n      return $word[$vowel_position];\n    }\n  }\n  return \"\";\n\
    }\n\nvar_dump(get_closest_vowel(\"yogurt\"));\nvar_dump(get_closest_vowel(\"FULL\"\
    ));\nvar_dump(get_closest_vowel(\"quick\"));\nvar_dump(get_closest_vowel(\"ab\"\
    ));\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string(1) \"o\"\nstring(0) \"\"\nstring(1) \"u\"\nstring(0) \"\"\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpooxj2pk8.php:41\nStack trace:\n\
    #0 /tmp/tmpooxj2pk8.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpooxj2pk8.php\
    \ on line 41\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n  $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n  $word_array = str_split($word);\n\
    \  $vowel_array = array();\n  $consonant_array = array();\n  foreach ($word_array\
    \ as $key => $value) {\n    if (in_array($value, $vowels)) {\n      $vowel_array[]\
    \ = $key;\n    }\n    if (in_array($value, $consonants)) {\n      $consonant_array[]\
    \ = $key;\n    }\n  }\n  if (count($vowel_array) === 0) {\n    return \"\";\n\
    \  }\n  if (count($consonant_array) === 0) {\n    return \"\";\n  }\n  if ($vowel_array[0]\
    \ < $consonant_array[0]) {\n    return \"\";\n  }\n  for ($i = 0; $i < count($vowel_array);\
    \ $i++) {\n    for ($x = 0; $x < count($consonant_array); $x++) {\n      if ($vowel_array[$i]\
    \ < $consonant_array[$x]) {\n        return $word_array[$vowel_array[$i]];\n \
    \     }\n    }\n  }\n}\necho get_closest_vowel(\"yogurt\");\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztyky4uv.php:53\n\
    Stack trace:\n#0 /tmp/tmpztyky4uv.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpztyky4uv.php\
    \ on line 53\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $consonants = array_diff(range('a', 'z'), $vowels);\n \
    \   $i = strlen($word);\n    while($i--) {\n        if(in_array($word[$i], $vowels))\
    \ {\n            if($i > 0 && in_array($word[$i-1], $consonants)) {\n        \
    \        if($i+1 < strlen($word) && in_array($word[$i+1], $consonants)) {\n  \
    \                  return $word[$i];\n                }\n            }\n     \
    \   }\n    }\n    return '';\n}\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $length = strlen($word);\n\
    \  for ($i=$length-1; $i >= 0; $i--) { \n    $str1 = substr($word, $i, 1);\n \
    \   $str2 = substr($word, $i+1, 1);\n    if (checkVowel($str1) && checkVowel($str2))\
    \ {\n      return $str1;\n    }\n  }\n  return \"\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function checkVowel()\
    \ in /tmp/tmpinkzuv3e.php:21\nStack trace:\n#0 /tmp/tmpinkzuv3e.php(29): get_closest_vowel('yogurt')\n\
    #1 /tmp/tmpinkzuv3e.php(33): candidate('yogurt')\n#2 /tmp/tmpinkzuv3e.php(48):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpinkzuv3e.php on line 21\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word_length = strlen($word);\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     if ($i == $word_length - 1) {\n                break;\n            }\n \
    \           if (!in_array($word[$i + 1], $vowels)) {\n                return $word[$i];\n\
    \            }\n        }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2d3_unp5.php:43\n\
    Stack trace:\n#0 /tmp/tmp2d3_unp5.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp2d3_unp5.php\
    \ on line 43\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$word = strtolower($word);\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$not_vowels = array('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z');\n\t$new_arr = array();\n\tfor ($i = 0; $i < strlen($word); $i++)\
    \ {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\tif (in_array($word[$i - 1],\
    \ $not_vowels) && in_array($word[$i + 1], $not_vowels)) {\n\t\t\t\t$new_arr[]\
    \ = $word[$i];\n\t\t\t}\n\t\t}\n\t}\n\tif (count($new_arr) == 0) {\n\t\treturn\
    \ \"\";\n\t} else {\n\t\treturn $new_arr[count($new_arr) - 1];\n\t}\n}\necho get_closest_vowel(\"\
    yogurt\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nWarning: Uninitialized string offset 3 in /tmp/tmptn273jn_.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptn273jn_.php:47\n\
    Stack trace:\n#0 /tmp/tmptn273jn_.php(55): test()\n#1 {main}\n  thrown in /tmp/tmptn273jn_.php\
    \ on line 47\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $length = strlen($word);\n\
    \  $result = '';\n  $distance = $length;\n  $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \  $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n  for ($i = 0; $i < $length;\
    \ $i++) {\n    if (in_array($word[$i], $vowels)) {\n      if ($i > 0 && in_array($word[$i\
    \ - 1], $consonants)) {\n        if (isset($word[$i + 1]) && in_array($word[$i\
    \ + 1], $consonants)) {\n          if ($distance > $i) {\n            $distance\
    \ = $i;\n            $result = $word[$i];\n          }\n        }\n      }\n \
    \   }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6xt2alsz.php:41\n\
    Stack trace:\n#0 /tmp/tmp6xt2alsz.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp6xt2alsz.php\
    \ on line 41\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    // your code here\n}\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3l5n842l.php:24\n\
    Stack trace:\n#0 /tmp/tmp3l5n842l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3l5n842l.php\
    \ on line 24\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $alphabet = array_flip(range('a',\
    \ 'z'));\n  $vowels = array('a', 'e', 'i', 'o', 'u');\n  $consonants = array_diff(array_keys($alphabet),\
    \ $vowels);\n  $length = strlen($word);\n  $reverse = strrev($word);\n  $found_vowel\
    \ = \"\";\n  for ($i = 0; $i < $length; $i++) {\n    if (in_array($reverse[$i],\
    \ $vowels)) {\n      if ($i == $length - 1) {\n        return \"\";\n      }\n\
    \      if (in_array($reverse[$i+1], $consonants)) {\n        return $reverse[$i];\n\
    \      }\n    }\n  }\n  return \"\";\n}\n\necho get_closest_vowel(\"yogurt\")\
    \ . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhxt501c.php:49\n\
    Stack trace:\n#0 /tmp/tmpzhxt501c.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpzhxt501c.php\
    \ on line 49\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  // Your code here\n  if\
    \ ($word === \"\"){\n    return \"\";\n  }\n\n  $vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"];\n  $result = \"\";\n  $step = 0;\n  $length = strlen($word);\n\
    \  for ($i = $length-1; $i > 0; $i--){\n    if (in_array($word[$i], $vowels)){\n\
    \      $step = 1;\n      continue;\n    }\n    if ($step === 1){\n      if (!in_array($word[$i],\
    \ $vowels)){\n        return $word[$i+1];\n      }\n    }\n  }\n  return $result;\n\
    }\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\n\
    echo get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpircrs_vp.php:51\n\
    Stack trace:\n#0 /tmp/tmpircrs_vp.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpircrs_vp.php\
    \ on line 51\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = \"aeiouAEIOU\"\
    ;\n\t$closest_vowel = \"\";\n\tfor ($i = strlen($word) - 1; $i >= 0; $i--) {\n\
    \t\tif ($i == 0 && strlen($word) > 1) {\n\t\t\tif ($word[0] == $vowels[$i]) {\n\
    \t\t\t\treturn \"\";\n\t\t\t}\n\t\t} else if ($i == strlen($word) - 1) {\n\t\t\
    \tif ($word[$i] == $vowels[$i]) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t} else {\n\
    \t\t\tif ($word[$i] == $vowels[$i] && $word[$i + 1] != $vowels[$i + 1] && $word[$i\
    \ - 1] != $vowels[$i - 1]) {\n\t\t\t\t$closest_vowel = $word[$i];\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $closest_vowel;\n}\necho get_closest_vowel(\"yogurt\"\
    ) . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\necho get_closest_vowel(\"\
    aib\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\ni\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjjty2l0q.php:47\n\
    Stack trace:\n#0 /tmp/tmpjjty2l0q.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpjjty2l0q.php\
    \ on line 47\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\n       \
    \ 'a', 'e', 'i', 'o', 'u',\n        'A', 'E', 'I', 'O', 'U'\n    ];\n    $found\
    \ = false;\n    $cons_count = 0;\n    $cons_position = 0;\n    $vowel_position\
    \ = 0;\n    $word_len = strlen($word);\n    $word_length = $word_len - 1;\n  \
    \  for ($i = $word_length; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $cons_count++;\n            $cons_position = $i;\n\
    \        } else {\n            $vowel_position = $i;\n            if ($cons_count\
    \ == 1) {\n                $found = true;\n                break;\n          \
    \  }\n        }\n    }\n    if ($found) {\n        return $word[$vowel_position];\n\
    \    } else {\n        return \"\";\n    }\n}\necho get_closest_vowel(\"yogurt\"\
    ) . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahvtd5ae.php:54\n\
    Stack trace:\n#0 /tmp/tmpahvtd5ae.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpahvtd5ae.php\
    \ on line 54\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n  $reverse = strrev($word);\n  $result = \"\";\n  for ($i =\
    \ 0; $i < strlen($reverse); $i++) {\n    if (in_array($reverse[$i], $vowels))\
    \ {\n      if ($i < strlen($reverse) - 1 && !in_array($reverse[$i+1], $vowels))\
    \ {\n        $result = $reverse[$i];\n        break;\n      }\n    }\n  }\n  return\
    \ $result;\n}\n\necho get_closest_vowel(\"yogurt\"); // u\necho get_closest_vowel(\"\
    FULL\"); // U\necho get_closest_vowel(\"quick\"); // \"\"\necho get_closest_vowel(\"\
    ab\"); // \"\"\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpghish3md.php:44\n\
    Stack trace:\n#0 /tmp/tmpghish3md.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpghish3md.php\
    \ on line 44\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    //numeric key array (vowels)\n\
    \    $vowels = array(\"A\", \"E\", \"I\", \"O\", \"U\");\n    // $count stores\
    \ the number of characters in the string\n    $count = strlen($word);\n    //\
    \ $output stores the final output\n    $output = \"\";\n    //loop through the\
    \ string backwards to find the position of the first vowel\n    for ($i = $count\
    \ - 1; $i >= 0; $i--) {\n        //if the character at the position is a vowel,\
    \ $place stores the position\n        if (in_array($word[$i], $vowels)) {\n  \
    \          $place = $i;\n            break;\n        }\n    }\n    //check if\
    \ the place exists, if not, return empty string.\n    if (isset($place)) {\n \
    \       //loop through string backwards to find the position of the first consonant\
    \ before the vowel\n        for ($i = $place - 1; $i >= 0; $i--) {\n         \
    \   //if the character at the position is a consonant, $first_con stores the position\n\
    \            if (!in_array($word[$i], $vowels)) {\n                $first_con\
    \ = $i;\n                break;\n            }\n        }\n        //loop through\
    \ string forwards to find the position of the first consonant after the vowel\n\
    \        for ($i = $place + 1; $i < $count; $i++) {\n            //if the character\
    \ at the position is a consonant, $second_con stores the position\n          \
    \  if (!in_array($word[$i], $vowels)) {\n                $second_con = $i;\n \
    \               break;\n            }\n        }\n        //check if the first\
    \ consonant exists, if it does not exist, return empty string\n        if (isset($first_con))\
    \ {\n            //if the second consonant exists, compare the distance between\
    \ the vowel and the 2 consonants,\n            //if the distance is the same,\
    \ output the vowel\n            if (isset($second_con)) {\n                if\
    \ ($place - $first_con == $second_con - $place) {\n                    $output\
    \ = $word[$place];\n                }\n                //if the distance is\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 53 in /tmp/tmptby46jtp.php on line 78

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $letters\
    \ = str_split($word);\n    $count = count($letters);\n    $lastVowel = '';\n \
    \   $currentVowel = '';\n    $closestVowel = '';\n    $closestVowelDistance =\
    \ 0;\n    $currentDistance = 0;\n    $isPrevConsonant = false;\n    $isNextConsonant\
    \ = false;\n    $isConsonant = false;\n    $isVowel = false;\n    for ($i = $count\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($letters[$i], $vowels)) {\n    \
    \        $currentVowel = $letters[$i];\n            $isPrevConsonant = in_array($letters[$i\
    \ - 1], $consonants);\n            $isNextConsonant = in_array($letters[$i + 1],\
    \ $consonants);\n            if ($isPrevConsonant && $isNextConsonant) {\n   \
    \             if ($closestVowelDistance == 0) {\n                    $closestVowel\
    \ = $currentVowel;\n                    $closestVowelDistance = $i;\n        \
    \        } else {\n                    $currentDistance = $closestVowelDistance\
    \ - $i;\n                    if ($currentDistance > 0) {\n                   \
    \     $closestVowel = $currentVowel;\n                        $closestVowelDistance\
    \ = $i;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return $closestVowel;\n}\n\necho get_closest_vowel(\"yogurt\") . PHP_EOL;\n\
    echo get_closest_vowel(\"FULL\") . PHP_EOL;\n\nfunction candidate(...$args) {\n\
    \    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb52blr_g.php:60\n\
    Stack trace:\n#0 /tmp/tmpb52blr_g.php(75): test()\n#1 {main}\n  thrown in /tmp/tmpb52blr_g.php\
    \ on line 60\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n\t$vowel_pos = array();\n\t$word_len = strlen($word);\n\
    \t$word_arr = str_split($word);\n\tfor ($i = 0; $i < $word_len; $i++) {\n\t\t\
    for ($j = 0; $j < count($vowels); $j++) {\n\t\t\tif ($word_arr[$i] == $vowels[$j])\
    \ {\n\t\t\t\tarray_push($vowel_pos, $i);\n\t\t\t}\n\t\t}\n\t}\n\tfor ($i = count($vowel_pos)\
    \ - 1; $i >= 0; $i--) {\n\t\tif ($vowel_pos[$i] + 1 < $word_len) {\n\t\t\tif ($vowel_pos[$i]\
    \ - 1 >= 0) {\n\t\t\t\treturn $word_arr[$vowel_pos[$i]];\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn \"\";\n}\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7go01tf7.php:44\n\
    Stack trace:\n#0 /tmp/tmp7go01tf7.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp7go01tf7.php\
    \ on line 44\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87jqbxby.php:25\n\
    Stack trace:\n#0 /tmp/tmp87jqbxby.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp87jqbxby.php\
    \ on line 25\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $str_array = str_split($word);\n    $is_last_char_vowel\
    \ = false;\n    $is_first_char_vowel = false;\n    $last_vowel_index = null;\n\
    \    $first_vowel_index = null;\n    for ($i = 0; $i < count($str_array); $i++)\
    \ {\n        if ($i === count($str_array) - 1) {\n            $is_last_char_vowel\
    \ = in_array($str_array[$i], $vowels);\n            if ($is_last_char_vowel) {\n\
    \                $last_vowel_index = $i;\n            }\n        } else {\n  \
    \          $is_first_char_vowel = in_array($str_array[$i], $vowels);\n       \
    \     if ($is_first_char_vowel) {\n                $first_vowel_index = $i;\n\
    \            }\n        }\n    }\n    if ($is_last_char_vowel || $is_first_char_vowel)\
    \ {\n        return \"\";\n    }\n    $arr = array_intersect($vowels, $str_array);\n\
    \    if (count($arr) === 0) {\n        return \"\";\n    }\n    $closest_vowel\
    \ = $arr[count($arr) - 1];\n    $closest_vowel_index = array_search($closest_vowel,\
    \ $str_array);\n    $is_closest_char_first_vowel = $closest_vowel_index === $first_vowel_index;\n\
    \    $is_closest_char_last_vowel = $closest_vowel_index === $last_vowel_index;\n\
    \    if ($is_closest_char_first_vowel || $is_closest_char_last_vowel) {\n    \
    \    return \"\";\n    }\n    return $closest_vow\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ";" in /tmp/tmpnbgxnzeu.php
    on line 51

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = \"AEIOUaeiou\"\
    ;\n    $i = strlen($word) - 1;\n    $prev_con = true;\n    $result = \"\";\n \
    \   while ($i >= 0) {\n        if ($prev_con) {\n            if (strpos($vowels,\
    \ $word[$i]) !== false) {\n                $result = $word[$i];\n            \
    \    $prev_con = false;\n            }\n        } else {\n            if (strpos($vowels,\
    \ $word[$i]) === false) {\n                return $result;\n            }\n  \
    \      }\n        $i--;\n    }\n    return \"\";\n}\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfeq84t7p.php:45\n\
    Stack trace:\n#0 /tmp/tmpfeq84t7p.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpfeq84t7p.php\
    \ on line 45\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  if (strlen($word) < 2)\
    \ {\n    return \"\";\n  }\n  $arr_vowel = [\"a\", \"i\", \"u\", \"e\", \"o\"\
    ];\n  $arr_word = str_split($word);\n  $char_count = count($arr_word);\n  if (in_array($arr_word[$char_count\
    \ - 1], $arr_vowel)) {\n    return \"\";\n  }\n  for ($i = $char_count - 2; $i\
    \ >= 0; $i--) {\n    if (in_array($arr_word[$i], $arr_vowel)) {\n      if (in_array($arr_word[$i\
    \ + 1], $arr_vowel)) {\n        continue;\n      } else {\n        return $arr_word[$i];\n\
    \      }\n    }\n  }\n  return \"\";\n}\n\nfunction candidate(...$args) {\n  \
    \  return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppvrz6f3z.php:45\n\
    Stack trace:\n#0 /tmp/tmppvrz6f3z.php(58): test()\n#1 {main}\n  thrown in /tmp/tmppvrz6f3z.php\
    \ on line 45\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $i = strlen($word) -\
    \ 1;\n    $is_prev_consonant = FALSE;\n    while ($i > 0) {\n        if (in_array($word[$i],\
    \ array('a', 'e', 'i', 'o', 'u'))) {\n            if ($is_prev_consonant) return\
    \ $word[$i];\n        } else {\n            $is_prev_consonant = TRUE;\n     \
    \   }\n        $i--;\n    }\n    return '';\n}\n\necho get_closest_vowel(\"yogurt\"\
    ) . \"<br>\";\necho get_closest_vowel(\"FULL\") . \"<br>\";\necho get_closest_vowel(\"\
    quick\") . \"<br>\";\necho get_closest_vowel(\"ab\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u<br><br>i<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiseilsec.php:41\n\
    Stack trace:\n#0 /tmp/tmpiseilsec.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpiseilsec.php\
    \ on line 41\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\tfor ($i = strlen($word)\
    \ - 1; $i >= 0; $i--) {\n\t\tif (is_vowel($word[$i]) && is_consonant($word[$i\
    \ - 1])) {\n\t\t\treturn $word[$i];\n\t\t}\n\t}\n\treturn \"\";\n}\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_vowel() in\
    \ /tmp/tmp12vr8v1o.php:18\nStack trace:\n#0 /tmp/tmp12vr8v1o.php(25): get_closest_vowel('yogurt')\n\
    #1 /tmp/tmp12vr8v1o.php(29): candidate('yogurt')\n#2 /tmp/tmp12vr8v1o.php(44):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp12vr8v1o.php on line 18\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n  $const = array(\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n  $chars = str_split($word);\n  $result\
    \ = '';\n  for ($i = count($chars) - 1; $i >= 0; $i--) {\n    if (in_array($chars[$i],\
    \ $vowels)) {\n      if ($i == count($chars) - 1) {\n        return '';\n    \
    \  }\n      if (in_array($chars[$i+1], $const)) {\n        return $chars[$i];\n\
    \      }\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n \
    \   return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpym_bntzd.php:40\n\
    Stack trace:\n#0 /tmp/tmpym_bntzd.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpym_bntzd.php\
    \ on line 40\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $right_side = strrev($word);\n\
    \    $result = \"\";\n    $closest_vowel = -1;\n    $is_found = false;\n    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    for ($i = 0; $i < strlen($right_side); $i++)\
    \ {\n        if (in_array($right_side[$i], $vowels)) {\n            $closest_vowel\
    \ = $i;\n            $is_found = true;\n            break;\n        }\n    }\n\
    \    if ($is_found) {\n        for ($i = $closest_vowel + 1; $i < strlen($right_side);\
    \ $i++) {\n            if (!in_array($right_side[$i], $vowels)) {\n          \
    \      $result = $right_side[$closest_vowel];\n                break;\n      \
    \      }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zc0ysty.php:49\n\
    Stack trace:\n#0 /tmp/tmp3zc0ysty.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp3zc0ysty.php\
    \ on line 49\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    // TODO please write\
    \ your code here\n    $result = null;\n    $ary = str_split($word);\n    // print_r($ary);\n\
    \    $i = strlen($word) - 1;\n    while($i >= 0) {\n        if($ary[$i] == 'a'\
    \ || $ary[$i] == 'e' || $ary[$i] == 'i' || $ary[$i] == 'o' || $ary[$i] == 'u')\
    \ {\n            if($i - 1 >= 0 && $ary[$i - 1] != 'a' && $ary[$i - 1] != 'e'\
    \ && $ary[$i - 1] != 'i' && $ary[$i - 1] != 'o' && $ary[$i - 1] != 'u') {\n  \
    \              return $ary[$i];\n            }\n        }\n        $i--;\n   \
    \ }\n    return \"\";\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd1_cwp9c.php:42\n\
    Stack trace:\n#0 /tmp/tmpd1_cwp9c.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpd1_cwp9c.php\
    \ on line 42\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\n$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n$letters = str_split($word);\n\n$index = strlen($word) - 1;\n\
    $found = '';\n\nwhile($index >= 0) {\n  if (!in_array($letters[$index], $vowels))\
    \ {\n    $found = $letters[$index];\n    break;\n  }\n  $index--;\n}\n\nif (empty($found))\
    \ {\n  return '';\n}\n\n$index = strlen($word) - 1;\n$closest_vowel = '';\n\n\
    while($index >= 0) {\n  if (in_array($letters[$index], $vowels)) {\n    $closest_vowel\
    \ = $letters[$index];\n    break;\n  }\n  $index--;\n}\n\nreturn $closest_vowel;\n\
    }\n\necho get_closest_vowel(\"yogurt\");\nfunction candidate(...$args) {\n   \
    \ return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqzwe__n.php:58\n\
    Stack trace:\n#0 /tmp/tmpyqzwe__n.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpyqzwe__n.php\
    \ on line 58\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    if (empty($word)) {\n\
    \        return '';\n    }\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n  \
    \  $vowel_position = array();\n    foreach (str_split($word) as $key => $letter)\
    \ {\n        if (in_array($letter, $vowels)) {\n            $vowel_position[]\
    \ = $key;\n        }\n    }\n    if (count($vowel_position) == 0) {\n        return\
    \ '';\n    }\n    $total_letter = strlen($word);\n    $right_side_consonant =\
    \ $total_letter - 1;\n    $closest_letter = '';\n    while ($right_side_consonant\
    \ > 0) {\n        if (!in_array($word[$right_side_consonant], $vowels)) {\n  \
    \          foreach ($vowel_position as $vowel) {\n                if ($vowel >\
    \ $right_side_consonant) {\n                    $difference = $vowel - $right_side_consonant;\n\
    \                    $closest_letter = $word[$vowel];\n                    break;\n\
    \                }\n            }\n            if (!empty($closest_letter)) {\n\
    \                break;\n            }\n        }\n        $right_side_consonant--;\n\
    \    }\n    return $closest_letter;\n}\n\nfunction candidate(...$args) {\n   \
    \ return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyc2mzi51.php:57\n\
    Stack trace:\n#0 /tmp/tmpyc2mzi51.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpyc2mzi51.php\
    \ on line 57\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $last_vowel = '';\n    for ($i = strlen($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $last_vowel = $word[$i];\n            break;\n        }\n    }\n    return\
    \ $last_vowel;\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmzwpwqhr.php:38\n\
    Stack trace:\n#0 /tmp/tmpmzwpwqhr.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpmzwpwqhr.php\
    \ on line 38\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $index = strlen($word) - 1;\n    for ($i = $index; $i >=\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            if (strpos($word,\
    \ $word[$i], $i + 1) !== false) {\n                continue;\n            } else\
    \ {\n                return $word[$i];\n            }\n        }\n    }\n    return\
    \ '';\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr0tynze7.php:38\n\
    Stack trace:\n#0 /tmp/tmpr0tynze7.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpr0tynze7.php\
    \ on line 38\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $result = '';\n    $found = false;\n    $counter = strlen($word)\
    \ - 1;\n    while(!$found && $counter > 0) {\n        if(in_array($word[$counter],\
    \ $vowels)) {\n            $result = $word[$counter];\n            $found = true;\n\
    \        }\n        $counter--;\n    }\n    return $result;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . PHP_EOL;\necho get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"\
    quick\") . PHP_EOL;\necho get_closest_vowel(\"ab\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpse1z_0tc.php:42\n\
    Stack trace:\n#0 /tmp/tmpse1z_0tc.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpse1z_0tc.php\
    \ on line 42\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $letters = str_split($word);\n\
    \  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $count = 0;\n  $length = count($letters);\n\
    \  $result = '';\n  while ($count < $length) {\n    if (in_array($letters[$count],\
    \ $vowels)) {\n      $result = $letters[$count];\n      return $result;\n    }\n\
    \    $count++;\n  }\n  return '';\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0m408a2i.php:37\n\
    Stack trace:\n#0 /tmp/tmp0m408a2i.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp0m408a2i.php\
    \ on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n  $consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n  $chars\
    \ = str_split($word);\n  $closest = \"\";\n  $currentIndex = -1;\n  $prevIndex\
    \ = -1;\n  $nextIndex = -1;\n  foreach ($chars as $key => $char) {\n    $isVowel\
    \ = in_array($char, $vowels);\n    $isConsonant = in_array($char, $consonants);\n\
    \    if ($isVowel) {\n      $currentIndex = $key;\n      $prevIndex = $key - 1;\n\
    \      $nextIndex = $key + 1;\n      if ($prevIndex >= 0 && $nextIndex < count($chars))\
    \ {\n        $prevChar = $chars[$prevIndex];\n        $nextChar = $chars[$nextIndex];\n\
    \        $isPrevConsonant = in_array($prevChar, $consonants);\n        $isNextConsonant\
    \ = in_array($nextChar, $consonants);\n        if ($isPrevConsonant && $isNextConsonant)\
    \ {\n          $closest = $char;\n          break;\n        }\n      }\n    }\n\
    \  }\n  return $closest;\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw70i_hgn.php:51\n\
    Stack trace:\n#0 /tmp/tmpw70i_hgn.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpw70i_hgn.php\
    \ on line 51\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = \"AEIOUaeiou\"\
    ;\n    $new_word = '';\n    $length = strlen($word);\n    $new_word = '';\n  \
    \  $i = $length - 1;\n    while($i >= 0) {\n        if(strpos($vowels, $word[$i])\
    \ === false) {\n            $i--;\n        } else {\n            return $word[$i];\n\
    \        }\n    }\n    return $new_word;\n}\n$word = 'yogurt';\necho get_closest_vowel($word);\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52v_colw.php:40\n\
    Stack trace:\n#0 /tmp/tmp52v_colw.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp52v_colw.php\
    \ on line 40\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word = strtolower($word);\n\
    \    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    for ($i = strlen($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     if ($i == 0 || in_array($word[$i - 1], $vowels)) {\n                continue;\n\
    \            }\n            else {\n                return $word[$i];\n      \
    \      }\n        }\n    }\n    return \"\";\n}\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_ychz31.php:40\n\
    Stack trace:\n#0 /tmp/tmpo_ychz31.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpo_ychz31.php\
    \ on line 40\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n  $vowel_found = false;\n  $vowel_index = 0;\n\
    \  $vowel_letter = \"\";\n  $vowel_found_index = 0;\n  $consonant_before = false;\n\
    \  $consonant_after = false;\n  $found_vowel = false;\n  // find the vowel\n \
    \ while ($vowel_found == false && $vowel_index < count($vowels)) {\n    $vowel_letter\
    \ = $vowels[$vowel_index];\n    $vowel_found_index = strrpos($word, $vowel_letter);\n\
    \    if ($vowel_found_index !== false) {\n      $vowel_found = true;\n    }\n\
    \    $vowel_index++;\n  }\n  // if a vowel is found, find a consonant before it\
    \ and after it\n  if ($vowel_found) {\n    for ($i = $vowel_found_index - 1; $i\
    \ >= 0; $i--) {\n      if (ctype_alpha($word[$i]) && !is_vowel($word[$i])) {\n\
    \        $consonant_before = true;\n        break;\n      }\n    }\n    for ($i\
    \ = $vowel_found_index + 1; $i < strlen($word); $i++) {\n      if (ctype_alpha($word[$i])\
    \ && !is_vowel($word[$i])) {\n        $consonant_after = true;\n        break;\n\
    \      }\n    }\n    // if consonants are found before and after the vowel, return\
    \ the vowel\n    if ($consonant_before && $consonant_after) {\n      return $vowel_letter;\n\
    \    }\n  }\n  return \"\";\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_vowel() in\
    \ /tmp/tmp067b6jt9.php:37\nStack trace:\n#0 /tmp/tmp067b6jt9.php(57): get_closest_vowel('yogurt')\n\
    #1 /tmp/tmp067b6jt9.php(61): candidate('yogurt')\n#2 /tmp/tmp067b6jt9.php(76):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp067b6jt9.php on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"];\n    $word = strrev($word);\n    $word = str_split($word);\n\
    \    $count = count($word);\n    $flag = false;\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $flag = true;\n\
    \            break;\n        }\n    }\n    if ($flag) {\n        if ($i + 1 <\
    \ $count && in_array($word[$i + 1], $vowels)) {\n            $word = array_slice($word,\
    \ $i + 1);\n            $word = strrev(implode(\"\", $word));\n            return\
    \ $word;\n        } else if ($i - 1 >= 0 && in_array($word[$i - 1], $vowels))\
    \ {\n            $word = array_slice($word, $i);\n            $word = strrev(implode(\"\
    \", $word));\n            return $word;\n        } else {\n            return\
    \ \"\";\n        }\n    } else {\n        return \"\";\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8u5xo7h.php:49\n\
    Stack trace:\n#0 /tmp/tmpf8u5xo7h.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpf8u5xo7h.php\
    \ on line 49\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n   $word_length = strlen($word);\n\
    \   $word_arr = str_split($word);\n   $vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"];\n   $vowel_choices = [];\n   $vowel_indexes = [];\n   $consonant_indexes\
    \ = [];\n   $consonant_choices = [];\n   $final_choices = [];\n   $final_indexes\
    \ = [];\n   $final_results = [];\n   $final_letters = [];\n   $final_final_letters\
    \ = [];\n   $final_final_results = [];\n   for ($i = 0; $i < $word_length; $i++)\
    \ {\n      if (in_array($word_arr[$i], $vowels)) {\n         array_push($vowel_choices,\
    \ $word_arr[$i]);\n         array_push($vowel_indexes, $i);\n      } else {\n\
    \         array_push($consonant_choices, $word_arr[$i]);\n         array_push($consonant_indexes,\
    \ $i);\n      }\n   }\n   for ($i = 0; $i < count($vowel_indexes); $i++) {\n \
    \     for ($j = 0; $j < count($consonant_indexes); $j++) {\n         if ($vowel_indexes[$i]\
    \ > $consonant_indexes[$j]) {\n            array_push($final_choices, $vowel_choices[$i]);\n\
    \            array_push($final_indexes, $vowel_indexes[$i]);\n         }\n   \
    \   }\n   }\n   for ($i = 0; $i < count($final_indexes); $i++) {\n      for ($j\
    \ = 0; $j < count($consonant_indexes); $j++) {\n         if ($final_indexes[$i]\
    \ < $consonant_indexes[$j]) {\n            array_push($final_results, $final_choices[$i]);\n\
    \            array_push($final_letters, $final_indexes[$i]);\n         }\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 48 in /tmp/tmpa0v0l0rh.php on line 73

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $closest_vowel = '';\n    for ($i = 0; $i < strlen($word);\
    \ $i++) {\n        $char = $word[$i];\n        $next_char = $word[$i + 1];\n \
    \       if (in_array($char, $vowels)) {\n            if (in_array($next_char,\
    \ $vowels)) {\n                $closest_vowel = $char;\n            }\n      \
    \  }\n    }\n    return $closest_vowel;\n}\necho get_closest_vowel(\"yogurt\"\
    );\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho\
    \ get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 6 in /tmp/tmp8d24qx7a.php on line\
    \ 21\n\nWarning: Uninitialized string offset 4 in /tmp/tmp8d24qx7a.php on line\
    \ 21\n\nWarning: Uninitialized string offset 5 in /tmp/tmp8d24qx7a.php on line\
    \ 21\nu\nWarning: Uninitialized string offset 2 in /tmp/tmp8d24qx7a.php on line\
    \ 21\n\nWarning: Uninitialized string offset 6 in /tmp/tmp8d24qx7a.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d24qx7a.php:39\n\
    Stack trace:\n#0 /tmp/tmp8d24qx7a.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp8d24qx7a.php\
    \ on line 39\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    // Implement your solution\
    \ here\n}\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpji6gyccr.php:24\n\
    Stack trace:\n#0 /tmp/tmpji6gyccr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpji6gyccr.php\
    \ on line 24\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\tif (strlen($word)<=2) return\
    \ \"\";\n\t$vowels = array('a','e','i','o','u','A','E','I','O','U');\n\t$pos =\
    \ strlen($word) - 1;\n\twhile ($pos>0) {\n\t\tif (!in_array($word[$pos], $vowels))\
    \ {\n\t\t\t$pos--;\n\t\t\tcontinue;\n\t\t}\n\t\tif (!in_array($word[$pos-1], $vowels))\
    \ {\n\t\t\tbreak;\n\t\t}\n\t\t$pos--;\n\t}\n\tif ($pos == 0) return \"\";\n\t\
    return $word[$pos];\n}\n\necho get_closest_vowel(\"yogurt\").\"\\n\";\necho get_closest_vowel(\"\
    FULL\").\"\\n\";\necho get_closest_vowel(\"quick\").\"\\n\";\necho get_closest_vowel(\"\
    ab\").\"\\n\";\necho get_closest_vowel(\"a\").\"\\n\";\necho get_closest_vowel(\"\
    A\").\"\\n\";\necho get_closest_vowel(\"q\").\"\\n\";\necho get_closest_vowel(\"\
    tw\").\"\\n\";\necho get_closest_vowel(\"abcsdfghijklmnopqrstuwxyz\").\"\\n\"\
    ;\necho get_closest_vowel(\"ABCSDFGHIJKLMNOPQRSTUWXYZ\").\"\\n\";\necho get_closest_vowel(\"\
    1234567890\").\"\\n\";\necho get_closest_vowel(\"!@#$%^&*()\").\"\\n\";\necho\
    \ get_closest_vowel(\"aa\").\"\\n\";\necho get_closest_vowel(\"Aa\").\"\\n\";\n\
    echo get_closest_vowel(\"A\").\"\\n\";\necho get_closest_vowel(\"a\").\"\\n\"\
    ;\necho get_closest_vowel\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmp9fs299r3.php on line 51

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"];\n    $last_consonant = false;\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_position = strlen($word);\n    $position = 0;\n\
    \    $characters = str_split($word);\n    while($characters) {\n        $character\
    \ = array_pop($characters);\n        if(in_array($character, $vowels)) {\n   \
    \         if ($last_consonant && strlen($word) - $position < $closest_vowel_position)\
    \ {\n                $closest_vowel = $character;\n                $closest_vowel_position\
    \ = strlen($word) - $position;\n            }\n            $last_consonant = false;\n\
    \        } elseif (in_array($character, $consonants)) {\n            $last_consonant\
    \ = true;\n        }\n        $position++;\n    }\n    return $closest_vowel;\n\
    }\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho\
    \ get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\necho get_closest_vowel(\"\
    can\");\necho get_closest_vowel(\"i\");\necho get_closest_vowel(\"a\");\necho\
    \ get_closest_vowel(\"l\");\necho get_closest_vowel(\"e\");\necho get_closest_vowel(\"\
    is\");\necho get_closest_vowel(\"this\");\necho get_closest_vowel(\"a\");\necho\
    \ get_closest_vowel(\"test\");\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "oiaaiie\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7rgvvve.php:58\n\
    Stack trace:\n#0 /tmp/tmpp7rgvvve.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpp7rgvvve.php\
    \ on line 58\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $vowel_pos\
    \ = 0;\n    $word_arr = str_split($word);\n    $word_length = count($word_arr);\n\
    \    $con_pos = 0;\n    $first_con_pos = 0;\n    $vowel_distance = 0;\n    $closest_vowel\
    \ = '';\n    $closest_distance = 0;\n    for ($i = $word_length - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word_arr[$i], $vowels)) {\n            $vowel_pos\
    \ = $i;\n            $con_pos = 0;\n            for ($j = $i - 1; $j >= 0; $j--)\
    \ {\n                if (in_array($word_arr[$j], $consonants)) {\n           \
    \         $con_pos = $j;\n                    break;\n                }\n    \
    \        }\n            if ($con_pos != 0) {\n                $vowel_distance\
    \ = $vowel_pos - $con_pos;\n                if ($first_con_pos == 0) {\n     \
    \               $first_con_pos = $con_pos;\n                    $closest_vowel\
    \ = $word_arr[$vowel_pos];\n                    $closest_distance = $vowel_distance;\n\
    \                } else {\n                    if ($vowel_distance < $closest_distance)\
    \ {\n                        $closest_vowel = $word_arr[$vowel_pos];\n       \
    \                 $closest_distance = $vowel_distance;\n                    }\n\
    \                }\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ni2fp0x.php:60\n\
    Stack trace:\n#0 /tmp/tmp5ni2fp0x.php(74): test()\n#1 {main}\n  thrown in /tmp/tmp5ni2fp0x.php\
    \ on line 60\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $len = strlen($word);\n    for ($i = $len - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word[$i], $vowels)) {\n            for ($j =\
    \ $i - 1; $j >= 0; $j--) {\n                if (!in_array($word[$j], $vowels))\
    \ {\n                    return $word[$i];\n                }\n            }\n\
    \        }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"yogurt\");\n\
    echo get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"\
    ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ui\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphzybhyb5.php:44\n\
    Stack trace:\n#0 /tmp/tmphzybhyb5.php(55): test()\n#1 {main}\n  thrown in /tmp/tmphzybhyb5.php\
    \ on line 44\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = 'aeiou';\n\
    \    $result = '';\n    $closest = strlen($word);\n    for ($i = strlen($word)\
    \ - 1; $i >= 0; $i--) {\n        if (strpos($vowels, $word[$i]) !== false) {\n\
    \            if (strpos($vowels, $word[$i + 1]) === false && strpos($vowels, $word[$i\
    \ - 1]) === false) {\n                $current = strlen($word) - $i;\n       \
    \         if ($current < $closest) {\n                    $closest = $current;\n\
    \                    $result = $word[$i];\n                }\n            }\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Uninitialized string offset 3 in /tmp/tmp0kw2tyuk.php on line 22


    Warning: Uninitialized string offset 2 in /tmp/tmp0kw2tyuk.php on line 22


    Warning: Uninitialized string offset 5 in /tmp/tmp0kw2tyuk.php on line 22


    Warning: Uninitialized string offset 4 in /tmp/tmp0kw2tyuk.php on line 22


    Warning: Uninitialized string offset 5 in /tmp/tmp0kw2tyuk.php on line 22

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = \"AEIOUaeiou\"\
    ;\n    $length = strlen($word);\n    $closest_vowel = \"\";\n    for ($i = 0;\
    \ $i < $length; $i++) {\n        if (strpos($vowels, $word[$i]) !== false) {\n\
    \            if ($i > 0 && $i < $length - 1) {\n                if (strpos($vowels,\
    \ $word[$i-1]) === false && strpos($vowels, $word[$i+1]) === false) {\n      \
    \              $closest_vowel = $word[$i];\n                    break;\n     \
    \           }\n            }\n        }\n    }\n    return $closest_vowel;\n}\n\
    print_r(get_closest_vowel(\"yogurt\"));\nprint_r(get_closest_vowel(\"FULL\"));\n\
    print_r(get_closest_vowel(\"quick\"));\nprint_r(get_closest_vowel(\"ab\"));\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "oU\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnsk28yr.php:41\n\
    Stack trace:\n#0 /tmp/tmpvnsk28yr.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpvnsk28yr.php\
    \ on line 41\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  // Write your code here\n\
    }\n\necho get_closest_vowel(\"yogurt\").\"\\n\"; // u\necho get_closest_vowel(\"\
    FULL\").\"\\n\"; // U\necho get_closest_vowel(\"quick\").\"\\n\"; // \"\"\necho\
    \ get_closest_vowel(\"ab\").\"\\n\"; // \"\"\necho get_closest_vowel(\"banana\"\
    ).\"\\n\"; // a\necho get_closest_vowel(\"peanut\").\"\\n\"; // e\necho get_closest_vowel(\"\
    Grate\").\"\\n\"; // e\necho get_closest_vowel(\"teach\").\"\\n\"; // a\necho\
    \ get_closest_vowel(\"Halo\").\"\\n\"; // o\necho get_closest_vowel(\"TakTik\"\
    ).\"\\n\"; // i\necho get_closest_vowel(\"in\").\"\\n\"; // i\necho get_closest_vowel(\"\
    guitar\").\"\\n\"; // u\necho get_closest_vowel(\"GOD\").\"\\n\"; // O\necho get_closest_vowel(\"\
    joshua\").\"\\n\"; // o\necho get_closest_vowel(\"alvin\").\"\\n\"; // a\necho\
    \ get_closest_vowel(\"annisa\").\"\\n\"; // i\necho get_closest_vowel(\"fadli\"\
    ).\"\\n\"; // a\necho get_closest_vowel(\"devina\").\"\\n\"; // e\necho get_closest_vowel(\"\
    adelia\").\"\\n\"; // e\necho get_closest_vowel(\"agnes\").\"\\n\"; // e\necho\
    \ get_closest_vowel(\"anas\").\"\\n\"; // a\necho get_closest_vowel(\"agus\").\"\
    \\n\"; // u\necho get_closest_vowel(\"fajar\").\"\\n\"; // a\necho get_closest_vowel(\"\
    purnama\").\"\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "yogurt", expecting "," or ";"
    in /tmp/tmptcycv32i.php on line 49

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word = strrev($word);\n\
    \    $word = str_split($word);\n    for ($i=0; $i < count($word); $i++) { \n \
    \       if(!($word[$i] == \"a\" || $word[$i] == \"e\" || $word[$i] == \"i\" ||\
    \ $word[$i] == \"o\" || $word[$i] == \"u\")){\n            if(!isset($word[$i\
    \ + 1])){\n                return \"\";\n            }else{\n                if($word[$i\
    \ + 1] == \"a\" || $word[$i + 1] == \"e\" || $word[$i + 1] == \"i\" || $word[$i\
    \ + 1] == \"o\" || $word[$i + 1] == \"u\"){\n                    return $word[$i\
    \ + 1];\n                }\n            }\n        }\n    }\n    return \"\";\n\
    }\n\n$word = \"yogurt\";\necho get_closest_vowel($word);\necho \"<br>\";\n$word\
    \ = \"FULL\";\necho get_closest_vowel($word);\necho \"<br>\";\n$word = \"quick\"\
    ;\necho get_closest_vowel($word);\necho \"<br>\";\n$word = \"ab\";\necho get_closest_vowel($word);\n\
    echo \"<br>\";\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u<br><br>i<br>a<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpieds2tlp.php:53\n\
    Stack trace:\n#0 /tmp/tmpieds2tlp.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpieds2tlp.php\
    \ on line 53\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n\t$len = strlen($word);\n\tfor ($i = $len - 1; $i >= 0; $i--)\
    \ {\n\t\t$c = $word[$i];\n\t\tif (in_array($c, $vowels)) {\n\t\t\tif ($i > 0 &&\
    \ !in_array($word[$i - 1], $vowels)) {\n\t\t\t\tif ($i < $len - 1 && !in_array($word[$i\
    \ + 1], $vowels)) {\n\t\t\t\t\treturn $c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\
    return '';\n}\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"];\n    $first_letter = substr($word, 0, 1);\n    $last_letter\
    \ = substr($word, -1);\n    if(in_array($first_letter, $vowels) || in_array($last_letter,\
    \ $vowels)) {\n        return \"\";\n    }\n    $word_array = str_split($word);\n\
    \    $index = count($word_array);\n    while($index >= 0) {\n        $index--;\n\
    \        if(in_array($word_array[$index], $vowels)) {\n            $index2 = $index\
    \ - 1;\n            if(in_array($word_array[$index2], $vowels)) {\n          \
    \      continue;\n            }\n            return $word_array[$index];\n   \
    \     }\n    }\n    return \"\";\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzkd967m.php:52\n\
    Stack trace:\n#0 /tmp/tmpgzkd967m.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpgzkd967m.php\
    \ on line 52\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $last_vowel = \"\";\n    for ($i = strlen($word) - 1; $i\
    \ >= 0; $i--) {\n        $vowel = $word[$i];\n        if (in_array($vowel, $vowels))\
    \ {\n            $last_vowel = $vowel;\n            break;\n        }\n    }\n\
    \    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n        $vowel = $word[$i];\n\
    \        if (in_array($vowel, $vowels)) {\n            if ($vowel == $last_vowel)\
    \ {\n                $last_vowel = $vowel;\n            } else {\n           \
    \     break;\n            }\n        }\n    }\n    return $last_vowel;\n}\n\n\
    echo get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy8mdwhv5.php:50\n\
    Stack trace:\n#0 /tmp/tmpy8mdwhv5.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpy8mdwhv5.php\
    \ on line 50\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$a = 0;\n\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$wor = str_split($word);\n\t$count = 0;\n\t$index =\
    \ 0;\n\t$b = 0;\n\t$c = 0;\n\t$result = '';\n\tfor ($i = 0; $i < count($wor);\
    \ $i++) {\n\t\tif (in_array($wor[$i], $vowels)) {\n\t\t\tif ($i == 0 && $wor[1]\
    \ != in_array($wor[1], $vowels)) {\n\t\t\t\t$result = $wor[$i];\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t\telse if ($i == count($wor) - 1 && $wor[count($wor) - 2] != in_array($wor[count($wor)\
    \ - 2], $vowels)) {\n\t\t\t\t$result = $wor[$i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\
    \telse if ($wor[$i - 1] != in_array($wor[$i - 1], $vowels) && $wor[$i + 1] !=\
    \ in_array($wor[$i + 1], $vowels)) {\n\t\t\t\t$result = $wor[$i];\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\necho get_closest_vowel(\"yogurt\")\
    \ . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\n\n\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpld739gtx.php:53\n\
    Stack trace:\n#0 /tmp/tmpld739gtx.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpld739gtx.php\
    \ on line 53\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n  $word = strtolower($word);\n  $word = str_split($word);\n\
    \  $result = null;\n  $index = count($word) - 1;\n  $count = 0;\n  $vowel_flag\
    \ = false;\n  for ($i=$index; $i>=0; $i--) {\n    $vowel_flag = false;\n    foreach\
    \ ($vowels as $vowel) {\n      if ($word[$i] == $vowel) {\n        $vowel_flag\
    \ = true;\n        break;\n      }\n    }\n    if ($vowel_flag) {\n      $result\
    \ = $word[$i];\n      break;\n    }\n    $count++;\n  }\n  if ($count%2==0) {\n\
    \    return \"\";\n  }\n  else {\n    return $result;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpol2migge.php:50\n\
    Stack trace:\n#0 /tmp/tmpol2migge.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpol2migge.php\
    \ on line 50\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n\t$consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\t$characters = str_split($word);\n\
    \t\n\t$hit_vowel = false;\n\t$hit_consonant = false;\n\t$closest_vowel = false;\n\
    \t$closest_vowel_location = 0;\n\t$consonant_location = 0;\n\t$word_length = count($characters);\n\
    \t\n\tfor ($i = $word_length; $i > 0; $i--) {\n\t\tif (in_array($characters[$i\
    \ - 1], $vowels)) {\n\t\t\t$hit_vowel = true;\n\t\t\t$closest_vowel = $characters[$i\
    \ - 1];\n\t\t\t$closest_vowel_location = $i - 1;\n\t\t}\n\t\t\n\t\tif (in_array($characters[$i\
    \ - 1], $consonants)) {\n\t\t\t$hit_consonant = true;\n\t\t\t$consonant_location\
    \ = $i - 1;\n\t\t}\n\t\t\n\t\tif ($hit_vowel && $hit_consonant) {\n\t\t\tif ($closest_vowel_location\
    \ > $consonant_location) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn\
    \ $closest_vowel;\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyq0vtutu.php:57\n\
    Stack trace:\n#0 /tmp/tmpyq0vtutu.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpyq0vtutu.php\
    \ on line 57\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87jqbxby.php:25\n\
    Stack trace:\n#0 /tmp/tmp87jqbxby.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp87jqbxby.php\
    \ on line 25\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = array(\"a\",\"\
    e\",\"i\",\"o\",\"u\");\n  $word_array = str_split($word);\n  $consonants = array_diff($word_array,\
    \ $vowels);\n  if (count($consonants) < 2) {\n    return \"\";\n  } else {\n \
    \   for ($i = count($word_array) - 1; $i >= 0; $i--) {\n      if (in_array($word_array[$i],\
    \ $vowels)) {\n        $current_vowel = $word_array[$i];\n        if (in_array($word_array[$i\
    \ + 1], $consonants) && in_array($word_array[$i - 1], $consonants)) {\n      \
    \    return $current_vowel;\n        }\n      }\n    }\n  }\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09o7c2b4.php:45\n\
    Stack trace:\n#0 /tmp/tmp09o7c2b4.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp09o7c2b4.php\
    \ on line 45\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $letters = str_split($word);\n\
    \    $result = '';\n    for ($i = count($letters) - 1; $i >= 0; $i--) {\n    \
    \    $prev = $i - 1;\n        $next = $i + 1;\n        if ($i === 0) {\n     \
    \       break;\n        }\n        if (is_consonant($letters[$i])) {\n       \
    \     continue;\n        }\n        if (is_consonant($letters[$prev]) && is_consonant($letters[$next]))\
    \ {\n            $result = $letters[$i];\n            break;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_consonant()\
    \ in /tmp/tmp_2lpypxq.php:25\nStack trace:\n#0 /tmp/tmp_2lpypxq.php(37): get_closest_vowel('yogurt')\n\
    #1 /tmp/tmp_2lpypxq.php(41): candidate('yogurt')\n#2 /tmp/tmp_2lpypxq.php(56):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp_2lpypxq.php on line 25\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $words = str_split($word);\n\
    \    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $isVowel = FALSE;\n \
    \   $closestVowel = \"\";\n    $closestVowelDistance = strlen($word);\n    for\
    \ ($i = count($words) - 1; $i >= 0; $i--) {\n        $char = $words[$i];\n   \
    \     if (in_array($char, $vowels)) {\n            $isVowel = TRUE;\n        \
    \    $distance = count($words) - $i;\n            if ($distance < $closestVowelDistance)\
    \ {\n                $closestVowel = $char;\n                $closestVowelDistance\
    \ = $distance;\n            }\n        } else {\n            if ($isVowel) {\n\
    \                return $closestVowel;\n            }\n        }\n    }\n    return\
    \ \"\";\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppi41fgh3.php:49\n\
    Stack trace:\n#0 /tmp/tmppi41fgh3.php(60): test()\n#1 {main}\n  thrown in /tmp/tmppi41fgh3.php\
    \ on line 49\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $char_array = str_split($word);\n\
    \    $char_array = array_reverse($char_array);\n    $bool = False;\n    for ($i\
    \ = 0; $i < count($char_array); $i++) {\n        if ($bool == True) {\n      \
    \      if (in_array($char_array[$i], $vowels)) {\n                return $char_array[$i];\n\
    \            }\n        }\n        if (in_array($char_array[$i], $consonants))\
    \ {\n            $bool = True;\n        }\n    }\n    return \"\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptsxovhkr.php:42\n\
    Stack trace:\n#0 /tmp/tmptsxovhkr.php(55): test()\n#1 {main}\n  thrown in /tmp/tmptsxovhkr.php\
    \ on line 42\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n  $len = strlen($word);\n  $c_index = $len;\n  $first_vowel = null;\n\
    \  for ($i = $len-1; $i >= 0; $i--) {\n    if (in_array($word[$i], $vowels)) {\n\
    \      $first_vowel = $i;\n      break;\n    }\n  }\n  if (!$first_vowel) return\
    \ '';\n  for ($i = $first_vowel-1; $i >= 0; $i--) {\n    if (!in_array($word[$i],\
    \ $vowels)) {\n      $c_index = $i;\n      break;\n    }\n  }\n  return $word[$c_index+1];\n\
    }\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 5 in /tmp/tmp3sejl7ad.php on line\
    \ 34\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3sejl7ad.php:46\n\
    Stack trace:\n#0 /tmp/tmp3sejl7ad.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp3sejl7ad.php\
    \ on line 46\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    \n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3osz8l9.php:25\n\
    Stack trace:\n#0 /tmp/tmpe3osz8l9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpe3osz8l9.php\
    \ on line 25\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n\t$count = strlen($word);\n\t$closest = '';\n\t$flag = false;\n\
    \tfor ($i = $count - 1; $i >= 0; $i--) {\n\t\tif ($flag) {\n\t\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\t\t$closest = $word[$i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\t\t$flag = true;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn $closest;\n}\necho get_closest_vowel(\"yogurt\") . PHP_EOL;\n\
    echo get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"quick\"\
    ) . PHP_EOL;\necho get_closest_vowel(\"ab\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphr3_fqql.php:46\n\
    Stack trace:\n#0 /tmp/tmphr3_fqql.php(59): test()\n#1 {main}\n  thrown in /tmp/tmphr3_fqql.php\
    \ on line 46\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $index = strlen($word)\
    \ - 1;\n  $consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"];\n  $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  $closest_vowel\
    \ = \"\";\n  $closest_vowel_index = -1;\n  while ($index >= 0) {\n    if (in_array($word[$index],\
    \ $vowels)) {\n      if ($closest_vowel_index === -1) {\n        $closest_vowel\
    \ = $word[$index];\n        $closest_vowel_index = $index;\n      }\n    } else\
    \ if (in_array($word[$index], $consonants)) {\n      if ($closest_vowel_index\
    \ > -1) {\n        return $closest_vowel;\n      }\n    }\n    $index--;\n  }\n\
    \  return \"\";\n}\necho get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"\
    yogurt\") . PHP_EOL;\necho get_closest_vowel(\"quick\") . PHP_EOL;\necho get_closest_vowel(\"\
    ab\") . PHP_EOL;\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv9lcw861.php:51\n\
    Stack trace:\n#0 /tmp/tmpv9lcw861.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpv9lcw861.php\
    \ on line 51\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $letters = str_split($word);\n    $found_vowel\
    \ = \"\";\n    $result = \"\";\n    $last_found_vowel = 0;\n    $consonant_count\
    \ = 0;\n    $last_consonant_count = 0;\n    for ($i = 0; $i < count($letters);\
    \ $i++) {\n        if (in_array($letters[$i], $vowels)) {\n            $found_vowel\
    \ = $letters[$i];\n            $last_found_vowel = $i;\n            $last_consonant_count\
    \ = $consonant_count;\n            $consonant_count = 0;\n        } else {\n \
    \           $consonant_count++;\n        }\n    }\n    if ($last_consonant_count\
    \ == 1) {\n        $result = $found_vowel;\n    }\n    return $result;\n}\n\n\
    print_r(get_closest_vowel(\"yogurt\"));\necho \"\\n\";\nprint_r(get_closest_vowel(\"\
    FULL\"));\necho \"\\n\";\nprint_r(get_closest_vowel(\"quick\"));\necho \"\\n\"\
    ;\nprint_r(get_closest_vowel(\"ab\"));\necho \"\\n\";\nprint_r(get_closest_vowel(\"\
    yogurt\"));\necho \"\\n\";\nprint_r(get_closest_vowel(\"yqrur\"));\necho \"\\\
    n\";\nprint_r(get_closest_vowel(\"yqrurs\"));\necho \"\\n\";\nprint_r(get_closest_vowel(\"\
    yqrursu\"));\necho \"\\n\";\nprint_r(get_closest_vowel(\"aa\"));\necho \"\\n\"\
    ;\nprint_r(get_closest_vowel(\"a\"));\necho \"\\n\";\nprint_r(get_closest_vowel(\"\
    \"));\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\n\n\nu\n\n\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpwx1pe9e4.php:72\nStack trace:\n#0 /tmp/tmpwx1pe9e4.php(83): test()\n\
    #1 {main}\n  thrown in /tmp/tmpwx1pe9e4.php on line 72\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n  $closest_vowel = '';\n  $closest_vowel_distance = strlen($word);\n\
    \  for ($i = strlen($word) - 1; $i >= 0; $i--) {\n    if (in_array($word[$i],\
    \ $vowels)) {\n      for ($j = $i - 1; $j >= 0; $j--) {\n        if (!in_array($word[$j],\
    \ $vowels)) {\n          if ($i - $j < $closest_vowel_distance) {\n          \
    \  $closest_vowel = $word[$i];\n            $closest_vowel_distance = $i - $j;\n\
    \          }\n          break;\n        }\n      }\n    }\n  }\n  return $closest_vowel;\n\
    }\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ef3wgsb.php:45\n\
    Stack trace:\n#0 /tmp/tmp5ef3wgsb.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp5ef3wgsb.php\
    \ on line 45\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $found_vowel = '';\n\
    \    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $str_length = strlen($word);\n\
    \    $flipped_word = strrev($word);\n    for ($i = 0; $i < $str_length; $i++)\
    \ {\n        $char = $flipped_word[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $found_vowel = $char;\n            break;\n        }\n    }\n\
    \    return $found_vowel;\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrmy9op7.php:38\n\
    Stack trace:\n#0 /tmp/tmpbrmy9op7.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpbrmy9op7.php\
    \ on line 38\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word = strtolower($word);\n\
    \    $word = strrev($word);\n    $vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"];\n\
    \    $result = \"\";\n    $vowel_index = 0;\n    $letter_index = 0;\n    $end_word\
    \ = strlen($word) - 1;\n    while($letter_index < $end_word) {\n        if(in_array($word[$letter_index],\
    \ $vowels)) {\n            $vowel_index = $letter_index;\n            break;\n\
    \        }\n        $letter_index++;\n    }\n    $left_pos = $vowel_index - 1;\n\
    \    $right_pos = $vowel_index + 1;\n    if($left_pos >= 0 && $right_pos <= $end_word)\
    \ {\n        if(!in_array($word[$left_pos], $vowels) && !in_array($word[$right_pos],\
    \ $vowels)) {\n            $result = $word[$vowel_index];\n        }\n    }\n\
    \    return $result;\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3905o1vf.php:60\n\
    Stack trace:\n#0 /tmp/tmp3905o1vf.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp3905o1vf.php\
    \ on line 60\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n   //your code goes here\n\
    }\n\n/**\n * Do not change anything below this line\n */\n$test_cases = [\n  \
    \  'yogurt',\n    'FULL',\n    'quick',\n    'ab',\n    '',\n    'hello',\n  \
    \  'JavaScript',\n    'Python',\n    'PHP',\n    'Ruby',\n    'Go',\n    'Perl',\n\
    \    'C',\n    'C++',\n    'C#',\n    'Swift',\n    'Scala',\n    'Bash',\n  \
    \  'Elixir',\n    'Ruby',\n    'hello world',\n    'CRUNCH',\n    'RUST',\n  \
    \  'MONGODB',\n    'PYTHON',\n    'GO',\n    'GOLANG',\n    'PHP',\n    'SYMFONY',\n\
    \    'LARAVEL',\n    'SWIFT',\n    'IOS',\n    'MACHINE LEARNING',\n    'DEEP\
    \ LEARNING',\n    'NEURAL NETWORK',\n    'YOGURT',\n    'MAKER',\n    'DEVELOPER',\n\
    \    'DESIGNER',\n    'TESTING',\n    'RESTFUL API',\n    'GIT',\n    'TDD',\n\
    \    'CODE',\n    'TECHNIQUE',\n    'ALGORITHM',\n    'GITHUB',\n    'STACKOVERFLOW',\n\
    \    'YOUTUBE',\n    'GOOGLE',\n    'FACEBOOK',\n    'TWITTER',\n    'INSTAGRAM',\n\
    \    'SOCIAL MEDIA',\n    'HACKERRANK',\n    'CODEWARS',\n    'JAVASCRIPT',\n\
    \    'ES6',\n    'REACT',\n    'VUE',\n    'ANGULAR',\n    'BOOTSTRAP',\n    'SASS',\n\
    \    'LESS',\n    'HTML',\n    'CSS',\n    'HTML5',\n    'CSS3',\n    'ALGORITHM',\n\
    \    'DATA STRUCTURE',\n    'DATABASE',\n    'MYSQL',\n   \nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpj80o3spr.php on line 97

    '
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $word_array = str_split($word);\n    $result = array();\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $counter = 0;\n    $max_counter\
    \ = 0;\n    $result = array();\n    for ($i = count($word_array) - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            $result[$counter]['vowel'] = $word_array[$i];\n         \
    \   if ($max_counter < $counter) {\n                $max_counter = $counter;\n\
    \            }\n            $counter = 0;\n        } else {\n            $consonant_index\
    \ = $i;\n            $result[$counter]['consonant'] = $word_array[$i];\n     \
    \       $counter++;\n        }\n    }\n    if (isset($result[$max_counter]['vowel']))\
    \ {\n        return $result[$max_counter]['vowel'];\n    } else {\n        return\
    \ '';\n    }\n}\n$word = readline(\"Enter the word: \");\necho get_closest_vowel($word)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function readline() in\
    \ /tmp/tmp6avz0p7o.php:45\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp6avz0p7o.php\
    \ on line 45\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $arr = [];\n    $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $revArr = str_split(strrev($word));\n\
    \    foreach ($revArr as $i => $letter) {\n        if (in_array($letter, $vowels))\
    \ {\n            $arr[] = $letter;\n        }\n        if (in_array($letter, $consonants))\
    \ {\n            if (isset($arr[0])) {\n                return $arr[0];\n    \
    \        }\n        }\n    }\n    return \"\";\n}\necho \"yogurt \" . get_closest_vowel(\"\
    yogurt\") . \"<br>\";\necho \"FULL \" . get_closest_vowel(\"FULL\") . \"<br>\"\
    ;\necho \"quick \" . get_closest_vowel(\"quick\") . \"<br>\";\necho \"ab \" .\
    \ get_closest_vowel(\"ab\") . \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "yogurt u<br>FULL <br>quick i<br>ab <br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpgc3y1x78.php:46\nStack trace:\n#0 /tmp/tmpgc3y1x78.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgc3y1x78.php on line 46\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n  $vowels = \"aeiou\";\n  $new_word = \"\";\n  $close_vowel = \"\";\n  $last_char\
    \ = \"\";\n  $i = strlen($word) - 1;\n  while ($i > 0) {\n    $letter = substr($word,\
    \ $i, 1);\n    if ($letter == \"a\" || $letter == \"e\" || $letter == \"i\" ||\
    \ $letter == \"o\" || $letter == \"u\") {\n      $new_word = $new_word . $letter;\n\
    \      $close_vowel = $letter;\n    } else {\n      $new_word = $new_word . $letter;\n\
    \    }\n    $i--;\n  }\n  $word_length = strlen($new_word);\n  $j = $word_length\
    \ - 1;\n  while ($j > 0) {\n    $second_letter = substr($new_word, $j, 1);\n \
    \   $first_letter = substr($new_word, $j - 1, 1);\n    if ($first_letter == \"\
    a\" || $first_letter == \"e\" || $first_letter == \"i\" || $first_letter == \"\
    o\" || $first_letter == \"u\") {\n      $j--;\n    } else {\n      if ($second_letter\
    \ == \"a\" || $second_letter == \"e\" || $second_letter == \"i\" || $second_letter\
    \ == \"o\" || $second_letter == \"u\") {\n        return $second_letter;\n   \
    \   } else {\n        $j--;\n      }\n    }\n  }\n  return $close_vowel;\n}\n\n\
    echo get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\n\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp69gdhgov.php:61\n\
    Stack trace:\n#0 /tmp/tmp69gdhgov.php(76): test()\n#1 {main}\n  thrown in /tmp/tmp69gdhgov.php\
    \ on line 61\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word_arr = str_split($word);\n\
    \    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $count = 0;\n    $counter\
    \ = 0;\n    for ($i = count($word_arr) - 1; $i >= 0; $i--) {\n        if (in_array($word_arr[$i],\
    \ $vowels)) {\n            $count = 0;\n            $counter++;\n        } else\
    \ {\n            $count++;\n        }\n        if ($count == 2 && $counter >=\
    \ 1) {\n            return $word_arr[$i + 1];\n        }\n    }\n    return \"\
    \";\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjhv9awtx.php:40\n\
    Stack trace:\n#0 /tmp/tmpjhv9awtx.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpjhv9awtx.php\
    \ on line 40\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    if (strlen($word) < 2)\
    \ {\n        return \"\";\n    }\n\n    $con = substr($word, -2, 1);\n    $com\
    \ = substr($word, -1);\n    $vowel_pattern = '/(?<=' . $con . ')([aeiou])(?='\
    \ . $com . ')/i';\n    $matched = preg_match($vowel_pattern, $word, $matches);\n\
    \    if ($matched) {\n        return $matches[1];\n    } else {\n        return\
    \ \"\";\n    }\n}\n\n$test_input = array(\n    \"yogurt\",\n    \"FULL\",\n  \
    \  \"quick\",\n    \"ab\",\n    \"barbarian\",\n    \"drop\",\n    \"the\",\n\
    \    \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n    \"abcd\",\n    \"abacddead\",\n    \"\
    abcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdef\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "yogurt", expecting ")" in /tmp/tmpnear1r4t.php
    on line 49

    '
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n  $word_array = str_split($word);\n  for ($i = count($word_array)\
    \ - 1; $i >= 0; $i--) {\n    $char = $word_array[$i];\n    if (in_array($char,\
    \ $vowels)) {\n      if ($i < count($word_array) - 1) {\n        $char_to_the_right\
    \ = $word_array[$i + 1];\n        if (!in_array($char_to_the_right, $vowels))\
    \ {\n          return $char;\n        }\n      }\n    }\n  }\n  return '';\n}\n\
    \necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf3vnis45.php:44\n\
    Stack trace:\n#0 /tmp/tmpf3vnis45.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpf3vnis45.php\
    \ on line 44\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $i = strlen($word) -\
    \ 1;\n    $cons = 0;\n    $vowels = \"aeiou\";\n    while($i >= 0) {\n       \
    \ if(strpos($vowels, $word[$i]) !== false) {\n            if($cons > 1) return\
    \ $word[$i];\n            else $cons = 0;\n        } else {\n            $cons++;\n\
    \        }\n        $i--;\n    }\n    return \"\";\n}\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiz8re5g2.php:38\n\
    Stack trace:\n#0 /tmp/tmpiz8re5g2.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpiz8re5g2.php\
    \ on line 38\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\"a\",\"e\"\
    ,\"i\",\"o\",\"u\"];\n    $word = str_split($word);\n    $closest_vowel = \"\"\
    ;\n    $index = -1;\n    $limit = count($word);\n    for ($i = $limit-1; $i >\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $closest_vowel\
    \ = $word[$i];\n            $index = $i;\n            break;\n        }\n    }\n\
    \    if (empty($closest_vowel)) {\n        return \"\";\n    }\n    for ($i =\
    \ $index-1; $i > 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n  \
    \          return $closest_vowel;\n        }\n    }\n    return \"\";\n}\n$value\
    \ = \"yogurt\";\n$result = get_closest_vowel($value);\necho \"The closest vowel\
    \ to $value is $result. <br>\";\n$value = \"FULL\";\n$result = get_closest_vowel($value);\n\
    echo \"The closest vowel to $value is $result. <br>\";\n$value = \"quick\";\n\
    $result = get_closest_vowel($value);\necho \"The closest vowel to $value is $result.\
    \ <br>\";\n$value = \"ab\";\n$result = get_closest_vowel($value);\necho \"The\
    \ closest vowel to $value is $result. <br>\";\n$value = \"candy\";\n$result =\
    \ get_closest_vowel($value);\necho \"The closest vowel to $value is $result. <br>\"\
    ;\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest vowel to yogurt is u. <br>The closest vowel to FULL is . <br>The\
    \ closest vowel to quick is . <br>The closest vowel to ab is . <br>The closest\
    \ vowel to candy is . <br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpllkm17qs.php:60\n\
    Stack trace:\n#0 /tmp/tmpllkm17qs.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpllkm17qs.php\
    \ on line 60\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t// Write your code here\n\
    }\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8_akilp.php:24\n\
    Stack trace:\n#0 /tmp/tmpj8_akilp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj8_akilp.php\
    \ on line 24\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word = strtolower($word);\n\
    \    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split($word);\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if (in_array($word[$i - 1], $vowels) || in_array($word[$i\
    \ + 1], $vowels)) {\n                continue;\n            } else {\n       \
    \         return $word[$i];\n            }\n        }\n    }\n    return \"\"\
    ;\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\n\n\nWarning: Undefined array key -1 in /tmp/tmpyy00zhwh.php on line\
    \ 22\na\n\nWarning: Undefined array key -1 in /tmp/tmpyy00zhwh.php on line 22\n\
    \nWarning: Undefined array key -1 in /tmp/tmpyy00zhwh.php on line 22\n\nWarning:\
    \ Undefined array key 3 in /tmp/tmpyy00zhwh.php on line 22\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpyy00zhwh.php:44\nStack trace:\n#0 /tmp/tmpyy00zhwh.php(55):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpyy00zhwh.php on line 44\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  \n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tfjxrzw.php:25\n\
    Stack trace:\n#0 /tmp/tmp4tfjxrzw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4tfjxrzw.php\
    \ on line 25\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $word_len = strlen($word);\n    if ($word_len\
    \ < 3) {\n        return \"\";\n    }\n    for ($i = $word_len - 1; $i > 0; $i--)\
    \ {\n        if (!in_array($word[$i], $vowels) && in_array($word[$i - 1], $vowels))\
    \ {\n            return $word[$i - 1];\n        }\n    }\n    return \"\";\n}\n\
    \necho get_closest_vowel(\"yogurt\") . PHP_EOL;\necho get_closest_vowel(\"FULL\"\
    ) . PHP_EOL;\necho get_closest_vowel(\"quick\") . PHP_EOL;\necho get_closest_vowel(\"\
    ab\") . PHP_EOL;\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp74lj5fx_.php:41\n\
    Stack trace:\n#0 /tmp/tmp74lj5fx_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp74lj5fx_.php\
    \ on line 41\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $reverse_word = strrev($word);\n    $find_vowel = str_split($reverse_word);\n\
    \    $final_vowel = '';\n    for ($i = 0; $i < count($find_vowel); $i++) {\n \
    \       $previous_char = $find_vowel[$i - 1];\n        $char = $find_vowel[$i];\n\
    \        $next_char = $find_vowel[$i + 1];\n        if ($i != 0 && in_array($char,\
    \ $vowels) && !in_array($previous_char, $vowels) && !in_array($next_char, $vowels))\
    \ {\n            $final_vowel = $char;\n            break;\n        }\n    }\n\
    \    return $final_vowel;\n}\n\nprint_r(get_closest_vowel(\"yogurt\"));\necho\
    \ \"<br/>\";\nprint_r(get_closest_vowel(\"FULL\"));\necho \"<br/>\";\nprint_r(get_closest_vowel(\"\
    quick\"));\necho \"<br/>\";\nprint_r(get_closest_vowel(\"ab\"));\necho \"<br/>\"\
    ;\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpmia10c3n.php on line 22\n\
    u<br/>\nWarning: Undefined array key -1 in /tmp/tmpmia10c3n.php on line 22\n\n\
    Warning: Undefined array key 4 in /tmp/tmpmia10c3n.php on line 24\n<br/>\nWarning:\
    \ Undefined array key -1 in /tmp/tmpmia10c3n.php on line 22\n\nWarning: Undefined\
    \ array key 5 in /tmp/tmpmia10c3n.php on line 24\n<br/>\nWarning: Undefined array\
    \ key -1 in /tmp/tmpmia10c3n.php on line 22\n\nWarning: Undefined array key 2\
    \ in /tmp/tmpmia10c3n.php on line 24\na<br/>\nWarning: Undefined array key -1\
    \ in /tmp/tmpmia10c3n.php on line 22\n\nWarning: Undefined array key -1 in /tmp/tmpmia10c3n.php\
    \ on line 22\n\nWarning: Undefined array key -1 in /tmp/tmpmia10c3n.php on line\
    \ 22\n\nWarning: Undefined array key 4 in /tmp/tmpmia10c3n.php on line 24\n\n\
    Warning: Undefined array key -1 in /tmp/tmpmia10c3n.php on line 22\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpmia10c3n.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpmia10c3n.php:49\nStack trace:\n#0 /tmp/tmpmia10c3n.php(61):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmia10c3n.php on line 49\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $len = strlen($word);\n\
    \  $current_closest_vowel = \"\";\n  $closest_vowel_index = 9999999;\n  $current_closest_consonant\
    \ = \"\";\n  $closest_consonant_index = 9999999;\n  for ($i = $len - 1; $i >=\
    \ 0; $i--) {\n    $char = $word[$i];\n    if ($char == \"a\" || $char == \"e\"\
    \ || $char == \"i\" || $char == \"o\" || $char == \"u\" || $char == \"A\" || $char\
    \ == \"E\" || $char == \"I\" || $char == \"O\" || $char == \"U\") {\n      if\
    \ ($i < $closest_vowel_index) {\n        $current_closest_vowel = $char;\n   \
    \     $closest_vowel_index = $i;\n      }\n    } else {\n      if ($i < $closest_consonant_index)\
    \ {\n        $current_closest_consonant = $char;\n        $closest_consonant_index\
    \ = $i;\n      }\n    }\n  }\n  if ($closest_vowel_index < $closest_consonant_index)\
    \ {\n    return $current_closest_vowel;\n  } else {\n    return \"\";\n  }\n}\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphtlvfgl4.php:47\n\
    Stack trace:\n#0 /tmp/tmphtlvfgl4.php(62): test()\n#1 {main}\n  thrown in /tmp/tmphtlvfgl4.php\
    \ on line 47\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = \"aeiou\";\n\
    \    $vowel_position = [];\n    for ($i = 0; $i < strlen($word); $i++) {\n   \
    \     if (strpos($vowels, $word[$i]) !== false) {\n            array_push($vowel_position,\
    \ $i);\n        }\n    }\n    for ($i = 0; $i < sizeof($vowel_position); $i++)\
    \ {\n        if ($vowel_position[$i] > 0 && $vowel_position[$i] < strlen($word)\
    \ - 1) {\n            if ($vowel_position[$i] > $vowel_position[$i + 1]) {\n \
    \               return $word[$vowel_position[$i]];\n            }\n        }\n\
    \    }\n    return \"\";\n}\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp5g197mkv.php on line 26\n\n\
    Warning: Undefined array key 1 in /tmp/tmp5g197mkv.php on line 26\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmp5g197mkv.php on line 26\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp5g197mkv.php:40\nStack trace:\n#0 /tmp/tmp5g197mkv.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5g197mkv.php on line 40\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"];\n    $split_word = str_split($word);\n    $vowel_index\
    \ = 0;\n    $output = \"\";\n    for ($i = count($split_word) - 1; $i >= 0; $i--)\
    \ {\n        $index = array_search($split_word[$i], $vowels);\n        if ($index\
    \ != FALSE) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == 0) {\n        return $output;\n    }\n    if ($vowel_index\
    \ == 1) {\n        return $split_word[$vowel_index];\n    }\n    for ($i = $vowel_index;\
    \ $i >= 0; $i--) {\n        $index = array_search($split_word[$i], $vowels);\n\
    \        if ($index == FALSE) {\n            if ($i == $vowel_index) {\n     \
    \           return $output;\n            }\n            return $split_word[$vowel_index];\n\
    \        }\n    }\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwcuz58lj.php:58\n\
    Stack trace:\n#0 /tmp/tmpwcuz58lj.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpwcuz58lj.php\
    \ on line 58\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t// Get length of string\n\
    \t$length = strlen($word);\n\t// Create an array of vowels to look for\n\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t// Iterate through the string\n\
    \tfor ($i=$length-1; $i > 0; $i--) { \n\t\t// Check if letter is a vowel\n\t\t\
    if (in_array($word[$i], $vowels)) {\n\t\t\t// If letter is a vowel, check if previous\
    \ letter is a consonant\n\t\t\tif (!in_array($word[$i-1], $vowels)) {\n\t\t\t\t\
    // If previous letter is a consonant, check if next letter is a consonant\n\t\t\
    \t\tif (!in_array($word[$i+1], $vowels)) {\n\t\t\t\t\t// If next letter is a consonant,\
    \ return vowel\n\t\t\t\t\treturn $word[$i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\
    // If no vowel is found that meets the above condition, return empty string\n\t\
    return \"\";\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 3 in /tmp/tmp_e8pa6u6.php on line\
    \ 28\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_e8pa6u6.php:48\n\
    Stack trace:\n#0 /tmp/tmp_e8pa6u6.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp_e8pa6u6.php\
    \ on line 48\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  $word_length = strlen($word);\n\
    \  for ($i = $word_length - 1; $i >= 0; $i--) {\n    $current_letter = substr($word,\
    \ $i, 1);\n    if (in_array($current_letter, ['a', 'e', 'i', 'o', 'u', 'A', 'E',\
    \ 'I', 'O', 'U'])) {\n      if ($i > 0) {\n        $previous_letter = substr($word,\
    \ $i - 1, 1);\n        if (!in_array($previous_letter, ['a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U'])) {\n          return $current_letter;\n        }\n\
    \      }\n    }\n  }\n  return '';\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekrdus07.php:41\n\
    Stack trace:\n#0 /tmp/tmpekrdus07.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpekrdus07.php\
    \ on line 41\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n\t$word = strrev($word);\n\t$vowel = \"\";\n\t\
    for ($i = 0; $i < strlen($word); $i++) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\t$vowel = $word[$i];\n\t\t\tif (!in_array($word[$i+1], $vowels) && !in_array($word[$i-1],\
    \ $vowels)) {\n\t\t\t\treturn $vowel;\n\t\t\t}\n\t\t}\n\t}\n\treturn \"\";\n}\n\
    \n$test_cases = array(\"yogurt\", \"FULL\", \"quick\", \"ab\");\nforeach ($test_cases\
    \ as $case) {\n\techo \"Testing '$case'...\\n\";\n\techo get_closest_vowel($case)\
    \ . \"\\n\";\n}\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Testing 'yogurt'...\nu\nTesting 'FULL'...\n\nTesting 'quick'...\n\nTesting\
    \ 'ab'...\n\nWarning: Uninitialized string offset 2 in /tmp/tmpkewhdq8a.php on\
    \ line 23\na\n\nWarning: Uninitialized string offset 4 in /tmp/tmpkewhdq8a.php\
    \ on line 23\n\nWarning: Uninitialized string offset 4 in /tmp/tmpkewhdq8a.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkewhdq8a.php:44\n\
    Stack trace:\n#0 /tmp/tmpkewhdq8a.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpkewhdq8a.php\
    \ on line 44\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = [ 'a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U' ];\n\t$consonants = [ 'B', 'C', 'D', 'F',\
    \ 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y',\
    \ 'Z' ];\n\t$word = str_split($word);\n\t$i = count($word) - 1;\n\twhile($i >\
    \ 0) {\n\t\tif(in_array($word[$i], $vowels)) {\n\t\t\tif(in_array($word[$i-1],\
    \ $consonants)) {\n\t\t\t\tif(in_array($word[$i+1], $consonants)) {\n\t\t\t\t\t\
    return $word[$i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$i--;\n\t}\n\treturn '';\n}\n\
    echo get_closest_vowel(\"yogurt\") . PHP_EOL;\necho get_closest_vowel(\"FULL\"\
    ) . PHP_EOL;\necho get_closest_vowel(\"quick\") . PHP_EOL;\necho get_closest_vowel(\"\
    ab\") . PHP_EOL;\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nU\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx6paj_x8.php:42\n\
    Stack trace:\n#0 /tmp/tmpx6paj_x8.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpx6paj_x8.php\
    \ on line 42\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n\t$chars = str_split($word);\n\t$len = count($chars);\n\
    \t$cnt = 0;\n\t$pivot = 0;\n\t$next_consonant = 0;\n\t$current_consonant = 0;\n\
    \t$closest_vowel = 0;\n\t$vowel_distance = 0;\n\twhile ($cnt < $len) {\n\t\tif\
    \ (in_array($chars[$cnt], $vowels)) {\n\t\t\t$pivot = $cnt;\n\t\t\t$next_consonant\
    \ = $cnt + 1;\n\t\t\t$current_consonant = $cnt - 1;\n\t\t\twhile ($next_consonant\
    \ < $len) {\n\t\t\t\tif (!in_array($chars[$next_consonant], $vowels)) {\n\t\t\t\
    \t\tbreak;\n\t\t\t\t}\n\t\t\t\t$next_consonant++;\n\t\t\t}\n\t\t\twhile ($current_consonant\
    \ >= 0) {\n\t\t\t\tif (!in_array($chars[$current_consonant], $vowels)) {\n\t\t\
    \t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$current_consonant--;\n\t\t\t}\n\t\t\tif ($current_consonant\
    \ >= 0) {\n\t\t\t\t$vowel_distance = $pivot - $current_consonant;\n\t\t\t\tif\
    \ ($closest_vowel == 0) {\n\t\t\t\t\t$closest_vowel = $chars[$pivot];\n\t\t\t\t\
    } else {\n\t\t\t\t\tif ($vowel_distance < $closest_vowel) {\n\t\t\t\t\t\t$closest_vowel\
    \ = $chars[$pivot];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$cnt++;\n\t}\n\
    \treturn $closest_vowel\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ";" in /tmp/tmpjlk4dgsm.php
    on line 57

    '
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t// Read thru the words\
    \ & find the first instance of a consonant.\n\t// Keep track of where the vowels\
    \ are.\n\t// Re-read thru the words & find the first instance of a consonant.\n\
    \t// if (strstr($word, 'A') || strstr($word, 'E') || strstr($word, 'I') || strstr($word,\
    \ 'O') || strstr($word, 'U')) {\n\t// \t$vowel = true;\n\t// } else {\n\t// \t\
    $vowel = false;\n\t// }\n\t$vowels = array(\"A\", \"E\", \"I\", \"O\", \"U\");\n\
    \t$consonants = array(\"B\", \"C\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\",\
    \ \"L\", \"M\", \"N\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"W\", \"X\"\
    , \"Y\", \"Z\");\n\t$vowel_pos = array();\n\t$consonant_pos = array();\n\t$str_arr\
    \ = str_split($word);\n\tfor ($i = 0; $i < count($str_arr); $i++) {\n\t\tif (in_array($str_arr[$i],\
    \ $vowels)) {\n\t\t\tarray_push($vowel_pos, $i);\n\t\t} elseif (in_array($str_arr[$i],\
    \ $consonants)) {\n\t\t\tarray_push($consonant_pos, $i);\n\t\t}\n\t}\n\tif (count($vowel_pos)\
    \ <= 1) {\n\t\treturn \"\";\n\t}\n\t$num = 0;\n\tfor ($x = 0; $x < count($vowel_pos);\
    \ $x++) {\n\t\tif ($num < $vowel_pos[$x]) {\n\t\t\t$num = $vowel_pos[$x];\n\t\t\
    }\n\t}\n\t$final_vowel = $num;\n\t$num = 0;\n\tfor ($y = 0; $y < count($consonant_pos);\
    \ $y++) {\n\t\t\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 48 in /tmp/tmp_q87_ck7.php on line 70

    '
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $idx = strlen($word)\
    \ - 1;\n    $vowels = \"aeiouAEIOU\";\n    $vowel = \"\";\n    $found = false;\n\
    \    while ($idx > 1) {\n        if (strpos($vowels, $word[$idx]) !== false) {\n\
    \            if (strpos($vowels, $word[$idx - 1]) === false) {\n             \
    \   $vowel = $word[$idx];\n                $found = true;\n                break;\n\
    \            }\n        }\n        $idx -= 1;\n    }\n    if ($found) {\n    \
    \    return $vowel;\n    } else {\n        return \"\";\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjnyj6uoo.php:43\n\
    Stack trace:\n#0 /tmp/tmpjnyj6uoo.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpjnyj6uoo.php\
    \ on line 43\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\n       \
    \ 'a', 'e', 'i', 'o', 'u',\n        'A', 'E', 'I', 'O', 'U'\n    ];\n    $consonants\
    \ = [\n        'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z',\n        'B', 'C', 'D', 'F', 'G', 'H',\
    \ 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z'\n\
    \    ];\n    $is_vowel = function($c) use ($vowels) {\n        return in_array($c,\
    \ $vowels);\n    };\n    $is_consonant = function($c) use ($consonants) {\n  \
    \      return in_array($c, $consonants);\n    };\n    $last_consonant = -1;\n\
    \    $last_vowel = -1;\n    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n  \
    \      $c = $word[$i];\n        if ($is_vowel($c)) {\n            $last_vowel\
    \ = $i;\n        } else if ($is_consonant($c)) {\n            $last_consonant\
    \ = $i;\n        }\n        if ($last_consonant != -1 && $last_vowel != -1) {\n\
    \            if ($last_consonant < $last_vowel) {\n                return $word[$last_vowel];\n\
    \            }\n        }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_v\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmp4crcnsz7.php on line 53

    '
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"];\n    $word_to_array = str_split($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = 0;\n    $current_consonant_index = 0;\n\
    \    $closest_vowel_found = false;\n    $word_to_array_length = count($word_to_array);\n\
    \    // start from the end\n    for ($i = ($word_to_array_length - 1); $i >= 0;\
    \ $i--) {\n        // if the character is a vowel\n        if (in_array($word_to_array[$i],\
    \ $vowels)) {\n            // if there's no consonant to the left\n          \
    \  if ($i === 0) {\n                break;\n            }\n            // if there's\
    \ a consonant to the left\n            else {\n                // closest vowel\
    \ found\n                $closest_vowel_found = true;\n                // get\
    \ the current vowel index\n                $closest_vowel_index = $i;\n      \
    \          // get the current consonant index\n                $current_consonant_index\
    \ = $i - 1;\n                // break the loop\n                break;\n     \
    \       }\n        }\n    }\n    // if closest vowel is found\n    if ($closest_vowel_found)\
    \ {\n        // check if there's a consonant to the right\n        // if yes\n\
    \        if ($closest_vowel_index !== ($word_to_array_length - 1)) {\n       \
    \     // loop through the remaining characters\n            for ($i = ($closest_vowel_index\
    \ + 1); $i < $word_to_array_length; $i++) {\n                // if the character\
    \ is a consonant\n                if (!in_array($word_to_array[$i], $vowels))\
    \ {\n                    // get the current consonant index\n                \
    \    $current_consonant_index = $i;\n                    // break the loop\n \
    \                   break;\n                }\n            }\n        }\n    \
    \    // if the current consonant index is greater than the current\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 46 in /tmp/tmpe294c5hl.php on line 82

    '
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$arr = str_split($word);\n\
    \t$length = count($arr);\n\tfor ($i=$length-1; $i > 0; $i--) { \n\t\tif (preg_match('/[aeiou]/',\
    \ $arr[$i]) && !preg_match('/[aeiou]/', $arr[$i-1])) {\n\t\t\treturn $arr[$i];\n\
    \t\t}\n\t}\n\treturn \"\";\n}\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2ssvr5d.php:35\n\
    Stack trace:\n#0 /tmp/tmpc2ssvr5d.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpc2ssvr5d.php\
    \ on line 35\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$rword = strrev($word);\n\
    \t$vowels = 'aeiou';\n\t$len = strlen($rword);\n\t$result = '';\n\tfor ($i = 0;\
    \ $i < $len; $i++) {\n\t\tif (stripos($vowels, $rword[$i]) !== false) {\n\t\t\t\
    $result = $rword[$i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1qdyerw.php:36\n\
    Stack trace:\n#0 /tmp/tmpc1qdyerw.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpc1qdyerw.php\
    \ on line 36\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"];\n    $chars = str_split($word);\n    $result = \"\"\
    ;\n    for ($i = count($chars) - 1; $i >= 0; $i--) {\n        if (in_array($chars[$i],\
    \ $vowels)) {\n            $result = $chars[$i];\n            break;\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl8qr1bvl.php:36\n\
    Stack trace:\n#0 /tmp/tmpl8qr1bvl.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpl8qr1bvl.php\
    \ on line 36\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word = str_split($word);\n\
    \    $c_flag = true;\n    $v_flag = true;\n    $i = 0;\n    $length = count($word);\n\
    \    while ($i < $length) {\n        $char = $word[$i];\n        if (!in_array($char,\
    \ $vowels) && $c_flag) {\n            $c_flag = false;\n        }\n        if\
    \ (in_array($char, $vowels) && !$c_flag && $v_flag) {\n            $v_flag = false;\n\
    \            return $char;\n        }\n        if (in_array($char, $consonants)\
    \ && !$c_flag && !$v_flag) {\n            return \"\";\n        }\n        $i++;\n\
    \    }\n    return \"\";\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnou1o90.php:46\n\
    Stack trace:\n#0 /tmp/tmpcnou1o90.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpcnou1o90.php\
    \ on line 46\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $consonants = array('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z');\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $arr\
    \ = str_split($word);\n    $rev_arr = array_reverse($arr);\n    $new_arr = array();\n\
    \    foreach ($rev_arr as $k => $value) {\n        foreach ($consonants as $consonant)\
    \ {\n            if ($value == $consonant) {\n                $new_arr[] = $value;\n\
    \            }\n        }\n    }\n    $rev_arr = array_reverse($new_arr);\n  \
    \  foreach ($rev_arr as $k => $value) {\n        foreach ($vowels as $vowel) {\n\
    \            if ($value == $vowel) {\n                return $value;\n       \
    \     }\n        }\n    }\n    return '';\n}\nfunction candidate(...$args) {\n\
    \    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6pm6a01.php:44\n\
    Stack trace:\n#0 /tmp/tmpk6pm6a01.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpk6pm6a01.php\
    \ on line 44\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t// Enter code here\n\t\
    // $find_conso = preg_match_all('/([B-DF-HJ-NP-TV-Z][a-z]*[aeiou]?[a-z]*[BCDFGHJKLMNPQRSTVWXYZ])|([BCDFGHJKLMNPQRSTVWXYZ][a-z]*[aeiou]?[a-z]*[B-DF-HJ-NP-TV-Z])/',$word,$result);\n\
    \t// for($i=0;$i<count($result[0]);$i++){\n\t// \tif(preg_match('/[a-z]*[aeiou][a-z]*[BCDFGHJKLMNPQRSTVWXYZ]/',$result[0][$i],$result2)){\n\
    \t// \t\t$result3 = preg_match('/[aeiou]/',$result2[0],$result4);\n\t// \t\t$found\
    \ = $result4[0];\n\t// \t\tbreak;\n\t// \t}\n\t// }\n\t// if(isset($found))\n\t\
    // \treturn $found;\n\t// else\n\t// \treturn '';\n\t$vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"];\n\t$result = [];\n\t$end = count($word) - 1;\n\t$count\
    \ = 0;\n\tif($end < 2)\n\t\treturn '';\n\tif(in_array($word[$end], $vowels))\n\
    \t\t$end = $end - 1;\n\tfor($i=$end;$i>0;$i--){\n\t\tif(in_array($word[$i], $vowels)){\n\
    \t\t\tif(!in_array($word[$i+1], $vowels) && !in_array($word[$i-1], $vowels)){\n\
    \t\t\t\tarray_push($result, $word[$i]);\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\
    }\n\tif\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "(" in /tmp/tmp2e2f__6u.php
    on line 47

    '
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    if (empty($word)) return\
    \ \"\";\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $is_previous_vowel\
    \ = false;\n    $is_previous_consonant = false;\n    $closest_vowel = \"\";\n\
    \    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n        $current_char = $word[$i];\n\
    \        if (in_array($current_char, $vowels)) {\n            $is_previous_vowel\
    \ = true;\n            $closest_vowel = $current_char;\n        } else {\n   \
    \         if ($is_previous_vowel && !$is_previous_consonant) {\n             \
    \   return $closest_vowel;\n            }\n            $is_previous_consonant\
    \ = true;\n        }\n    }\n    return \"\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa__8u0mx.php:42\n\
    Stack trace:\n#0 /tmp/tmpa__8u0mx.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpa__8u0mx.php\
    \ on line 42\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n\t$count = strlen($word);\n\t$result = '';\n\t$prev_char = '';\n\
    \tfor ($i = $count - 1; $i >= 0; $i--) {\n\t\t$char = $word[$i];\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\tif ($prev_char && !in_array($prev_char, $vowels)) {\n\t\t\
    \t\t$result = $char;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t$prev_char = $char;\n\
    \t}\n\treturn $result;\n}\n\necho get_closest_vowel(\"yogurt\") . PHP_EOL;\necho\
    \ get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"quick\") .\
    \ PHP_EOL;\necho get_closest_vowel(\"ab\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf07e3yzw.php:45\n\
    Stack trace:\n#0 /tmp/tmpf07e3yzw.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpf07e3yzw.php\
    \ on line 45\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n\t$len = strlen($word);\n\t$result = '';\n\tfor ($i = $len\
    \ - 1; $i >= 0; $i--) {\n\t\t$char = $word[$i];\n\t\tif ($char == 'y') {\n\t\t\
    \t$result = 'y';\n\t\t\tbreak;\n\t\t} else if (in_array($char, $vowels)) {\n\t\
    \t\tif ($i > 0 && in_array($word[$i - 1], $vowels)) {\n\t\t\t\tcontinue;\n\t\t\
    \t} else if ($i < $len - 1 && in_array($word[$i + 1], $vowels)) {\n\t\t\t\tcontinue;\n\
    \t\t\t} else {\n\t\t\t\t$result = $char;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn $result;\n}\n\n$word = 'yogurt';\necho get_closest_vowel($word) . PHP_EOL;\n\
    $word = 'FULL';\necho get_closest_vowel($word) . PHP_EOL;\n$word = 'quick';\n\
    echo get_closest_vowel($word) . PHP_EOL;\n$word = 'ab';\necho get_closest_vowel($word)\
    \ . PHP_EOL;\n$word = 'aeio';\necho get_closest_vowel($word) . PHP_EOL;\n$word\
    \ = 'eioa';\necho get_closest_vowel($word) . PHP_EOL;\n$word = 'a';\necho get_closest_vowel($word)\
    \ . PHP_EOL;\n$word = 'y';\necho get_closest_vowel($word) . PHP_EOL;\n$word =\
    \ 'yay';\necho get_closest_vowel($word) . PHP_EOL;\n$word = 'ay';\necho get_closest_vowel($word)\
    \ . PHP_\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmpetzrq44t.php on line 59

    '
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $reversed_word = strrev($word);\n\
    \    $last_vowel = '';\n    for ($i = 0; $i < strlen($reversed_word); $i++) {\n\
    \        if (is_vowel($reversed_word[$i])) {\n            $last_vowel = $reversed_word[$i];\n\
    \            break;\n        }\n    }\n    $result = '';\n    if ($last_vowel)\
    \ {\n        $last_consonant = '';\n        for ($i = strpos($reversed_word, $last_vowel)\
    \ + 1; $i < strlen($reversed_word); $i++) {\n            if (!is_vowel($reversed_word[$i]))\
    \ {\n                $last_consonant = $reversed_word[$i];\n                break;\n\
    \            }\n        }\n        if ($last_consonant) {\n            $result\
    \ = $last_vowel;\n        }\n    }\n    return strrev($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_vowel() in\
    \ /tmp/tmp64yrpza8.php:20\nStack trace:\n#0 /tmp/tmp64yrpza8.php(42): get_closest_vowel('yogurt')\n\
    #1 /tmp/tmp64yrpza8.php(46): candidate('yogurt')\n#2 /tmp/tmp64yrpza8.php(61):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp64yrpza8.php on line 20\n"
  timestamp: 1660028454
- exit_code: 0
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word_array\
    \ = str_split($word);\n    $reverse_word_array = array_reverse($word_array);\n\
    \    for ($i = 0; $i < count($reverse_word_array); $i++) {\n        if (in_array($reverse_word_array[$i],\
    \ $vowels)) {\n            if (in_array($reverse_word_array[$i + 1], $consonants)\
    \ && in_array($reverse_word_array[$i - 1], $consonants)) {\n                return\
    \ $reverse_word_array[$i];\n            }\n        }\n    }\n    return '';\n\
    }\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 4 in /tmp/tmp69n6exth.php on line 23


    Warning: Undefined array key 4 in /tmp/tmp69n6exth.php on line 23


    Warning: Undefined array key -1 in /tmp/tmp69n6exth.php on line 23


    Warning: Undefined array key 3 in /tmp/tmp69n6exth.php on line 23


    Warning: Undefined array key 2 in /tmp/tmp69n6exth.php on line 23


    Warning: Undefined array key -1 in /tmp/tmp69n6exth.php on line 23


    Warning: Undefined array key -1 in /tmp/tmp69n6exth.php on line 23


    Warning: Undefined array key -1 in /tmp/tmp69n6exth.php on line 23

    '
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n\t$last_char = substr($word, -1);\n\t$consonants = ['b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z'];\n\t$consonants_regex = '/[' . implode('', $consonants) . ']/';\n\t\
    $consonants_number = preg_match_all($consonants_regex, $word);\n\tif (in_array($last_char,\
    \ $vowels)) {\n\t\treturn '';\n\t}\n\t$result = '';\n\t$previous_char = '';\n\t\
    $actual_char = '';\n\tfor ($i = strlen($word) - 1; $i >= 0; $i--) {\n\t\t$actual_char\
    \ = substr($word, $i, 1);\n\t\tif (in_array($actual_char, $vowels)) {\n\t\t\t\
    if (in_array($previous_char, $consonants)) {\n\t\t\t\tif ($consonants_number >\
    \ 1) {\n\t\t\t\t\treturn $actual_char;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$previous_char\
    \ = $actual_char;\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0bgm55fk.php:49\n\
    Stack trace:\n#0 /tmp/tmp0bgm55fk.php(62): test()\n#1 {main}\n  thrown in /tmp/tmp0bgm55fk.php\
    \ on line 49\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $count = count($word);\n    for ($i = $count - 1; $i >= 0; $i--) {\n    \
    \    if (!in_array($word[$i], $vowels)) {\n            $first_consonant = $i;\n\
    \            break;\n        }\n    }\n    for ($i = $first_consonant - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $first_vowel\
    \ = $i;\n            break;\n        }\n    }\n    if (isset($first_vowel)) {\n\
    \        for ($i = $first_consonant + 1; $i < $count; $i++) {\n            if\
    \ (in_array($word[$i], $vowels)) {\n                $second_vowel = $i;\n    \
    \            break;\n            }\n        }\n        if (isset($second_vowel))\
    \ {\n            if ($first_consonant - $first_vowel > $second_vowel - $first_consonant)\
    \ {\n                return $word[$second_vowel];\n            } else {\n    \
    \            return $word[$first_vowel];\n            }\n        } else {\n  \
    \          return $word[$first_vowel];\n        }\n    } else {\n        return\
    \ '';\n    }\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsca9ws45.php:61\n\
    Stack trace:\n#0 /tmp/tmpsca9ws45.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpsca9ws45.php\
    \ on line 61\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n\t$consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"];\n\t$word = str_split($word);\n\t$word_length\
    \ = count($word);\n\tfor ($i = $word_length - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\t$last_vowel = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor ($i =\
    \ $last_vowel - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i], $consonants))\
    \ {\n\t\t\t$last_con = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($last_con === 0) {\n\
    \t\treturn \"\";\n\t}\n\tfor ($i = $last_con - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $consonants)) {\n\t\t\t$second_con = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($second_con\
    \ === 0) {\n\t\treturn \"\";\n\t}\n\treturn $word[$last_vowel];\n}\n\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");\n\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $last_vowel in /tmp/tmp7ctpqybh.php on line\
    \ 27\n\nWarning: Undefined variable $last_con in /tmp/tmp7ctpqybh.php on line\
    \ 33\n\nWarning: Undefined variable $last_con in /tmp/tmp7ctpqybh.php on line\
    \ 36\n\nWarning: Undefined variable $second_con in /tmp/tmp7ctpqybh.php on line\
    \ 42\n\nWarning: Undefined variable $last_vowel in /tmp/tmp7ctpqybh.php on line\
    \ 45\n\nWarning: Undefined array key \"\" in /tmp/tmp7ctpqybh.php on line 45\n\
    \nWarning: Undefined variable $last_con in /tmp/tmp7ctpqybh.php on line 33\n\n\
    Warning: Undefined variable $last_con in /tmp/tmp7ctpqybh.php on line 36\n\nWarning:\
    \ Undefined variable $second_con in /tmp/tmp7ctpqybh.php on line 42\na\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp7ctpqybh.php:58\nStack trace:\n\
    #0 /tmp/tmp7ctpqybh.php(73): test()\n#1 {main}\n  thrown in /tmp/tmp7ctpqybh.php\
    \ on line 58\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n\t$vowel_keys = array_flip($vowels);\n\t$chars = str_split($word);\n\
    \t$reverse_chars = array_reverse($chars);\n\tfor ($i = 0; $i < count($reverse_chars);\
    \ $i++) {\n\t\tif ($i == 0) {\n\t\t\tif (isset($vowel_keys[$reverse_chars[$i]]))\
    \ {\n\t\t\t\treturn $reverse_chars[$i];\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isset($vowel_keys[$reverse_chars[$i]])\
    \ && isset($vowel_keys[$reverse_chars[$i - 1]])) {\n\t\t\t\treturn $reverse_chars[$i\
    \ - 1];\n\t\t\t}\n\t\t}\n\t}\n\treturn '';\n}\n\nvar_dump(get_closest_vowel(\"\
    yogurt\"));\necho \"\\n\";\nvar_dump(get_closest_vowel(\"FULL\"));\necho \"\\\
    n\";\nvar_dump(get_closest_vowel(\"quick\"));\necho \"\\n\";\nvar_dump(get_closest_vowel(\"\
    ab\"));\necho \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string(1) \"u\"\n\nstring(0) \"\"\n\nstring(1) \"u\"\n\nstring(0) \"\"\n\
    \n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3k371x0r.php:52\n\
    Stack trace:\n#0 /tmp/tmp3k371x0r.php(63): test()\n#1 {main}\n  thrown in /tmp/tmp3k371x0r.php\
    \ on line 52\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    if(empty($word)) return\
    \ '';\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z');\n    for($i = strlen($word) - 1; $i >= 0; $i--) {\n   \
    \     if(in_array($word[$i], $vowels)) {\n            if($i >= 1 && in_array($word[$i\
    \ - 1], $consonants)) {\n                if($i >= 2 && in_array($word[$i - 2],\
    \ $consonants)) {\n                    return $word[$i];\n                }\n\
    \            }\n        }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"\
    yogurt\").'<br>';\necho get_closest_vowel(\"FULL\").'<br>';\necho get_closest_vowel(\"\
    quick\").'<br>';\necho get_closest_vowel(\"ab\").'<br>';\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<br><br><br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_j4gxdw2.php:41\n\
    Stack trace:\n#0 /tmp/tmp_j4gxdw2.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp_j4gxdw2.php\
    \ on line 41\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $count_consonants = 0;\n    $count_vowels = 0;\n    $result\
    \ = '';\n    $len = strlen($word);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (in_array($word[$i], $vowels)) {\n            $count_vowels++;\n     \
    \       if ($count_consonants >= 2) {\n                $result = $word[$i];\n\
    \                break;\n            }\n        } else {\n            $count_consonants++;\n\
    \        }\n    }\n    return $result;\n}\necho get_closest_vowel(\"yogurt\")\
    \ . \"\\n\"; // \"u\"\necho get_closest_vowel(\"FULL\") . \"\\n\"; // \"U\"\n\
    echo get_closest_vowel(\"quick\") . \"\\n\"; // \"\"\necho get_closest_vowel(\"\
    ab\") . \"\\n\"; // \"\"\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyt3hf8gx.php:45\n\
    Stack trace:\n#0 /tmp/tmpyt3hf8gx.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpyt3hf8gx.php\
    \ on line 45\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $index = strlen($word) - 1;\n    $vowel_index\
    \ = false;\n    $consonant_index = false;\n    while ($index >= 0) {\n       \
    \ $char = $word[$index];\n        if (in_array($char, $vowels)) {\n          \
    \  $vowel_index = $index;\n        } else {\n            $consonant_index = $index;\n\
    \        }\n        if ($vowel_index && $consonant_index) {\n            return\
    \ $word[$vowel_index];\n        }\n        $index--;\n    }\n    return \"\";\n\
    }\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgfal_0v5.php:43\n\
    Stack trace:\n#0 /tmp/tmpgfal_0v5.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpgfal_0v5.php\
    \ on line 43\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n\t$word = strtolower($word);\n\t$wordArray = str_split($word);\n\
    \t$wordLength = count($wordArray);\n\t$result = \"\";\n\tfor ($i = $wordLength\
    \ - 1; $i > 0; $i--) {\n\t\t$test1 = $wordArray[$i - 1];\n\t\t$test2 = $wordArray[$i];\n\
    \t\tif ((in_array($test1, $vowels) && !in_array($test2, $vowels)) || (!in_array($test1,\
    \ $vowels) && in_array($test2, $vowels))) {\n\t\t\t$result = $test2;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\treturn $result;\n}\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprdcccr4h.php:37\n\
    Stack trace:\n#0 /tmp/tmprdcccr4h.php(52): test()\n#1 {main}\n  thrown in /tmp/tmprdcccr4h.php\
    \ on line 37\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    // loop through word\
    \ starting from right\n    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n   \
    \     // if char at i is a vowel\n        if (preg_match('/[AEIOU]/', $word[$i]))\
    \ {\n            // check if preceding char is not a vowel\n            if (!preg_match('/[AEIOU]/',\
    \ $word[$i - 1])) {\n                // check if following char is not a vowel\n\
    \                if (!preg_match('/[AEIOU]/', $word[$i + 1])) {\n            \
    \        // if vowel is between 2 consonants, return vowel\n                 \
    \   return $word[$i];\n                }\n            }\n        }\n    }\n  \
    \  // if there are no 2 consonants adjacent to a vowel, return empty string\n\
    \    return '';\n}\necho get_closest_vowel(\"yogurt\") . PHP_EOL; // \"u\"\necho\
    \ get_closest_vowel(\"FULL\") . PHP_EOL; // \"U\"\necho get_closest_vowel(\"quick\"\
    ) . PHP_EOL; // \"\"\necho get_closest_vowel(\"ab\") . PHP_EOL; // \"\"\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nU\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfq25fhz.php:43\n\
    Stack trace:\n#0 /tmp/tmpnfq25fhz.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpnfq25fhz.php\
    \ on line 43\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = [\"a\",\"e\"\
    ,\"i\",\"o\",\"u\"];\n    $word = strtolower($word);\n    $len = strlen($word);\n\
    \    if ($len < 2) return \"\";\n    for ($i = $len - 1; $i > 0; $i--) {\n   \
    \     if (!in_array($word[$i], $vowels)) {\n            if (in_array($word[$i-1],\
    \ $vowels)) {\n                return $word[$i-1];\n            }\n        }\n\
    \    }\n    return \"\";\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3j772try.php:38\n\
    Stack trace:\n#0 /tmp/tmp3j772try.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp3j772try.php\
    \ on line 38\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    \n}\n\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3osz8l9.php:25\n\
    Stack trace:\n#0 /tmp/tmpe3osz8l9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpe3osz8l9.php\
    \ on line 25\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$word = strtolower($word);\n\
    \t$word_array = str_split($word);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n\t$vowel_array = array();\n\t\
    $consonant_array = array();\n\t$position_array = array();\n\t$count = count($word_array);\n\
    \t$result = \"\";\n\tif ($count < 3) {\n\t\t$result = \"\";\n\t} else {\n\t\t\
    for ($i = 0; $i < $count; $i++) {\n\t\t\tif (in_array($word_array[$i], $vowels))\
    \ {\n\t\t\t\tarray_push($vowel_array, $word_array[$i]);\n\t\t\t\tarray_push($position_array,\
    \ $i);\n\t\t\t} else if (in_array($word_array[$i], $consonants)) {\n\t\t\t\tarray_push($consonant_array,\
    \ $word_array[$i]);\n\t\t\t}\n\t\t}\n\t\t$vowel_count = count($vowel_array);\n\
    \t\t$consonant_count = count($consonant_array);\n\t\t$final_array = array();\n\
    \t\tif ($vowel_count > 0 && $consonant_count > 1) {\n\t\t\tfor ($i = 0; $i < $vowel_count;\
    \ $i++) {\n\t\t\t\tfor ($j = 0; $j < $consonant_count; $j++) {\n\t\t\t\t\tif ($position_array[$i]\
    \ > $j) {\n\t\t\t\t\t\tarray_push($final_array, $vowel_array[$i]);\n\t\t\t\t\t\
    }\n\t\t\t\t}\n\t\t\t}\n\t\t\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 40 in /tmp/tmpdguq4h0s.php on line 69

    '
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $word = strrev($word);\n\
    \    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"\
    O\", \"U\");\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            return $word[$i];\n        }\n    }\n    return \"\"\
    ;\n}\n\n$word = \"quick\";\necho get_closest_vowel($word);\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "i\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs7a1rbj.php:36\n\
    Stack trace:\n#0 /tmp/tmpcs7a1rbj.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpcs7a1rbj.php\
    \ on line 36\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    \n    $vowels = \"aeiou\"\
    ;\n    $consonants = \"bcdfghjklmnpqrstvwxyz\";\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $i = 0;\n    $found = false;\n    $result = \"\";\n    $len = strlen($word);\n\
    \    while ($i < $len && !$found) {\n        $c = $word[$len - $i - 1];\n    \
    \    if (strpos($vowels, $c) !== false) {\n            $vowel_index = $len - $i\
    \ - 1;\n        } else if (strpos($consonants, $c) !== false) {\n            $consonant_index\
    \ = $len - $i - 1;\n            if ($vowel_index != 0) {\n                $found\
    \ = true;\n            }\n        }\n        $i += 1;\n    }\n    if ($found)\
    \ {\n        $result = $word[$vowel_index];\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpide7conh.php:53\n\
    Stack trace:\n#0 /tmp/tmpide7conh.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpide7conh.php\
    \ on line 53\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    if(strlen($word)<3) {\n\
    \        return '';\n    }\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $r_vowels\
    \ = array_reverse($vowels);\n    $r_word = strrev($word);\n    foreach($r_word\
    \ as $r_i => $r_char) {\n        if(in_array($r_char, $r_vowels)) {\n        \
    \    $r_vowel_pos = $r_i;\n            break;\n        }\n    }\n    if(!isset($r_vowel_pos))\
    \ {\n        return '';\n    }\n    for($i=$r_vowel_pos; $i<strlen($r_word); $i++)\
    \ {\n        if(!in_array($r_word[$i], $vowels)) {\n            $r_consonant_pos\
    \ = $i;\n            break;\n        }\n    }\n    if(!isset($r_consonant_pos))\
    \ {\n        return '';\n    }\n    return $r_word[$r_vowel_pos];\n}\n\nprint_r(get_closest_vowel(\"\
    yogurt\"));\nprint_r(get_closest_vowel(\"FULL\"));\nprint_r(get_closest_vowel(\"\
    quick\"));\nprint_r(get_closest_vowel(\"ab\"));\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: foreach() argument must be of type array|object, string given\
    \ in /tmp/tmpkza1ja9o.php on line 23\n\nWarning: foreach() argument must be of\
    \ type array|object, string given in /tmp/tmpkza1ja9o.php on line 23\n\nWarning:\
    \ foreach() argument must be of type array|object, string given in /tmp/tmpkza1ja9o.php\
    \ on line 23\n\nWarning: foreach() argument must be of type array|object, string\
    \ given in /tmp/tmpkza1ja9o.php on line 23\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpkza1ja9o.php:53\nStack trace:\n#0 /tmp/tmpkza1ja9o.php(68):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkza1ja9o.php on line 53\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$start = strlen($word)\
    \ - 1;\n\twhile(!in_array($word[$start], [\"a\", \"e\", \"i\", \"o\", \"u\"])\
    \ && $start >= 0) $start--;\n\tif($start == 0) return \"\";\n\t$start--;\n\twhile(!in_array($word[$start],\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]) && $start >= 0) $start--;\n\tif($start\
    \ == 0) return \"\";\n\treturn $word[$start+1];\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "g\nL\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0hc4m5j.php:34\n\
    Stack trace:\n#0 /tmp/tmpf0hc4m5j.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpf0hc4m5j.php\
    \ on line 34\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$vowels = ['a', 'i', 'u',\
    \ 'e', 'o'];\n\t$consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\t$words = str_split($word);\n\
    \t$start = false;\n\t$end = false;\n\t$first = false;\n\t$last = false;\n\t$result\
    \ = [];\n\tforeach ($words as $i => $w) {\n\t\tif ($i == 0) {\n\t\t\tif (in_array($w,\
    \ $vowels)) {\n\t\t\t\t$start = true;\n\t\t\t\t$first = $w;\n\t\t\t}\n\t\t}\n\t\
    \tif ($i == count($words) - 1) {\n\t\t\tif (in_array($w, $vowels)) {\n\t\t\t\t\
    $end = true;\n\t\t\t\t$last = $w;\n\t\t\t}\n\t\t}\n\t\tif ($i != 0 && $i != count($words)\
    \ - 1) {\n\t\t\tif (in_array($w, $vowels)) {\n\t\t\t\t$result[] = $w;\n\t\t\t\
    }\n\t\t}\n\t}\n\tif ($start && $end) {\n\t\treturn '';\n\t}\n\tif ($start) {\n\
    \t\tif (count($result) == 0) {\n\t\t\treturn '';\n\t\t}\n\t\tif (count($result)\
    \ == 1) {\n\t\t\treturn $result[0];\n\t\t}\n\t\t$result = array_reverse($result);\n\
    \t\treturn $result[0];\n\t}\n\tif ($end) {\n\t\tif (count($result) == 0) {\n\t\
    \t\treturn '';\n\t\t}\n\t\tif (count($result) == 1) {\n\t\t\treturn $result[0];\n\
    \t\t}\n\t\treturn $result[0];\n\t}\n\tif (count\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpt5xeg8y3.php
    on line 67

    '
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n\t$nums = str_split($word);\n\
    \t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$length = count($nums);\n\
    \t$m = false;\n\t$m_index = false;\n\t$first_cons = false;\n\t$counter = 0;\n\t\
    for ($i = ($length - 1); $i >= 0; $i--) {\n\t\tif (in_array($nums[$i], $vowels))\
    \ {\n\t\t\tif ($counter == 1) {\n\t\t\t\t$m = $nums[$i];\n\t\t\t\t$m_index = $i;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$counter = 0;\n\t\t\t}\n\t\t}\n\
    \t\telse {\n\t\t\tif ($counter == 0) {\n\t\t\t\t$first_cons = $nums[$i];\n\t\t\
    \t}\n\t\t\t$counter += 1;\n\t\t}\n\t}\n\tif ($m) {\n\t\treturn $m;\n\t}\n\telse\
    \ {\n\t\treturn \"\";\n\t}\n}\nprint get_closest_vowel(\"yogurt\") . \"\\n\";\n\
    print get_closest_vowel(\"FULL\") . \"\\n\";\nprint get_closest_vowel(\"quick\"\
    ) . \"\\n\";\nprint get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\n\n\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwg8kptgz.php:58\n\
    Stack trace:\n#0 /tmp/tmpwg8kptgz.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpwg8kptgz.php\
    \ on line 58\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n    $vowels = \"aeiou\";\n\
    \    $is_last_char_consonant = !strpos($vowels, $word[strlen($word) - 1]);\n \
    \   $is_first_char_consonant = !strpos($vowels, $word[0]);\n    $vowel_positions\
    \ = [];\n    if ($is_last_char_consonant && $is_first_char_consonant) {\n    \
    \    for ($i = 0; $i < strlen($word); $i++) {\n            if (strpos($vowels,\
    \ $word[$i]) !== false) {\n                $vowel_positions[] = $i;\n        \
    \    }\n        }\n        if (count($vowel_positions) > 0) {\n            $closest_vowel_index\
    \ = $vowel_positions[0];\n            $smallest_index_diff = abs($vowel_positions[0]\
    \ - (strlen($word) - 1));\n            for ($i = 1; $i < count($vowel_positions);\
    \ $i++) {\n                $current_index_diff = abs($vowel_positions[$i] - (strlen($word)\
    \ - 1));\n                if ($current_index_diff < $smallest_index_diff) {\n\
    \                    $smallest_index_diff = $current_index_diff;\n           \
    \         $closest_vowel_index = $vowel_positions[$i];\n                }\n  \
    \          }\n            return $word[$closest_vowel_index];\n        }\n   \
    \ }\n    return \"\";\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4uilcjyx.php:55\n\
    Stack trace:\n#0 /tmp/tmp4uilcjyx.php(63): test()\n#1 {main}\n  thrown in /tmp/tmp4uilcjyx.php\
    \ on line 55\n"
  timestamp: 1660028454
- exit_code: 255
  program: "<?php\n// You are given a word. Your task is to find the closest vowel\
    \ that stands between \n// two consonants from the right side of the word (case\
    \ sensitive).\n// Vowels in the beginning and ending doesn't count. Return empty\
    \ string if you didn't\n// find any vowel met the above condition. \n// You may\
    \ assume that the given string contains English letter only.\n// Example:\n//\
    \ >>> get_closest_vowel(\"yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\"\
    )\n// \"U\"\n// >>> get_closest_vowel(\"quick\")\n// \"\"\n// >>> get_closest_vowel(\"\
    ab\")\n// \"\"\nfunction get_closest_vowel($word) {\n  // Write your code here\n\
    \  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $prev = '';\n  $next = '';\n  $closest\
    \ = '';\n  for ($i = strlen($word) - 1; $i >= 0; $i--) {\n    if (in_array($word[$i],\
    \ $vowels)) {\n      $closest = $word[$i];\n      if ($prev && $next) {\n    \
    \    break;\n      }\n    } else {\n      if ($closest) {\n        $prev = $word[$i];\n\
    \      } else {\n        $next = $word[$i];\n      }\n    }\n  }\n  return $prev\
    \ && $next ? $closest : '';\n}\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4iqiwxv.php:44\n\
    Stack trace:\n#0 /tmp/tmpj4iqiwxv.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpj4iqiwxv.php\
    \ on line 44\n"
  timestamp: 1660028454

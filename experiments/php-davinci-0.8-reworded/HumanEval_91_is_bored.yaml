name: HumanEval_91_is_bored
language: php
prompt: "<?php\n// You'll be given a string of words, and your task is to count the\
  \ number\n// of boredoms. A boredom is a sentence that starts with the word \"I\"\
  .\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"\
  Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
  \ this weather\")\n// 1\nfunction is_bored($S) {\n"
tests: "function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"I feel good today. I will be productive. will\
  \ kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $words = explode(' ', $S);\n    $boredoms = 0;\n    foreach ($words\
    \ as $word) {\n        if ($word == 'I') {\n            $boredoms++;\n       \
    \ }\n    }\n    return $boredoms;\n}", "    $boredoms = 0;\n    $sentences = explode('.\
    \ ', $S);\n    foreach ($sentences as $sentence) {\n        $sentence = explode('\
    \ ', $sentence);\n        if ($sentence[0] == 'I') {\n            $boredoms +=\
    \ 1;\n        }\n    }\n    return $boredoms;\n}\necho is_bored(\"I love you,\
    \ but I love cakes too!\");", "    $S = explode(' ', $S);\n    $boredom = 0;\n\
    \    foreach ($S as $word) {\n        if ($word == 'I') {\n            $boredom++;\n\
    \        }\n    }\n    return $boredom;\n}\necho is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\").PHP_EOL;", "  $i=0;\n  $a = explode(\"\
    \ \", $S);\n  foreach ($a as $key => $value) {\n    if(strtolower($value)===\"\
    i\")\n      $i++;\n  }\n  return $i;\n}\n", "   $tok = strtok($S, \" \\n\\t.!?\"\
    );\n   $count = 0;\n   while ($tok !== false) {\n     if (strtolower($tok) ==\
    \ \"i\") $count++;\n     $tok = strtok(\" \\n\\t.!?\");\n   }\n   return $count;\n\
    }", "    $S = explode(' ', $S);\n    $i = 0;\n    foreach ($S as $s) {\n     \
    \   if ($s == 'I') {\n            $i++;\n        }\n    }\n    return $i;\n}\n\
    echo is_bored(\"The sky is blue. The sun is shining. I love this weather\");",
  "    // your code here\n    $S_array = explode(\" \", $S);\n    $result = 0;\n \
    \   for ($i = 0; $i < count($S_array); $i++) {\n        if ($S_array[$i] == \"\
    I\") {\n            $result++;\n        }\n    }\n    return $result;\n}\n", " \
    \ $split = preg_split('/[!?.]/', $S);\n  $words = [];\n  $count = 0;\n  foreach\
    \ ($split as $sentence) {\n    $words = explode(' ', $sentence);\n    if ($words[0]\
    \ == 'I') {\n      $count++;\n    }\n  }\n  return $count;\n}", "  $S = explode(\"\
    \ \", $S);\n  $count = 0;\n  foreach ($S as $word) {\n    if ($word == \"I\")\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}", "    $s = preg_split('/\\\
    .|\\?|!/', $S);\n    $count = 0;\n    foreach ($s as $i) {\n        if (preg_match('/^I\
    \ /', $i)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
  "  $a = explode(' ', $S);\n  $count = 0;\n  foreach ($a as $key => $value) {\n \
    \   if ($value == 'I') {\n      $count++;\n    }\n  }\n  return $count;\n}\n$S\
    \ = \"The sky is blue. The sun is shining. I love this weather\";\necho is_bored($S);",
  "    return preg_match_all('/I\\s(.*?)\\s(\\.|\\?|\\!)/', $S, $matches);\n}\necho\
    \ is_bored(\"The sky is blue. The sun is shining. I love this weather\");", " \
    \   return count(explode('.', $S)) - 1;\n}\n", "    return substr_count($S, 'I');\n\
    }\n", "  $counter = 0;\n  $arr = explode(' ', $S);\n  for ($i = 0; $i < count($arr);\
    \ $i++) {\n    if ($arr[$i] == 'I') {\n      $counter++;\n    }\n  }\n  return\
    \ $counter;\n}\n", "    return substr_count($S, \"I\") + substr_count($S, \"i\"\
    );\n}\n\nif (!debug_backtrace()) {\n    // this function is being executed directly\n\
    \    $input = file_get_contents(\"php://stdin\");\n    echo is_bored($input) .\
    \ \"\\n\";\n}", "    $count = 0;\n    $sentences = explode(\".|!|?\", $S);\n \
    \   foreach ($sentences as $sentence) {\n        if ($sentence[0] == \"I\") {\n\
    \            $count += 1;\n        }\n    }\n    return $count;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") . \"\\n\";", "   \
    \ $sentences = explode('. ', $S);\n    $boredoms = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        if (preg_match('/^I\\W/', $sentence)) {\n         \
    \   $boredoms++;\n        }\n    }\n    return $boredoms;\n}", "    $result =\
    \ [];\n    $index = 0;\n    $str = str_replace('!', '.', $S);\n    $str = str_replace('?',\
    \ '.', $str);\n    $split = explode('.', $str);\n    foreach ($split as $key =>\
    \ $value) {\n        $result[$index] = $value;\n        $index++;\n    }\n   \
    \ $new_arr = array_map('trim', $result);\n    $new_arr = array_filter($new_arr);\n\
    \    $result = 0;\n    foreach ($new_arr as $key => $value) {\n        if (strpos($value,\
    \ 'I') === 0) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }", "    $s = explode(' ', $S);\n    $j = 0;\n    for ($i = 0; $i < count($s);\
    \ $i++) {\n        if ($s[$i] == 'I') {\n            $j++;\n        }\n    }\n\
    \    return $j;\n}\n\necho is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\");\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_91_is_bored
language: php
prompt: "<?php\n// You'll be given a string of words, and your task is to count the\
  \ number\n// of boredoms. A boredom is a sentence that starts with the word \"I\"\
  .\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"\
  Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love\
  \ this weather\")\n// 1\nfunction is_bored($S) {\n"
tests: "function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"I feel good today. I will be productive. will\
  \ kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $words = explode(' ', $S);\n    $boredoms = 0;\n    foreach ($words\
    \ as $word) {\n        if ($word == 'I') {\n            $boredoms++;\n       \
    \ }\n    }\n    return $boredoms;\n}", "    $boredoms = 0;\n    $sentences = explode('.\
    \ ', $S);\n    foreach ($sentences as $sentence) {\n        $sentence = explode('\
    \ ', $sentence);\n        if ($sentence[0] == 'I') {\n            $boredoms +=\
    \ 1;\n        }\n    }\n    return $boredoms;\n}\necho is_bored(\"I love you,\
    \ but I love cakes too!\");", "    $S = explode(' ', $S);\n    $boredom = 0;\n\
    \    foreach ($S as $word) {\n        if ($word == 'I') {\n            $boredom++;\n\
    \        }\n    }\n    return $boredom;\n}\necho is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\").PHP_EOL;", "  $i=0;\n  $a = explode(\"\
    \ \", $S);\n  foreach ($a as $key => $value) {\n    if(strtolower($value)===\"\
    i\")\n      $i++;\n  }\n  return $i;\n}\n", "   $tok = strtok($S, \" \\n\\t.!?\"\
    );\n   $count = 0;\n   while ($tok !== false) {\n     if (strtolower($tok) ==\
    \ \"i\") $count++;\n     $tok = strtok(\" \\n\\t.!?\");\n   }\n   return $count;\n\
    }", "    $S = explode(' ', $S);\n    $i = 0;\n    foreach ($S as $s) {\n     \
    \   if ($s == 'I') {\n            $i++;\n        }\n    }\n    return $i;\n}\n\
    echo is_bored(\"The sky is blue. The sun is shining. I love this weather\");",
  "    // your code here\n    $S_array = explode(\" \", $S);\n    $result = 0;\n \
    \   for ($i = 0; $i < count($S_array); $i++) {\n        if ($S_array[$i] == \"\
    I\") {\n            $result++;\n        }\n    }\n    return $result;\n}\n", " \
    \ $split = preg_split('/[!?.]/', $S);\n  $words = [];\n  $count = 0;\n  foreach\
    \ ($split as $sentence) {\n    $words = explode(' ', $sentence);\n    if ($words[0]\
    \ == 'I') {\n      $count++;\n    }\n  }\n  return $count;\n}", "  $S = explode(\"\
    \ \", $S);\n  $count = 0;\n  foreach ($S as $word) {\n    if ($word == \"I\")\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}", "    $s = preg_split('/\\\
    .|\\?|!/', $S);\n    $count = 0;\n    foreach ($s as $i) {\n        if (preg_match('/^I\
    \ /', $i)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
  "  $a = explode(' ', $S);\n  $count = 0;\n  foreach ($a as $key => $value) {\n \
    \   if ($value == 'I') {\n      $count++;\n    }\n  }\n  return $count;\n}\n$S\
    \ = \"The sky is blue. The sun is shining. I love this weather\";\necho is_bored($S);",
  "    return preg_match_all('/I\\s(.*?)\\s(\\.|\\?|\\!)/', $S, $matches);\n}\necho\
    \ is_bored(\"The sky is blue. The sun is shining. I love this weather\");", " \
    \   return count(explode('.', $S)) - 1;\n}\n", "    return substr_count($S, 'I');\n\
    }\n", "  $counter = 0;\n  $arr = explode(' ', $S);\n  for ($i = 0; $i < count($arr);\
    \ $i++) {\n    if ($arr[$i] == 'I') {\n      $counter++;\n    }\n  }\n  return\
    \ $counter;\n}\n", "    return substr_count($S, \"I\") + substr_count($S, \"i\"\
    );\n}\n\nif (!debug_backtrace()) {\n    // this function is being executed directly\n\
    \    $input = file_get_contents(\"php://stdin\");\n    echo is_bored($input) .\
    \ \"\\n\";\n}", "    $count = 0;\n    $sentences = explode(\".|!|?\", $S);\n \
    \   foreach ($sentences as $sentence) {\n        if ($sentence[0] == \"I\") {\n\
    \            $count += 1;\n        }\n    }\n    return $count;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") . \"\\n\";", "   \
    \ $sentences = explode('. ', $S);\n    $boredoms = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        if (preg_match('/^I\\W/', $sentence)) {\n         \
    \   $boredoms++;\n        }\n    }\n    return $boredoms;\n}", "    $result =\
    \ [];\n    $index = 0;\n    $str = str_replace('!', '.', $S);\n    $str = str_replace('?',\
    \ '.', $str);\n    $split = explode('.', $str);\n    foreach ($split as $key =>\
    \ $value) {\n        $result[$index] = $value;\n        $index++;\n    }\n   \
    \ $new_arr = array_map('trim', $result);\n    $new_arr = array_filter($new_arr);\n\
    \    $result = 0;\n    foreach ($new_arr as $key => $value) {\n        if (strpos($value,\
    \ 'I') === 0) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }", "    $s = explode(' ', $S);\n    $j = 0;\n    for ($i = 0; $i < count($s);\
    \ $i++) {\n        if ($s[$i] == 'I') {\n            $j++;\n        }\n    }\n\
    \    return $j;\n}\n\necho is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\");\n", "    $arr = explode(\" \", $S);\n    $count = 0;\n    foreach\
    \ ($arr as $item) {\n        if ($item == \"I\") {\n            $count += 1;\n\
    \        }\n    }\n    return $count;\n}", "    $boredoms = 0;\n    $sentences\
    \ = explode(['.', '?', '!'], $S);\n    foreach ($sentences as $sentence) {\n \
    \       if (strtoupper(substr($sentence, 0, 1)) == 'I') {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}", "\t$arr = explode(\" \", $S);\n\t\
    $boredoms = 0;\n\t$broken = false;\n\tfor ($i = 0; $i < count($arr); $i++) {\n\
    \t\tif ($arr[$i] == \"I\") {\n\t\t\t$boredoms++;\n\t\t\t$broken = true;\n\t\t\
    }\n\t\tif ($broken && ($arr[$i] == \".\" || $arr[$i] == \"?\" || $arr[$i] == \"\
    !\")) {\n\t\t\t$broken = false;\n\t\t}\n\t}\n\treturn $boredoms;\n}\n", "\t$found\
    \ = 0;\n\t$sentences = explode(array('.', '?', '!'), $S);\n\tforeach ($sentences\
    \ as $sentence) {\n\t\tif (substr($sentence, 0, 2) == 'I ') {\n\t\t\t$found++;\n\
    \t\t}\n\t}\n\treturn $found;\n}", "    // Your code here\n}", "    $S = explode('.',\
    \ $S);\n    $S = implode('', $S);\n    $S = explode('?', $S);\n    $S = implode('',\
    \ $S);\n    $S = explode('!', $S);\n    $S = implode('', $S);\n    $S = explode('\
    \ ', $S);\n    $c = 0;\n    foreach ($S as $v) {\n        if (strtolower($v) ==\
    \ 'i') {\n            $c++;\n        }\n    }\n    return $c;\n}\n\necho is_bored(\"\
    Hello world\") . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\") . \"\\n\";\n", "    $string_array = explode(\" \", $S);\n\
    \    $boredoms = 0;\n    foreach ($string_array as $key => $value) {\n       \
    \ if ($value === \"I\") {\n            $boredoms++;\n        }\n    }\n    return\
    \ $boredoms;\n}", "    $boredoms = 0;\n    $sentences = explode(\". \", $S);\n\
    \    foreach ($sentences as $sentence) {\n        $words = explode(\" \", $sentence);\n\
    \        if (strtolower($words[0]) == \"i\") {\n            $boredoms++;\n   \
    \     }\n    }\n    return $boredoms;\n}\necho is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\");\necho \"\\n\";", "  $S = explode(\"\
    \ \", $S);\n  $S = implode(\"\", $S);\n  $S = explode(\".\", $S);\n  $S = implode(\"\
    \", $S);\n  $S = explode(\"?\", $S);\n  $S = implode(\"\", $S);\n  $S = explode(\"\
    !\", $S);\n  $S = implode(\"\", $S);\n  if (strpos($S, \"I\") === 0) {\n    return\
    \ 1;\n  } else {\n    return 0;\n  }\n}\necho is_bored(\"I am happy\") . PHP_EOL;\n\
    echo is_bored(\"You are sad\") . PHP_EOL;", "    return count(explode('I', $S))\
    \ - 1;\n}\n", "\t$boredom = 0;\n\t$arr = explode(\" \", $S);\n\tfor ($i = 0; $i\
    \ < count($arr); $i++) {\n\t\tif ($arr[$i] == \"I\") {\n\t\t\t$boredom++;\n\t\t\
    }\n\t}\n\treturn $boredom;\n}", "    // Breaks the string into sentences\n   \
    \ $sentences = preg_split('/(?<=[.?!])\\s*/', $S, -1, PREG_SPLIT_NO_EMPTY);\n\
    \    $count = 0;\n    // This can be done with a loop as well, but I wanted to\
    \ try a one-liner :)\n    // The count_if_bored($sentence) function simply checks\
    \ if the string starts with \"I\"\n    return array_reduce($sentences, function($count,\
    \ $sentence) {\n        return $count + count_if_bored($sentence);\n    }, 0);\n\
    }\n", "    $s = explode(' ',$S);\n    $boredoms = 0;\n    foreach ($s as $word)\
    \ {\n        if($word == 'I'){\n            $boredoms += 1;\n        }\n    }\n\
    \    return $boredoms;\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");\necho is_bored(\"Hello world\");\n", "    $sentences\
    \ = explode(['.', '?', '!'], $S);\n    $boredoms = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        $words = explode(' ', $sentence);\n        if ($words[0]\
    \ == 'I') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\n", "    $arr = explode(\" \", $S);\n    foreach ($arr as $value) {\n      \
    \  if ($value == \"I\") {\n            return 1;\n        }\n    }\n    return\
    \ 0;\n}\n\necho is_bored(\"I love PHP!\");\necho \"\\n\";\necho is_bored(\"I love\
    \ Java!\");\necho \"\\n\";\necho is_bored(\"I love JavaScript! She loves C#!\"\
    );\necho \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather!\");\necho \"\\n\";\necho is_bored(\"PHP is my favourite programming\
    \ language. I love it!\");\necho \"\\n\";\necho is_bored(\"I love Pascal! I love\
    \ programming! :)\");\necho \"\\n\";\necho is_bored(\"Hello world\");\necho \"\
    \\n\";\necho is_bored(\"I'm boring. She's boring. They're boring. We're boring.\"\
    );\necho \"\\n\";\necho is_bored(\"Greetings, user! All is well. I'm a simple\
    \ chatbot.\");\necho \"\\n\";\necho is_bored(\"I love PHP! I love programming!\
    \ :)\");\necho \"\\n\";\necho is_bored(\"I love PHP! I love programming! :) She\
    \ loves Pascal! She loves programming! :)\");\necho \"\\n\";\necho is_bored(\"\
    I love PHP! I love programming! :) She loves Pascal! She loves programming! :)\
    \ He loves Python! He loves coding! :)\");\necho \"\\n\";\necho is_bored(\"I love\
    \ PHP! I love programming! :) She loves Pascal! She loves programming! :) He loves\
    \ Python! He loves coding! :) We love JavaScript! We love web development! :)\"\
    );\necho \"\\n\";\necho is_bored(\"I love PHP! I love programming! :) She loves\
    \ Pascal! She loves programming! :) He loves Python! He loves coding! :) We love\
    \ JavaScript! We love web development! :) You love Java! You love coding! :)\"\
    );\necho \"\\n\";\necho is_bored(\"I love PHP! I love programming! :) She loves\
    \ Pascal! She loves programming! :) He loves Python! He loves coding! :) We love\
    \ JavaScript! We love web development! :) You love Java! You love coding! :) They\
    \ love", "    $result = 0;\n    $delimiters = array('.', '?', '!');\n    foreach($delimiters\
    \ as $value) {\n        $splits = explode($value, $S);\n        if(count($splits)\
    \ > 1) {\n            foreach($splits as $split) {\n                if(preg_match('/^\\\
    s*I/', $split)) {\n                    $result += 1;\n                }\n    \
    \        }\n        }\n    }\n    return $result;\n}", "    $sentences = explode('.\
    \ ', $S);\n    $count = 0;\n    foreach ($sentences as $sentence) {\n        if\
    \ (substr($sentence, 0, 2) == 'I ') {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n", "  // Your code here.\n}\n", "    $sentences = explode('.',\
    \ $S);\n    $boredoms = 0;\n    foreach ($sentences as $sentence) {\n        if\
    \ (strpos($sentence, 'I') === 0) {\n            $boredoms++;\n        }\n    }\n\
    \    return $boredoms;\n}\n\nif (is_bored(\"Hello world\") == 0) {\n    echo \"\
    correct\\n\";\n} else {\n    echo \"wrong\\n\";\n}\n\nif (is_bored(\"The sky is\
    \ blue. The sun is shining. I love this weather\") == 1) {\n    echo \"correct\\\
    n\";\n} else {\n    echo \"wrong\\n\";\n}\n\nif (is_bored(\"I am bored. I need\
    \ to do something. Hey, can you play with me?\") == 3) {\n    echo \"correct\\\
    n\";\n} else {\n    echo \"wrong\\n\";\n}", "    $S = explode(\" \", $S);\n  \
    \  $count = 0;\n    for ($i = 0; $i < count($S); $i++) {\n        if ($S[$i] ==\
    \ \"I\") {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    echo is_bored(\"The sky is blue. The sun is shining. I love this weather\");",
  "\t$S = preg_split('/[.?!]/', $S);\n\t$count = 0;\n\tforeach ($S as $word) {\n\t\
    \tif (strpos($word, 'I') === 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }", "    $words = explode(' ', str_replace(['.', '?', '!'], '', $S));\n    return\
    \ count(array_filter($words, function($word) {\n        return strtolower($word)\
    \ === 'i';\n    }));\n}\n", "  // Your code goes here\n  $sentences = explode(\"\
    \ \", $S);\n  $bored = 0;\n  foreach ($sentences as $sentence) {\n    $first_letter\
    \ = substr($sentence, 0, 1);\n    if ($first_letter == \"I\") {\n      $bored++;\n\
    \    }\n  }\n  return $bored;\n}\n", "    $B = 0;\n    $S = explode(' ', str_replace(['!',\
    \ '.', '?'], ' ', $S));\n    for ($i = 0; $i < count($S); $i++) {\n        if\
    \ ($S[$i] == 'I') {\n            $B++;\n        }\n    }\n    return $B;\n}\n",
  "    $S = explode('.', $S);\n    $S = array_filter($S);\n    $S = array_map('trim',\
    \ $S);\n    $S = array_map('strtolower', $S);\n    $S = array_map('explode', array_fill(0,\
    \ count($S), ' '), $S);\n    foreach ($S as $i => $s) {\n        if ($s[0] ==\
    \ 'i') {\n            return 1;\n        }\n    }\n    return 0;\n}\n\n$a = 'Hello\
    \ world';\n$b = 'The sky is blue. The sun is shining. I love this weather';\n\
    $r = is_bored($a);\nprint_r($r);\n$r = is_bored($b);\nprint_r($r);", "    $sentences\
    \ = explode('.|!|?', $S);\n    $boredoms = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        $words = explode(' ', $sentence);\n        if ($words[0] == 'I')\
    \ {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n",
  "    return count(array_filter(explode(\".\",$S), function($x) { return strtolower(substr($x,0,2))\
    \ == \"i \"; }));\n}\n\necho is_bored(\"The sky is blue. The sun is shining. I\
    \ love this weather\").\"\\n\";", "  return substr_count($S, \"I \");\n}\necho\
    \ is_bored(\"The sky is blue. The sun is shining. I love this weather\").\"\\\
    n\";", "    $S = preg_split('/(?<=[.?!])\\s*/', $S, -1, PREG_SPLIT_NO_EMPTY);\n\
    \    $r = 0;\n    foreach ($S as $s) {\n        if (substr($s, 0, 1) == 'I') {\n\
    \            $r++;\n        }\n    }\n    return $r;\n}\n", "    $arr = explode(\"\
    \ \", $S);\n    foreach ($arr as $key => $word) {\n        if (0 === $key && 'I'\
    \ === $word) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
  "    $S = preg_split('/\\.|\\?|\\!/', $S);\n    $c = 0;\n    foreach ($S as $s)\
    \ {\n        if (preg_match('/^I/', $s)) {\n            $c++;\n        }\n   \
    \ }\n    return $c;\n}", "  return substr_count($S, 'I');\n}\necho is_bored(\"\
    I am so bored.\");\necho is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\");", "\t$sentences = explode(['.', '?', '!'], $S);\n\t$i = 0;\n\
    \tforeach ($sentences as $s) {\n\t\tif (substr($s, 0, 2) == 'I ') {\n\t\t\t$i++;\n\
    \t\t}\n\t}\n\treturn $i;\n}\n$result = is_bored(\"This is not boring. This is\
    \ too boring. I am so bored.\");\necho $result;\n", "\t$arr = explode(\" \", $S);\n\
    \t$count = 0;\n\tforeach ($arr as $key => $value) {\n\t\tif (strtolower($value)\
    \ == \"i\") {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho is_bored(\"\
    I am never bored.\");", "    // ...\n}", "  $S = explode(\".\", $S);\n  $S = array_merge($S,\
    \ explode(\"?\", $S));\n  $S = array_merge($S, explode(\"!\", $S));\n  $count\
    \ = 0;\n  foreach ($S as $word) {\n    if (substr($word, 0, 1) == \"I\") {\n \
    \     $count++;\n    }\n  }\n  return $count;\n}\n\necho is_bored(\"Hello world\"\
    );\necho \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\");", "    $boredom = 0;\n    $sentences = explode(\".\", $S);\n\
    \    foreach ($sentences as $sentence) {\n        $words = explode(\" \", $sentence);\n\
    \        if ($words[0] == \"I\") {\n            $boredom++;\n        }\n    }\n\
    \    return $boredom;\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\") . \"\\n\";", "    $sentences = explode('. ', $S);\n \
    \   // # !!!\n    $boredoms = 0;\n    foreach ($sentences as $s) {\n        if\
    \ (substr($s, 0, 2) == 'I ') {\n            $boredoms++;\n        }\n    }\n \
    \   return $boredoms;\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");", "    $count = 0;\n    $sentences = explode(\".\",\
    \ $S);\n    foreach ($sentences as $S) {\n        $S = trim($S);\n        if (strncmp($S,\
    \ \"I\", 1) == 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n", "  // $S: string of words\n\n  // WRITE YOUR CODE HERE\n\n  // DO NOT CHANGE\
    \ THE RETURNED VALUE\n  return 0;\n}", "    $c = 0;\n    $p = str_split($S);\n\
    \    $s = '';\n    foreach ($p as $v) {\n        $s .= $v;\n        if ($v ==\
    \ '.' || $v == '?' || $v == '!') {\n            if (strpos($s, 'I') === 0) {\n\
    \                $c++;\n            }\n            $s = '';\n        }\n    }\n\
    \    return $c;\n}\n", "  $sentences = explode(\". \", $S);\n  $count = 0;\n \
    \ foreach ($sentences as $sentence) {\n    if (strpos($sentence, \"I\") === 0)\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}", "  $s = preg_split('/[!.?]/',\
    \ $S);\n  $count = 0;\n  foreach ($s as $sentence) {\n    if (preg_match('/^I/',\
    \ $sentence)) {\n      $count++;\n    }\n  }\n  return $count;\n}\n", "    $sentences\
    \ = preg_split('/[.?!]/', $S);\n    $boredoms = 0;\n    foreach ($sentences as\
    \ $s) {\n        if (preg_match('/^(i|I)/', $s)) {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}\n", "  // your code goes here\n}",
  "    $sentences = explode(\". \", $S);\n    $boredoms = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        if (substr($sentence, 0, 2) == \"I \") {\n        \
    \    $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n\necho is_bored(\"\
    I am bored. I am bored.\") . \"\\n\";\necho is_bored(\"Hello world\") . \"\\n\"\
    ;\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ) . \"\\n\";\n", "  $s = explode(' ', $S);\n  $boredoms = 0;\n  for ($i = 0; $i\
    \ < count($s); $i++) {\n    if ($s[$i] == 'I') {\n      $boredoms++;\n    }\n\
    \  }\n  return $boredoms;\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\") . \"\\n\";", "    $cnt = 0;\n    $sen = explode(['.',\
    \ '?', '!'], $S);\n    foreach ($sen as $s) {\n        if (strpos($s, 'I') ===\
    \ 0) {\n            $cnt++;\n        }\n    }\n    return $cnt;\n}\n\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") . PHP_EOL;\necho is_bored(\"\
    Hello world\") . PHP_EOL;", "  $boredoms = 0;\n  $sentences = explode('.', $S);\n\
    \  foreach ($sentences as $sentence) {\n    $words = explode(' ', $sentence);\n\
    \    if ($words[0] == 'I') {\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n\
    }", "  $numBoredoms = 0;\n  $sentences = explode(\". \", $S);\n  foreach ($sentences\
    \ as $s) {\n    if (substr($s, 0, 2) == \"I \") {\n      $numBoredoms++;\n   \
    \ }\n  }\n  return $numBoredoms;\n}\n", "  $c = 0;\n  $a = explode('.', $S);\n\
    \  foreach ($a as $v) {\n    $w = explode(' ', $v);\n    if ($w[0] == 'I') $c++;\n\
    \  }\n  return $c;\n}\necho is_bored(\"Hello world\").'<br>';\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\").'<br>';\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather!\").'<br>';\necho is_bored(\"\
    I love this weather!\").'<br>';\necho is_bored(\"The sky is blue! The sun is shining!\
    \ I love this weather.\").'<br>';\necho is_bored(\"The sky is blue. The sun is\
    \ shining. I love this weather?\").'<br>';\necho is_bored(\"I love this weather?\
    \ The sky is blue. The sun is shining.\").'<br>';\necho is_bored(\"I love this\
    \ weather? The sky is blue! The sun is shining?\").'<br>';\necho is_bored(\"The\
    \ sky is blue? The sun is shining. I love this weather!\").'<br>';\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather. I love this weather.\
    \ I love this weather.\").'<br>';\necho is_bored(\"I love this weather. I love\
    \ this weather. I love this weather!\").'<br>';\necho is_bored(\"I love this weather.\
    \ I love this weather. I love this weather.\").'<br>';\necho is_bored(\"The sky\
    \ is blue! The sun is shining! I love this weather. I love this weather. I love\
    \ this weather.\").'<br>';\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather. I love this weather. I love this weather?\").'<br>';\n\
    echo is_bored(\"I love this weather. I love this weather. I love this weather.\
    \ The sky is blue. The sun is shining. I love this weather. I love this weather.\
    \ I love this weather.\"", "    $count = 0;\n    $split = explode(\" \", $S);\n\
    \    foreach ($split as $key => $value) {\n        if ($value == \"I\") {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");", "    return substr_count($S,\
    \ 'I');\n}", "  return substr_count($S, \"I\");\n}\n", "    $m = explode(' ',$S);\n\
    \    $count = 0;\n    for($i=0;$i<count($m);$i++){\n        if($m[$i] == 'I'){\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    $words\
    \ = preg_split('/[.!?]/', $S);\n    foreach ($words as $word) {\n        if (strpos($word,\
    \ 'I') === 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
  "    $sentences = explode('.', $S);\n    $count = 0;\n    foreach ($sentences as\
    \ $sentence) {\n        $words = explode(' ', $sentence);\n        if ($words[0]\
    \ == 'I') {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    $result = is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    );\necho $result;", "    $count = 0;\n    $sentences = explode('. ', $S);\n  \
    \  foreach ($sentences as $key => $value) {\n        $first_word = explode(' ',\
    \ $value)[0];\n        if ($first_word == 'I') {\n            $count++;\n    \
    \    }\n    }\n    return $count;\n}", "    $parts = explode(\".\", $S);\n   \
    \ foreach ($parts as $part) {\n        $words = explode(\" \", $part);\n     \
    \   if ($words[0] == \"I\") {\n            return 1;\n        }\n    }\n    return\
    \ 0;\n}", "  $S = array_filter(explode(' ', $S));\n  $i = 0;\n  foreach ($S as\
    \ $word) {\n    if (strtolower($word) == 'i') {\n      $i++;\n    }\n  }\n  return\
    \ $i;\n}", "    $r = preg_match_all('/\\bI\\b(.+?)(?=(\\.|\\?|\\!))/', $S, $matches);\n\
    \    return $r;\n}\n", "    $str = str_replace(['.', '?', '!'], ' ', $S);\n  \
    \  $arr = explode(' ', $str);\n    for ($i = 0; $i < count($arr); $i++) {\n  \
    \      if ($arr[$i] == 'I') return 1;\n    }\n    return 0;\n}\n", "    return\
    \ preg_match_all('/I/', $S);\n}\n\necho is_bored(\"I have a pen. I have an apple.\
    \ I have a goat. Who has an idea?\");", "  $count = 0;\n  $pos = strpos($S, \"\
    I\");\n  if ($pos === FALSE) {\n    return $count;\n  } else {\n    while ($pos\
    \ !== FALSE) {\n      $count++;\n      $pos = strpos($S, \"I\", $pos + 1);\n \
    \   }\n    return $count;\n  }\n}\n", "  return count(explode('I', $S));\n}\n",
  "    $S = explode(\".\", $S);\n    $S = implode(\" \", $S);\n    $S = explode(\"\
    ?\", $S);\n    $S = implode(\" \", $S);\n    $S = explode(\"!\", $S);\n    $S\
    \ = implode(\" \", $S);\n    $S = explode(\" \", $S);\n    $count = 0;\n    foreach\
    \ ($S as $key => $value) {\n        if ($value === \"I\") {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n", "    $boredom_count = 0;\n    $sentences\
    \ = explode(['.', '?', '!'], $S);\n    foreach ($sentences as $sentence) {\n \
    \       $sentence = trim($sentence);\n        if (strpos($sentence, 'I') === 0)\
    \ {\n            $boredom_count++;\n        }\n    }\n    return $boredom_count;\n\
    }\n", "  $S1 = explode(\".\", $S);\n  $S2 = explode(\"?\", $S);\n  $S3 = explode(\"\
    !\", $S);\n  $Ss = array_merge($S1, $S2, $S3);\n  $Ss = array_filter($Ss);\n \
    \ $Ss = array_map(\"trim\", $Ss);\n  $bs = 0;\n  foreach ($Ss as $s) {\n    if\
    \ (strtolower(substr($s, 0, 2)) == \"i \") {\n      $bs++;\n    }\n  }\n  return\
    \ $bs;\n}\n\nprint \"Enter a string: \";\n$f = fopen(\"php://stdin\", \"r\");\n\
    $S = fgets($f);\nfclose($f);\necho is_bored($S);", "  $arr = explode(\" \", $S);\n\
    \  foreach ($arr as $word) {\n    if ($word == \"I\") {\n      return true;\n\
    \    }\n  }\n  return false;\n}", "  return substr_count($S, \"I\") - substr_count($S,\
    \ \"I'm\") - substr_count($S, \"I'd\");\n}", "  $array = explode(\" \", $S);\n\
    \  $num_boredoms = 0;\n  for ($i = 0; $i < count($array); $i++) {\n    if (strtolower($array[$i])\
    \ == \"i\") {\n      $num_boredoms++;\n    }\n  }\n  return $num_boredoms;\n}\n\
    \necho is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\") . \"\\n\";", "    $result = 0;\n\
    \    $sentences = explode(['.', '?', '!'], $S);\n    foreach ($sentences as $sentence)\
    \ {\n        if ($sentence[0] == 'I') {\n            $result++;\n        }\n \
    \   }\n    return $result;\n}", "    // split the string by delimiters\n    $arr\
    \ = explode(\".?!\", $S);\n    $count = 0;\n    // for each sentence, remove all\
    \ whitespace and check if it starts with \"I\"\n    foreach ($arr as $sentence)\
    \ {\n        $sentence = trim($sentence);\n        if (substr($sentence, 0, 1)\
    \ == \"I\") {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
  "\t$words = explode(\" \", $S);\n\t$boredom = 0;\n\tfor ($i = 0; $i < count($words);\
    \ $i++) {\n\t\tif ($words[$i] == \"I\") {\n\t\t\t$boredom++;\n\t\t}\n\t}\n\treturn\
    \ $boredom;\n}", "  $sentences = preg_split('/[.?!]/', $S);\n  $count = 0;\n \
    \ foreach ($sentences as $sentence) {\n    if (strpos($sentence, 'I') === 0) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}", "  return count(array_filter(explode('.',\
    \ $S), function($v) {\n    return substr(trim($v), 0, 1) == 'I';\n  }));\n}\n",
  "  return count(explode('I', $S)) - 1;\n}", "  $S = preg_split('/[.?!]/', $S);\n\
    \  $n = 0;\n  foreach ($S as $s) {\n    if (strpos($s, 'I') === 0) {\n      $n++;\n\
    \    }\n  }\n  return $n;\n}\n\nprint_r(is_bored(\"The sky is blue. The sun is\
    \ shining. I love this weather\"));", "    $c = 0;\n    foreach (explode('.',\
    \ $S) as $s) {\n        $c += (bool) preg_match('/^i\\s/i', $s);\n    }\n    return\
    \ $c;\n}", "    $sentences = preg_split('/[?!.]+/', $S);\n    $boredoms = 0;\n\
    \    foreach ($sentences as $sentence) {\n        if (substr($sentence, 0, 2)\
    \ == 'I ') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\n", "\tif (empty($S)) {\n\t\treturn 0;\n\t}\n\t$S = explode(' ', $S);\n\t$count\
    \ = 0;\n\tforeach ($S as $k => $v) {\n\t\tif ($v == 'I') {\n\t\t\t$count++;\n\t\
    \t}\n\t}\n\treturn $count;\n}\n\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\") . \"\\n\";\n", "    return substr_count($S, 'I');\n}\n",
  "\t$a = explode(' ', $S);\n\t$count = 0;\n\tforeach ($a as $key => $value) {\n\t\
    \tif ($value === 'I') {\n\t\t\tif ($a[$key-1] === '.' || $a[$key-1] === '?' ||\
    \ $a[$key-1] === '!') {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n\
    }\n$S = \"The sky is blue. The sun is shining. I love this weather.\";\necho is_bored($S);",
  "    return substr_count($S, 'I');\n}\n", "    $S = explode('.', $S);\n    $S =\
    \ implode(' ', $S);\n    $S = explode('?', $S);\n    $S = implode(' ', $S);\n\
    \    $S = explode('!', $S);\n    $S = implode(' ', $S);\n    $S = explode(' ',\
    \ $S);\n    $count = 0;\n    foreach ($S as $key => $value) {\n        if (strtolower($value)\
    \ == 'i') {\n            $count += 1;\n        }\n    }\n    return $count;\n}",
  "  $sentences = preg_split('/[\\.!\\?]/', $S);\n  $s = 0;\n  for ($i = 0; $i < count($sentences);\
    \ $i++) {\n    if (preg_match('/^\\s*I/', $sentences[$i])) {\n      $s++;\n  \
    \  }\n  }\n  return $s;\n}\n", "    $words = explode(' ', $S);\n    $boredoms\
    \ = 0;\n    for ($i = 0; $i < count($words); $i++) {\n        if ($words[$i] ==\
    \ 'I') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\necho is_bored(\"Hello world\") . PHP_EOL;\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\") . PHP_EOL;\necho is_bored(\"I love\
    \ this weather\") . PHP_EOL;\necho is_bored(\"I love this weather.\") . PHP_EOL;\n\
    echo is_bored(\"I love this weather! I love this weather?\") . PHP_EOL;\n", " \
    \   $count = 0;\n    $sentences = explode('. ', $S);\n    for ($i = 0; $i < count($sentences);\
    \ $i++) {\n        $words = explode(' ', $sentences[$i]);\n        if ($words[0]\
    \ == 'I') {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
  "    $words = explode(' ', $S);\n    $count = 0;\n    foreach ($words as $word)\
    \ {\n        if (strtolower($word) == 'i') {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n", "    $words = explode(' ', $S);\n    $count\
    \ = 0;\n    foreach ($words as $word) {\n        if (strpos($word, 'I') === 0)\
    \ {\n            $count += 1;\n        }\n    }\n    return $count;\n}\n$sum =\
    \ is_bored(\"The sky is blue. The sun is shining. I love this weather\");\necho\
    \ $sum;", "  return substr_count($S, '!') + substr_count($S, '?') + substr_count($S,\
    \ '.');\n}\n", "  $a = explode(\" \", $S);\n  $boredoms = 0;\n  foreach ($a as\
    \ $b) {\n    if ($b == \"I\") $boredoms++;\n  }\n  return $boredoms;\n}\necho\
    \ is_bored(\"Hello world\") . \"<br>\";\necho is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\") . \"<br>\";\n", "  $counter = 0;\n  $sentences\
    \ = explode(\". \", $S);\n  foreach ($sentences as $sentence) {\n    if (substr($sentence,\
    \ 0, 2) == \"I \") {\n      $counter += 1;\n    }\n  }\n  return $counter;\n}\n\
    \necho is_bored(\"The sky is blue. The sun is shining. I love this weather\").\"\
    \\n\";\necho is_bored(\"I love this weather\").\"\\n\";\necho is_bored(\"Hello\
    \ world\").\"\\n\";", "    $count = 0;\n    $sentences = preg_split('/(\\.|\\\
    ?|\\!)/', $S);\n    for ($i = 0; $i < count($sentences); $i++) {\n        $first_word\
    \ = strstr($sentences[$i], ' ', true);\n        if ($first_word === 'I') {\n \
    \           $count++;\n        }\n    }\n    return $count;\n}", "    $chars =\
    \ str_split($S);\n    $is_bored = false;\n    $boredoms = 0;\n    for ($i = 0;\
    \ $i < count($chars); $i++) {\n        $c = $chars[$i];\n        if ($c == 'I')\
    \ {\n            $is_bored = true;\n        }\n        if ($is_bored && ($c ==\
    \ '.' || $c == '?' || $c == '!')) {\n            $boredoms++;\n            $is_bored\
    \ = false;\n        }\n    }\n    return $boredoms;\n}\necho is_bored(\"The sky\
    \ is blue. The sun is shining. I love this weather\") . \"\\n\";\n", "   $sum\
    \ = 0;\n   $arr = explode(\" \",$S);\n   foreach($arr as $word) {\n      if($word\
    \ == \"I\") {\n         $sum++;\n      }\n   }\n   return $sum;\n}", "    return\
    \ substr_count($S, 'I');\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");", "    return preg_match_all('/\\bI\\b/', $S, $matches);\n\
    }\n\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ) . PHP_EOL;\necho is_bored(\"Hello world\") . PHP_EOL;", "  $S = explode(\" \"\
    , $S);\n  $S = preg_replace(\"/\\W/\", \"\", $S);\n  $S = array_filter($S);\n\
    \  $boredom = 0;\n  foreach ($S as $s) {\n    if (strtolower($s) == \"i\") $boredom++;\n\
    \  }\n  return $boredom;\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");", "    // your code here\n    $arr = explode(' ',$S);\n\
    \    $str = preg_replace('/[^a-zA-Z]+/', '', $arr);\n    $str = array_filter($str);\n\
    \    $str = array_slice($str,0,1);\n    if ($str[0] == 'I') {\n      return 1;\n\
    \    }\n    else {\n      return 0;\n    }\n  }\n\n\n  // You are given a string\
    \ s, consisting of lowercase English letters,\n  // and an integer n. For example,\
    \ \"abacab\" and 3, or \"bloomberg\" and 2.\n  // In the first case, find an occurrence\
    \ of \"abacab\", and remove it.\n  // Find the second occurrence of \"abacab\"\
    , and remove it.\n  // Find the third occurrence of \"abacab\", and remove it.\n\
    \  // Return the modified string.\n  //\n  // In the second case, find an occurrence\
    \ of \"bloomberg\", and remove it.\n  // Find the second occurrence of \"bloomberg\"\
    , and remove it.\n  // Return the modified string.\n  //\n  // If there is no\
    \ nth occurrence of \"abacab\" or \"bloomberg\",\n  // return an empty string\
    \ \"\".\n  // >>> remove_nth_occurrence(\"abacab\", 1)\n  // \"bacab\"\n  // >>>\
    \ remove_nth_occurrence(\"abacab\", 2)\n  // \"acab\"\n  // >>> remove_nth_occurrence(\"\
    abacab\", 3)\n  // \"ab\"\n  // >>> remove_nth_occurrence(\"abacab\", 4)\n  //\
    \ \"\"\n  // >>> remove_nth_occurrence(\"abacab\", 5)\n  // \"\"\n  // >>> remove_nth_occurrence(\"\
    abacab\", 6)\n  // \"\"\n  // >>> remove_nth_occurrence(\"bloomberg\", 1)\n  //\
    \ \"oomberg\"\n  // >>> remove_nth_occurrence(\"bloomberg\", 2)\n  // \"blomberg\"\
    \n  // >>> remove_nth_occurrence(\"bloomberg\", 3)\n  // \"", "\t$a = explode('\
    \ ', str_replace(array('.', '?', '!'), '', $S));\n\t$b = 0;\n\tforeach ($a as\
    \ $s)\n\t\tif (strtolower($s) == 'i')\n\t\t\t$b++;\n\treturn $b;\n}\n", "  $boredoms\
    \ = 0;\n  $S = explode(\".\", $S);\n  foreach ($S as $sentence) {\n    $words\
    \ = explode(\" \", $sentence);\n    if ($words[0] == \"I\") {\n      $boredoms++;\n\
    \    }\n  }\n  return $boredoms;\n}\necho is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\");", "    // Use your right hand and point\
    \ your index finger at the screen. Now,\n    // extend your middle finger, ring\
    \ finger and pinky. Count the number of\n    // boredoms.\n    return 1;\n}\n\n\
    assert(0 == is_bored(\"Hello world\"));\nassert(1 == is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\"));\nassert(1 == is_bored(\"I. I love\
    \ you. You. That's it.\"));\nassert(2 == is_bored(\"I've got another I for you.\
    \ I love you. I need you. I want you.\"));\nassert(2 == is_bored(\"I. I love you.\
    \ You. That's it. I. I love you. You. That's it.\"));\nassert(3 == is_bored(\"\
    I, I, I, I, I love you. I, I, I, I, I love you. I, I, I, I, I love you. I, I,\
    \ I, I, I love you.\"));\nassert(11 == is_bored(\"I love you. I need you. I want\
    \ you. I love you. I need you. I want you. I love you. I need you. I want you.\
    \ I love you. I need you. I want you.\"));\nassert(1 == is_bored(\"I love you.\
    \ I need you. I want you. I love you. I need you. I want you. I love you. I need\
    \ you. I want you. I love you. I need you. I want you. I.\"));\nassert(2 == is_bored(\"\
    I love you. I need you. I want you. I love you. I need you. I want you. I love\
    \ you. I need you. I want you. I love you. I need you. I want you. I. I\"));\n\
    echo \"Done!\";", "    // Your code here\n    $sentences = explode(\".\", $S);\n\
    \    $n = 0;\n    foreach ($sentences as $sentence) {\n        $arr = explode(\"\
    \ \", $sentence);\n        if ($arr[0] == \"I\") {\n            $n++;\n      \
    \  }\n    }\n    return $n;\n}\n", "  $exclam = explode('!', $S);\n  $quest =\
    \ explode('?', $S);\n  $dot = explode('.', $S);\n  $i = 0;\n  foreach ($exclam\
    \ as $value) {\n    if (count(explode('I', $value)) > 1) {\n      $i++;\n    }\n\
    \  }\n  foreach ($quest as $value) {\n    if (count(explode('I', $value)) > 1)\
    \ {\n      $i++;\n    }\n  }\n  foreach ($dot as $value) {\n    if (count(explode('I',\
    \ $value)) > 1) {\n      $i++;\n    }\n  }\n  return $i;\n}\n\necho \"Hello world:\
    \ \" . is_bored(\"Hello world\") . \"<br>\";\necho \"The sky is blue. The sun\
    \ is shining. I love this weather: \" . is_bored(\"The sky is blue. The sun is\
    \ shining. I love this weather\") . \"<br>\";\necho \"This is a test!: \" . is_bored(\"\
    This is a test!\") . \"<br>\";\necho \"This is a test of I. This is a test of!\
    \ This is a test of? This is a test of . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . .", "\t$pattern = '/I[\\.]*/';\n\tpreg_match_all($pattern, $S, $matches);\n\
    \t$counter = 0;\n\tforeach ($matches[0] as $match) {\n\t\t$counter += substr_count($match,\
    \ 'I');\n\t}\n\treturn $counter;\n}", "\t$S = explode(\" \", $S);\n\t$i = 0;\n\
    \tforeach ($S as $sentence) {\n\t\tif ($sentence == \"I\") {\n\t\t\t$i++;\n\t\t\
    }\n\t}\n\treturn $i;\n}", "    $sentences = preg_split('/[.?!]/', $S);\n    $boredoms\
    \ = 0;\n    foreach ($sentences as $sentence) {\n        if (preg_match('/^I/',\
    \ $sentence)) {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }", "    $ex = explode(\".\", $S);\n    $arr = [];\n    foreach ($ex as $value)\
    \ {\n        if (strtoupper(substr($value, 0, 1)) == \"I\") {\n            $arr[]\
    \ = $value;\n        }\n    }\n    return count($arr);\n}\n\n$arr = [\n    'This\
    \ is great!',\n    'What is the weather today?',\n    'When is the last exam?',\n\
    \    'I want to go to Spain.',\n    'I am happy!',\n    'I am not happy with the\
    \ weather today.',\n    'Let us dance!',\n    'We are losing money!',\n    'I\
    \ should buy some new clothes.',\n    'I will love to go to the park today.',\n\
    \    'I am having fun.',\n    'I think I will go to Germany.',\n    'He is a good\
    \ boy.',\n    'I love you.',\n    'I play football.',\n    'I will not play football.',\n\
    \    'I am the best.',\n    'I am the first',\n    'I am a good boy.',\n    'I\
    \ am not feeling well.',\n    'I will join you.',\n    'I will not join you.',\n\
    \    'I am travelling.',\n    'I am not travelling.',\n    'I will be back soon.',\n\
    \    'I will not be back soon.',\n    'I want to go back home.',\n    'I am at\
    \ home.',\n    'I want to be at home.',\n    'I want to be a millionaire.',\n\
    \    'I like playing football.',\n    'I will like to go to the club today.',\n\
    \    'I am not happy with you.',\n    'I can do all things.',\n    'I will do\
    \ all things.',\n    'I will not do all things.',\n    'I can play football.',\n\
    \    'I like you.',\n    'I will like you.',\n    'I will not like you.',\n  \
    \  'I love my life.',\n    'I will marry you.',\n    'I will not marry you.',\n\
    \    'I like reading.'", "    // Make an array of the sentence\n    $sentence\
    \ = explode(\" \", $S);\n    $boredom = 0;\n    // Count the number of times the\
    \ first word of a sentence is I\n    for ($i = 0; $i < count($sentence); $i++)\
    \ {\n        if ($sentence[$i] == \"I\") {\n            $boredom++;\n        }\n\
    \    }\n    return $boredom;\n}", "  $S = preg_split('/\\.|\\?|\\!/', $S);\n \
    \ $c = 0;\n  foreach ($S as $s) {\n    if (strtolower(substr($s, 0, 1)) == 'i')\
    \ $c++;\n  }\n  return $c;\n}", "    $parts = explode(' ', $S);\n    $boredoms\
    \ = 0;\n    foreach ($parts as $word) {\n        if ($word == 'I') {\n       \
    \     $boredoms++;\n        }\n    }\n    return $boredoms;\n}\necho is_bored(\"\
    Hello world\") . PHP_EOL;\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\") . PHP_EOL;\necho is_bored(\"My name is I, I am the most\
    \ boring person I know.\") . PHP_EOL;\necho is_bored(\"Oh gosh! I am bored!\"\
    ) . PHP_EOL;\necho is_bored(\"Where did I go wrong?\") . PHP_EOL;", "  $boredoms\
    \ = 0;\n  $sentences = explode(\". \", $S);\n  foreach ($sentences as $sentence)\
    \ {\n    $sentence = explode(\" \", $sentence);\n    if ($sentence[0] == \"I\"\
    ) {\n      $boredoms += 1;\n    }\n  }\n  return $boredoms;\n}\n", "  return substr_count($S,\
    \ \"I \");\n}", "  $ar = preg_split('/(\\.|\\?|\\!)/', $S);\n  $i = 0;\n  foreach\
    \ ($ar as $v) {\n    if(substr($v, 0, 1) == 'I') {\n      $i++;\n    }\n  }\n\
    \  return $i;\n}\n\n$list = \"Hello world\";\necho is_bored($list);\necho \"\\\
    n\";\n$list = \"The sky is blue. The sun is shining. I love this weather\";\n\
    echo is_bored($list);\necho \"\\n\";", "  $count = 0;\n  $arr = explode(' ', $S);\n\
    \  foreach ($arr as $value) {\n    if ($value == 'I') {\n      $count++;\n   \
    \ }\n  }\n  return $count;\n}\necho is_bored(\"I am bored.\");\necho \"<br>\"\
    ;\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    );", "  return strlen(\n    preg_replace('/I.+?[?!.]/', '', $S)\n  ) == strlen($S);\n\
    }\necho is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"The sky is blue.\
    \ The sun is shining. I love this weather\") . \"\\n\";\n", "    // Your code\
    \ goes here.\n}", "    $p = 0;\n    $boredoms = 0;\n    for ($i = 0; $i < strlen($S);\
    \ $i++) {\n        if ($S[$i] == '.' || $S[$i] == '?' || $S[$i] == '!') {\n  \
    \          $p = 0;\n        } else if ($S[$i] == ' ') {\n            $p = 1;\n\
    \        } else if ($p == 1 && $S[$i] == 'I') {\n            $boredoms++;\n  \
    \          $p = 0;\n        }\n    }\n    return $boredoms;\n}", "    // YOUR\
    \ CODE GOES HERE\n}\n", "  $sentences = explode(\". \", $S);\n  //var_dump($sentences);\n\
    \  $c = 0;\n  foreach ($sentences as $sentence) {\n    $words = explode(\" \"\
    , $sentence);\n    if ($words[0] == \"I\") $c++;\n  }\n  return $c;\n}\n\nprint(is_bored(\"\
    Hello world\"));\nprint(is_bored(\"The sky is blue. The sun is shining. I love\
    \ this weather\"));", "    return substr_count($S, \"I\");\n}\n\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\") . PHP_EOL;", "   \
    \ $S=str_replace(\"?\", \".\", $S);\n    $S=str_replace(\"!\", \".\", $S);\n \
    \   $S=str_replace(\"..\", \".\", $S);\n    $S=str_replace(\"...\", \".\", $S);\n\
    \    $S=str_replace(\"....\", \".\", $S);\n    $S=str_replace(\".....\", \".\"\
    , $S);\n    $S=str_replace(\"......\", \".\", $S);\n    $S=str_replace(\".......\"\
    , \".\", $S);\n    $S=str_replace(\"........\", \".\", $S);\n    $S=str_replace(\"\
    .........\", \".\", $S);\n    $S=str_replace(\"..........\", \".\", $S);\n   \
    \ $S=str_replace(\"...........\", \".\", $S);\n    $S=str_replace(\"............\"\
    , \".\", $S);\n    $S=str_replace(\".............\", \".\", $S);\n    $S=str_replace(\"\
    ..............\", \".\", $S);\n    $S=str_replace(\"...............\", \".\",\
    \ $S);\n    $S=str_replace(\"..................\", \".\", $S);\n    $S=str_replace(\"\
    ...................\", \".\", $S);\n    $S=str_replace(\"....................\"\
    , \".\", $S);\n    $S=str_replace(\".....................\", \".\", $S);\n   \
    \ $S=str_replace(\"......................\", \".\", $S);\n    $S=str_replace(\"\
    .......................\", \".\", $S);\n    $S=str_replace(\"........................\"\
    , \".\", $S);\n    $S=str_replace(\".........................\", \".\", $S);\n\
    \    $S=str_replace(\"......................... \", \".\", $S);\n    $S=str_replace(\"\
    .........................  \", \".\", $S);\n    $S=str_replace(\".........................\
    \   \", \".\", $S);\n    $S=str_replace(\".........................    \", \"\
    .\", $S);\n    $S=str_replace(\".........................     \", \".\", $S);\n\
    \    $S=str_replace(\".........................      \", \".\", $S);\n    $S=str_replace(\"",
  "    $sentences = preg_split('/[.!?]/', $S);\n    $boredoms = 0;\n    foreach ($sentences\
    \ as $sentence) {\n        $parts = explode(' ', $sentence);\n        if ($parts[0]\
    \ == 'I') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    );\necho \"\\n\";\n", "   return preg_match_all('/I[^!?.]+[.!?]/', $S, $matches);\n\
    }\n$S = \"Hello world\";\n$S = \"The sky is blue. The sun is shining. I love this\
    \ weather\";\n$result = is_bored($S);\necho $result;", "    return substr_count($S,\
    \ 'I');\n}\n\necho is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\");", "\t$i = 0;\n\t$words = preg_split('/(\\.|\\?|\\!)/', $S, -1, PREG_SPLIT_NO_EMPTY);\n\
    \tforeach ($words as $value) {\n\t\tif (strpos($value, 'I') === 0) {\n\t\t\t$i++;\n\
    \t\t}\n\t}\n\treturn $i;\n}", "    $split = explode(\" \", $S);\n    $i = 0;\n\
    \    foreach ($split as $item) {\n        if ($item == \"I\") {\n            $i++;\n\
    \        }\n    }\n    return $i;\n}", "    $S = trim($S);\n    $S = preg_replace('/[.!?]+/',\
    \ '.', $S);\n    $S = preg_replace('/\\s\\.\\s/', '.', $S);\n    $S = preg_replace('/[\
    \ ]+/', ' ', $S);\n    $S = preg_replace('/\\.\\s/', '.', $S);\n    $S = preg_replace('/[\\\
    .]+/', '.', $S);\n    $words = explode(\".\", $S);\n    $boredoms = 0;\n    foreach\
    \ ($words as $word) {\n        if (strtolower(trim($word)) === \"i\") {\n    \
    \        $boredoms++;\n        }\n    }\n    return $boredoms;\n}\necho is_bored(\"\
    Hello world.\");\necho PHP_EOL;\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");\necho PHP_EOL;\necho is_bored(\"I. I love. I love this\
    \ weather.\");\necho PHP_EOL;\necho is_bored(\"I love you. You love me. I love\
    \ this weather\");\necho PHP_EOL;\necho is_bored(\"You are so brave! I'm so brave.\
    \ We are so brave!\");\necho PHP_EOL;\necho is_bored(\"You are so brave! I'm so\
    \ brave. I love this weather!\");\necho PHP_EOL;", "    return preg_match_all('/I[.!?]/',\
    \ $S);\n}", "\t$result = 0;\n\t$S = explode(\".\", $S);\n\t$S = array_map('trim',\
    \ $S);\n\tforeach ($S as $key => $value) {\n\t\tif (substr($value, 0, 1) == \"\
    I\") {\n\t\t\t$result++;\n\t\t}\n\t}\n\treturn $result;\n}\n$result = is_bored(\"\
    Hello world\");\necho $result;", "    $S = preg_split('/[.?!]/', $S);\n    $count\
    \ = 0;\n    foreach ($S as $s) {\n        if (strlen($s) > 0 && strtoupper($s[0])\
    \ == 'I') {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo is_bored(\"Hello world\") . \"\\n\";\necho is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\") . \"\\n\";", "    $sentences = preg_split('/[.!?]/',\
    \ $S);\n    $boredoms = 0;\n    foreach ($sentences as $sentence) {\n        if\
    \ (strpos($sentence, 'I') === 0) {\n            $boredoms++;\n        }\n    }\n\
    \    return $boredoms;\n}\n", "  $boredoms = 0;\n  $sentences = explode('. ',\
    \ $S);\n  foreach ($sentences as $sentence) {\n    $sentence = explode(' ', $sentence);\n\
    \    if ($sentence[0] == 'I') {\n      $boredoms++;\n    }\n  }\n  return $boredoms;\n\
    }", "    $sentences = explode('. ', $S);\n    $num_boredoms = 0;\n    foreach\
    \ ($sentences as $sentence) {\n        $words = explode(' ', $sentence);\n   \
    \     if ($words[0] == 'I') {\n            $num_boredoms++;\n        }\n    }\n\
    \    return $num_boredoms;\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");", "    // Your code goes here.\n    $B = 0;\n    $S\
    \ = explode(\" \", $S);\n    for ($i = 0; $i < count($S); $i++) {\n        if\
    \ ($S[$i] == \"I\") {\n            $B++;\n        }\n    }\n    return $B;\n}\n",
  "    $array = explode(\" \", $S);\n    $result = 0;\n    for ($i = 0; $i < count($array);\
    \ $i++) {\n        if ($array[$i] == \"I\") {\n            $result++;\n      \
    \  }\n    }\n    return $result;\n}\n", "    // split the string into sentences\n\
    \    $sentences = explode(\". \", $S);\n    $sentences = array_map(function($sentence)\
    \ {\n        // remove trailing periods\n        return preg_replace(\"/\\.$/\"\
    , \"\", $sentence);\n    }, $sentences);\n    // count the number of boredoms\n\
    \    $n_boredoms = 0;\n    foreach ($sentences as $sentence) {\n        $sentence\
    \ = explode(\" \", $sentence);\n        if ($sentence[0] == \"I\") {\n       \
    \     $n_boredoms++;\n        }\n    }\n    return $n_boredoms;\n}\necho is_bored(\"\
    I am bored\");", "  $arr = explode(' ', $S);\n  $count = 0;\n  for ($i = 0; $i\
    \ < count($arr); $i++) {\n    if ($arr[$i] == 'I') {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");\necho \"\\n\";", "    return substr_count($S, 'I') -\n\
    \            substr_count($S, 'I ') -\n            substr_count($S, ' I') -\n\
    \            substr_count($S, ' I ');\n}\n\necho(is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\"));\necho(\"\\n\");\n", "  // INSERT YOUR\
    \ CODE HERE\n  $arr = explode(' ', $S);\n  $boredoms = 0;\n  foreach ($arr as\
    \ $key => $val) {\n    if ($val === 'I') {\n      $boredoms++;\n    }\n  }\n \
    \ return $boredoms;\n}\n", "    $S = str_replace('.', ' ', $S);\n    $S = str_replace('?',\
    \ ' ', $S);\n    $S = str_replace('!', ' ', $S);\n    $words = explode(' ', $S);\n\
    \    $count = 0;\n    foreach ($words as $word) {\n        if ($word == 'I') {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    return\
    \ preg_match_all('/I[\\?\\.!]/m', $S);\n}\n", "  return preg_match_all('/\\sI\\\
    s/', $S, $matches);\n}\n", "    $ss = explode(\" \", $S);\n    $n = count($ss);\n\
    \    $res = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($ss[$i] == \"I\"\
    ) {\n            $res++;\n        }\n    }\n    return $res;\n}\necho is_bored(\"\
    I want to go home\");\necho \"\\n\";\necho is_bored(\"Hello world\");\necho \"\
    \\n\";\necho is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    );\necho \"\\n\";", "  $s = explode('.', $S);\n  $r = 0;\n  foreach ($s as $x)\
    \ {\n    if (substr($x, 0, 1) == 'I') {\n      $r++;\n    }\n  }\n  return $r;\n\
    }\n", "  $words = explode(' ',$S);\n  $boredoms = 0;\n  for ($i=0; $i < count($words);\
    \ $i++) {\n    if (preg_match('/^I/',$words[$i])) {\n      $boredoms++;\n    }\n\
    \  }\n  return $boredoms;\n}", "    $count = 0;\n    $words = explode(\" \", $S);\n\
    \    foreach ($words as $word) {\n        if ($word[0] == \"I\") {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}", "\t// store the number\
    \ of boredoms\n\t$boredoms = 0;\n\t// split the string into an array\n\t$sentences\
    \ = explode(\".?!\", $S);\n\t// loop through the array\n\tforeach ($sentences\
    \ as $sentence) {\n\t\t// check if the sentence starts with 'I'\n\t\tif (strpos($sentence,\
    \ \"I\") === 0) {\n\t\t\t// add 1 to the number of boredoms\n\t\t\t$boredoms++;\n\
    \t\t}\n\t}\n\t// return the number of boredoms\n\treturn $boredoms;\n}", "  $boredoms\
    \ = 0;\n  $sentences = explode(\". \", $S);\n  foreach ($sentences as $s) {\n\
    \    if (strpos($s, \"I\") === 0) {\n      $boredoms++;\n    }\n  }\n  return\
    \ $boredoms;\n}", "\t$p = explode(\" \", $S);\n\t$ret = 0;\n\tforeach ($p as $v)\
    \ {\n\t\tif ($v == \"I\") $ret++;\n\t}\n\treturn $ret;\n}\n\n$TESTS = array(\n\
    \t\"Hello world\",\n\t\"The sky is blue. The sun is shining. I love this weather\"\
    ,\n\t\"I love the days when it rains. When the sky goes dark, I know it's going\
    \ to rain. Sometimes I can hear it, like a drum on the roof. I also love to smell\
    \ the rain. It is like a nice perfume. If I had a choice, I would rather it rain\
    \ than to be sunny all the time. I love the rain\",\n\t\"I love the days when\
    \ it rains. When the sky goes dark, I know it's going to rain. Sometimes I can\
    \ hear it, like a drum on the roof. I also love to smell the rain. It is like\
    \ a nice perfume. If I had a choice, I would rather it rain than to be sunny all\
    \ the time. I love the rain\",\n\t\"I love the days when it rains. When the sky\
    \ goes dark, I know it's going to rain. Sometimes I can hear it, like a drum on\
    \ the roof. I also love to smell the rain. It is like a nice perfume. If I had\
    \ a choice, I would rather it rain than to be sunny all the time. I love the rain\"\
    ,\n\t\"I love the days when it rains. When the sky goes dark, I know it's going\
    \ to rain. Sometimes I can hear it, like a drum on the roof. I also love to smell\
    \ the rain. It is like a nice perfume. If I had a choice, I would rather it rain\
    \ than to be sunny all the time. I love the rain\",\n\t\"I love the days when\
    \ it rains. When the sky goes dark, I know it's going to rain. Sometimes I can\
    \ hear it, like a drum on the roof. I also love to smell the rain. It is like\
    \ a nice perfume. If I had a choice, I would rather it rain than to be sunny all\
    \ the time. I love the rain\",\n\t\"I love the days when it rains. When the sky\
    \ goes dark, I know it's going to rain. Sometimes I can hear it, like a drum on\
    \ the roof. I also love", "    $sentences = preg_split('/[.?!]/', $S);\n    $boredoms\
    \ = 0;\n    foreach ($sentences as $s) {\n        $words = explode(' ', $s);\n\
    \        $boredoms += ($words[0] == 'I') ? 1 : 0;\n    }\n    return $boredoms;\n\
    }\n", "  $parts = preg_split('/[.?!]/', $S);\n  $count = 0;\n  foreach ($parts\
    \ as $part) {\n    if (preg_match('/^\\s*I/', $part)) {\n      $count++;\n   \
    \ }\n  }\n  return $count;\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\") . \"\\n\";\necho is_bored(\"I like cats\") . \"\\n\";",
  "  $sentences = array_filter(explode(' ', $S));\n  $count = 0;\n  foreach ($sentences\
    \ as $sentence) {\n    if (preg_match('#^I[.]?$#', $sentence)) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}", "    $sentences = explode('.|?|!', $S);\n \
    \   $count = 0;\n    foreach ($sentences as $i => $sentence) {\n        $words\
    \ = explode(' ', $sentence);\n        if ($words[0] == 'I') {\n            $count\
    \ += 1;\n        }\n    }\n    return $count;\n}", "  return substr_count($S,\
    \ 'I');\n}\n", "    $sentences = explode(\". \", $S);\n    $boredoms = 0;\n  \
    \  foreach ($sentences as $sentence) {\n        if (strpos($sentence, \"I\") ===\
    \ 0) {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n",
  "\treturn (substr_count($S, \"I\"));\n}\necho is_bored(\"Hello world\");\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");\n", "    $S = explode(\"\
    \ \", $S);\n    $count = 0;\n    foreach ($S as $word) {\n        if ($word ==\
    \ \"I\") {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    echo is_bored(\"I am so bored.\");\n", "    $is_bored = 0;\n    $words = explode(\"\
    \ \", $S);\n    foreach ($words as $w) {\n        if ($w == \"I\") {\n       \
    \     $is_bored++;\n        }\n    }\n    return $is_bored;\n}\n\necho is_bored(\"\
    Hello world\") . \"\\n\";\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\") . \"\\n\";\n", "    $r = preg_match_all('/I/', $S, $m);\n\
    \    return $r;\n}\n", "    $arr = explode(' ', $S);\n    $boredoms = 0;\n   \
    \ for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == 'I') {\n   \
    \         $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n", "  // Replace\
    \ me with your code\n}", "  $S = explode(\" \", $S);\n  $boredoms = 0;\n  for\
    \ ($i = 0; $i < count($S); $i++) {\n    if ($S[$i] == \"I\") {\n      if ($i ==\
    \ 0) {\n        $boredoms++;\n      } else if ($S[$i - 1] == \".\") {\n      \
    \  $boredoms++;\n      } else if ($S[$i - 1] == \"?\") {\n        $boredoms++;\n\
    \      } else if ($S[$i - 1] == \"!\") {\n        $boredoms++;\n      }\n    }\n\
    \  }\n  return $boredoms;\n}", "    $S = preg_split('/[.?!]/', $S);\n    $I =\
    \ preg_grep('/^\\s*I/', $S);\n    return count($I);\n}\n$S = \"The sky is blue.\
    \ The sun is shining. I love this weather\";\necho is_bored($S);", "    $sentences\
    \ = explode('. ', $S);\n    $boredom_count = 0;\n    foreach ($sentences as $sentence)\
    \ {\n        if (substr($sentence, 0, 2) == 'I ') {\n            $boredom_count++;\n\
    \        }\n    }\n    return $boredom_count;\n}\n", "    $s = explode(\".\",\
    \ $S);\n    $boredoms = 0;\n    foreach ($s as $sentence) {\n        $words =\
    \ explode(\" \", $sentence);\n        if (trim($words[0]) == \"I\") {\n      \
    \      $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n", "  $arr =\
    \ explode(' ', $S);\n  $arr_len = count($arr);\n  $boredoms = 0;\n  $is_capital\
    \ = false;\n  for ($i = 0; $i < $arr_len; $i++) {\n    if ($is_capital) {\n  \
    \    $boredoms++;\n      $is_capital = false;\n    }\n    if ($arr[$i][0] == 'I')\
    \ {\n      $is_capital = true;\n    }\n  }\n  return $boredoms;\n}\necho is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\");", "    $S = str_split($S);\n\
    \    $boredoms = 0;\n    for ($i = 0; $i < count($S); $i++) {\n        if (strtoupper($S[$i])\
    \ == 'I') {\n            $boredoms++;\n        }\n    }\n    return $boredoms;\n\
    }", "    $count = 0;\n    $s = explode(\" \", $S);\n    foreach ($s as $a) {\n\
    \        if ($a == \"I\") {\n            $count = $count + 1;\n        }\n   \
    \ }\n    return $count;\n}\n", "    $split_string = explode(' ', $S);\n    $result\
    \ = [];\n    $boredom = 0;\n    foreach ($split_string as $word) {\n        $result[]\
    \ = $word;\n        if (isset($result[0]) && $result[0] == 'I') {\n          \
    \  $boredom++;\n        }\n    }\n    return $boredom;\n}\necho is_bored(\"The\
    \ sky is blue. The sun is shining. I love this weather\") . \"\\n\";\necho is_bored(\"\
    Hello world\") . \"\\n\";\necho is_bored(\"I do not want to go to the dentist.\
    \ I want to go to the cinema\") . \"\\n\";\necho is_bored(\"I am going to the\
    \ cinema today. I love films\") . \"\\n\";\necho is_bored(\"There is a lot of\
    \ traffic on the road. I am going to be late for work. I do not like driving in\
    \ the city\") . \"\\n\";\necho is_bored(\"I am going to the cinema today. I love\
    \ films. I am going to the cinema today. I love films. I am going to the cinema\
    \ today. I love films. I am going to the cinema today. I love films. I am going\
    \ to the cinema today. I love films. I am going to the cinema today. I love films.\
    \ I am going to the cinema today. I love films. I am going to the cinema today.\
    \ I love films. I am going to the cinema today. I love films. I am going to the\
    \ cinema today. I love films. I am going to the cinema today. I love films. I\
    \ am going to the cinema today. I love films. I am going to the cinema today.\
    \ I love films. I am going to the cinema today. I love films. I am going to the\
    \ cinema today. I love films. I am going to the cinema today. I love films. I\
    \ am going to the cinema today. I love films. I am going to the cinema today.\
    \ I love films. I am going to the cinema today. I love films. I am going to the\
    \ cinema today. I love films. I am going to the cinema today. I love films. I\
    \ am going to the cinema today. I love films. I am going to the cinema today.\
    \ I love films. I am going", "    return count(array_filter(explode('.', $S),\
    \ function($s) {\n        return $s && strtolower(substr($s, 0, 1)) == 'i';\n\
    \    }));\n}\necho is_bored(\"Hello world\").\"\\n\";\necho is_bored(\"The sky\
    \ is blue. The sun is shining. I love this weather\");", "    $sentences = explode('.',\
    \ $S);\n    $boredoms = 0;\n    foreach ($sentences as $sentence) {\n        $words\
    \ = explode(' ', $sentence);\n        if ($words[0] == 'I') $boredoms++;\n   \
    \ }\n    return $boredoms;\n}\necho is_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\");", "    // remove unrequired characters\n    $S = preg_replace('/[^\\\
    w\\s.?!]/', '', $S);\n    // split into sentences\n    $sentences = preg_split('/[.?!]/',\
    \ $S);\n    // count I sentences\n    $count = 0;\n    foreach ($sentences as\
    \ $sentence) {\n        if (substr($sentence, 0, strlen('I')) == 'I') {\n    \
    \        $count++;\n        }\n    }\n    return $count;\n}", "    $parts = preg_split('/[.?!]/',\
    \ $S);\n    $parts = array_filter($parts);\n    $result = 0;\n    foreach ($parts\
    \ as $part) {\n        $arr = explode(' ', $part);\n        if ($arr[0] == 'I')\
    \ {\n            $result++;\n        }\n    }\n    return $result;\n}\n", "  //\
    \ ... your code goes here ...\n  $S = preg_split('/[.?!]/', $S);\n  $i = 0;\n\
    \  foreach ($S as $s) {\n    if (preg_match('/^\\s*I\\s/', $s)) {\n      $i++;\n\
    \    }\n  }\n  return $i;\n}", "    $n = 0;\n    $sentence = explode(\".\", $S);\n\
    \    foreach ($sentence as $s) {\n        $s = trim($s);\n        if (strpos($s,\
    \ \"I\") === 0) {\n            $n++;\n        }\n    }\n    return $n;\n}\n\n\
    var_dump(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ));", "    return count(array_filter(explode(\" \", $S), function($el) {\n   \
    \     return $el == \"I\";\n    }));\n}\necho is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\");\necho \"<br/>\";\necho is_bored(\"Hello\
    \ world\");", "    $sentences = preg_split('/[.?!]/', $S);\n    $counter = 0;\n\
    \    foreach ($sentences as $sentence) {\n        if (preg_match('/^I/', $sentence))\
    \ {\n            $counter++;\n        }\n    }\n    return $counter;\n}\n\n$assertions\
    \ = array(\n    array(\n        'input' => 'Hello world',\n        'expected'\
    \ => 0\n    ),\n    array(\n        'input' => 'The sky is blue. The sun is shining.\
    \ I love this weather',\n        'expected' => 1\n    ),\n    array(\n       \
    \ 'input' => 'The sky is blue. The sun is shining. I love this weather! The weather\
    \ is so nice I love it',\n        'expected' => 2\n    ),\n    array(\n      \
    \  'input' => 'The sky is blue. The sun is shining. I love this weather? Yeah,\
    \ it is really nice and I love it',\n        'expected' => 2\n    ),\n    array(\n\
    \        'input' => 'The sky is blue. The sun is shining. I love this weather.\
    \ It is raining. I hate the rain',\n        'expected' => 2\n    ),\n    array(\n\
    \        'input' => 'The sky is blue. The sun is shining. I love this weather.\
    \ It is raining. I hate the rain.',\n        'expected' => 2\n    ),\n    array(\n\
    \        'input' => 'The sky is blue. The sun is shining. I love this weather.\
    \ It is raining. I hate the rain. The raining is so boring',\n        'expected'\
    \ => 2\n    ),\n    array(\n        'input' => 'The sky is blue. The sun is shining.\
    \ I love this weather. It is raining. I hate the rain. The raining is so boring.\
    \ I am not happy today',\n        'expected' => 3\n    ),\n    array(\n      \
    \  'input' => 'The sky is blue. The sun is shining. I love this weather. It is\
    \ raining. I hate the rain. The raining is so boring. I am not happy today. I\
    \ do not want to go to school today',\n        'expected' => 4\n    ),\n    array(\n\
    \        '", "\treturn preg_match_all('/I/', $S, $matches);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

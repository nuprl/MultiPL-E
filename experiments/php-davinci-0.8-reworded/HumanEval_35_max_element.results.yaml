language: php
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$res = $l[0];\n\tforeach ($l as $e) {\n\t\
    \tif ($e > $res) {\n\t\t\t$res = $e;\n\t\t}\n\t}\n\treturn $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        throw new\
    \ Exception('Empty Array');\n    }\n\n    if (count($l) == 1) {\n        return\
    \ $l[0];\n    }\n\n    $max_element = max_element(array_slice($l, 1));\n    if\
    \ ($l[0] > $max_element) {\n        return $l[0];\n    } else {\n        return\
    \ $max_element;\n    }\n}\n\ntry {\n    $l = array();\n    echo max_element($l)\
    \ . PHP_EOL;\n} catch (Exception $e) {\n    echo $e->getMessage() . PHP_EOL;\n\
    }\n\ntry {\n    $l = array(1);\n    echo max_element($l) . PHP_EOL;\n} catch (Exception\
    \ $e) {\n    echo $e->getMessage() . PHP_EOL;\n}\n\ntry {\n    $l = array(2, 3);\n\
    \    echo max_element($l) . PHP_EOL;\n} catch (Exception $e) {\n    echo $e->getMessage()\
    \ . PHP_EOL;\n}\n\ntry {\n    $l = array(2, 3, 1);\n    echo max_element($l) .\
    \ PHP_EOL;\n} catch (Exception $e) {\n    echo $e->getMessage() . PHP_EOL;\n}\n\
    \ntry {\n    $l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\n    echo max_element($l)\
    \ . PHP_EOL;\n} catch (Exception $e) {\n    echo $e->getMessage() . PHP_EOL;\n\
    }\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Empty Array

    1

    3

    3

    123

    '
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return count($l) ? $l[0] : null;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp32rx0_jo.php:16\n\
    Stack trace:\n#0 /tmp/tmp32rx0_jo.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp32rx0_jo.php\
    \ on line 16\n"
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $v)\
    \ {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $m = $l[0];\n    foreach ($l as $x) {\n\
    \        if ($x > $m) {\n            $m = $x;\n        }\n    }\n    return $m;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return array_reduce($l, function($max,\
    \ $i) {\n        return $i > $max ? $i : $max;\n    }, $l[0]);\n}\necho max_element(array(1,\
    \ 2, 3)) . \"\\n\";\necho max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10)) . \"\\n\";\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3

    123

    '
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t// Your code goes here.\n\t$max = $l[0];\n\
    \t$len = count($l);\n\tfor ($i = 1; $i < $len; $i++) {\n\t\tif ($l[$i] > $max)\
    \ {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (sizeof($l) == 0) {\n    return null;\n\
    \  }\n  $max = $l[0];\n  for ($i = 1; $i < sizeof($l); $i++) {\n    if ($l[$i]\
    \ > $max) {\n      $max = $l[$i];\n    }\n  }\n  return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return false;\n\
    \  }\n  else {\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \      if ($l[$i] > $max) {\n        $max = $l[$i];\n      }\n    }\n    return\
    \ $max;\n  }\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $el)\
    \ {\n        if ($el > $max) {\n            $max = $el;\n        }\n    }\n  \
    \  return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if ($l === array()) {\n    return null;\n\
    \  } else {\n    $max = $l[0];\n    foreach ($l as $element) {\n      if ($element\
    \ > $max) {\n        $max = $element;\n      }\n    }\n    return $max;\n  }\n\
    }\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) === 0) {\n        return\
    \ null;\n    } else {\n        $max = $l[0];\n        for ($i = 1; $i < count($l);\
    \ $i++) {\n            if ($l[$i] > $max) {\n                $max = $l[$i];\n\
    \            }\n        }\n        return $max;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tforeach ($l as $e) {\n\t\
    \tif ($e > $max) {\n\t\t\t$max = $e;\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $v = $l[0];\n    foreach ($l as $i) {\n\
    \        if ($i > $v) {\n            $v = $i;\n        }\n    }\n    return $v;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $val)\
    \ {\n        if ($val > $max) {\n            $max = $val;\n        }\n    }\n\
    \    return $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max= $l[0];\n\tfor ($i=1; $i<count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max= $l[$i];\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238

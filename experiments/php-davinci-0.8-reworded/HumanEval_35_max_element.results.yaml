language: php
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$res = $l[0];\n\tforeach ($l as $e) {\n\t\
    \tif ($e > $res) {\n\t\t\t$res = $e;\n\t\t}\n\t}\n\treturn $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        throw new\
    \ Exception('Empty Array');\n    }\n\n    if (count($l) == 1) {\n        return\
    \ $l[0];\n    }\n\n    $max_element = max_element(array_slice($l, 1));\n    if\
    \ ($l[0] > $max_element) {\n        return $l[0];\n    } else {\n        return\
    \ $max_element;\n    }\n}\n\ntry {\n    $l = array();\n    echo max_element($l)\
    \ . PHP_EOL;\n} catch (Exception $e) {\n    echo $e->getMessage() . PHP_EOL;\n\
    }\n\ntry {\n    $l = array(1);\n    echo max_element($l) . PHP_EOL;\n} catch (Exception\
    \ $e) {\n    echo $e->getMessage() . PHP_EOL;\n}\n\ntry {\n    $l = array(2, 3);\n\
    \    echo max_element($l) . PHP_EOL;\n} catch (Exception $e) {\n    echo $e->getMessage()\
    \ . PHP_EOL;\n}\n\ntry {\n    $l = array(2, 3, 1);\n    echo max_element($l) .\
    \ PHP_EOL;\n} catch (Exception $e) {\n    echo $e->getMessage() . PHP_EOL;\n}\n\
    \ntry {\n    $l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\n    echo max_element($l)\
    \ . PHP_EOL;\n} catch (Exception $e) {\n    echo $e->getMessage() . PHP_EOL;\n\
    }\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Empty Array

    1

    3

    3

    123

    '
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return count($l) ? $l[0] : null;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp32rx0_jo.php:16\n\
    Stack trace:\n#0 /tmp/tmp32rx0_jo.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp32rx0_jo.php\
    \ on line 16\n"
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $v)\
    \ {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $m = $l[0];\n    foreach ($l as $x) {\n\
    \        if ($x > $m) {\n            $m = $x;\n        }\n    }\n    return $m;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return array_reduce($l, function($max,\
    \ $i) {\n        return $i > $max ? $i : $max;\n    }, $l[0]);\n}\necho max_element(array(1,\
    \ 2, 3)) . \"\\n\";\necho max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10)) . \"\\n\";\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3

    123

    '
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t// Your code goes here.\n\t$max = $l[0];\n\
    \t$len = count($l);\n\tfor ($i = 1; $i < $len; $i++) {\n\t\tif ($l[$i] > $max)\
    \ {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (sizeof($l) == 0) {\n    return null;\n\
    \  }\n  $max = $l[0];\n  for ($i = 1; $i < sizeof($l); $i++) {\n    if ($l[$i]\
    \ > $max) {\n      $max = $l[$i];\n    }\n  }\n  return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return false;\n\
    \  }\n  else {\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \      if ($l[$i] > $max) {\n        $max = $l[$i];\n      }\n    }\n    return\
    \ $max;\n  }\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $el)\
    \ {\n        if ($el > $max) {\n            $max = $el;\n        }\n    }\n  \
    \  return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if ($l === array()) {\n    return null;\n\
    \  } else {\n    $max = $l[0];\n    foreach ($l as $element) {\n      if ($element\
    \ > $max) {\n        $max = $element;\n      }\n    }\n    return $max;\n  }\n\
    }\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) === 0) {\n        return\
    \ null;\n    } else {\n        $max = $l[0];\n        for ($i = 1; $i < count($l);\
    \ $i++) {\n            if ($l[$i] > $max) {\n                $max = $l[$i];\n\
    \            }\n        }\n        return $max;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tforeach ($l as $e) {\n\t\
    \tif ($e > $max) {\n\t\t\t$max = $e;\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $v = $l[0];\n    foreach ($l as $i) {\n\
    \        if ($i > $v) {\n            $v = $i;\n        }\n    }\n    return $v;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $val)\
    \ {\n        if ($val > $max) {\n            $max = $val;\n        }\n    }\n\
    \    return $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max= $l[0];\n\tfor ($i=1; $i<count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max= $l[$i];\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $result = null;\n    for ($i = 0; $i <\
    \ count($l); $i++) {\n        if ($result === null || $l[$i] > $result) {\n  \
    \          $result = $l[$i];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t// Insert your code here...\n\t$max = $l[0];\n\
    \tforeach ($l as $value) {\n\t\tif ($value > $max) {\n\t\t\t$max = $value;\n\t\
    \t}\n\t}\n\treturn $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $result = $l[0];\n    foreach ($l as $e)\
    \ {\n        if ($e > $result) {\n            $result = $e;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  // REPLACE THIS CODE WITH YOUR max_element()\
    \ METHOD\n  if (sizeof($l) == 0) {\n    return 0;\n  } else {\n    $max = $l[0];\n\
    \    foreach ($l as $val) {\n      if ($val > $max) {\n        $max = $val;\n\
    \      }\n    }\n    return $max;\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  foreach ($l as $i) {\n\
    \    if ($i > $max) {\n      $max = $i;\n    }\n  }\n  return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $m = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n        }\n \
    \   }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) === 0) {\n        return\
    \ null;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  foreach ($l as $element)\
    \ {\n    if ($element > $max) {\n      $max = $element;\n    }\n  }\n  return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return array_reduce($l, function($acc,\
    \ $x) {\n        return $x > $acc ? $x : $acc;\n    }, $l[0]);\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$n = count($l);\n\t$max = $l[0];\n\tfor\
    \ ($i = 1; $i < $n; $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\t\
    \t}\n\t}\n\treturn $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $acc = $l[0];\n    foreach (array_slice($l,\
    \ 1) as $el) {\n        if ($el > $acc) {\n            $acc = $el;\n        }\n\
    \    }\n    return $acc;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = 0;\n    foreach ($l as $key =>\
    \ $value) {\n        if ($value > $max) {\n            $max = $value;\n      \
    \  }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $ret = PHP_INT_MIN;\n    foreach ($l as\
    \ $e) {\n        if ($e > $ret) {\n            $ret = $e;\n        }\n    }\n\
    \    return $ret;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (sizeof($l) == 0) {\n    return false;\n\
    \  }\n  $max = $l[0];\n  for ($i = 1; $i < sizeof($l); $i++) {\n    if ($l[$i]\
    \ > $max) {\n      $max = $l[$i];\n    }\n  }\n  return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    // Your code here.\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3a_2ffuz.php:15\n\
    Stack trace:\n#0 /tmp/tmp3a_2ffuz.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp3a_2ffuz.php\
    \ on line 15\n"
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return NULL;\n\
    \  }\n  $current = $l[0];\n  foreach ($l as $element) {\n    if ($element > $current)\
    \ {\n      $current = $element;\n    }\n  }\n  return $current;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  foreach ($l as $value)\
    \ {\n    if ($value > $max) {\n      $max = $value;\n    }\n  }\n  return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $el)\
    \ {\n        if ($max === NULL || $el > $max) {\n            $max = $el;\n   \
    \     }\n    }\n    return $max;\n}\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\treturn $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm1y9tf4o.php:17\n\
    Stack trace:\n#0 /tmp/tmpm1y9tf4o.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpm1y9tf4o.php\
    \ on line 17\n"
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if(count($l) == 0) {\n        return null;\n\
    \    } else {\n        $max = $l[0];\n        foreach($l as $v) {\n          \
    \  if($v > $max) {\n                $max = $v;\n            }\n        }\n   \
    \     return $max;\n    }\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposk96l4g.php:16\n\
    Stack trace:\n#0 /tmp/tmposk96l4g.php(20): test()\n#1 {main}\n  thrown in /tmp/tmposk96l4g.php\
    \ on line 16\n"
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  foreach ($l as $item) {\n\
    \    if ($item > $max) $max = $item;\n  }\n  return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if(!isset($l[0]))\n        return;\n \
    \   $max = $l[0];\n    foreach($l as $v) {\n        if($v > $max)\n          \
    \  $max = $v;\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $i)\
    \ {\n        if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        return\
    \ 0;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n   \
    \     if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n   \
    \ return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        echo \"\
    ERROR: empty array!\\n\";\n        return 0;\n    }\n\n    $m = $l[0];\n    for\
    \ ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $m) {\n            $m\
    \ = $l[$i];\n        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $m = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n        }\n \
    \   }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (empty($l)) {\n        return null;\n\
    \    } else if (count($l) == 1) {\n        return $l[0];\n    } else {\n     \
    \   $max_tail = max_element(array_slice($l, 1));\n        return $l[0] > $max_tail\
    \ ? $l[0] : $max_tail;\n    }\n}\n\n$arr = array(5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10);\n$max = max_element($arr);\necho 'The maximum element in the array\
    \ is ' . $max . \"\\n\";\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'The maximum element in the array is 123

    '
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $n = count($l);\n    $max = $l[0];\n \
    \   for ($i = 1; $i < $n; $i++) {\n        if ($l[$i] > $max) {\n            $max\
    \ = $l[$i];\n        }\n    }\n    return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) > 0) {\n        $result\
    \ = $l[0];\n        for ($i = 1; $i < count($l); $i++) {\n            if ($l[$i]\
    \ > $result) {\n                $result = $l[$i];\n            }\n        }\n\
    \        return $result;\n    } else {\n        return null;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return\
    \ $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return 0;\n \
    \ } else {\n    $e = array_shift($l);\n    return max($e, max_element($l));\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $a = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $a) $a = $l[$i];\n    }\n    return $a;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tforeach ($l as $v) {\n\t\
    \tif ($v > $max) {\n\t\t\t$max = $v;\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if ($l == null) return null;\n  $max = $l[0];\n\
    \  foreach ($l as $e) {\n    if ($e > $max) $max = $e;\n  }\n  return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $n = count($l);\n    $max = $l[0];\n \
    \   for ($i = 1; $i < $n; $i++) {\n        if ($l[$i] > $max) {\n            $max\
    \ = $l[$i];\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = 0;\n  foreach ($l as $num) {\n  \
    \  if ($num > $max) $max = $num;\n  }\n  return $max;\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        return\
    \ NULL;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\tif (count($l) == 0) {\n\t\treturn 0;\n\t\
    }\n\t$k = $l[0];\n\tforeach ($l as $v) {\n\t\tif ($v > $k) {\n\t\t\t$k = $v;\n\
    \t\t}\n\t}\n\treturn $k;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$m = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $m) {\n\t\t\t$m = $l[$i];\n\t\t}\n\t}\n\treturn $m;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  // TODO\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpacj2zhg9.php:16\n\
    Stack trace:\n#0 /tmp/tmpacj2zhg9.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpacj2zhg9.php\
    \ on line 16\n"
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    // TODO\n    $max = $l[0];\n    foreach\
    \ ($l as $num) {\n        if ($num > $max) {\n            $max = $num;\n     \
    \   }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tforeach ($l as $e) {\n\t\
    \tif ($e > $max) $max = $e;\n\t}\n\treturn $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = NULL;\n  foreach ($l as $i) {\n \
    \   if ($max == NULL || $i > $max) {\n      $max = $i;\n    }\n  }\n  return $max;\n\
    }\n\necho max_element(array(1, 2, 3));\necho \"\\n\";\necho max_element(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3

    123

    '
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (empty($l)) {\n        return 0;\n\
    \    }\n    $m = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] > $m) {\n            $m = $l[$i];\n        }\n    }\n    return $m;\n\
    }\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tforeach ($l as $i) {\n\t\
    \tif ($i > $max) {\n\t\t\t$max = $i;\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tforeach ($l as $val) {\n\
    \t\tif ($val > $max) {\n\t\t\t$max = $val;\n\t\t}\n\t}\n\treturn $max;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if ($l === array()) {\n        return\
    \ false;\n    } else {\n        $max = $l[0];\n        for ($i = 1; $i < count($l);\
    \ $i++) {\n            if ($l[$i] > $max) {\n                $max = $l[$i];\n\
    \            }\n        }\n        return $max;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t// PHP 5.6\n\t// $max = max($l);\n\t$max\
    \ = $l[0];\n\tforeach ($l as $x) {\n\t\tif ($x > $max) {\n\t\t\t$max = $x;\n\t\
    \t}\n\t}\n\treturn $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = -INF;\n    foreach ($l as $element)\
    \ {\n        if ($element > $max) {\n            $max = $element;\n        }\n\
    \    }\n    return $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tforeach ($l as $e) {\n\t\
    \tif ($e > $max) {\n\t\t\t$max = $e;\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tforeach ($l as $n) {\n\t\
    \tif ($n > $max) {\n\t\t\t$max = $n;\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return array_reduce($l, function($a, $b)\
    \ { return $a > $b ? $a : $b; });\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $res = 0;\n  foreach ($l as $i) {\n    if\
    \ ($i > $res) {\n      $res = $i;\n    }\n  }\n  return $res;\n}\n\necho max_element(array(1,\
    \ 2, 3)), \"\\n\";\necho max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)),\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3

    123

    '
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return reduce(function($prev, $curr) {\n\
    \        return $prev > $curr ? $prev : $curr;\n    }, $l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function reduce() in /tmp/tmpndusinu4.php:8\n\
    Stack trace:\n#0 /tmp/tmpndusinu4.php(14): max_element(Array)\n#1 /tmp/tmpndusinu4.php(18):\
    \ candidate(Array)\n#2 /tmp/tmpndusinu4.php(22): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpndusinu4.php on line 8\n"
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return max($l);\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\tif (sizeof($l) < 1) {\n\t\treturn False;\n\
    \t} else {\n\t\t$max = $l[0];\n\t\tforeach ($l as $i) {\n\t\t\tif ($i > $max)\
    \ {\n\t\t\t\t$max = $i;\n\t\t\t}\n\t\t}\n\t\treturn $max;\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $m = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $m) {\n      $m = $l[$i];\n    }\n  }\n  return $m;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = -1;\n\tforeach ($l as $x) {\n\t\t\
    if ($x > $max) {\n\t\t\t$max = $x;\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if(count($l) == 0) {\n        return null;\n\
    \    }\n    if(count($l) == 1) {\n        return $l[0];\n    }\n    $m = max_element(array_slice($l,\
    \ 1));\n    if($l[0] > $m) {\n        return $l[0];\n    }\n    return $m;\n}\n\
    \nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $l = $l;\n  $max = 0;\n  for ($i = 0; $i\
    \ < count($l); $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n\
    \  }\n  return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return reduce($l, function($a, $b) {\n \
    \   return $a > $b ? $a : $b;\n  });\n}\n\nfunction candidate(...$args) {\n  \
    \  return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function reduce() in /tmp/tmpgv39q6qt.php:8\n\
    Stack trace:\n#0 /tmp/tmpgv39q6qt.php(14): max_element(Array)\n#1 /tmp/tmpgv39q6qt.php(18):\
    \ candidate(Array)\n#2 /tmp/tmpgv39q6qt.php(22): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpgv39q6qt.php on line 8\n"
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $f = function($a, $b) {\n    return $a >\
    \ $b ? $a : $b;\n  };\n  return foldr($f, $l[0], $l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function foldr() in /tmp/tmpp35rnyd0.php:11\n\
    Stack trace:\n#0 /tmp/tmpp35rnyd0.php(15): max_element(Array)\n#1 /tmp/tmpp35rnyd0.php(19):\
    \ candidate(Array)\n#2 /tmp/tmpp35rnyd0.php(23): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpp35rnyd0.php on line 11\n"
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    // TODO: Your code here.\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_s4tmtjg.php:16\n\
    Stack trace:\n#0 /tmp/tmp_s4tmtjg.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp_s4tmtjg.php\
    \ on line 16\n"
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return 0;\n \
    \ }\n  $res = $l[0];\n  for ($i = 1; $i < count($l); $i++) {\n    if ($l[$i] >\
    \ $res) {\n      $res = $l[$i];\n    }\n  }\n  return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) === 0) {\n        return\
    \ 0;\n    } else {\n        $last = array_pop($l);\n        return max($last,\
    \ max_element($l));\n    }\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return reduce('max', 0, $l);\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function reduce() in /tmp/tmp97wesb25.php:8\n\
    Stack trace:\n#0 /tmp/tmp97wesb25.php(12): max_element(Array)\n#1 /tmp/tmp97wesb25.php(16):\
    \ candidate(Array)\n#2 /tmp/tmp97wesb25.php(20): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp97wesb25.php on line 8\n"
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return max($l);\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return $l[0] == null ? null :\n    count($l)\
    \ == 1 ? $l[0] :\n    $l[0] > max_element(array_slice($l, 1)) ? $l[0] :\n    max_element(array_slice($l,\
    \ 1));\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either
    `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpld3l6sp3.php on line
    8

    '
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return false;\n\
    \  }\n  $max = $l[0];\n  foreach ($l as $i) {\n    if ($i > $max) {\n      $max\
    \ = $i;\n    }\n  }\n  return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = -INF;\n    foreach ($l as $item)\
    \ {\n        if ($item > $max) {\n            $max = $item;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return null;\n\
    \  } else {\n    $max = $l[0];\n    foreach ($l as $x) {\n      if ($x > $max)\
    \ {\n        $max = $x;\n      }\n    }\n    return $max;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t// your code goes here\n\treturn NULL;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmkdobn4.php:17\n\
    Stack trace:\n#0 /tmp/tmpzmkdobn4.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpzmkdobn4.php\
    \ on line 17\n"
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\treturn $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm1y9tf4o.php:17\n\
    Stack trace:\n#0 /tmp/tmpm1y9tf4o.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpm1y9tf4o.php\
    \ on line 17\n"
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        return\
    \ 0;\n    } else {\n        $max = $l[0];\n        for ($i = 1; $i < count($l);\
    \ $i++) {\n            if ($l[$i] > $max) {\n                $max = $l[$i];\n\
    \            }\n        }\n        return $max;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    // your code here\n    $big= 0;\n    foreach\
    \ ($l as $v) {\n        if ($v > $big) {\n            $big = $v;\n        }\n\
    \    }\n    return $big;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return array_reduce($l, function($a, $b)\
    \ {\n    return $a < $b ? $b : $a;\n  });\n}\n\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return array_reduce($l, function($acc, $i)\
    \ {\n    return max($acc, $i);\n  }, $l[0]);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplfaa770f.php:16\n\
    Stack trace:\n#0 /tmp/tmplfaa770f.php(20): test()\n#1 {main}\n  thrown in /tmp/tmplfaa770f.php\
    \ on line 16\n"
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return (count($l) == 0) ? 0 : max($l);\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[array_search(max($l), $l)];\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $m = 0;\n    foreach ($l as $x) {\n  \
    \      if ($x > $m) {\n            $m = $x;\n        }\n    }\n    return $m;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $val)\
    \ {\n        if ($val > $max) {\n            $max = $val;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  foreach ($l as $e) {\n\
    \    if ($e > $max) {\n      $max = $e;\n    }\n  }\n  return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_slice($l, 1);\n    if (count($l)\
    \ == 0) {\n        return $l[0];\n    } else {\n        return max($l[0], max_element($l));\n\
    \    }\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmp9x813fgh.php on line 10


    Warning: Undefined array key 0 in /tmp/tmp9x813fgh.php on line 10

    '
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\tif (empty($l)) return 0;\n\t$max = $l[0];\n\
    \tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] > $max) $max = $l[$i];\n\
    \t}\n\treturn $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $a = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $a) {\n            $a = $l[$i];\n        }\n \
    \   }\n    return $a;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = 0;\n    foreach ($l as $value)\
    \ {\n        if ($value > $max) {\n            $max = $value;\n        }\n   \
    \ }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $size = count($l);\n    if ($size == 0)\
    \ {\n        return null;\n    } else if ($size == 1) {\n        return $l[0];\n\
    \    } else {\n        $half = $size / 2;\n        $left = array_slice($l, 0,\
    \ $half);\n        $right = array_slice($l, $half);\n        $leftMax = max_element($left);\n\
    \        $rightMax = max_element($right);\n        return $leftMax > $rightMax\
    \ ? $leftMax : $rightMax;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpuc0uenu8.php
    on line 15


    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpuc0uenu8.php
    on line 16


    Deprecated: Implicit conversion from float 5.5 to int loses precision in /tmp/tmpuc0uenu8.php
    on line 15


    Deprecated: Implicit conversion from float 5.5 to int loses precision in /tmp/tmpuc0uenu8.php
    on line 16


    Deprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpuc0uenu8.php
    on line 15


    Deprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpuc0uenu8.php
    on line 16


    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpuc0uenu8.php
    on line 15


    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpuc0uenu8.php
    on line 16


    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpuc0uenu8.php
    on line 15


    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpuc0uenu8.php
    on line 16


    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpuc0uenu8.php
    on line 15


    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpuc0uenu8.php
    on line 16

    '
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return array_reduce($l, function($a, $b)\
    \ {\n        return $a > $b ? $a : $b;\n    });\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\treturn max($l);\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposk96l4g.php:16\n\
    Stack trace:\n#0 /tmp/tmposk96l4g.php(20): test()\n#1 {main}\n  thrown in /tmp/tmposk96l4g.php\
    \ on line 16\n"
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if ($l === array()) {\n        return\
    \ NULL;\n    } else if (count($l) === 1) {\n        return $l[0];\n    } else\
    \ {\n        $tail = array_slice($l, 1);\n        $max_in_tail = max_element($tail);\n\
    \        if ($l[0] > $max_in_tail) {\n            return $l[0];\n        } else\
    \ {\n            return $max_in_tail;\n        }\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return  ((count($l)==0) ? 0 : max($l));\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo0yo5b0.php:17\n\
    Stack trace:\n#0 /tmp/tmpbo0yo5b0.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpbo0yo5b0.php\
    \ on line 17\n"
  timestamp: 1659977897
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (empty($l)) {\n        return;\n  \
    \  }\n    $result = array_shift($l);\n    return max_element_helper($l, $result);\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function max_element_helper()\
    \ in /tmp/tmpbzayshhc.php:12\nStack trace:\n#0 /tmp/tmpbzayshhc.php(16): max_element(Array)\n\
    #1 /tmp/tmpbzayshhc.php(20): candidate(Array)\n#2 /tmp/tmpbzayshhc.php(24): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbzayshhc.php on line 12\n"
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $size = count($l);\n    $max = 0;\n  \
    \  for ($i = 0; $i < $size; $i++) {\n        if ($l[$i] > $max) {\n          \
    \  $max = $l[$i];\n        }\n    }\n    return $max;\n}\n\n$l = array(1, 2, 3);\n\
    echo \"Max element in array l = array(1, 2, 3) is: \".max_element($l).\"\\n\"\
    ;\n$l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\necho \"Max element in array\
    \ l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10) is: \".max_element($l).\"\\\
    n\";\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: 'Max element in array l = array(1, 2, 3) is: 3

    Max element in array l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10) is: 123

    '
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $result = $l[0];\n  foreach ($l as $el)\
    \ {\n    if ($el > $result) $result = $el;\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    throw new Exception('cannot\
    \ call max_element() with an empty array');\n  }\n  $max = $l[0];\n  for ($i =\
    \ 1; $i < count($l); $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n\
    \    }\n  }\n  return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) return;\n    $max\
    \ = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $max)\
    \ $max = $l[$i];\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        return\
    \ false;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  // BEGIN (write your solution here)\n  if\
    \ (count($l) == 0) {\n    return null;\n  }\n  $maxElement = $l[0];\n  foreach\
    \ ($l as $num) {\n    if ($num > $maxElement) {\n      $maxElement = $num;\n \
    \   }\n  }\n  return $maxElement;\n  // END\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\treturn max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tforeach ($l as $i) {\n\t\
    \tif ($i > $max) {\n\t\t\t$max = $i;\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  foreach ($l as $e) {\n\
    \    if ($e > $max) $max = $e;\n  }\n  return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $x = 0;\n  $i = 0;\n  while ($i < count($l))\
    \ {\n    if ($l[$i] > $x) {\n      $x = $l[$i];\n    }\n    $i++;\n  }\n  return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return array_reduce($l, function($a, $b)\
    \ {\n        return $a > $b ? $a : $b;\n    });\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  // Start with first element as the biggest.\n\
    \  $max = $l[0];\n  // Iterate through array elements, skipping first.\n  for\
    \ ($i = 1; $i < count($l); $i++) {\n    // If new element is bigger, store it.\n\
    \    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  // Return maximum\
    \ element.\n  return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (sizeof($l) == 0) {\n    return 0;\n\
    \  }\n  $m = $l[0];\n  for ($i = 1; $i < sizeof($l); $i++) {\n    if ($l[$i] >\
    \ $m) {\n      $m = $l[$i];\n    }\n  }\n  return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) == 0) {\n        echo '>>>\
    \ max_element(array())';\n        return NULL;\n    }\n    $max = $l[0];\n   \
    \ for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $max) {\n       \
    \     $max = $l[$i];\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $acc = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $acc) {\n      $acc = $l[$i];\n    }\n  }\n  return\
    \ $acc;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (count($l) === 0) {\n        return\
    \ null;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $acc = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $acc) {\n            $acc = $l[$i];\n        }\n\
    \    }\n    return $acc;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $m = $l[0];\n  foreach ($l as $i) {\n  \
    \  if ($i > $m) {\n      $m = $i;\n    }\n  }\n  return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = 0;\n    for ($i = 0; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return $l[0] < $l[1] ? max_element(array_slice($l,\
    \ 1)) : $l[0];\n}\n\n$list = array(1, 2, 3);\necho \"max_element([1, 2, 3]) should\
    \ be 3: \" . max_element($list) . \"\\n\";\n$list = array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10);\necho \"max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\
    \ should be 123: \" . max_element($list) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmp7jpsqa4b.php on line 8\nmax_element([1,\
    \ 2, 3]) should be 3: 3\nmax_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\
    \ should be 123: 5\n\nWarning: Undefined array key 1 in /tmp/tmp7jpsqa4b.php on\
    \ line 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7jpsqa4b.php:22\n\
    Stack trace:\n#0 /tmp/tmp7jpsqa4b.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7jpsqa4b.php\
    \ on line 22\n"
  timestamp: 1659977898
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  // Implement me!\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxsfzt1mp.php:16\n\
    Stack trace:\n#0 /tmp/tmpxsfzt1mp.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpxsfzt1mp.php\
    \ on line 16\n"
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = -999;\n    foreach ($l as $item)\
    \ {\n        if ($item > $max) {\n            $max = $item;\n        }\n    }\n\
    \    return $max;\n}\n\n$s = [1, 2, 3];\necho max_element($s);\necho \"<br>\"\
    ;\n\n$s = [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];\necho max_element($s);\necho\
    \ \"<br>\";\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 3<br>123<br>
  timestamp: 1659977898
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t// ...\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpth8y0mfg.php:16\n\
    Stack trace:\n#0 /tmp/tmpth8y0mfg.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpth8y0mfg.php\
    \ on line 16\n"
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return $l ? max($l[0], max_element(array_slice($l,\
    \ 1))) : 0;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $result = $l[0];\n    for ($i = 1; $i\
    \ < count($l); $i++) {\n        if ($l[$i] > $result) {\n            $result =\
    \ $l[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$m = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $m) {\n\t\t\t$m = $l[$i];\n\t\t}\n\t}\n\treturn $m;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if ($l == null) return -9999999999;\n\
    \    $a = $l[0];\n    $max = max_element(array_slice($l, 1));\n    if ($a > $max)\
    \ {\n        return $a;\n    } else {\n        return $max;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\n$l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\n\
    echo max_element($l) . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '123

    '
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = 0;\n  foreach ($l as $element) {\n\
    \    if ($element > $max) {\n      $max = $element;\n    }\n  }\n  return $max;\n\
    }\nprint(max_element(array(1, 2, 3)));\nprint(max_element(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10)));\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3123'
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return null;\n\
    \  }\n  $max = $l[0];\n  for ($i = 1; $i < count($l); $i++) {\n    if ($l[$i]\
    \ > $max) {\n      $max = $l[$i];\n    }\n  }\n  return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $m = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n        }\n \
    \   }\n    return $m;\n}\n\necho max_element(array(1, 2, 3)) . \"\\n\";\necho\
    \ max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '3

    123

    '
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\tif (count($l) == 0) {\n\t\treturn null;\n\
    \t}\n\t$max = $l[0];\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] >\
    \ $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $m = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n        }\n \
    \   }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$m = $l[0];\n\tforeach ($l as $e) {\n\t\t\
    if ($e > $m) {\n\t\t\t$m = $e;\n\t\t}\n\t}\n\treturn $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  // your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmdeocmp.php:16\n\
    Stack trace:\n#0 /tmp/tmpzmdeocmp.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpzmdeocmp.php\
    \ on line 16\n"
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = null;\n  foreach ($l as $x) {\n \
    \   if ($max == null) {\n      $max = $x;\n    } else if ($x > $max) {\n     \
    \ $max = $x;\n    }\n  }\n  return $max;\n}\n\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $value)\
    \ {\n        if ($value > $max) {\n            $max = $value;\n        }\n   \
    \ }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $e)\
    \ {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n    return\
    \ $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $b = 0;\n    foreach ($l as $e) {\n  \
    \      if ($e > $b) {\n            $b = $e;\n        }\n    }\n    return $b;\n\
    }\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $a = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $a) {\n            $a = $l[$i];\n        }\n \
    \   }\n    return $a;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return array_reduce($l, function($m, $a)\
    \ {\n        return max($m, $a);\n    });\n}\n\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\tif (count($l) == 0) {\n\t\treturn NULL;\n\
    \t}\n\telse {\n\t\t$max = $l[0];\n\t\tfor ($i = 1; $i < count($l); $i++) {\n\t\
    \t\tif ($l[$i] > $max) {\n\t\t\t\t$max = $l[$i];\n\t\t\t}\n\t\t}\n\t\treturn $max;\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\tforeach ($l as $value) {\n\t\tif (!isset($max))\
    \ {\n\t\t\t$max = $value;\n\t\t} else {\n\t\t\tif ($value > $max) {\n\t\t\t\t\
    $max = $value;\n\t\t\t}\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $e = $l[0];\n    foreach ($l as $x) {\n\
    \        if ($x > $e) {\n            $e = $x;\n        }\n    }\n    return $e;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\treturn array_reduce($l, function($a, $b)\
    \ {\n\t\treturn max($a, $b);\n\t});\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiadxdvbo.php:16\n\
    Stack trace:\n#0 /tmp/tmpiadxdvbo.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpiadxdvbo.php\
    \ on line 16\n"
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tforeach ($l as $el) {\n\
    \t\tif ($el > $max) {\n\t\t\t$max = $el;\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return NULL;\n\
    \  }\n  $max = $l[0];\n  for ($i = 1; $i < count($l); $i++) {\n    if ($l[$i]\
    \ > $max) {\n      $max = $l[$i];\n    }\n  }\n  return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\tif(sizeof($l) == 0) {\n\t\treturn NULL;\n\
    \t}\n\t$max = $l[0];\n\tfor($i = 1; $i < sizeof($l); $i++) {\n\t\tif($l[$i] >\
    \ $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn $max;\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return max($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = 0;\n  foreach ($l as $element) {\n\
    \    if ($element > $max) {\n      $max = $element;\n    }\n  }\n  return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $r = NULL;\n  foreach ($l as $e) {\n   \
    \ if ($r === NULL) {\n      $r = $e;\n    } else if ($e > $r) {\n      $r = $e;\n\
    \    }\n  }\n  return $r;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return max($l);\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\tif (count($l) == 0)\n\t\treturn 0;\n\t$m\
    \ = $l[0];\n\tfor ($i = 1; $i < count($l); $i++)\n\t\tif ($l[$i] > $m)\n\t\t\t\
    $m = $l[$i];\n\treturn $m;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $r = $l[0];\n    foreach ($l as $e) {\n\
    \        if ($e > $r) {\n            $r = $e;\n        }\n    }\n    return $r;\n\
    }\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 255
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  return $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc15qvzov.php:17\n\
    Stack trace:\n#0 /tmp/tmpc15qvzov.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpc15qvzov.php\
    \ on line 17\n"
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n\t$max = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  if (count($l) == 0) {\n    return NULL;\n\
    \  } else {\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n   \
    \   if ($l[$i] > $max) {\n        $max = $l[$i];\n      }\n    }\n    return $max;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    if (empty($l)) return -1;\n    $max =\
    \ $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $max)\
    \ {\n            $max = $l[$i];\n        }\n    }\n    return $max;\n}\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $result = null;\n    foreach ($l as $x)\
    \ {\n        if ($result == null || $x > $result) {\n            $result = $x;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977898
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823238
- exit_code: 0
  program: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = $l[0];\n    foreach ($l as $i)\
    \ {\n        if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977897

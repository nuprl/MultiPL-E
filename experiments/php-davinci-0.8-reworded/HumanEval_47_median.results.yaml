language: php
name: HumanEval_47_median
results:
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $c = count($l);\n    $low = floor($c / 2);\n    $high\
    \ = ceil($c / 2);\n    if ($c == 0) {\n        return 0;\n    } else if ($c ==\
    \ 1) {\n        return $l[0];\n    } else if ($c % 2 == 0) {\n        return ($l[$low]\
    \ + $l[$high]) / 2;\n    } else {\n        return $l[$low];\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6928g30g.php:27\n\
    Stack trace:\n#0 /tmp/tmp6928g30g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6928g30g.php\
    \ on line 27\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif (empty($l)) {\n\t\treturn -1;\n\t}\n\t$s = $l;\n\t\
    sort($s);\n\t$half = (int)(count($s) / 2);\n\tif (count($s) % 2 == 0) {\n\t\t\
    return ($s[$half] + $s[$half-1]) / 2;\n\t} else {\n\t\treturn $s[$half];\n\t}\n\
    }\n\n$ar = array(3, 1, 2, 4, 5);\n$ar = array(-10, 4, 6, 1000, 10, 20);\n\n$m\
    \ = median($ar);\nvar_dump($m);\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "int(8)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcxgbp0i.php:33\n\
    Stack trace:\n#0 /tmp/tmplcxgbp0i.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplcxgbp0i.php\
    \ on line 33\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $c = count($l);\n    if ($c % 2 == 0)\
    \ {\n        return ($l[$c / 2] + $l[$c / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$c / 2];\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp6apkt8_f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp6apkt8_f.php:22\nStack trace:\n#0 /tmp/tmp6apkt8_f.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6apkt8_f.php on line 22\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $i = 0;\n    $j = count($l) - 1;\n \
    \   $k = count($l) / 2;\n    $m = $l[$k];\n    while ($i < $j) {\n        if ($l[$i]\
    \ >= $m) {\n            $l[$j] = $l[$i];\n            $j--;\n        } else {\n\
    \            $i++;\n        }\n    }\n    $l[$i] = $m;\n    if (count($l) % 2)\
    \ {\n        return $l[$k];\n    } else {\n        return ($l[$k - 1] + $l[$k])\
    \ / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp6dn_2_a5.php on line 12\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmp6dn_2_a5.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp6dn_2_a5.php:35\nStack trace:\n\
    #0 /tmp/tmp6dn_2_a5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6dn_2_a5.php\
    \ on line 35\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $r = array_values($l);\n    sort($r);\n    $n = count($r);\n\
    \    if ($n % 2 == 0) {\n        return ($r[$n / 2] + $r[$n / 2 - 1]) / 2;\n \
    \   } else {\n        return $r[$n / 2];\n    }\n}\n\n$l = array(3, 1, 2, 4, 5);\n\
    print(\"Median of [\".join(\", \", $l).\"] is \".median($l).\"\\n\");\n\n$l =\
    \ array(-10, 4, 6, 1000, 10, 20);\nprint(\"Median of [\".join(\", \", $l).\"]\
    \ is \".median($l).\"\\n\");\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp9ygme3fj.php on line 14\nMedian of [3, 1, 2, 4, 5] is 3\nMedian of\
    \ [-10, 4, 6, 1000, 10, 20] is 8\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmp9ygme3fj.php on line 14\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp9ygme3fj.php:29\nStack trace:\n\
    #0 /tmp/tmp9ygme3fj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9ygme3fj.php\
    \ on line 29\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $c = $n / 2;\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$c] + $l[$c - 1]) / 2;\n    } else {\n        return\
    \ $l[$c];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmppademimd.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmppademimd.php:22\nStack trace:\n#0 /tmp/tmppademimd.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppademimd.php on line 22\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$m = count($l) / 2;\n\t$m = floor($m);\n\tif (count($l)%2)\n\
    \t\treturn $l[$m];\n\telse\n\t\treturn ($l[$m-1] + $l[$m]) / 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnpjwke82.php:21\n\
    Stack trace:\n#0 /tmp/tmpnpjwke82.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpnpjwke82.php\
    \ on line 21\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $temp = $l;\n    sort($temp);\n    $n = count($temp);\n\
    \    if ($n % 2 == 0) {\n        $f = $temp[$n / 2];\n        $s = $temp[$n /\
    \ 2 - 1];\n        return ($f + $s) / 2;\n    } else {\n        return $temp[($n\
    \ - 1) / 2];\n    }\n}\n\n$l = array(3, 1, 2, 4, 5);\necho \"midian of \" . json_encode($l)\
    \ . \" is \" . median($l) . PHP_EOL;\n$l = array(-10, 4, 6, 1000, 10, 20);\necho\
    \ \"midian of \" . json_encode($l) . \" is \" . median($l) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "midian of [3,1,2,4,5] is 3\nmidian of [-10,4,6,1000,10,20] is 8\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp6uy20urd.php:30\nStack trace:\n\
    #0 /tmp/tmp6uy20urd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6uy20urd.php\
    \ on line 30\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$count = count($l);\n\tif ($count == 0) return 0;\n\t\
    sort($l);\n\t$middle = $count / 2;\n\tif ($count % 2 == 0) {\n\t\treturn ($l[$middle\
    \ - 1] + $l[$middle]) / 2;\n\t} else {\n\t\treturn $l[$middle];\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpaf3n75l9.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpaf3n75l9.php:25\nStack trace:\n#0 /tmp/tmpaf3n75l9.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpaf3n75l9.php on line 25\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif (count($l) == 0) return 0;\n\t$l = sorted($l);\n\t\
    $len = count($l);\n\t$mid = (int)($len / 2);\n\treturn $len % 2 == 0 ? ($l[$mid]\
    \ + $l[$mid - 1]) / 2 : $l[$mid];\n}\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sorted() in /tmp/tmpoy4k6m1y.php:9\n\
    Stack trace:\n#0 /tmp/tmpoy4k6m1y.php(15): median(Array)\n#1 /tmp/tmpoy4k6m1y.php(19):\
    \ candidate(Array)\n#2 /tmp/tmpoy4k6m1y.php(26): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpoy4k6m1y.php on line 9\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $c = count($l);\n    if($c == 0) return\
    \ null;\n    if($c % 2 == 0) {\n        return ($l[$c / 2] + $l[$c / 2 - 1]) /\
    \ 2;\n    } else {\n        return $l[$c / 2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpuv9kw_hr.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpuv9kw_hr.php:24\nStack trace:\n#0 /tmp/tmpuv9kw_hr.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpuv9kw_hr.php on line 24\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $i = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$i - 1] + $l[$i]) / 2;\n    } else {\n        return $l[$i];\n\
    \    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_zd9ua4.php:26\n\
    Stack trace:\n#0 /tmp/tmpj_zd9ua4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj_zd9ua4.php\
    \ on line 26\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $len = count($l);\n  if ($len == 0) return 0;\n  sort($l);\n\
    \  $idx = $len / 2;\n  if ($len % 2 == 0)\n    return ($l[$idx] + $l[$idx - 1])\
    \ / 2;\n  else\n    return $l[$idx];\n}\n\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp8cdlrl9z.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp8cdlrl9z.php:24\nStack trace:\n#0 /tmp/tmp8cdlrl9z.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8cdlrl9z.php on line 24\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    $m = (int)($n /\
    \ 2);\n    if ($n % 2 == 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n   \
    \ } else {\n        return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptdh2r4xm.php:24\n\
    Stack trace:\n#0 /tmp/tmptdh2r4xm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmptdh2r4xm.php\
    \ on line 24\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        $m1\
    \ = $l[($n/2)-1];\n        $m2 = $l[$n/2];\n        return ($m1 + $m2) / 2;\n\
    \    } else {\n        return $l[$n/2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpccat7f3l.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpccat7f3l.php:23\nStack trace:\n#0 /tmp/tmpccat7f3l.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpccat7f3l.php on line 23\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $middle = count($l) / 2;\n    if (is_int($middle))\
    \ {\n        return $l[$middle];\n    } else {\n        return ($l[floor($middle)]\
    \ + $l[ceil($middle)]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpov2i5w7z.php:22\n\
    Stack trace:\n#0 /tmp/tmpov2i5w7z.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpov2i5w7z.php\
    \ on line 22\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 == 0) {\n        $lo = (count($l)\
    \ / 2) - 1;\n        $hi = $lo + 1;\n        return ($l[$lo] + $l[$hi]) / 2;\n\
    \    } else {\n        return $l[(count($l) - 1) / 2];\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptyq37nzh.php:21\n\
    Stack trace:\n#0 /tmp/tmptyq37nzh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptyq37nzh.php\
    \ on line 21\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[floor($n / 2)];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmgz88r1k.php:23\n\
    Stack trace:\n#0 /tmp/tmpmgz88r1k.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmgz88r1k.php\
    \ on line 23\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $m = count($l);\n    sort($l);\n    if ($m % 2 == 0)\
    \ {\n        return ($l[$m / 2] + $l[$m / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[floor($m / 2)];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcx537zdn.php:23\n\
    Stack trace:\n#0 /tmp/tmpcx537zdn.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcx537zdn.php\
    \ on line 23\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    // sort the array in increasing order\n    sort($l);\n\
    \    // number of elements\n    $n = count($l);\n    // odd number\n    if ($n\
    \ % 2 == 1) {\n        // find the index of middle element\n        $middle =\
    \ floor($n / 2);\n        // middle element\n        return $l[$middle];\n   \
    \ }\n    // even number\n    else {\n        // find the indices of the two middle\
    \ elements\n        $middle1 = $n / 2 - 1;\n        $middle2 = $n / 2;\n     \
    \   // find average of these two elements\n        return ($l[$middle1] + $l[$middle2])\
    \ / 2;\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3chi2ueg.php:34\n\
    Stack trace:\n#0 /tmp/tmp3chi2ueg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3chi2ueg.php\
    \ on line 34\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 == 0) {\n    return ( $l[(count($l)/2)\
    \ - 1] + $l[count($l)/2] ) / 2;\n  } else {\n    return $l[(count($l) - 1) / 2];\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzc7gbeal.php:20\n\
    Stack trace:\n#0 /tmp/tmpzc7gbeal.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzc7gbeal.php\
    \ on line 20\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$n = count($l);\n\tif ($n == 0) {\n\t\treturn null;\n\
    \t}\n\tsort($l);\n\tif ($n % 2 == 0) {\n\t\treturn ($l[$n / 2 - 1] + $l[$n / 2])\
    \ / 2;\n\t} else {\n\t\treturn $l[$n / 2];\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp2847c1aq.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp2847c1aq.php:26\nStack trace:\n#0 /tmp/tmp2847c1aq.php(32):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2847c1aq.php on line 26\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpnvvd_gby.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpnvvd_gby.php:23\nStack trace:\n#0 /tmp/tmpnvvd_gby.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnvvd_gby.php on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$c = count($l);\n\tif($c == 0) {\n\t\treturn \"N/A\"\
    ;\n\t} else if($c % 2 == 0) {\n\t\treturn ($l[$c / 2] + $l[$c / 2 - 1]) / 2;\n\
    \t} else {\n\t\treturn $l[($c - 1) / 2];\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxgsrfxec.php:23\n\
    Stack trace:\n#0 /tmp/tmpxgsrfxec.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxgsrfxec.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $ll = count($l);\n    $l2 = $l;\n    sort($l2);\n \
    \   if ($ll % 2 == 0) {\n        return ($l2[$ll / 2 - 1] + $l2[$ll / 2]) / 2;\n\
    \    } else {\n        return $l2[(int) ($ll / 2)];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_cc14hcr.php:24\n\
    Stack trace:\n#0 /tmp/tmp_cc14hcr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_cc14hcr.php\
    \ on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    if ($n % 2 !=\
    \ 0) {\n        // We have an odd number of elements.\n        return $l[$m];\n\
    \    } else {\n        // We have an even number of elements.\n        return\
    \ ($l[$m] + $l[$m - 1]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n   \
    \ return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpna68pa31.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpna68pa31.php:24\nStack trace:\n#0 /tmp/tmpna68pa31.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpna68pa31.php on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $s = $n % 2 == 0 ? ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2 : $l[($n - 1) / 2];\n    return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmponviyite.php:18\n\
    Stack trace:\n#0 /tmp/tmponviyite.php(25): test()\n#1 {main}\n  thrown in /tmp/tmponviyite.php\
    \ on line 18\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!is_array($l)) {\n    return null;\n  }\n  sort($l);\n\
    \  $length = count($l);\n  if ($length % 2 == 0) {\n    return (($l[($length/2)-1]\
    \ + $l[$length/2]) / 2);\n  } else {\n    return $l[intval($length/2)];\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0p496_ua.php:26\n\
    Stack trace:\n#0 /tmp/tmp0p496_ua.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0p496_ua.php\
    \ on line 26\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $c = count($l);\n    if ($c % 2 == 0) {\n        return\
    \ ($l[$c / 2] + $l[$c / 2 - 1]) / 2;\n    } else {\n        return $l[$c / 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpayga0wgu.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpayga0wgu.php:21\nStack trace:\n#0 /tmp/tmpayga0wgu.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpayga0wgu.php on line 21\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n%2 ==\
    \ 0) {\n        $n = $n/2;\n        return ($l[$n]+$l[$n-1])/2;\n    } else {\n\
    \        $n = ($n-1)/2;\n        return $l[$n];\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpsjqe3c54.php:9\nStack trace:\n\
    #0 /tmp/tmpsjqe3c54.php(19): median(true)\n#1 /tmp/tmpsjqe3c54.php(23): candidate(Array)\n\
    #2 /tmp/tmpsjqe3c54.php(30): test()\n#3 {main}\n  thrown in /tmp/tmpsjqe3c54.php\
    \ on line 9\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$l = sort($l);\n\t$c = count($l);\n\treturn $c % 2 ?\
    \ $l[$c / 2] : ($l[$c / 2] + $l[$c / 2 - 1]) / 2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmp2s47rm04.php:9\nStack trace:\n\
    #0 /tmp/tmp2s47rm04.php(14): median(true)\n#1 /tmp/tmp2s47rm04.php(18): candidate(Array)\n\
    #2 /tmp/tmp2s47rm04.php(25): test()\n#3 {main}\n  thrown in /tmp/tmp2s47rm04.php\
    \ on line 9\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2) {\n\
    \        return $l[floor($n / 2)];\n    } else {\n        return ($l[$n / 2] +\
    \ $l[$n / 2 - 1]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtcq2s4h.php:23\n\
    Stack trace:\n#0 /tmp/tmpwtcq2s4h.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpwtcq2s4h.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $i = count($l);\n    if ($i % 2 == 0)\
    \ {\n        return ($l[$i / 2] + $l[$i / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[floor($i / 2)];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6pl2n8a.php:23\n\
    Stack trace:\n#0 /tmp/tmpi6pl2n8a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpi6pl2n8a.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $s = sizeof($l);\n    $m = (int)($s\
    \ / 2);\n    if ($s % 2) {\n        return $l[$m];\n    } else {\n        return\
    \ ($l[$m] + $l[$m - 1]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n   \
    \ return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_26e56g.php:24\n\
    Stack trace:\n#0 /tmp/tmp2_26e56g.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2_26e56g.php\
    \ on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$len = count($l);\n\tif ($len % 2) {\n\t\
    \treturn $l[($len-1)/2];\n\t} else {\n\t\treturn ($l[$len/2-1] + $l[$len/2]) /\
    \ 2;\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82r375jg.php:23\n\
    Stack trace:\n#0 /tmp/tmp82r375jg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp82r375jg.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2) { // odd\n       \
    \ $a = $l[floor($n / 2)];\n    } else { // even\n        $a = ($l[floor($n / 2)\
    \ - 1] + $l[floor($n / 2)]) / 2;\n    }\n    return $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b1helvf.php:22\n\
    Stack trace:\n#0 /tmp/tmp5b1helvf.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp5b1helvf.php\
    \ on line 22\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if (($n % 2) ==\
    \ 0) {\n        return ($l[$n / 2] + $l[($n / 2) - 1]) / 2;\n    } else {\n  \
    \      return $l[$n / 2];\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp1tv8fqkv.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp1tv8fqkv.php:22\nStack trace:\n#0 /tmp/tmp1tv8fqkv.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1tv8fqkv.php on line 22\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$count = count($l);\n\t$middle = floor($count\
    \ / 2);\n\tif ($count % 2 == 0) {\n\t\t$median = ($l[$middle - 1] + $l[$middle])\
    \ / 2;\n\t} else {\n\t\t$median = $l[$middle];\n\t}\n\treturn $median;\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxwclgca2.php:24\n\
    Stack trace:\n#0 /tmp/tmpxwclgca2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxwclgca2.php\
    \ on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $c = count($l);\n  if ($c == 0) return 0;\n  sort($l);\n\
    \  if ($c % 2 == 0) return ($l[$c / 2] + $l[$c / 2 - 1]) / 2;\n  return $l[$c\
    \ / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpexawjm4r.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpexawjm4r.php:21\nStack trace:\n#0 /tmp/tmpexawjm4r.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpexawjm4r.php on line 21\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return (($l[$n / 2] + $l[$n / 2 - 1]) / 2);\n    } else {\n     \
    \   return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n   \
    \ return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptu6lmfdp.php:23\n\
    Stack trace:\n#0 /tmp/tmptu6lmfdp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmptu6lmfdp.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $mid = (count($l) - 1) / 2;\n    return\
    \ (is_int($mid)) ? $l[$mid] : ($l[floor($mid)] + $l[ceil($mid)]) / 2;\n}\n\n$l\
    \ = array(3, 1, 2, 4, 5);\nprintf(\"Median of %s is %s\\n\", implode(', ', $l),\
    \ median($l));\n\n$l = array(-10, 4, 6, 1000, 10, 20);\nprintf(\"Median of %s\
    \ is %s\\n\", implode(', ', $l), median($l));\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Median of 3, 1, 2, 4, 5 is 3\nMedian of -10, 4, 6, 1000, 10, 20 is 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmph98ddtwo.php:24\nStack\
    \ trace:\n#0 /tmp/tmph98ddtwo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmph98ddtwo.php\
    \ on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif(count($l) == 0) return 0;\n\tsort($l);\n\tif(count($l)\
    \ % 2 == 0) {\n\t\treturn (($l[count($l)/2] + $l[count($l)/2 - 1]) / 2);\n\t}\
    \ else {\n\t\treturn $l[(count($l) - 1) / 2];\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59i38g8c.php:23\n\
    Stack trace:\n#0 /tmp/tmp59i38g8c.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp59i38g8c.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[intval($n\
    \ / 2) - 1] + $l[intval($n / 2)]) / 2;\n    } else {\n        return $l[intval($n\
    \ / 2)];\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51cj2ha7.php:25\n\
    Stack trace:\n#0 /tmp/tmp51cj2ha7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp51cj2ha7.php\
    \ on line 25\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $c = count($l);\n  sort($l);\n  if($c % 2 == 0) {\n \
    \   return ($l[$c / 2] + $l[$c / 2 - 1]) / 2;\n  } else {\n    return $l[floor($c\
    \ / 2)];\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpax0jp7u6.php:22\n\
    Stack trace:\n#0 /tmp/tmpax0jp7u6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpax0jp7u6.php\
    \ on line 22\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $count = count($l);\n    if ($count % 2 == 0) {\n \
    \       $mid = $count / 2;\n        return ($l[$mid] + $l[$mid - 1]) / 2;\n  \
    \  } else {\n        $mid = floor($count / 2);\n        return $l[$mid];\n   \
    \ }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppbx_ylji.php:23\n\
    Stack trace:\n#0 /tmp/tmppbx_ylji.php(30): test()\n#1 {main}\n  thrown in /tmp/tmppbx_ylji.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    //return null;\n    $middle = count($l) / 2;\n    sort($l);\n\
    \    if (count($l) % 2 == 0) {\n        return (($l[$middle - 1] + $l[$middle])\
    \ / 2);\n    } else {\n        return $l[$middle];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmptjov8w1y.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmptjov8w1y.php:24\nStack trace:\n#0 /tmp/tmptjov8w1y.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmptjov8w1y.php on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $c = count($l);\n  if ($c === 0) {\n    return 0;\n \
    \ }\n  sort($l);\n  if ($c % 2 === 0) {\n    return ($l[floor($c / 2)] + $l[floor($c\
    \ / 2) - 1]) / 2;\n  } else {\n    return $l[floor($c / 2)];\n  }\n}\n\n$argv\
    \ = $_SERVER['argv'];\n$file = $argv[1];\n\n$input = explode(\"\\n\", file_get_contents($file));\n\
    \n$n = 0;\n$cases = [];\n\nwhile ($input[$n] !== '') {\n  $lines = (int) $input[$n];\n\
    \  $linesOfCode = [];\n  for ($i = 0; $i < $lines; $i++) {\n    $linesOfCode[]\
    \ = (int) $input[$n + $i + 1];\n  }\n  $cases[] = $linesOfCode;\n  $n += $lines\
    \ + 1;\n}\n\n$n = 0;\nforeach ($cases as $l) {\n  $n++;\n  $c = median($l);\n\
    \  $a = array_map(function ($x) use ($c) {\n    return abs($x - $c);\n  }, $l);\n\
    \  $median = median($a);\n  echo \"Case #$n: $median\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmphdr4_q1n.php on line 21\n\n\
    Deprecated: file_get_contents(): Passing null to parameter #1 ($filename) of type\
    \ string is deprecated in /tmp/tmphdr4_q1n.php on line 23\n\nFatal error: Uncaught\
    \ ValueError: Path cannot be empty in /tmp/tmphdr4_q1n.php:23\nStack trace:\n\
    #0 /tmp/tmphdr4_q1n.php(23): file_get_contents('')\n#1 {main}\n  thrown in /tmp/tmphdr4_q1n.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $s = $l;\n    sort($s);\n    $len = count($s);\n  \
    \  $half = intval($len / 2);\n    if ($len % 2 == 0) {\n        return (($s[$half\
    \ - 1] + $s[$half]) / 2);\n    } else {\n        return $s[$half];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11zafl7g.php:25\n\
    Stack trace:\n#0 /tmp/tmp11zafl7g.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp11zafl7g.php\
    \ on line 25\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $len = count($l);\n    if ($len % 2\
    \ == 0) {\n        return ($l[$len / 2] + $l[$len / 2 - 1]) / 2;\n    } else {\n\
    \        return $l[($len - 1) / 2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmglfj6jo.php:23\n\
    Stack trace:\n#0 /tmp/tmpmglfj6jo.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmglfj6jo.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($n - 1) / 2];\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptu8t4w_6.php:22\n\
    Stack trace:\n#0 /tmp/tmptu8t4w_6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptu8t4w_6.php\
    \ on line 22\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $arr = array();\n    foreach ($l as $key => $value)\
    \ {\n        $arr[$key] = $value;\n    }\n    sort($arr);\n    $n = count($arr);\n\
    \    if ($n == 0) {\n        return 0;\n    }\n    if ($n % 2 == 0) {\n      \
    \  return ($arr[$n / 2] + $arr[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $arr[(int) ($n / 2)];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx4h4347c.php:30\n\
    Stack trace:\n#0 /tmp/tmpx4h4347c.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpx4h4347c.php\
    \ on line 30\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return (($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2);\n  } else {\n    return $l[floor($n / 2)];\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2pafl5s1.php:21\n\
    Stack trace:\n#0 /tmp/tmp2pafl5s1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2pafl5s1.php\
    \ on line 21\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = sort($l);\n    $i = count($l) - 1;\n    if ($i\
    \ & 1) {\n        return $l[$i / 2];\n    } else {\n        return ($l[$i / 2]\
    \ + $l[$i / 2 + 1]) / 2;\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpi1vr8111.php:9\nStack trace:\n\
    #0 /tmp/tmpi1vr8111.php(17): median(true)\n#1 /tmp/tmpi1vr8111.php(21): candidate(Array)\n\
    #2 /tmp/tmpi1vr8111.php(28): test()\n#3 {main}\n  thrown in /tmp/tmpi1vr8111.php\
    \ on line 9\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l); //$l is reference to array\n\t// array_sum()\
    \ returns sum of values in array\n\t// (index 0 + $index($end - 1)) / 2\n\t$midpoint\
    \ = array_sum(array(0, count($l) - 1)) / 2;\n\t\n\t// if total elements in array\
    \ is odd\n\tif (count($l) % 2 == 1) {\n\t\treturn $l[$midpoint];\n\t} else {\n\
    \t\treturn array_sum(array($l[$midpoint], $l[$midpoint - 1])) / 2;\n\t}\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpka5_cwty.php on line 17\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmpka5_cwty.php on line 17\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpka5_cwty.php:27\nStack trace:\n\
    #0 /tmp/tmpka5_cwty.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpka5_cwty.php\
    \ on line 27\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_values($l);\n    sort($l);\n    $len = count($l);\n\
    \    if ($len % 2 == 0) {\n        return ($l[intval($len / 2) - 1] + $l[intval($len\
    \ / 2)]) / 2;\n    } else {\n        return $l[intval($len / 2)];\n    }\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdpnrdx_.php:24\n\
    Stack trace:\n#0 /tmp/tmpfdpnrdx_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfdpnrdx_.php\
    \ on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif(count($l) % 2 == 0) {\n\t\t// Even number of elements.\n\
    \t\t$i = count($l) / 2;\n\t\t$j = $i + 1;\n\t\treturn ($l[$i] + $l[$j]) / 2;\n\
    \t} else {\n\t\t// Odd number of elements.\n\t\t$i = intval(floor(count($l) /\
    \ 2));\n\t\treturn $l[$i];\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8bfyu2j.php:25\n\
    Stack trace:\n#0 /tmp/tmpf8bfyu2j.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf8bfyu2j.php\
    \ on line 25\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $s = $l;\n    sort($s);\n    $n = count($s);\n    if\
    \ ($n % 2 == 0) {\n        return ($s[$n / 2] + $s[$n / 2 - 1]) / 2;\n    } else\
    \ {\n        return $s[$n / 2];\n    }\n}\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpusqxneun.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpusqxneun.php:23\nStack trace:\n#0 /tmp/tmpusqxneun.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpusqxneun.php on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $length = count($l);\n    if ($length\
    \ % 2 == 0) {\n        return ($l[($length - 1) / 2] + $l[$length / 2]) / 2;\n\
    \    } else {\n        return $l[$length / 2];\n    }\n}\n$data = array(3, 1,\
    \ 2, 4, 5);\necho median($data);\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp036ynz6l.php on line 13\n3\nDeprecated: Implicit conversion from\
    \ float 2.5 to int loses precision in /tmp/tmp036ynz6l.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 2.5 to int loses precision in /tmp/tmp036ynz6l.php\
    \ on line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp036ynz6l.php:24\n\
    Stack trace:\n#0 /tmp/tmp036ynz6l.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp036ynz6l.php\
    \ on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$m = count($l);\n\tif ($m % 2) {\n\t\t// Count is odd.\n\
    \t\treturn $l[(int)($m / 2)];\n\t} else {\n\t\t// Count is even.\n\t\treturn ($l[$m\
    \ / 2] + $l[$m / 2 - 1]) / 2;\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyab6nk7b.php:23\n\
    Stack trace:\n#0 /tmp/tmpyab6nk7b.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyab6nk7b.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n == 0) {\n\
    \        return 0;\n    }\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6oto1ru5.php:27\n\
    Stack trace:\n#0 /tmp/tmp6oto1ru5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6oto1ru5.php\
    \ on line 27\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif(!is_array($l)) {\n\t\treturn null;\n\t}\n\tsort($l);\n\
    \t$len = count($l);\n\tif(is_odd($len)) {\n\t\t$mid = floor($len / 2);\n\t\treturn\
    \ $l[$mid];\n\t} else {\n\t\t$mid = $len / 2;\n\t\treturn ($l[$mid] + $l[$mid\
    \ - 1]) / 2;\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_odd() in /tmp/tmpyv28135s.php:13\n\
    Stack trace:\n#0 /tmp/tmpyv28135s.php(23): median(Array)\n#1 /tmp/tmpyv28135s.php(27):\
    \ candidate(Array)\n#2 /tmp/tmpyv28135s.php(34): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpyv28135s.php on line 13\n"
  timestamp: 1659977666
- exit_code: 0
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return (double)($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n\
    \        return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    // sort the array in ascending order.\n    $sorted\
    \ = $l;\n    sort($sorted);\n    // Let k = (n + 1) / 2; where n is the length\
    \ of the array and / is division\n    // operator.\n    $k = (count($sorted) +\
    \ 1) / 2;\n    // If k is an integer, return the element in the k-th position\
    \ of sorted\n    // array.\n    if (is_int($k)) {\n        return $sorted[$k -\
    \ 1];\n    }\n    // If k is not an integer, return the average of the elements\
    \ in the\n    // (k-0.5)-th and k-th positions of sorted array.\n    else {\n\
    \        return ($sorted[$k - 0.5 - 1] + $sorted[$k - 1]) / 2;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp3krk027w.php on line 22\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp3krk027w.php:32\nStack trace:\n#0 /tmp/tmp3krk027w.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3krk027w.php on line 32\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$n = count($l);\n\tif ($n % 2 == 0) {\n\t\
    \treturn ( $l[$n / 2] + $l[$n / 2 - 1] ) / 2;\n\t} else {\n\t\treturn $l[floor($n\
    \ / 2)];\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nq8e0ec.php:23\n\
    Stack trace:\n#0 /tmp/tmp1nq8e0ec.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1nq8e0ec.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t// Your code here.\n\treturn 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp208yzm1f.php:17\n\
    Stack trace:\n#0 /tmp/tmp208yzm1f.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp208yzm1f.php\
    \ on line 17\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    // BEGIN (write your solution here)\n    $size_l =\
    \ count($l);\n    if ($size_l % 2 === 0) {\n        $middle_index = $size_l /\
    \ 2;\n        return ($l[$middle_index] + $l[$middle_index - 1]) / 2;\n    } else\
    \ {\n        $middle_index = floor($size_l / 2);\n        return $l[$middle_index];\n\
    \    }\n    // END\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp494nwg5u.php:25\n\
    Stack trace:\n#0 /tmp/tmp494nwg5u.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp494nwg5u.php\
    \ on line 25\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = sort($l);\n  $size = count($l);\n  if ($size % 2\
    \ == 0) {\n    return ($l[$size / 2] + $l[$size / 2 - 1]) / 2;\n  } else {\n \
    \   return $l[$size / 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpgl1lkro6.php:9\nStack trace:\n\
    #0 /tmp/tmpgl1lkro6.php(18): median(true)\n#1 /tmp/tmpgl1lkro6.php(22): candidate(Array)\n\
    #2 /tmp/tmpgl1lkro6.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpgl1lkro6.php\
    \ on line 9\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    if ($n % 2 == 0) {\n        $i = $n / 2;\n        return ($l[$i\
    \ - 1] + $l[$i]) / 2;\n    } else {\n        $i = ($n - 1) / 2;\n        return\
    \ $l[$i];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpui2ue30i.php:26\n\
    Stack trace:\n#0 /tmp/tmpui2ue30i.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpui2ue30i.php\
    \ on line 26\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $sorted = $l;\n    rsort($sorted);\n    $length = count($sorted);\n\
    \    $middle = floor($length / 2);\n    if($length % 2) {\n        $median = $sorted[$middle];\n\
    \    } else {\n        $low = $sorted[$middle];\n        $high = $sorted[$middle\
    \ + 1];\n        $median = (($low + $high) / 2);\n    }\n    return $median;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsa_twmdl.php:28\n\
    Stack trace:\n#0 /tmp/tmpsa_twmdl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsa_twmdl.php\
    \ on line 28\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n == 0) {\n    return NULL;\n\
    \  }\n  if ($n % 2 == 0) {\n    return ($l[floor($n / 2) - 1] + $l[floor($n /\
    \ 2)]) / 2;\n  } else {\n    return $l[floor($n / 2)];\n  }\n}\n\n$l = [3, 1,\
    \ 2, 4, 5];\necho median($l);\necho \"\\n\";\n\n$l = [-10, 4, 6, 1000, 10, 20];\n\
    echo median($l);\necho \"\\n\";\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "2\n503\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3kjgjzxp.php:31\n\
    Stack trace:\n#0 /tmp/tmp3kjgjzxp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3kjgjzxp.php\
    \ on line 31\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l_copy = $l;\n    // Sort the array.\n    rsort($l_copy);\n\
    \    $n = count($l_copy);\n    // Compute median.\n    if ($n % 2 == 0) {\n  \
    \      return ($l_copy[($n / 2) - 1] + $l_copy[$n / 2]) / 2;\n    } else {\n \
    \       return $l_copy[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphqru2adl.php:26\n\
    Stack trace:\n#0 /tmp/tmphqru2adl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmphqru2adl.php\
    \ on line 26\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n == 0) {\n    return null;\n\
    \  }\n  sort($l);\n  if ($n % 2 == 0) {\n    return ($l[$n / 2 - 1] + $l[$n /\
    \ 2]) / 2;\n  } else {\n    return $l[$n / 2];\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpwyuygwl2.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpwyuygwl2.php:26\nStack trace:\n#0 /tmp/tmpwyuygwl2.php(32):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwyuygwl2.php on line 26\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $n2 = floor($n / 2);\n    if ($n\
    \ % 2 == 0) {\n        return ($l[$n2 - 1] + $l[$n2]) / 2;\n    } else {\n   \
    \     return $l[$n2];\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsayi16li.php:21\n\
    Stack trace:\n#0 /tmp/tmpsayi16li.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsayi16li.php\
    \ on line 21\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $count = count($l);\n    if ($count\
    \ % 2 == 0) {\n        return ($l[$count / 2] + $l[$count / 2 - 1]) / 2;\n   \
    \ } else {\n        return $l[($count - 1) / 2];\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7x91qog.php:22\n\
    Stack trace:\n#0 /tmp/tmph7x91qog.php(28): test()\n#1 {main}\n  thrown in /tmp/tmph7x91qog.php\
    \ on line 22\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n  } else {\n    return $l[($n\
    \ - 1) / 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgd30jmgb.php:23\n\
    Stack trace:\n#0 /tmp/tmpgd30jmgb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpgd30jmgb.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $c = count($l);\n    if ($c == 0) {\n        return\
    \ null;\n    }\n    $m = floor($c / 2);\n    if ($c % 2 == 0) {\n        return\
    \ ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpecrvsbcc.php:25\n\
    Stack trace:\n#0 /tmp/tmpecrvsbcc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpecrvsbcc.php\
    \ on line 25\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $count = count($l);\n    $middle = floor($count\
    \ / 2);\n    if ($count % 2) {\n        return $l[$middle];\n    } else {\n  \
    \      return ($l[$middle - 1] + $l[$middle]) / 2;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnb10wcux.php:24\n\
    Stack trace:\n#0 /tmp/tmpnb10wcux.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnb10wcux.php\
    \ on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $arr = $l;\n    sort($arr);\n    $n = count($arr);\n\
    \    if ($n % 2 == 0) {\n        return ($arr[$n / 2] + $arr[$n / 2 - 1]) / 2;\n\
    \    } else {\n        return $arr[($n - 1) / 2];\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbyo_x5l.php:23\n\
    Stack trace:\n#0 /tmp/tmpqbyo_x5l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqbyo_x5l.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$l = array_values($l);\n\t$l = sortArray($l);\n\treturn\
    \ $l[count($l) / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sortArray() in\
    \ /tmp/tmp0vekryfy.php:9\nStack trace:\n#0 /tmp/tmp0vekryfy.php(14): median(Array)\n\
    #1 /tmp/tmp0vekryfy.php(18): candidate(Array)\n#2 /tmp/tmp0vekryfy.php(25): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0vekryfy.php on line 9\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$l = sort($l);\n\t$half = floor(count($l) / 2);\n\treturn\
    \ count($l) % 2 ? $l[$half] : ($l[$half - 1] + $l[$half]) / 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpic6q5yrx.php:9\nStack trace:\n\
    #0 /tmp/tmpic6q5yrx.php(14): median(true)\n#1 /tmp/tmpic6q5yrx.php(18): candidate(Array)\n\
    #2 /tmp/tmpic6q5yrx.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpic6q5yrx.php\
    \ on line 9\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $len = count($l);\n    if ($len % 2\
    \ == 0) {\n        return ($l[$len / 2] + $l[$len / 2 - 1]) / 2;\n    } else {\n\
    \        return $l[($len - 1) / 2];\n    }\n}\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb18rln2t.php:22\n\
    Stack trace:\n#0 /tmp/tmpb18rln2t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpb18rln2t.php\
    \ on line 22\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$c = count($l);\n\t$m = floor($c / 2);\n\tif ($c % 2\
    \ == 0) {\n\t\treturn ($l[$m] + $l[$m - 1]) / 2;\n\t} else {\n\t\treturn $l[$m];\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpebynor_s.php:22\n\
    Stack trace:\n#0 /tmp/tmpebynor_s.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpebynor_s.php\
    \ on line 22\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $len = count($l);\n    if ($len < 1) {\n        return\
    \ null;\n    }\n    elseif ($len < 2) {\n        return $l[0];\n    }\n    else\
    \ {\n        sort($l);\n        if (($len % 2) == 0) {\n            return (($l[($len\
    \ / 2) - 1] + $l[$len / 2]) / 2);\n        }\n        else {\n            return\
    \ $l[(int)($len / 2)];\n        }\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpucifcupx.php:32\n\
    Stack trace:\n#0 /tmp/tmpucifcupx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpucifcupx.php\
    \ on line 32\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $half = intval(count($l) / 2);\n   \
    \ return (count($l) % 2) ? $l[$half] : ($l[$half - 1] + $l[$half]) / 2;\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7sjl64r.php:19\n\
    Stack trace:\n#0 /tmp/tmpr7sjl64r.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpr7sjl64r.php\
    \ on line 19\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  $tmp = $l;\n  sort($tmp);\n  if ($n\
    \ % 2 == 0) {\n    $m = ($tmp[$n / 2] + $tmp[$n / 2 - 1]) / 2;\n  } else {\n \
    \   $m = $tmp[$n / 2];\n  }\n  return $m;\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp8xqrqw62.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp8xqrqw62.php:25\nStack trace:\n#0 /tmp/tmp8xqrqw62.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8xqrqw62.php on line 25\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = bubble_sort($l);\n  $i = floor(count($l) / 2);\n\
    \  if (count($l) % 2 == 0) {\n    return ($l[$i] + $l[$i - 1]) / 2;\n  } else\
    \ {\n    return $l[$i];\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function bubble_sort()\
    \ in /tmp/tmpust87pzd.php:8\nStack trace:\n#0 /tmp/tmpust87pzd.php(18): median(Array)\n\
    #1 /tmp/tmpust87pzd.php(22): candidate(Array)\n#2 /tmp/tmpust87pzd.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpust87pzd.php on line 8\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $count = count($l);\n  sort($l);\n  $m = $count/2;\n\
    \  if($count%2 == 0) {\n    $m1 = $l[$m-1];\n    $m2 = $l[$m];\n    return ($m1+$m2)/2;\n\
    \  } else {\n    return $l[$m];\n  }\n}\n\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpxbs59413.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpxbs59413.php:26\nStack trace:\n#0 /tmp/tmpxbs59413.php(32):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxbs59413.php on line 26\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $ll = sort($l);\n    $n = count($ll);\n    if ($n %\
    \ 2 == 0) {\n        return ($ll[$n / 2] + $ll[$n / 2 - 1]) / 2;\n    } else {\n\
    \        return $ll[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmp6eienpn9.php:9\nStack trace:\n\
    #0 /tmp/tmp6eienpn9.php(18): median(Array)\n#1 /tmp/tmp6eienpn9.php(22): candidate(Array)\n\
    #2 /tmp/tmp6eienpn9.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp6eienpn9.php\
    \ on line 9\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $c = count($l);\n    sort($l);\n    $m = $c/2;\n  \
    \  if($c%2 == 0) {\n        return ($l[$m-1] + $l[$m])/2;\n    } else {\n    \
    \    return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp0pocxns8.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp0pocxns8.php:24\nStack trace:\n#0 /tmp/tmp0pocxns8.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0pocxns8.php on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $l = $l + $l;\n    $l = mergeSort($l);\n\
    \    $median = $l[$n / 2];\n    if ($n % 2 == 0)\n        $median += $l[$n / 2\
    \ - 1];\n    return $median / 2;\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mergeSort() in\
    \ /tmp/tmpf_x40x5n.php:10\nStack trace:\n#0 /tmp/tmpf_x40x5n.php(18): median(Array)\n\
    #1 /tmp/tmpf_x40x5n.php(22): candidate(Array)\n#2 /tmp/tmpf_x40x5n.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpf_x40x5n.php on line 10\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_values($l);\n    $n = count($l);\n    if\
    \ ($n % 2 == 0) {\n        return ($l[$n / 2 - 1] + $l[$n / 2]) / 2;\n    } else\
    \ {\n        return $l[$n / 2];\n    }\n}\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp6xghs0od.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp6xghs0od.php:21\nStack trace:\n#0 /tmp/tmp6xghs0od.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6xghs0od.php on line 21\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $i = count($l);\n    $median = ($i %\
    \ 2 != 0) ? $l[$i / 2] :\n        ($l[$i / 2] + $l[$i / 2 - 1]) / 2;\n    return\
    \ $median;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpx8nvlggx.php on line 10\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpx8nvlggx.php:20\nStack trace:\n#0 /tmp/tmpx8nvlggx.php(26):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpx8nvlggx.php on line 20\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  sort($l);\n  if ($n % 2 == 0) {\n\
    \    $a = $l[floor($n / 2)];\n    $b = $l[floor($n / 2) - 1];\n    return ($a\
    \ + $b) / 2;\n  } else {\n    return $l[floor($n / 2)];\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph4ss_qub.php:25\n\
    Stack trace:\n#0 /tmp/tmph4ss_qub.php(31): test()\n#1 {main}\n  thrown in /tmp/tmph4ss_qub.php\
    \ on line 25\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (!is_array($l))\n        return NULL;\n    if (count($l)\
    \ == 0)\n        return NULL;\n    if (count($l) == 1)\n        return $l[0];\n\
    \    $c = count($l);\n    sort($l);\n    if ($c % 2 == 0)\n        return ($l[$c\
    \ / 2] + $l[$c / 2 - 1]) / 2;\n    else\n        return $l[($c - 1) / 2];\n}\n\
    \n$l = array(3, 1, 2, 4, 5);\necho 'Median of array(3, 1, 2, 4, 5) is ' . median($l)\
    \ . \"\\n\";\n$l = array(-10, 4, 6, 1000, 10, 20);\necho 'Median of array(-10,\
    \ 4, 6, 1000, 10, 20) is ' . median($l) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Median of array(3, 1, 2, 4, 5) is 3\nMedian of array(-10, 4, 6, 1000, 10,\
    \ 20) is 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp911kiti7.php:33\n\
    Stack trace:\n#0 /tmp/tmp911kiti7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp911kiti7.php\
    \ on line 33\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$l = array_values($l);\n\t$n = count($l);\n\
    \tif($n == 0) return 0;\n\tif($n % 2 == 0) {\n\t\treturn ($l[$n/2] + $l[$n/2-1])\
    \ / 2;\n\t} else {\n\t\treturn $l[$n/2];\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpxujpwrh3.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpxujpwrh3.php:25\nStack trace:\n#0 /tmp/tmpxujpwrh3.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxujpwrh3.php on line 25\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n == 0) return\
    \ 0;\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n\
    \    } else {\n        return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpqe1srmtg.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpqe1srmtg.php:24\nStack trace:\n#0 /tmp/tmpqe1srmtg.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqe1srmtg.php on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$mid = count($l) / 2;\n\tif (count($l) %\
    \ 2) {\n\t\treturn $l[$mid];\n\t} else {\n\t\treturn ($l[$mid] + $l[$mid - 1])\
    \ / 2;\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp4r57733j.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp4r57733j.php:23\nStack trace:\n#0 /tmp/tmp4r57733j.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4r57733j.php on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$count = count($l);\n\tif ($count == 0) {\n\t\tthrow\
    \ new Exception(\"Input array is empty\");\n\t}\n\tif ($count % 2 == 0) {\n\t\t\
    return ($l[$count / 2] + $l[$count / 2 - 1]) / 2;\n\t} else {\n\t\treturn $l[$count\
    \ / 2];\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpcwppaqf8.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpcwppaqf8.php:24\nStack trace:\n#0 /tmp/tmpcwppaqf8.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcwppaqf8.php on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$median = 0;\n\t$count = count($l);\n\tif($count % 2\
    \ == 0) {\n\t\t$median = ($l[$count/2] + $l[$count/2-1]) / 2;\n\t} else {\n\t\t\
    $median = $l[ceil($count/2)];\n\t}\n\treturn $median;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp966txk1k.php:23\n\
    Stack trace:\n#0 /tmp/tmp966txk1k.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp966txk1k.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n\
    \ % 2 == 0) {\n        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n     \
    \   return $l[$m];\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9al1vya2.php:21\n\
    Stack trace:\n#0 /tmp/tmp9al1vya2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9al1vya2.php\
    \ on line 21\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    // Sort the elements.\n    sort($l);\n    // Get the\
    \ middle element.\n    if (count($l) % 2 == 0) {\n        $m = count($l) / 2;\n\
    \        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return $l[(count($l)\
    \ - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmzdhqqya.php:25\n\
    Stack trace:\n#0 /tmp/tmpmzdhqqya.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpmzdhqqya.php\
    \ on line 25\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\trsort($l);\n\t$mid = floor(count($l) / 2);\n\tif (count($l)\
    \ % 2 == 0) {\n\t\treturn ($l[$mid - 1] + $l[$mid]) / 2;\n\t} else {\n\t\treturn\
    \ $l[$mid];\n\t}\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6nrdooqd.php:22\n\
    Stack trace:\n#0 /tmp/tmp6nrdooqd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6nrdooqd.php\
    \ on line 22\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$s = sort($l);\n\t$n = count($l);\n\t$m = floor($n /\
    \ 2);\n\tif ($n % 2) {\n\t\treturn $l[$m];\n\t} else {\n\t\treturn ($l[$m - 1]\
    \ + $l[$m]) / 2;\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpexw3agp9.php:24\n\
    Stack trace:\n#0 /tmp/tmpexw3agp9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpexw3agp9.php\
    \ on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $v = $l;\n    sort($v);\n    $c = count($v);\n    if\
    \ ($c % 2 == 0) {\n        return ($v[$c / 2] + $v[$c / 2 - 1]) / 2;\n    } else\
    \ {\n        return $v[$c / 2];\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpy8tc3sss.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpy8tc3sss.php:24\nStack trace:\n#0 /tmp/tmpy8tc3sss.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpy8tc3sss.php on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif (sizeof($l) == 0) {\n\t\treturn -1;\n\t}\n\t// Sort\
    \ the elements of the array.\n\tasort($l);\n\t$n = sizeof($l);\n\tif (floor($n/2)\
    \ == ($n/2)) {\n\t\t// Array has even number of elements.\n\t\treturn (float)($l[$n/2]\
    \ + $l[$n/2-1])/2;\n\t} else {\n\t\t// Array has odd number of elements.\n\t\t\
    return $l[$n/2];\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpjl7_yrka.php on line 19\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjl7_yrka.php:28\nStack trace:\n#0 /tmp/tmpjl7_yrka.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjl7_yrka.php on line 28\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $s = $n % 2 ? $l[floor($n / 2)]\
    \ : ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    return $s;\n}\n\n$a = array(1, 2,\
    \ 3, 4, 5);\n$m = median($a);\n$a = array(-1, -2, -3, -4, -5);\n$m = median($a);\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpja8bcfam.php:23\n\
    Stack trace:\n#0 /tmp/tmpja8bcfam.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpja8bcfam.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2 == 0)\
    \ {\n    return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n  } else {\n    return $l[$n\
    \ / 2];\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmp4um5cyg0.php:9\nStack trace:\n\
    #0 /tmp/tmp4um5cyg0.php(17): median(true)\n#1 /tmp/tmp4um5cyg0.php(21): candidate(Array)\n\
    #2 /tmp/tmp4um5cyg0.php(28): test()\n#3 {main}\n  thrown in /tmp/tmp4um5cyg0.php\
    \ on line 9\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if($n % 2) {\n\
    \        return $l[($n - 1) / 2];\n    } else {\n        return ($l[$n / 2] +\
    \ $l[$n / 2 - 1]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_zb7_gc.php:23\n\
    Stack trace:\n#0 /tmp/tmp7_zb7_gc.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7_zb7_gc.php\
    \ on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $e = count($l);\n  if ($e == 0) {\n    return;\n  }\n\
    \  $f = intval($e / 2);\n  sort($l);\n  if ($e % 2 == 0) {\n    return ($l[$f\
    \ - 1] + $l[$f]) / 2;\n  } else {\n    return $l[$f];\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh31ta0j.php:27\n\
    Stack trace:\n#0 /tmp/tmprh31ta0j.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprh31ta0j.php\
    \ on line 27\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) === 0) {\n        return null;\n    }\n\
    \    $n = count($l);\n    $s = sort($l);\n    if ($n % 2 === 0) {\n        $i\
    \ = $n / 2;\n        return ($l[$i] + $l[$i - 1]) / 2;\n    } else {\n       \
    \ $i = intval($n / 2);\n        return $l[$i];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmgl08rs9.php:28\n\
    Stack trace:\n#0 /tmp/tmpmgl08rs9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmgl08rs9.php\
    \ on line 28\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    if (count($l) % 2 == 0) {\n        return\
    \ ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[(count($l) - 1) / 2];\n    }\n}\n\n$test_median = function ($f, $n) {\n \
    \   for ($i = 0; $i < $n; $i++) {\n        $list = range(1, rand(2, 1000));\n\
    \        shuffle($list);\n        $expected = median($list);\n        $actual\
    \ = $f($list);\n        if ($expected != $actual) {\n            echo 'Error:\
    \ ' . implode(', ', $list) . ': ';\n            echo 'expected ' . $expected .\
    \ ', got ' . $actual . PHP_EOL;\n            return false;\n        }\n    }\n\
    \    return true;\n};\n\n$test_median(function ($l) {\n    $s = (int) count($l)\
    \ / 2;\n    $e = $s + 1;\n    $p = $s + ($e - $s) / 2;\n    $q = $s - ($e - $s)\
    \ / 2;\n    return $p > $q ? ($l[$p] + $l[$q]) / 2 : $l[$p];\n}, 1000);\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: 'Error: 553, 555, 271, 301, 42, 549, 164, 181, 507, 24, 575, 459, 481, 145,
    190, 225, 631, 131, 427, 453, 464, 474, 612, 585, 10, 153, 303, 121, 55, 396,
    403, 49, 407, 547, 346, 284, 165, 327, 535, 484, 333, 337, 565, 628, 482, 256,
    443, 543, 324, 582, 381, 194, 432, 41, 31, 429, 546, 283, 210, 4, 157, 101, 493,
    79, 358, 138, 359, 167, 37, 632, 26, 118, 251, 52, 48, 422, 594, 166, 393, 610,
    11, 161, 496, 20, 130, 90, 497, 32, 85, 14, 586, 382, 13, 6, 237, 466, 3, 250,
    193, 180, 169, 420, 264, 540, 704, 192, 494, 388, 144, 642, 223, 533, 168, 263,
    47, 662, 434, 265, 92, 680, 527, 137, 142, 688, 203, 317, 643, 135, 242, 178,
    282, 96, 511, 7, 687, 30, 452, 239, 683, 140, 323, 617, 247, 132, 561, 380, 661,
    209, 587, 607, 371, 626, 584, 362, 615, 106, 143, 229, 254, 659, 255, 116, 110,
    338, 620, 366, 571, 299, 616, 558, 693, 88, 124, 355, 406, 59, 569, 185, 257,
    487, 717, 243, 199, 637, 94, 645, 18, 472, 457, 238, 155, 386, 602, 184, 104,
    530, 175, 689, 19, 77, 528, 568, 663, 304, 321, 375, 392, 285, 51, 353, 195, 149,
    655, 221, 668, 551, 305, 211, 478, 677, 451, 260, 718, 579, 505, 373, 314, 570,
    651, 293, 326, 417, 454, 390, 230, 387, 473, 404, 520, 318, 296, 307, 548, 534,
    141, 477, 572, 391, 636, 706, 127, 423, 128, 339, 352, 515, 647, 312, 519, 107,
    634, 62, 510, 395, 700, 206, 710, 675, 674, 81, 508, 119, 218, 702, 609, 384,
    598, 320, 583, 483, 516, 162, 313, 43, 345, 658, 95, 509, 29, 253, 270, 100, 277,
    723, 276, 541, 554, 84, 694, 309, 488, 344, 577, 450, 15, 214, 379, 272, 310,
    600, 405, 187, 244, 213, 261, 133, 719, 160, 259, 444, 298, 458, 367, 17, 328,
    699, 476, 469, 596, 385, 526, 33, 322, 684, 523, 589, 152, 627, 424, 159, 654,
    532, 83, 158, 713, 80, 591, 389, 240, 525, 559, 70, 698, 76, 368, 622, 34, 23,
    536, 125, 604, 690, 499, 64, 670, 557, 419, 562, 224, 78, 177, 54, 279, 258, 204,
    650, 235, 644, 400, 60, 372, 123, 433, 601, 233, 504, 97, 682, 288, 412, 8, 377,
    495, 208, 705, 63, 578, 93, 183, 342, 273, 383, 567, 231, 236, 99, 376, 74, 73,
    228, 711, 291, 449, 425, 685, 108, 468, 12, 290, 246, 480, 22'
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $size = count($l);\n    if ($size % 2 == 0) {\n   \
    \     return ($l[$size / 2] + $l[$size / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[($size - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwju23k22.php:21\n\
    Stack trace:\n#0 /tmp/tmpwju23k22.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwju23k22.php\
    \ on line 21\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$c = count($l);\n\tif ($c % 2 == 0) {\n\t\
    \treturn ($l[$c / 2] + $l[$c / 2 - 1]) / 2;\n\t} else {\n\t\treturn $l[$c / 2];\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmps6s9pat6.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmps6s9pat6.php:23\nStack trace:\n#0 /tmp/tmps6s9pat6.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps6s9pat6.php on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $list_copy = $l;\n    sort($list_copy);\n    $len =\
    \ count($list_copy);\n    $middle = $len / 2;\n    if ($len % 2 == 0) {\n    \
    \    return ($list_copy[$middle - 1] + $list_copy[$middle]) / 2;\n    } else {\n\
    \        return $list_copy[$middle];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp356omlgo.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp356omlgo.php:25\nStack trace:\n#0 /tmp/tmp356omlgo.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp356omlgo.php on line 25\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $x = $l;\n  sort($x);\n  $mid = count($x) / 2;\n  if\
    \ (count($x) % 2 == 0) {\n    return ($x[$mid - 1] + $x[$mid]) / 2;\n  } else\
    \ {\n    return $x[$mid];\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpifzu_age.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpifzu_age.php:24\nStack trace:\n#0 /tmp/tmpifzu_age.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpifzu_age.php on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    sort($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($n - 1) / 2];\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_r8k4s0.php:22\n\
    Stack trace:\n#0 /tmp/tmpp_r8k4s0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpp_r8k4s0.php\
    \ on line 22\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    // Return median of elements in the array l.\n    //\
    \ >>> median(array(3, 1, 2, 4, 5))\n    // 3\n    // >>> median(array(-10, 4,\
    \ 6, 1000, 10, 20))\n    // 15.0\n    $n = count($l);\n    if ($n == 0) {\n  \
    \      throw new \\Exception('median() arg is an empty sequence');\n    }\n  \
    \  $s = sort($l);\n    $mid = $n // 2;\n    if ($n % 2 == 1) {\n        return\
    \ $l[$mid];\n    } else {\n        return ($l[$mid - 1] + $l[$mid]) / 2;\n   \
    \ }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "if" in /tmp/tmpqtfbgy0l.php on line
    19

    '
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        $m = ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        $m\
    \ = $l[$n / 2];\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpl4bo9zch.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpl4bo9zch.php:24\nStack trace:\n#0 /tmp/tmpl4bo9zch.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpl4bo9zch.php on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    // *** YOUR CODE HERE ***\n    sort($l);\n    if (count($l)\
    \ % 2 == 0) {\n        return $l[count($l) / 2] + $l[count($l) / 2 - 1] / 2;\n\
    \    } else {\n        return $l[count($l) / 2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpg3qdh1ot.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpg3qdh1ot.php:23\nStack trace:\n#0 /tmp/tmpg3qdh1ot.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpg3qdh1ot.php on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$n = count($l);\n\t$s = sort($l);\n\tif ($n % 2 == 0)\
    \ {\n\t\treturn ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n\t} else {\n\t\treturn $l[$n\
    \ / 2];\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp52b1ohmp.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp52b1ohmp.php:23\nStack trace:\n#0 /tmp/tmp52b1ohmp.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp52b1ohmp.php on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $x = $l;\n    sort($x);\n    $n = count($x);\n    if\
    \ ($n % 2 == 0) {\n        return ($x[$n / 2] + $x[$n / 2 - 1]) / 2;\n    } else\
    \ {\n        return $x[$n / 2];\n    }\n}\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp7ludp8oh.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp7ludp8oh.php:23\nStack trace:\n#0 /tmp/tmp7ludp8oh.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7ludp8oh.php on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $a = floor(count($l) / 2);\n  if (count($l)\
    \ % 2 == 0) {\n    return ($l[$a - 1] + $l[$a]) / 2;\n  } else {\n    return $l[$a];\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfedpmwdj.php:23\n\
    Stack trace:\n#0 /tmp/tmpfedpmwdj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfedpmwdj.php\
    \ on line 23\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $len = count($l);\n    $median = 0;\n\
    \    if ($len % 2 == 0) {\n        $median = ($l[$len / 2] + $l[$len / 2 - 1])\
    \ / 2;\n    } else {\n        $median = $l[($len - 1) / 2];\n    }\n    return\
    \ $median;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7avyas4v.php:25\n\
    Stack trace:\n#0 /tmp/tmp7avyas4v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7avyas4v.php\
    \ on line 25\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    if (count($l) % 2 == 0) {\n        return\
    \ ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[floor(count($l) / 2)];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpesevc2jk.php:22\n\
    Stack trace:\n#0 /tmp/tmpesevc2jk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpesevc2jk.php\
    \ on line 22\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ false;\n    } else if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n /\
    \ 2 - 1]) / 2;\n    } else {\n        return $l[floor($n / 2)];\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq60e_ep1.php:22\n\
    Stack trace:\n#0 /tmp/tmpq60e_ep1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpq60e_ep1.php\
    \ on line 22\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    if (count($l) % 2) { // number of elements\
    \ is odd\n        return $l[count($l) / 2];\n    } else {\n        return ($l[count($l)\
    \ / 2] + $l[count($l) / 2 - 1]) / 2;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpu7dxvq2v.php on line 10\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpu7dxvq2v.php:21\nStack trace:\n#0 /tmp/tmpu7dxvq2v.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpu7dxvq2v.php on line 21\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n == 0) {\n\
    \        throw new Exception(\"Can't get the median of an empty list\");\n   \
    \ }\n    $m = (int) ($n / 2);\n    if ($n % 2 == 0) {\n        return ($l[$m -\
    \ 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqymjdxcr.php:27\n\
    Stack trace:\n#0 /tmp/tmpqymjdxcr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqymjdxcr.php\
    \ on line 27\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = ($n - 1) / 2;\n    if ($n\
    \ % 2) {\n        // Odd\n        return kth_smallest($l, $m);\n    } else {\n\
    \        // Even\n        return (kth_smallest($l, $m) + kth_smallest($l, $m +\
    \ 1)) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function kth_smallest()\
    \ in /tmp/tmpxszpqhlb.php:12\nStack trace:\n#0 /tmp/tmpxszpqhlb.php(20): median(Array)\n\
    #1 /tmp/tmpxszpqhlb.php(24): candidate(Array)\n#2 /tmp/tmpxszpqhlb.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxszpqhlb.php on line 12\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $count = count($l);\n  if ($count === 0) {\n    return\
    \ null;\n  }\n  sort($l);\n  if ($count % 2 === 0) {\n    return ($l[$count /\
    \ 2] + $l[$count / 2 - 1]) / 2;\n  } else {\n    return $l[floor($count / 2)];\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4htxef2t.php:26\n\
    Stack trace:\n#0 /tmp/tmp4htxef2t.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp4htxef2t.php\
    \ on line 26\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $len = count($l);\n    if ($len == 0) {\n        throw\
    \ new Exception(\"Empty array.\");\n    }\n    // Sort the array.\n    sort($l);\n\
    \    // If the length is odd, return the middle element.\n    if ($len % 2) {\n\
    \        return $l[floor($len / 2)];\n    }\n    // If the length is even, return\
    \ the average of the two middle elements.\n    return ($l[$len / 2] + $l[$len\
    \ / 2 - 1]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0yhqw_s.php:28\n\
    Stack trace:\n#0 /tmp/tmph0yhqw_s.php(34): test()\n#1 {main}\n  thrown in /tmp/tmph0yhqw_s.php\
    \ on line 28\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $middle = floor(count($l) / 2);\n  \
    \  if (count($l) % 2) {\n        return $l[$middle];\n    } else {\n        return\
    \ ($l[$middle] + $l[$middle - 1]) / 2;\n    }\n}\n\n$tests = array(\n    array(3,\
    \ 1, 2, 4, 5),\n    array(-10, 4, 6, 1000, 10, 20),\n);\nforeach ($tests as $test)\
    \ {\n    printf(\"Test: %s => %s\\n\", implode(', ', $test), median($test));\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "Test: 3, 1, 2, 4, 5 => 3\nTest: -10, 4, 6, 1000, 10, 20 => 8\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpe0qjkphh.php:30\nStack trace:\n\
    #0 /tmp/tmpe0qjkphh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpe0qjkphh.php\
    \ on line 30\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  if ((count($l) % 2) == 0) {\n    return\
    \ ($l[count($l) / 2] + $l[(count($l) / 2) - 1]) / 2;\n  } else {\n    return $l[floor(count($l)\
    \ / 2)];\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgnto22o.php:21\n\
    Stack trace:\n#0 /tmp/tmpzgnto22o.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzgnto22o.php\
    \ on line 21\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    if (count($l) % 2) {\n        $l = array_slice($l,\
    \ 0, (count($l) / 2) + 1);\n        return median($l);\n    } else {\n       \
    \ $lower = (count($l) / 2) - 1;\n        $upper = $lower + 1;\n        return\
    \ ($l[$lower] + $l[$upper]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 3.5 to int loses precision\
    \ in /tmp/tmpo0r9d9y4.php on line 10\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmpo0r9d9y4.php on line 10\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpo0r9d9y4.php:24\nStack trace:\n\
    #0 /tmp/tmpo0r9d9y4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo0r9d9y4.php\
    \ on line 24\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if(count($l) == 0) {\n        return 0;\n    }\n  \
    \  sort($l);\n    $middle = (int)(count($l) / 2);\n    if(count($l) % 2 == 0)\
    \ {\n        $middle -= 1;\n    }\n    return $l[$middle];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_afz58c.php:25\n\
    Stack trace:\n#0 /tmp/tmp0_afz58c.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0_afz58c.php\
    \ on line 25\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $count = count($l);\n    sort($l);\n    if ($count\
    \ % 2 == 0) {\n        $a = floor($count / 2);\n        $b = ceil($count / 2);\n\
    \        return ($l[$a - 1] + $l[$b - 1]) / 2;\n    } else {\n        return $l[floor($count\
    \ / 2)];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpwjv9i4.php:25\n\
    Stack trace:\n#0 /tmp/tmpfpwjv9i4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfpwjv9i4.php\
    \ on line 25\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 == 0) {\n        return ($l[(count($l)\
    \ / 2) - 1] + $l[count($l) / 2]) / 2;\n    } else {\n        return $l[(count($l)\
    \ - 1) / 2];\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnsiba_hc.php:19\n\
    Stack trace:\n#0 /tmp/tmpnsiba_hc.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpnsiba_hc.php\
    \ on line 19\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1)\
    \ / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgsbodwsl.php:21\n\
    Stack trace:\n#0 /tmp/tmpgsbodwsl.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgsbodwsl.php\
    \ on line 21\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpnvvd_gby.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpnvvd_gby.php:23\nStack trace:\n#0 /tmp/tmpnvvd_gby.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnvvd_gby.php on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  $m = ($n + 1) / 2;\n  if (is_int($m))\
    \ {\n    // even number of elements\n    return ($l[$m - 1] + $l[$m]) / 2;\n \
    \ } else {\n    // odd number of elements\n    return $l[floor($m) - 1];\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcac_orz5.php:25\n\
    Stack trace:\n#0 /tmp/tmpcac_orz5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpcac_orz5.php\
    \ on line 25\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $ln = count($l);\n    $l = asort($l);\n    return ($ln\
    \ % 2) ? $l[floor($ln / 2)] : ($l[floor($ln / 2)] + $l[floor($ln / 2 - 1)]) /\
    \ 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type bool in /tmp/tmpt9oiplvk.php\
    \ on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9oiplvk.php:18\n\
    Stack trace:\n#0 /tmp/tmpt9oiplvk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpt9oiplvk.php\
    \ on line 18\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    // Sort the array first.\n    sort($l);\n    $len =\
    \ count($l);\n    // If odd, the median is the middle element.\n    if ($len %\
    \ 2 == 1) {\n        return $l[($len - 1) / 2];\n    }\n    // If even, the median\
    \ is the average of the two middle elements.\n    return ($l[$len / 2] + $l[$len\
    \ / 2 - 1]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6vmuv2sw.php:25\n\
    Stack trace:\n#0 /tmp/tmp6vmuv2sw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6vmuv2sw.php\
    \ on line 25\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $m = count($l);\n    $n = $m / 2;\n    if ($m % 2 ==\
    \ 0) {\n        return ($l[$n] + $l[$n - 1]) / 2;\n    } else {\n        return\
    \ $l[$n];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpblmdoee8.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpblmdoee8.php:22\nStack trace:\n#0 /tmp/tmpblmdoee8.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpblmdoee8.php on line 22\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $values = $l;\n    sort($values);\n    $n = count($values);\n\
    \    $h = intval($n / 2);\n    if($n % 2 == 0) {\n        $median = ($values[$h]\
    \ + $values[$h-1]) / 2;\n    } else {\n        $median = $values[$h];\n    }\n\
    \    return $median;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnyi7f3go.php:26\n\
    Stack trace:\n#0 /tmp/tmpnyi7f3go.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnyi7f3go.php\
    \ on line 26\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $c = count($l);\n    if ($c == 0) return NULL;\n  \
    \  $l = array_values($l);\n    sort($l);\n    if ($c % 2 == 0)\n        return\
    \ ($l[($c / 2) - 1] + $l[$c / 2]) / 2;\n    else\n        return $l[$c / 2];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpoiuvxm9r.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpoiuvxm9r.php:24\nStack trace:\n#0 /tmp/tmpoiuvxm9r.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpoiuvxm9r.php on line 24\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$half = count($l) / 2;\n\treturn (count($l)\
    \ % 2) ? $l[$half] : ($l[$half - 1] + $l[$half]) / 2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpr6pqefco.php on line 10\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpr6pqefco.php:19\nStack trace:\n#0 /tmp/tmpr6pqefco.php(25):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpr6pqefco.php on line 19\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l); // sort elements from low to high\n  $c = count($l);\
    \ // count number of elements\n  $m = $c/2; // find middle\n  if ($c % 2 == 0)\
    \ { // is even\n    $m = ($l[floor($m)-1] + $l[floor($m)])/2;\n  } else { // is\
    \ odd\n    $m = $l[floor($m)];\n  }\n  return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpydr01la8.php:25\n\
    Stack trace:\n#0 /tmp/tmpydr01la8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpydr01la8.php\
    \ on line 25\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $count = count($l);\n    $mid = floor($count / 2);\n\
    \    sort($l);\n    if ($count % 2 === 0) {\n        return ($l[$mid] + $l[$mid\
    \ - 1]) / 2;\n    } else {\n        return $l[$mid];\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsoshmy7p.php:23\n\
    Stack trace:\n#0 /tmp/tmpsoshmy7p.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsoshmy7p.php\
    \ on line 23\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $i = (int)(count($l) / 2);\n  if (count($l)\
    \ % 2 == 0) {\n    $x = $l[$i - 1];\n    $y = $l[$i];\n    return ($x + $y) /\
    \ 2;\n  } else {\n    return $l[$i];\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwgbpdgk.php:25\n\
    Stack trace:\n#0 /tmp/tmpbwgbpdgk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbwgbpdgk.php\
    \ on line 25\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$len = count($l);\n\t$s = floor($len / 2);\n\
    \tif ($len % 2 == 0) {\n\t\treturn ($l[$s - 1] + $l[$s]) / 2;\n\t} else {\n\t\t\
    return $l[$s];\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33qj1ivj.php:24\n\
    Stack trace:\n#0 /tmp/tmp33qj1ivj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp33qj1ivj.php\
    \ on line 24\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  if (count($l) % 2 == 0) {\n    return ($l[count($l)\
    \ / 2] + $l[count($l) / 2 - 1]) / 2;\n  } else {\n    return $l[(count($l) - 1)\
    \ / 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxs7txii.php:22\n\
    Stack trace:\n#0 /tmp/tmpyxs7txii.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpyxs7txii.php\
    \ on line 22\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$l = sort($l);\n\t$n = count($l);\n\tif ($n % 2 == 0)\
    \ {\n\t\t$m = ( $l[$n / 2] + $l[$n / 2 - 1] ) / 2;\n\t} else {\n\t\t$m = $l[(int)\
    \ ($n / 2)];\n\t}\n\treturn $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmph5ze2jn6.php:9\nStack trace:\n\
    #0 /tmp/tmph5ze2jn6.php(19): median(true)\n#1 /tmp/tmph5ze2jn6.php(23): candidate(Array)\n\
    #2 /tmp/tmph5ze2jn6.php(30): test()\n#3 {main}\n  thrown in /tmp/tmph5ze2jn6.php\
    \ on line 9\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n == 0) return null;\n  sort($l);\n\
    \  $m = $n / 2;\n  if (is_int($m)) return $l[$m];\n  return ($l[$m - 0.5] + $l[$m\
    \ + 0.5]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mbz5z7l.php:21\n\
    Stack trace:\n#0 /tmp/tmp7mbz5z7l.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp7mbz5z7l.php\
    \ on line 21\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$n = count($l);\n\treturn ($n % 2) ? $l[$n\
    \ / 2] : ($l[$n / 2 - 1] + $l[$n / 2]) / 2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp2zmkw1gj.php on line 10\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp2zmkw1gj.php:19\nStack trace:\n#0 /tmp/tmp2zmkw1gj.php(25):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2zmkw1gj.php on line 19\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 == 0) {\n        $v1 = $l[count($l)\
    \ / 2 - 1];\n        $v2 = $l[count($l) / 2];\n        return ($v1 + $v2) / 2;\n\
    \    } else {\n        return $l[count($l) / 2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpii29kpaj.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpii29kpaj.php:22\nStack trace:\n#0 /tmp/tmpii29kpaj.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpii29kpaj.php on line 22\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n /\
    \ 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpwgljvmy5.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpwgljvmy5.php:26\nStack trace:\n#0 /tmp/tmpwgljvmy5.php(32):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwgljvmy5.php on line 26\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpnvvd_gby.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpnvvd_gby.php:23\nStack trace:\n#0 /tmp/tmpnvvd_gby.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnvvd_gby.php on line 23\n"
  timestamp: 1659977666
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = merge_sort($l);\n  $size = count($l);\n  if ($size\
    \ % 2 == 0) {\n    return ($l[$size / 2] + $l[$size / 2 - 1]) / 2;\n  } else {\n\
    \    return $l[$size / 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function merge_sort()\
    \ in /tmp/tmplo_40b0k.php:8\nStack trace:\n#0 /tmp/tmplo_40b0k.php(18): median(Array)\n\
    #1 /tmp/tmplo_40b0k.php(22): candidate(Array)\n#2 /tmp/tmplo_40b0k.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmplo_40b0k.php on line 8\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    if (count($l) % 2 == 0) {\n        $m\
    \ = (count($l) / 2) - 1;\n        return ($l[$m] + $l[$m + 1]) / 2;\n    } else\
    \ {\n        return $l[count($l) / 2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprd3ex08m.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprd3ex08m.php:23\nStack trace:\n#0 /tmp/tmprd3ex08m.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprd3ex08m.php on line 23\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcpatbqo_.php:23\n\
    Stack trace:\n#0 /tmp/tmpcpatbqo_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcpatbqo_.php\
    \ on line 23\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n == 0) return false;\n  sort($l);\n\
    \  $m = $n / 2;\n  return $n % 2 ? $l[$m] : ($l[$m-1] + $l[$m]) / 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp_mdohucu.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp_mdohucu.php:21\nStack trace:\n#0 /tmp/tmp_mdohucu.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_mdohucu.php on line 21\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $length = count($l);\n    if ($length\
    \ == 0) return \"No data\";\n    if ($length % 2 == 0) {\n        return ($l[$length\
    \ / 2] + $l[$length / 2 - 1]) / 2;\n    } else {\n        return $l[($length -\
    \ 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi5uvro9_.php:24\n\
    Stack trace:\n#0 /tmp/tmpi5uvro9_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi5uvro9_.php\
    \ on line 24\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $count = count($l);\n    $mid = floor($count\
    \ / 2);\n    if ($count % 2 == 0) {\n        return ($l[$mid] + $l[$mid-1]) /\
    \ 2;\n    } else {\n        return $l[$mid];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtnv1fox.php:24\n\
    Stack trace:\n#0 /tmp/tmpwtnv1fox.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpwtnv1fox.php\
    \ on line 24\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$c = count($l);\n\tif ($c%2 == 0) {\n\t\t\
    $mid = $c/2;\n\t\treturn ($l[$mid] + $l[$mid - 1])/2;\n\t} else {\n\t\t$mid =\
    \ (int)($c/2);\n\t\treturn $l[$mid];\n\t}\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplwh5fcfs.php:25\n\
    Stack trace:\n#0 /tmp/tmplwh5fcfs.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplwh5fcfs.php\
    \ on line 25\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\treturn (count($l) % 2 ? $l[count($l) / 2]\
    \ :\n\t\t($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp81e77msa.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp81e77msa.php:19\nStack trace:\n#0 /tmp/tmp81e77msa.php(25): test()\n\
    #1 {main}\n  thrown in /tmp/tmp81e77msa.php on line 19\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $len = count($l);\n    if ($len == 0)\
    \ {\n        return 0;\n    }\n    $median = $l[$len / 2];\n    if ($len % 2 ==\
    \ 0) {\n        $median = ($median + $l[$len / 2 - 1]) / 2;\n    }\n    return\
    \ $median;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpgtcf8nz_.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpgtcf8nz_.php:26\nStack trace:\n#0 /tmp/tmpgtcf8nz_.php(32):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgtcf8nz_.php on line 26\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$n = count($l);\n\t$m = floor($n / 2);\n\tif ($n % 2\
    \ == 0) {\n\t\t$median = ($l[$m] + $l[$m-1]) / 2;\n\t} else {\n\t\t$median = $l[$m];\n\
    \t}\n\treturn $median;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh781pb1.php:23\n\
    Stack trace:\n#0 /tmp/tmpeh781pb1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpeh781pb1.php\
    \ on line 23\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $d = count($l);\n  $m = floor($d / 2);\n  if (0 == $d\
    \ % 2) {\n    return ($l[$m - 1] + $l[$m]) / 2;\n  } else {\n    return $l[$m];\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu74qi3gc.php:22\n\
    Stack trace:\n#0 /tmp/tmpu74qi3gc.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu74qi3gc.php\
    \ on line 22\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $m = count($l) / 2;\n  sort($l);\n  if (count($l) % 2\
    \ == 0) {\n    return ($l[$m - 1] + $l[$m]) / 2;\n  } else {\n    return $l[$m];\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp_fs4yqkz.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp_fs4yqkz.php:23\nStack trace:\n#0 /tmp/tmp_fs4yqkz.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_fs4yqkz.php on line 23\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $count = count($l);\n    if ($count % 2 == 0) {\n \
    \       $middle = floor($count / 2);\n        return ($l[$middle - 1] + $l[$middle])\
    \ / 2;\n    } else {\n        return $l[floor($count / 2)];\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyao68wq.php:21\n\
    Stack trace:\n#0 /tmp/tmphyao68wq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphyao68wq.php\
    \ on line 21\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  // Count the size of array $l.\n  $size = count($l);\n\
    \  // Sort the array $l.\n  sort($l);\n  // Return the median if array $l has\
    \ an odd number of elements.\n  if($size%2 != 0) {\n    return $l[$size/2];\n\
    \  }\n  // Calculate the median if array $l has an even number of elements.\n\
    \  else {\n    return ($l[$size/2] + $l[$size/2 - 1])/2;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmppbmolw4p.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmppbmolw4p.php:28\nStack trace:\n#0 /tmp/tmppbmolw4p.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppbmolw4p.php on line 28\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $s = count($l);\n  $p = $s / 2;\n  if ($s\
    \ % 2 == 0) {\n    return ($l[$p] + $l[$p - 1]) / 2;\n  } else {\n    return $l[$p];\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp0j_5wafr.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp0j_5wafr.php:24\nStack trace:\n#0 /tmp/tmp0j_5wafr.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0j_5wafr.php on line 24\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $size = count($l);\n    if($size % 2 == 0) {\n    \
    \    return ($l[floor($size / 2)] + $l[floor($size / 2) - 1]) / 2;\n    } else\
    \ {\n        return $l[floor($size / 2)];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3l6vgup.php:21\n\
    Stack trace:\n#0 /tmp/tmpn3l6vgup.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn3l6vgup.php\
    \ on line 21\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[floor($m)] + $l[ceil($m)]) / 2;\n    } else {\n   \
    \     return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp5uwmj_qy.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp5uwmj_qy.php:22\nStack trace:\n#0 /tmp/tmp5uwmj_qy.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5uwmj_qy.php on line 22\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  // return l;\n  sort($l);\n  $mid_index = count($l) /\
    \ 2;\n  $mid_index = floor($mid_index);\n  if (count($l) % 2 == 0) {\n    return\
    \ ($l[$mid_index] + $l[$mid_index + 1]) / 2;\n  } else {\n    return $l[$mid_index];\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc0c5ft26.php:25\n\
    Stack trace:\n#0 /tmp/tmpc0c5ft26.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpc0c5ft26.php\
    \ on line 25\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$r = array();\n\t$n = count($l);\n\tfor ($i = 0; $i <\
    \ $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++) {\n\t\t\tif ($l[$i] > $l[$j])\
    \ {\n\t\t\t\t$t = $l[$i];\n\t\t\t\t$l[$i] = $l[$j];\n\t\t\t\t$l[$j] = $t;\n\t\t\
    \t}\n\t\t}\n\t}\n\t$n = count($l);\n\tif ($n % 2 == 0) {\n\t\t$m = ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n\t} else {\n\t\t$m = $l[floor($n / 2)];\n\t}\n\treturn\
    \ $m;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaxtvs493.php:33\n\
    Stack trace:\n#0 /tmp/tmpaxtvs493.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpaxtvs493.php\
    \ on line 33\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (!count($l)) {\n        return null;\n    }\n  \
    \  sort($l);\n    $c = count($l);\n    if (($c % 2) == 0) {\n        return ($l[$c\
    \ / 2] + $l[($c / 2) - 1]) / 2;\n    } else {\n        return $l[($c - 1) / 2];\n\
    \    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgnlyb1ms.php:25\n\
    Stack trace:\n#0 /tmp/tmpgnlyb1ms.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgnlyb1ms.php\
    \ on line 25\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp2qrnriqy.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp2qrnriqy.php:22\nStack trace:\n#0 /tmp/tmp2qrnriqy.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2qrnriqy.php on line 22\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $length = count($l);\n    if ($length\
    \ % 2 == 0) {\n        return ($l[$length / 2] + $l[$length / 2 - 1]) / 2;\n \
    \   } else {\n        return $l[$length / 2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmppqzfbez3.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmppqzfbez3.php:23\nStack trace:\n#0 /tmp/tmppqzfbez3.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppqzfbez3.php on line 23\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $m = count($l);\n    if ($m === 0) {\n        return\
    \ null;\n    }\n    sort($l);\n    $p = intval($m / 2);\n    if ($m % 2 === 0)\
    \ {\n        return floatval(($l[$p - 1] + $l[$p]) / 2);\n    } else {\n     \
    \   return floatval($l[$p]);\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd21fapxr.php:25\n\
    Stack trace:\n#0 /tmp/tmpd21fapxr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpd21fapxr.php\
    \ on line 25\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = merge_sort($l);\n  $c = count($l);\n  if ($c % 2\
    \ == 0) {\n    return ($l[$c / 2] + $l[$c / 2 - 1]) / 2;\n  } else {\n    return\
    \ $l[$c / 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function merge_sort()\
    \ in /tmp/tmp1f8664lw.php:8\nStack trace:\n#0 /tmp/tmp1f8664lw.php(18): median(Array)\n\
    #1 /tmp/tmp1f8664lw.php(22): candidate(Array)\n#2 /tmp/tmp1f8664lw.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmp1f8664lw.php on line 8\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $len = count($l);\n    $i = $len / 2;\n\
    \    if ($len % 2 == 0) {\n        return ($l[$i - 1] + $l[$i]) / 2;\n    } else\
    \ {\n        return $l[$i];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmph2iwxl00.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmph2iwxl00.php:24\nStack trace:\n#0 /tmp/tmph2iwxl00.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmph2iwxl00.php on line 24\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = sort($l);\n    $len = count($l);\n    if ($len\
    \ % 2) {\n        return $l[floor($len / 2)];\n    } else {\n        return ($l[floor($len\
    \ / 2)] + $l[floor($len / 2 - 1)]) / 2;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpplh0r8ww.php:9\nStack trace:\n\
    #0 /tmp/tmpplh0r8ww.php(18): median(true)\n#1 /tmp/tmpplh0r8ww.php(22): candidate(Array)\n\
    #2 /tmp/tmpplh0r8ww.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpplh0r8ww.php\
    \ on line 9\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return array_reduce($l, function($a, $b) {\n    return\
    \ $a + $b;\n  }) / count($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl_x6unst.php:19\n\
    Stack trace:\n#0 /tmp/tmpl_x6unst.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpl_x6unst.php\
    \ on line 19\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $len = count($l);\n    if ($len % 2\
    \ == 0) {\n        return ($l[intval($len / 2) - 1] + $l[intval($len / 2)]) /\
    \ 2;\n    } else {\n        return $l[intval($len / 2)];\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuu5kg_4k.php:22\n\
    Stack trace:\n#0 /tmp/tmpuu5kg_4k.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuu5kg_4k.php\
    \ on line 22\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$a = $l;\n\tsort($a);\n\t$n = count($a);\n\tif ($n%2==0)\
    \ {\n\t\treturn ($a[intval($n/2)] + $a[intval($n/2)-1])/2;\n\t} else {\n\t\treturn\
    \ $a[intval($n/2)];\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpms31ex7u.php:24\n\
    Stack trace:\n#0 /tmp/tmpms31ex7u.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpms31ex7u.php\
    \ on line 24\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        $m = ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        $m\
    \ = $l[($n - 1) / 2];\n    }\n    return $m;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_aos8fxq.php:23\n\
    Stack trace:\n#0 /tmp/tmp_aos8fxq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_aos8fxq.php\
    \ on line 23\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$n = count($l);\n\t$m = $n / 2;\n\treturn\
    \ ($n % 2 == 0) ? ($l[$m - 1] + $l[$m]) / 2 : $l[$m];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpt_wc5z5o.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpt_wc5z5o.php:19\nStack trace:\n#0 /tmp/tmpt_wc5z5o.php(25):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt_wc5z5o.php on line 19\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $len = count($l);\n    if ($len % 2\
    \ == 0) {\n        $median = ($l[intval($len / 2)] + $l[intval($len / 2) - 1])\
    \ / 2;\n    } else {\n        $median = $l[intval($len / 2)];\n    }\n    return\
    \ $median;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu5s22x0q.php:24\n\
    Stack trace:\n#0 /tmp/tmpu5s22x0q.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpu5s22x0q.php\
    \ on line 24\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return $l[$n / 2] + $l[$n / 2 - 1] / 2;\n    } else {\n        return\
    \ $l[($n - 1) / 2];\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2wobjtvs.php:22\n\
    Stack trace:\n#0 /tmp/tmp2wobjtvs.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2wobjtvs.php\
    \ on line 22\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$l_count = count($l);\n\tif($l_count ==\
    \ 0) return 0;\n\tif($l_count % 2) return $l[(int)($l_count / 2)];\n\treturn (($l[$l_count\
    \ / 2] + $l[$l_count / 2 - 1]) / 2);\n}\n\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60175pky.php:21\n\
    Stack trace:\n#0 /tmp/tmp60175pky.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp60175pky.php\
    \ on line 21\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $s = sort($l);\n    $n = count($l);\n    $f = intval($n\
    \ / 2);\n    if ($n % 2 == 0) {\n        return ($l[$f - 1] + $l[$f]) / 2;\n \
    \   } else {\n        return $l[$f];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfmf0ju8p.php:24\n\
    Stack trace:\n#0 /tmp/tmpfmf0ju8p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfmf0ju8p.php\
    \ on line 24\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$len = count($l);\n\tif ($len % 2 == 0)\
    \ {\n\t\t$i = $len / 2;\n\t\treturn ($l[$i] + $l[$i - 1]) / 2;\n\t} else {\n\t\
    \t$i = ($len - 1) / 2;\n\t\treturn $l[$i];\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1n169_eq.php:25\n\
    Stack trace:\n#0 /tmp/tmp1n169_eq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1n169_eq.php\
    \ on line 25\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    // Sort array.\n    sort($l);\n    $n = count($l);\n\
    \    // Find median.\n    if (($n % 2) == 0) {\n        $median = ($l[$n / 2]\
    \ + $l[($n / 2) - 1]) / 2;\n    } else {\n        $median = $l[$n / 2];\n    }\n\
    \    return $median;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpdwhwer4u.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpdwhwer4u.php:26\nStack trace:\n#0 /tmp/tmpdwhwer4u.php(32):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdwhwer4u.php on line 26\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    // Sort input list in numerical order\n    sort($l,\
    \ SORT_NUMERIC);\n    $n = count($l);\n    if ($n % 2) { // if number of elements\
    \ is odd\n        return $l[$n / 2];\n    } else { // if number of elements is\
    \ even\n        return ($l[$n / 2 - 1] + $l[$n / 2]) / 2;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpq8fz3vq5.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpq8fz3vq5.php:24\nStack trace:\n#0 /tmp/tmpq8fz3vq5.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpq8fz3vq5.php on line 24\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $s = sizeof($l);\n    if ($s % 2 == 0) {\n        return\
    \ (float)($l[($s - 1) / 2] + $l[$s / 2]) / 2;\n    } else {\n        return $l[(int)($s\
    \ / 2)];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_whn1av.php:21\n\
    Stack trace:\n#0 /tmp/tmpw_whn1av.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw_whn1av.php\
    \ on line 21\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n == 0) {\n    return 0;\n  }\n\
    \  sort($l);\n  $m = intval($n / 2);\n  if ($n % 2 == 0) {\n    return ($l[$m\
    \ - 1] + $l[$m]) / 2;\n  } else {\n    return $l[$m];\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz2wwvgto.php:27\n\
    Stack trace:\n#0 /tmp/tmpz2wwvgto.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz2wwvgto.php\
    \ on line 27\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $ll = sort($l);\n    $n = count($ll);\n    if($n%2\
    \ == 0) {\n        $m = ($ll[$n/2] + $ll[$n/2 - 1]) / 2;\n    } else {\n     \
    \   $m = $ll[$n/2];\n    }\n    return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmp9v7mdf_a.php:9\nStack trace:\n\
    #0 /tmp/tmp9v7mdf_a.php(19): median(Array)\n#1 /tmp/tmp9v7mdf_a.php(23): candidate(Array)\n\
    #2 /tmp/tmp9v7mdf_a.php(30): test()\n#3 {main}\n  thrown in /tmp/tmp9v7mdf_a.php\
    \ on line 9\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $m = count($l) / 2;\n    $s = sort($l);\n    if ($m\
    \ % 2 == 0) {\n        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n     \
    \   return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpuze6jn5e.php on line 10\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmpuze6jn5e.php on line 11\n\nDeprecated:\
    \ Implicit conversion from float 1.5 to int loses precision in /tmp/tmpuze6jn5e.php\
    \ on line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuze6jn5e.php:22\n\
    Stack trace:\n#0 /tmp/tmpuze6jn5e.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuze6jn5e.php\
    \ on line 22\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l); // $l is sorted in place by reference.\n  $n\
    \ = count($l);\n  if ($n % 2 == 0) {\n    // There are even number of elements\
    \ in the array.\n    $i = $n / 2;\n    return ($l[$i - 1] + $l[$i]) / 2;\n  }\
    \ else {\n    // There are odd number of elements in the array.\n    $i = ($n\
    \ - 1) / 2;\n    return $l[$i];\n  }\n}\n\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr8yrxo2l.php:27\n\
    Stack trace:\n#0 /tmp/tmpr8yrxo2l.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpr8yrxo2l.php\
    \ on line 27\n"
  timestamp: 1659977667
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$m = count($l) / 2;\n\t$v = $l[$m];\n\t\
    if (count($l) % 2 == 0) {\n\t\t$v = ($v + $l[$m-1]) / 2;\n\t}\n\treturn $v;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpdlrmh2mj.php on line 10\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpdlrmh2mj.php:23\nStack trace:\n#0 /tmp/tmpdlrmh2mj.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdlrmh2mj.php on line 23\n"
  timestamp: 1659977667

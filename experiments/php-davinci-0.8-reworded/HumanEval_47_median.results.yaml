language: php
name: HumanEval_47_median
results:
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $c = count($l);\n    $low = floor($c / 2);\n    $high\
    \ = ceil($c / 2);\n    if ($c == 0) {\n        return 0;\n    } else if ($c ==\
    \ 1) {\n        return $l[0];\n    } else if ($c % 2 == 0) {\n        return ($l[$low]\
    \ + $l[$high]) / 2;\n    } else {\n        return $l[$low];\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6928g30g.php:27\n\
    Stack trace:\n#0 /tmp/tmp6928g30g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6928g30g.php\
    \ on line 27\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif (empty($l)) {\n\t\treturn -1;\n\t}\n\t$s = $l;\n\t\
    sort($s);\n\t$half = (int)(count($s) / 2);\n\tif (count($s) % 2 == 0) {\n\t\t\
    return ($s[$half] + $s[$half-1]) / 2;\n\t} else {\n\t\treturn $s[$half];\n\t}\n\
    }\n\n$ar = array(3, 1, 2, 4, 5);\n$ar = array(-10, 4, 6, 1000, 10, 20);\n\n$m\
    \ = median($ar);\nvar_dump($m);\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "int(8)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcxgbp0i.php:33\n\
    Stack trace:\n#0 /tmp/tmplcxgbp0i.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplcxgbp0i.php\
    \ on line 33\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $c = count($l);\n    if ($c % 2 == 0)\
    \ {\n        return ($l[$c / 2] + $l[$c / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$c / 2];\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp6apkt8_f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp6apkt8_f.php:22\nStack trace:\n#0 /tmp/tmp6apkt8_f.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6apkt8_f.php on line 22\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $i = 0;\n    $j = count($l) - 1;\n \
    \   $k = count($l) / 2;\n    $m = $l[$k];\n    while ($i < $j) {\n        if ($l[$i]\
    \ >= $m) {\n            $l[$j] = $l[$i];\n            $j--;\n        } else {\n\
    \            $i++;\n        }\n    }\n    $l[$i] = $m;\n    if (count($l) % 2)\
    \ {\n        return $l[$k];\n    } else {\n        return ($l[$k - 1] + $l[$k])\
    \ / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp6dn_2_a5.php on line 12\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmp6dn_2_a5.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp6dn_2_a5.php:35\nStack trace:\n\
    #0 /tmp/tmp6dn_2_a5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6dn_2_a5.php\
    \ on line 35\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $r = array_values($l);\n    sort($r);\n    $n = count($r);\n\
    \    if ($n % 2 == 0) {\n        return ($r[$n / 2] + $r[$n / 2 - 1]) / 2;\n \
    \   } else {\n        return $r[$n / 2];\n    }\n}\n\n$l = array(3, 1, 2, 4, 5);\n\
    print(\"Median of [\".join(\", \", $l).\"] is \".median($l).\"\\n\");\n\n$l =\
    \ array(-10, 4, 6, 1000, 10, 20);\nprint(\"Median of [\".join(\", \", $l).\"]\
    \ is \".median($l).\"\\n\");\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp9ygme3fj.php on line 14\nMedian of [3, 1, 2, 4, 5] is 3\nMedian of\
    \ [-10, 4, 6, 1000, 10, 20] is 8\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmp9ygme3fj.php on line 14\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp9ygme3fj.php:29\nStack trace:\n\
    #0 /tmp/tmp9ygme3fj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9ygme3fj.php\
    \ on line 29\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    $c = $n / 2;\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$c] + $l[$c - 1]) / 2;\n    } else {\n        return\
    \ $l[$c];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmppademimd.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmppademimd.php:22\nStack trace:\n#0 /tmp/tmppademimd.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppademimd.php on line 22\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$m = count($l) / 2;\n\t$m = floor($m);\n\tif (count($l)%2)\n\
    \t\treturn $l[$m];\n\telse\n\t\treturn ($l[$m-1] + $l[$m]) / 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnpjwke82.php:21\n\
    Stack trace:\n#0 /tmp/tmpnpjwke82.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpnpjwke82.php\
    \ on line 21\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $temp = $l;\n    sort($temp);\n    $n = count($temp);\n\
    \    if ($n % 2 == 0) {\n        $f = $temp[$n / 2];\n        $s = $temp[$n /\
    \ 2 - 1];\n        return ($f + $s) / 2;\n    } else {\n        return $temp[($n\
    \ - 1) / 2];\n    }\n}\n\n$l = array(3, 1, 2, 4, 5);\necho \"midian of \" . json_encode($l)\
    \ . \" is \" . median($l) . PHP_EOL;\n$l = array(-10, 4, 6, 1000, 10, 20);\necho\
    \ \"midian of \" . json_encode($l) . \" is \" . median($l) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "midian of [3,1,2,4,5] is 3\nmidian of [-10,4,6,1000,10,20] is 8\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp6uy20urd.php:30\nStack trace:\n\
    #0 /tmp/tmp6uy20urd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6uy20urd.php\
    \ on line 30\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$count = count($l);\n\tif ($count == 0) return 0;\n\t\
    sort($l);\n\t$middle = $count / 2;\n\tif ($count % 2 == 0) {\n\t\treturn ($l[$middle\
    \ - 1] + $l[$middle]) / 2;\n\t} else {\n\t\treturn $l[$middle];\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpaf3n75l9.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpaf3n75l9.php:25\nStack trace:\n#0 /tmp/tmpaf3n75l9.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpaf3n75l9.php on line 25\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif (count($l) == 0) return 0;\n\t$l = sorted($l);\n\t\
    $len = count($l);\n\t$mid = (int)($len / 2);\n\treturn $len % 2 == 0 ? ($l[$mid]\
    \ + $l[$mid - 1]) / 2 : $l[$mid];\n}\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sorted() in /tmp/tmpoy4k6m1y.php:9\n\
    Stack trace:\n#0 /tmp/tmpoy4k6m1y.php(15): median(Array)\n#1 /tmp/tmpoy4k6m1y.php(19):\
    \ candidate(Array)\n#2 /tmp/tmpoy4k6m1y.php(26): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpoy4k6m1y.php on line 9\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $c = count($l);\n    if($c == 0) return\
    \ null;\n    if($c % 2 == 0) {\n        return ($l[$c / 2] + $l[$c / 2 - 1]) /\
    \ 2;\n    } else {\n        return $l[$c / 2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpuv9kw_hr.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpuv9kw_hr.php:24\nStack trace:\n#0 /tmp/tmpuv9kw_hr.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpuv9kw_hr.php on line 24\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    sort($l);\n    $i = floor($n / 2);\n    if ($n % 2 == 0) {\n\
    \        return ($l[$i - 1] + $l[$i]) / 2;\n    } else {\n        return $l[$i];\n\
    \    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_zd9ua4.php:26\n\
    Stack trace:\n#0 /tmp/tmpj_zd9ua4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj_zd9ua4.php\
    \ on line 26\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $len = count($l);\n  if ($len == 0) return 0;\n  sort($l);\n\
    \  $idx = $len / 2;\n  if ($len % 2 == 0)\n    return ($l[$idx] + $l[$idx - 1])\
    \ / 2;\n  else\n    return $l[$idx];\n}\n\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp8cdlrl9z.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp8cdlrl9z.php:24\nStack trace:\n#0 /tmp/tmp8cdlrl9z.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8cdlrl9z.php on line 24\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    $m = (int)($n /\
    \ 2);\n    if ($n % 2 == 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n   \
    \ } else {\n        return $l[$m];\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptdh2r4xm.php:24\n\
    Stack trace:\n#0 /tmp/tmptdh2r4xm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmptdh2r4xm.php\
    \ on line 24\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        $m1\
    \ = $l[($n/2)-1];\n        $m2 = $l[$n/2];\n        return ($m1 + $m2) / 2;\n\
    \    } else {\n        return $l[$n/2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpccat7f3l.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpccat7f3l.php:23\nStack trace:\n#0 /tmp/tmpccat7f3l.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpccat7f3l.php on line 23\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $middle = count($l) / 2;\n    if (is_int($middle))\
    \ {\n        return $l[$middle];\n    } else {\n        return ($l[floor($middle)]\
    \ + $l[ceil($middle)]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpov2i5w7z.php:22\n\
    Stack trace:\n#0 /tmp/tmpov2i5w7z.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpov2i5w7z.php\
    \ on line 22\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 == 0) {\n        $lo = (count($l)\
    \ / 2) - 1;\n        $hi = $lo + 1;\n        return ($l[$lo] + $l[$hi]) / 2;\n\
    \    } else {\n        return $l[(count($l) - 1) / 2];\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptyq37nzh.php:21\n\
    Stack trace:\n#0 /tmp/tmptyq37nzh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptyq37nzh.php\
    \ on line 21\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[floor($n / 2)];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmgz88r1k.php:23\n\
    Stack trace:\n#0 /tmp/tmpmgz88r1k.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmgz88r1k.php\
    \ on line 23\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $m = count($l);\n    sort($l);\n    if ($m % 2 == 0)\
    \ {\n        return ($l[$m / 2] + $l[$m / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[floor($m / 2)];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcx537zdn.php:23\n\
    Stack trace:\n#0 /tmp/tmpcx537zdn.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcx537zdn.php\
    \ on line 23\n"
  timestamp: 1659823238
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    // sort the array in increasing order\n    sort($l);\n\
    \    // number of elements\n    $n = count($l);\n    // odd number\n    if ($n\
    \ % 2 == 1) {\n        // find the index of middle element\n        $middle =\
    \ floor($n / 2);\n        // middle element\n        return $l[$middle];\n   \
    \ }\n    // even number\n    else {\n        // find the indices of the two middle\
    \ elements\n        $middle1 = $n / 2 - 1;\n        $middle2 = $n / 2;\n     \
    \   // find average of these two elements\n        return ($l[$middle1] + $l[$middle2])\
    \ / 2;\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3chi2ueg.php:34\n\
    Stack trace:\n#0 /tmp/tmp3chi2ueg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3chi2ueg.php\
    \ on line 34\n"
  timestamp: 1659823238

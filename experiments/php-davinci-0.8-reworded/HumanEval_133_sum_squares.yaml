name: HumanEval_133_sum_squares
language: php
prompt: "<?php\n// You are given an array of numbers.\n// You need to return the sum\
  \ of squared numbers in the given array,\n// round each element in the array to\
  \ the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
  // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
  \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
  \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n"
tests: "function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0)) !==\
  \ 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4, 4.2,\
  \ 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
  \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
  \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9)) !== 1086) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== 0)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0)) !==\
  \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, 1.0,\
  \ 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $result = array_map(function($x) {\n    return ceil($x);\n  }, $lst);\n\
    \  return array_sum(array_map(function($x) {\n    return $x * $x;\n  }, $result));\n\
    }", "  $sum = 0;\n  foreach ($lst as $number) {\n    $rounded = ceil($number);\n\
    \    $squared = $rounded * $rounded;\n    $sum += $squared;\n  }\n  return $sum;\n\
    }\n$lst = array(1.0, 2.0, 3.0);\n$result = sum_squares($lst);\necho $result;",
  "\t$sum=0;\n\tfor($i=0;$i<count($lst);$i++){\n\t\t$sum+=(ceil($lst[$i])*ceil($lst[$i]));\n\
    \t}\n\treturn $sum;\n}", "  $result = 0;\n  foreach ($lst as $item) {\n    $result\
    \ += ceil($item) ** 2;\n  }\n  return $result;\n}", "    $result = 0;\n    foreach\
    \ ($lst as $key => $number) {\n        $number = ceil($number);\n        $result\
    \ += $number * $number;\n    }\n    return $result;\n}", "    $total = 0;\n  \
    \  $count = count($lst);\n    for ($i = 0; $i < $count; $i++) {\n        $val\
    \ = ceil($lst[$i]);\n        $total += $val * $val;\n    }\n    return $total;\n\
    }\n", "  $n = 0;\n  foreach ($lst as $num) {\n    $num = ceil($num);\n    $n +=\
    \ $num * $num;\n  }\n  return $n;\n}\n", "    $arr = array_map(\n        function\
    \ ($n) {\n            return ceil($n);\n        },\n        $lst\n    );\n   \
    \ return array_sum(array_map(\n        function ($n) {\n            return $n\
    \ * $n;\n        },\n        $arr\n    ));\n}\n\n$arr = [1.0, 2.0, 3.0];\necho\
    \ sum_squares($arr);", "\t$result = array_map('ceil', $lst);\n\treturn array_sum(array_map(function($val)\
    \ { return $val * $val; }, $result));\n}\necho sum_squares(array(1.0, 2.0, 3.0)).PHP_EOL;\n\
    echo sum_squares(array(1.0, 4.0, 9.0)).PHP_EOL;\necho sum_squares(array(1.0, 3.0,\
    \ 5.0, 7.0)).PHP_EOL;\necho sum_squares(array(1.4, 4.2, 0.0)).PHP_EOL;\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)).PHP_EOL;", "    foreach ($lst as $key => $value) {\n        $ceil[]\
    \ = (int)ceil($value);\n    }\n    $sum = 0;\n    foreach ($ceil as $key => $value)\
    \ {\n        $sum += $value * $value;\n    }\n    return $sum;\n}\n", "    //\
    \ Write your code here\n    // To print results to the standard output you can\
    \ use print\n    // Example: print \"Hello world!\";\n    $result = 0;\n    foreach\
    \ ($lst as $n) {\n        $result += pow(ceil($n), 2);\n    }\n    print $result;\n\
    }", "  foreach ($lst as $key => $val) {\n    $lst[$key] = ceil($val);\n  }\n \
    \ return array_sum(array_map('square', $lst));\n}\n", "    return array_sum(array_map(function($n)\
    \ {\n        return $n ** 2;\n    }, array_map(function($n) {\n        return\
    \ ceil($n);\n    }, $lst)));\n}\n\n$lst = array(1.0, 2.0, 3.0);\n\necho sum_squares($lst);",
  "    return array_sum(array_map(function($num) {\n        return pow(ceil($num),\
    \ 2);\n    }, $lst));\n}\n", "    return array_sum(array_map(function($n) {\n\
    \        return pow($n, 2);\n    }, array_map(function($n) {\n        return ceil($n);\n\
    \    }, $lst)));\n}", "  $sq = [];\n  foreach ($lst as $item) {\n    $sq[] = ceil($item)\
    \ * ceil($item);\n  }\n  return array_sum($sq);\n}\nprint sum_squares([1.0, 2.0,\
    \ 3.0]); // 14\nprint \"\\n\";\nprint sum_squares([1.0, 4.0, 9.0]); // 98\nprint\
    \ \"\\n\";\nprint sum_squares([1.0, 3.0, 5.0, 7.0]); // 84\nprint \"\\n\";\nprint\
    \ sum_squares([1.4, 4.2, 0.0]); // 29\nprint \"\\n\";\nprint sum_squares([-2.4,\
    \ 1.0, 1.0]); // 6\nprint \"\\n\";", "    $sum = 0;\n    foreach ($lst as $number)\
    \ {\n        $number = ceil($number);\n        $number = $number ** 2;\n     \
    \   $sum += $number;\n    }\n    return $sum;\n}\n\n$array = array(1.0, 2.0, 3.0);\n\
    echo sum_squares($array) . PHP_EOL;\n\n$array = array(1.0, 4.0, 9.0);\necho sum_squares($array)\
    \ . PHP_EOL;\n\n$array = array(1.0, 3.0, 5.0, 7.0);\necho sum_squares($array)\
    \ . PHP_EOL;\n\n$array = array(1.4, 4.2, 0.0);\necho sum_squares($array) . PHP_EOL;\n\
    \n$array = array(-2.4, 1.0, 1.0);\necho sum_squares($array) . PHP_EOL;", "   \
    \ foreach ($lst as $k => $v) {\n        $lst[$k] = ceil($v);\n    }\n    return\
    \ array_sum(array_map(function($v) {\n        return $v * $v;\n    }, $lst));\n\
    }\necho sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\"\
    ;\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"\\n\";", "    $arr = array_map(function($el) { return ceil($el);\
    \ }, $lst);\n    return array_sum(array_map(function($el) { return $el ** 2; },\
    \ $arr));\n}\n", "    $result = 0;\n    foreach ($lst as $item) {\n        $result\
    \ += pow(ceil($item), 2);\n    }\n    return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

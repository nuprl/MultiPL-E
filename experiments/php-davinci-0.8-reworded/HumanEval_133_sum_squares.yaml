name: HumanEval_133_sum_squares
language: php
prompt: "<?php\n// You are given an array of numbers.\n// You need to return the sum\
  \ of squared numbers in the given array,\n// round each element in the array to\
  \ the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
  // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
  \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
  \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n"
tests: "function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0)) !==\
  \ 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4, 4.2,\
  \ 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
  \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
  \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9)) !== 1086) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== 0)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0)) !==\
  \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, 1.0,\
  \ 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $result = array_map(function($x) {\n    return ceil($x);\n  }, $lst);\n\
    \  return array_sum(array_map(function($x) {\n    return $x * $x;\n  }, $result));\n\
    }", "  $sum = 0;\n  foreach ($lst as $number) {\n    $rounded = ceil($number);\n\
    \    $squared = $rounded * $rounded;\n    $sum += $squared;\n  }\n  return $sum;\n\
    }\n$lst = array(1.0, 2.0, 3.0);\n$result = sum_squares($lst);\necho $result;",
  "\t$sum=0;\n\tfor($i=0;$i<count($lst);$i++){\n\t\t$sum+=(ceil($lst[$i])*ceil($lst[$i]));\n\
    \t}\n\treturn $sum;\n}", "  $result = 0;\n  foreach ($lst as $item) {\n    $result\
    \ += ceil($item) ** 2;\n  }\n  return $result;\n}", "    $result = 0;\n    foreach\
    \ ($lst as $key => $number) {\n        $number = ceil($number);\n        $result\
    \ += $number * $number;\n    }\n    return $result;\n}", "    $total = 0;\n  \
    \  $count = count($lst);\n    for ($i = 0; $i < $count; $i++) {\n        $val\
    \ = ceil($lst[$i]);\n        $total += $val * $val;\n    }\n    return $total;\n\
    }\n", "  $n = 0;\n  foreach ($lst as $num) {\n    $num = ceil($num);\n    $n +=\
    \ $num * $num;\n  }\n  return $n;\n}\n", "    $arr = array_map(\n        function\
    \ ($n) {\n            return ceil($n);\n        },\n        $lst\n    );\n   \
    \ return array_sum(array_map(\n        function ($n) {\n            return $n\
    \ * $n;\n        },\n        $arr\n    ));\n}\n\n$arr = [1.0, 2.0, 3.0];\necho\
    \ sum_squares($arr);", "\t$result = array_map('ceil', $lst);\n\treturn array_sum(array_map(function($val)\
    \ { return $val * $val; }, $result));\n}\necho sum_squares(array(1.0, 2.0, 3.0)).PHP_EOL;\n\
    echo sum_squares(array(1.0, 4.0, 9.0)).PHP_EOL;\necho sum_squares(array(1.0, 3.0,\
    \ 5.0, 7.0)).PHP_EOL;\necho sum_squares(array(1.4, 4.2, 0.0)).PHP_EOL;\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)).PHP_EOL;", "    foreach ($lst as $key => $value) {\n        $ceil[]\
    \ = (int)ceil($value);\n    }\n    $sum = 0;\n    foreach ($ceil as $key => $value)\
    \ {\n        $sum += $value * $value;\n    }\n    return $sum;\n}\n", "    //\
    \ Write your code here\n    // To print results to the standard output you can\
    \ use print\n    // Example: print \"Hello world!\";\n    $result = 0;\n    foreach\
    \ ($lst as $n) {\n        $result += pow(ceil($n), 2);\n    }\n    print $result;\n\
    }", "  foreach ($lst as $key => $val) {\n    $lst[$key] = ceil($val);\n  }\n \
    \ return array_sum(array_map('square', $lst));\n}\n", "    return array_sum(array_map(function($n)\
    \ {\n        return $n ** 2;\n    }, array_map(function($n) {\n        return\
    \ ceil($n);\n    }, $lst)));\n}\n\n$lst = array(1.0, 2.0, 3.0);\n\necho sum_squares($lst);",
  "    return array_sum(array_map(function($num) {\n        return pow(ceil($num),\
    \ 2);\n    }, $lst));\n}\n", "    return array_sum(array_map(function($n) {\n\
    \        return pow($n, 2);\n    }, array_map(function($n) {\n        return ceil($n);\n\
    \    }, $lst)));\n}", "  $sq = [];\n  foreach ($lst as $item) {\n    $sq[] = ceil($item)\
    \ * ceil($item);\n  }\n  return array_sum($sq);\n}\nprint sum_squares([1.0, 2.0,\
    \ 3.0]); // 14\nprint \"\\n\";\nprint sum_squares([1.0, 4.0, 9.0]); // 98\nprint\
    \ \"\\n\";\nprint sum_squares([1.0, 3.0, 5.0, 7.0]); // 84\nprint \"\\n\";\nprint\
    \ sum_squares([1.4, 4.2, 0.0]); // 29\nprint \"\\n\";\nprint sum_squares([-2.4,\
    \ 1.0, 1.0]); // 6\nprint \"\\n\";", "    $sum = 0;\n    foreach ($lst as $number)\
    \ {\n        $number = ceil($number);\n        $number = $number ** 2;\n     \
    \   $sum += $number;\n    }\n    return $sum;\n}\n\n$array = array(1.0, 2.0, 3.0);\n\
    echo sum_squares($array) . PHP_EOL;\n\n$array = array(1.0, 4.0, 9.0);\necho sum_squares($array)\
    \ . PHP_EOL;\n\n$array = array(1.0, 3.0, 5.0, 7.0);\necho sum_squares($array)\
    \ . PHP_EOL;\n\n$array = array(1.4, 4.2, 0.0);\necho sum_squares($array) . PHP_EOL;\n\
    \n$array = array(-2.4, 1.0, 1.0);\necho sum_squares($array) . PHP_EOL;", "   \
    \ foreach ($lst as $k => $v) {\n        $lst[$k] = ceil($v);\n    }\n    return\
    \ array_sum(array_map(function($v) {\n        return $v * $v;\n    }, $lst));\n\
    }\necho sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\"\
    ;\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"\\n\";", "    $arr = array_map(function($el) { return ceil($el);\
    \ }, $lst);\n    return array_sum(array_map(function($el) { return $el ** 2; },\
    \ $arr));\n}\n", "    $result = 0;\n    foreach ($lst as $item) {\n        $result\
    \ += pow(ceil($item), 2);\n    }\n    return $result;\n}\n", "  $result = 0;\n\
    \  foreach ($lst as $val) {\n    $result += pow(ceil($val), 2);\n  }\n  return\
    \ $result;\n}", "  $new_array = [];\n  foreach ($lst as $value) {\n    $new_array[]\
    \ = ceil($value);\n  }\n  return array_sum(array_map('convert', $new_array));\n\
    }\n", "  $arr = [];\n  foreach ($lst as $num) {\n    $arr[] = ceil($num);\n  }\n\
    \  $total = 0;\n  foreach ($arr as $num) {\n    $total += $num * $num;\n  }\n\
    \  return $total;\n}", "  return array_sum(array_map(function($n) {\n    return\
    \ pow(ceil($n), 2);\n  }, $lst));\n}\necho \"lst(array(1.0, 2.0, 3.0)) = \" .\
    \ sum_squares(array(1.0, 2.0, 3.0)) . PHP_EOL;\necho \"lst(array(1.0, 4.0, 9.0))\
    \ = \" . sum_squares(array(1.0, 4.0, 9.0)) . PHP_EOL;\necho \"lst(array(1.0, 3.0,\
    \ 5.0, 7.0)) = \" . sum_squares(array(1.0, 3.0, 5.0, 7.0)) . PHP_EOL;\necho \"\
    lst(array(1.4, 4.2, 0.0)) = \" . sum_squares(array(1.4, 4.2, 0.0)) . PHP_EOL;\n\
    echo \"lst(array(-2.4, 1.0, 1.0)) = \" . sum_squares(array(-2.4, 1.0, 1.0)) .\
    \ PHP_EOL;", "    $sum = 0;\n    foreach ($lst as $number) {\n        $num = ceil($number);\n\
    \        $sum += $num ** 2;\n    }\n    return $sum;\n}\n\n$arr = array(1.0, 2.0,\
    \ 3.0);\necho sum_squares($arr);", "  // your code goes here\n  // return sum\
    \ of squared numbers\n  return 0;\n}\n", "    $sum = 0;\n    foreach ($lst as\
    \ $value) {\n        $sum += pow(ceil($value), 2);\n    }\n    return $sum;\n\
    }\necho sum_squares(array(1.0, 2.0, 3.0));\necho \"<br>\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0));\necho \"<br>\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\n\
    echo \"<br>\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho \"<br>\";\necho\
    \ sum_squares(array(-2.4, 1.0, 1.0));", "  $array = [];\n  foreach ($lst as $key\
    \ => $value) {\n    $lst[$key] = ceil($value);\n    $array[] = $lst[$key] * $lst[$key];\n\
    \  }\n  return array_sum($array);\n}", "    $lst = array_map('ceil', $lst);\n\
    \    $sum = 0;\n    foreach ($lst as $value) {\n        $sum += $value ** 2;\n\
    \    }\n    return $sum;\n}\n\necho sum_squares(array(1.0, 2.0, 3.0));\necho \"\
    \\n\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"\\n\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0));\necho \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho\
    \ \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0));\necho \"\\n\";", "  $sum\
    \ = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n  return\
    \ $sum;\n}\n", "    $ans = 0;\n    foreach ($lst as $item) {\n        $ans +=\
    \ ceil($item) * ceil($item);\n    }\n    return $ans;\n}\n$a = array(1.0, 2.0,\
    \ 3.0);\n$b = array(1.0, 4.0, 9.0);\n$c = array(1.0, 3.0, 5.0, 7.0);\n$d = array(1.4,\
    \ 4.2, 0.0);\n$e = array(-2.4, 1.0, 1.0);\necho sum_squares($a).\"\\n\";\necho\
    \ sum_squares($b).\"\\n\";\necho sum_squares($c).\"\\n\";\necho sum_squares($d).\"\
    \\n\";\necho sum_squares($e).\"\\n\";", "    $result = 0;\n    for ($i = 0; $i\
    \ < count($lst); $i++) {\n        $result += ceil($lst[$i]) ** 2;\n    }\n   \
    \ return $result;\n}\n", "  return array_sum(array_map(function($n) {\n    return\
    \ pow(ceil($n), 2);\n  }, $lst));\n}", "  $ret = 0;\n  $i = 0;\n  while ($i <\
    \ count($lst)) {\n    $ret += pow(round($lst[$i]), 2);\n    $i++;\n  }\n  return\
    \ $ret;\n}", "    $lst = array_map('ceil', $lst);\n    $result = 0;\n    foreach\
    \ ($lst as $number) {\n        $result += $number * $number;\n    }\n    return\
    \ $result;\n}\n\necho sum_squares(array(1.0, 2.0, 3.0));\necho '<br>';\necho sum_squares(array(1.0,\
    \ 4.0, 9.0));\necho '<br>';\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho\
    \ '<br>';\necho sum_squares(array(1.4, 4.2, 0.0));\necho '<br>';\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0));", "  $result = 0;\n  foreach ($lst as $num) {\n    $result += ceil($num)\
    \ * ceil($num);\n  }\n  return $result;\n}\n\nvar_dump(sum_squares(array(1.0,\
    \ 2.0, 3.0)) === 14);\nvar_dump(sum_squares(array(1.0, 4.0, 9.0)) === 98);\nvar_dump(sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)) === 84);\nvar_dump(sum_squares(array(1.4, 4.2, 0.0)) === 29);\n\
    var_dump(sum_squares(array(-2.4, 1.0, 1.0)) === 6);", "  $result = 0;\n  foreach\
    \ ($lst as $value) {\n    $value = ceil($value);\n    $result += $value * $value;\n\
    \  }\n  return $result;\n}\n", "  return array_sum(array_map(function($n) { return\
    \ $n ** 2; }, $lst));\n}\n", "    $result = 0;\n    foreach ($lst as $lst_item)\
    \ {\n        $result += pow(ceil($lst_item), 2);\n    }\n    return $result;\n\
    }\necho sum_squares(array(1.0, 2.0, 3.0)) . PHP_EOL;\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . PHP_EOL;\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . PHP_EOL;\n\
    echo sum_squares(array(1.4, 4.2, 0.0)) . PHP_EOL;\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . PHP_EOL;", "  $sum = 0;\n  foreach ($lst as $num) {\n    $num =\
    \ ceil($num);\n    $sum += $num * $num;\n  }\n  return $sum;\n}\n", "  $result\
    \ = array_map(function($number) {\n    return ceil($number);\n  }, $lst);\n  $result\
    \ = array_map(function($number) {\n    return $number ** 2;\n  }, $result);\n\
    \  return array_sum($result);\n}\n\necho sum_squares([1.0, 2.0, 3.0]) . \"\\n\"\
    ;\necho sum_squares([1.0, 4.0, 9.0]) . \"\\n\";\necho sum_squares([1.0, 3.0, 5.0,\
    \ 7.0]) . \"\\n\";\necho sum_squares([1.4, 4.2, 0.0]) . \"\\n\";\necho sum_squares([-2.4,\
    \ 1.0, 1.0]) . \"\\n\";", "  $sum = 0;\n  foreach ($lst as $i) {\n    $sum +=\
    \ pow(ceil($i), 2);\n  }\n  return $sum;\n}\n\necho sum_squares(array(1.0, 2.0,\
    \ 3.0));", "  // Good luck!\n  for ($i = 0; $i < count($lst); $i++) {\n    $lst[$i]\
    \ = round($lst[$i]);\n  }\n  return array_sum(array_map(function($v) {\n    return\
    \ $v * $v;\n  }, $lst));\n}", "  return array_sum(array_map(function($value) {\n\
    \    return pow(ceil($value), 2);\n  }, $lst));\n}", "\n}\n", "  $squared_lst\
    \ = array_map(function($item) {\n    return round($item) ** 2;\n  }, $lst);\n\
    \  return array_sum($squared_lst);\n}", "  $value = 0;\n  foreach ($lst as $number)\
    \ {\n    $newNumber = $number < 0 ? round($number) - 1 : round($number);\n   \
    \ $value += $newNumber * $newNumber;\n  }\n  return $value;\n}\n$a = [1.0, 2.0,\
    \ 3.0];\n$b = [1.0, 4.0, 9.0];\n$c = [1.0, 3.0, 5.0, 7.0];\n$d = [1.4, 4.2, 0.0];\n\
    $e = [-2.4, 1.0, 1.0];\n\necho '<pre>';\necho sum_squares($a) . '<br />';\necho\
    \ sum_squares($b) . '<br />';\necho sum_squares($c) . '<br />';\necho sum_squares($d)\
    \ . '<br />';\necho sum_squares($e) . '<br />';\necho '</pre>';\n", "  $sum =\
    \ 0;\n  foreach ($lst as $value) {\n    $sum += pow(ceil($value), 2);\n  }\n \
    \ return $sum;\n}\necho sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\"\
    ;\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"\\n\";", "  return array_sum(array_map(function($x) { return\
    \ pow(ceil($x), 2); }, $lst));\n}\n\necho sum_squares(array(1.0, 2.0, 3.0)).\"\
    \\n\";\necho sum_squares(array(1.0, 4.0, 9.0)).\"\\n\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)).\"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0)).\"\\n\";\n\
    echo sum_squares(array(-2.4, 1.0, 1.0)).\"\\n\";", "\treturn array_sum(array_map(function($n)\
    \ {\n\t\treturn $n * $n;\n\t}, array_map('ceil', $lst)));\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0)), \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0)), \"\\n\";\necho\
    \ sum_squares(array(1.0, 3.0, 5.0, 7.0)), \"\\n\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0)), \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0)), \"\\n\";", " \
    \   $result = 0;\n    foreach ($lst as $num) {\n        $result += pow(ceil($num),\
    \ 2);\n    }\n    return $result;\n}\n\n$arr1 = array(1.0, 2.0, 3.0);\necho \"\
    lst($arr1) = \" . sum_squares($arr1) . \"\\n\";\n$arr2 = array(1.0, 4.0, 9.0);\n\
    echo \"lst($arr2) = \" . sum_squares($arr2) . \"\\n\";\n$arr3 = array(1.0, 3.0,\
    \ 5.0, 7.0);\necho \"lst($arr3) = \" . sum_squares($arr3) . \"\\n\";\n$arr4 =\
    \ array(1.4, 4.2, 0.0);\necho \"lst($arr4) = \" . sum_squares($arr4) . \"\\n\"\
    ;\n$arr5 = array(-2.4, 1.0, 1.0);\necho \"lst($arr5) = \" . sum_squares($arr5)\
    \ . \"\\n\";\n\necho \"\\n\";\n", "    $sum = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        $sum += $lst[$i] ** 2;\n    }\n    return $sum;\n}\n\n$a =\
    \ array(1.0, 2.0, 3.0);\n$b = array(1.0, 4.0, 9.0);\n$c = array(1.0, 3.0, 5.0,\
    \ 7.0);\n$d = array(1.4, 4.2, 0.0);\n$e = array(-2.4, 1.0, 1.0);\n\nvar_dump(sum_squares($a));\n\
    var_dump(sum_squares($b));\nvar_dump(sum_squares($c));\nvar_dump(sum_squares($d));\n\
    var_dump(sum_squares($e));", "    $s = 0;\n    foreach ($lst as $i) {\n      \
    \  $s += pow(ceil($i), 2);\n    }\n    return $s;\n}\n", "    $result = 0;\n \
    \   foreach ($lst as $v) {\n        $result += pow(ceil($v), 2);\n    }\n    return\
    \ $result;\n}", "    // your code here\n    $total = 0;\n    foreach ($lst as\
    \ $element) {\n        $total += pow(ceil($element), 2);\n    }\n    return $total;\n\
    }\n", "    $res = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $res\
    \ += pow(ceil($lst[$i]), 2);\n    }\n    return $res;\n}\necho sum_squares(array(1.0,\
    \ 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0)) . \"\\n\";\necho\
    \ sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0)) . \"\\n\";",
  "    $sum_sq = 0;\n    foreach ($lst as $elem) {\n        $sum_sq += pow(ceil($elem),\
    \ 2);\n    }\n    return $sum_sq;\n}\n", "\tif(!is_array($lst)){\n\t\treturn 0;\n\
    \t}\n\t$sum = 0;\n\tforeach($lst as $n){\n\t\t$n = ceil($n);\n\t\t$sum += $n *\
    \ $n;\n\t}\n\treturn $sum;\n}", "    if(count($lst) == 0) return 0;\n    return\
    \ array_sum(array_map('square', array_map('ceil', $lst)));\n}\n", "  $total =\
    \ 0;\n  foreach ($lst as $el) {\n    $total += ceil($el) ** 2;\n  }\n  return\
    \ $total;\n}", "  $lst = array_map(function($x) {\n    return ceil($x);\n  },\
    \ $lst);\n  return array_sum(array_map(function($x) {\n    return $x * $x;\n \
    \ }, $lst));\n}\n\nprint sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\nprint sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"\\n\";\nprint sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\"\
    ;\nprint sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\nprint sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"\\n\";", "    foreach ($lst as $k => $v) {\n        $lst[$k]\
    \ = ceil($v);\n    }\n    return array_sum(array_map(function($item) { return\
    \ $item * $item; }, $lst));\n}\n", "    $result = 0;\n    foreach ($lst as $item)\
    \ {\n        $item = ceil($item);\n        $result += pow($item, 2);\n    }\n\
    \    return $result;\n}\n", "    $arr = array_map(function($a) { return ceil($a);\
    \ }, $lst);\n    return array_sum(array_map(function($a) { return $a * $a; },\
    \ $arr));\n}", "    return array_sum(array_map(function($num) {\n        return\
    \ pow(ceil($num), 2);\n    }, $lst));\n}\n", "  $sum = 0;\n  foreach ($lst as\
    \ $key => $value) {\n    $sum += pow(ceil($value), 2);\n  }\n  return $sum;\n\
    }\n", "    return array_sum(array_map('square', $lst));\n}\n", "    $arr = array_map(function($elem)\
    \ {\n        return ceil($elem);\n    }, $lst);\n    return array_sum(array_map(function($elem)\
    \ {\n        return $elem * $elem;\n    }, $arr));\n}", "    $result = 0;\n  \
    \  foreach ($lst as $item) {\n        $result += ceil($item) ** 2;\n    }\n  \
    \  return $result;\n}\n", "    $arr = array_map(function($i) {\n        return\
    \ ceil($i);\n    }, $lst);\n    $arr = array_map(function($i) {\n        return\
    \ $i*$i;\n    }, $arr);\n    return array_sum($arr);\n}\necho sum_squares(array(1.0,\
    \ 2.0, 3.0)) . PHP_EOL;\necho sum_squares(array(1.0, 4.0, 9.0)) . PHP_EOL;\necho\
    \ sum_squares(array(1.0, 3.0, 5.0, 7.0)) . PHP_EOL;\necho sum_squares(array(1.4,\
    \ 4.2, 0.0)) . PHP_EOL;\necho sum_squares(array(-2.4, 1.0, 1.0)) . PHP_EOL;",
  "    $result = 0;\n    foreach ($lst as $element) {\n        $result += (int) ceil($element)\
    \ ** 2;\n    }\n    return $result;\n}\n\n$test = array(1.0, 2.0, 3.0);\necho\
    \ sum_squares($test) . \"\\n\";", "\tfor ($i = 0; $i < count($lst); $i++) {\n\t\
    \t$lst[$i] = ceil($lst[$i]);\n\t\t$lst[$i] = $lst[$i] * $lst[$i];\n\t}\n\treturn\
    \ array_sum($lst);\n}\necho sum_squares(array(1.0, 2.0, 3.0)) . \"<br>\";\necho\
    \ sum_squares(array(1.0, 4.0, 9.0)) . \"<br>\";\necho sum_squares(array(1.0, 3.0,\
    \ 5.0, 7.0)) . \"<br>\";\necho sum_squares(array(1.4, 4.2, 0.0)) . \"<br>\";\n\
    echo sum_squares(array(-2.4, 1.0, 1.0)) . \"<br>\";\n", "  foreach ($lst as $key\
    \ => $value) {\n    $lst[$key] = round($value);\n  }\n  return array_sum(array_map(function($a)\
    \ { return $a * $a; }, $lst));\n}\n", "  $sum = 0;\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    $sum += ceil($lst[$i]) ** 2;\n  }\n  return $sum;\n}\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\necho \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"\
    \\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho \"\\n\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0));\necho \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0));\necho \"\
    \\n\";", "    $result = 0;\n    foreach ($lst as $value) {\n        $result +=\
    \ (int) ceil($value) * (int) ceil($value);\n    }\n    return $result;\n}\n\n\
    echo sum_squares(array(1.0, 2.0, 3.0));\necho \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0));\necho \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho\
    \ \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0));\necho \"\\n\";", "  $sum = 0;\n  foreach ($lst as $key => $value)\
    \ {\n    $sum += ceil($value) ** 2;\n  }\n  return $sum;\n}", "  $result = 0;\n\
    \  for ($i = 0; $i < count($lst); $i++) {\n    $result += ceil($lst[$i]) ** 2;\n\
    \  }\n  return $result;\n}", "    $arr = [];\n    foreach ($lst as $key => $value)\
    \ {\n        $arr[] = ceil($value);\n    }\n    $result = 0;\n    foreach ($arr\
    \ as $key => $value) {\n        $result += $value * $value;\n    }\n    return\
    \ $result;\n}\necho sum_squares(array(1.0, 2.0, 3.0)) . PHP_EOL; // 14\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . PHP_EOL; // 98\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . PHP_EOL;\
    \ // 84\necho sum_squares(array(1.4, 4.2, 0.0)) . PHP_EOL; // 29\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . PHP_EOL; // 6", "  $res = 0;\n  foreach ($lst as $el) {\n    $res\
    \ += ceil($el) ** 2;\n  }\n  return $res;\n}\n", "    $sum = 0;\n    foreach ($lst\
    \ as $key => $value) {\n        $value = ceil($value);\n        $sum += $value\
    \ ** 2;\n    }\n    return $sum;\n}\n", "  return (int)array_sum(array_map(function($item)\
    \ {\n    return $item * $item;\n  }, array_map('ceil', $lst)));\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\necho \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"\
    \\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho \"\\n\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0));\necho \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0));\necho \"\
    \\n\";", "  return array_sum(array_map(function($num) {\n    return ceil($num)\
    \ ** 2;\n  }, $lst));\n}\nprint_r(sum_squares([1.0, 2.0, 3.0]) . \"\\n\");\nprint_r(sum_squares([1.0,\
    \ 4.0, 9.0]) . \"\\n\");\nprint_r(sum_squares([1.0, 3.0, 5.0, 7.0]) . \"\\n\"\
    );\nprint_r(sum_squares([1.4, 4.2, 0.0]) . \"\\n\");\nprint_r(sum_squares([-2.4,\
    \ 1.0, 1.0]) . \"\\n\");", "  foreach ($lst as $value) {\n    $new_lst[] = ceil($value)\
    \ ** 2;\n  }\n  return array_sum($new_lst);\n}", "  $lst = array_map(function($x)\
    \ { return ceil($x); }, $lst);\n  return array_reduce($lst, function($a, $b) {\
    \ return $a + pow($b, 2); }, 0);\n}\n$cases = array(\n  array(1.0, 2.0, 3.0),\n\
    \  array(1.0, 4.0, 9.0),\n  array(1.0, 3.0, 5.0, 7.0),\n  array(1.4, 4.2, 0.0),\n\
    \  array(-2.4, 1.0, 1.0),\n);\nforeach ($cases as $case) {\n  echo sum_squares($case)\
    \ . \"\\n\";\n}", "    $array_of_elements = array_map(function($x) {\n       \
    \ return ceil($x);\n    }, $lst);\n    return array_sum(array_map(function($x)\
    \ {\n        return $x*$x;\n    }, $array_of_elements));\n}", "  return array_sum(array_map(function($x)\
    \ { return pow(ceil($x), 2); }, $lst));\n}", "    $ret = 0;\n    foreach ($lst\
    \ as $el) {\n        $ret += ceil($el) * ceil($el);\n    }\n    return $ret;\n\
    }\n", "  $sum = 0;\n  foreach ($lst as $number) {\n    $number = ceil($number);\n\
    \    $sum += pow($number, 2);\n  }\n  return $sum;\n}", "  $sum = 0;\n  for ($i\
    \ = 0; $i < count($lst); $i++) {\n    $sum += ceil($lst[$i]) * ceil($lst[$i]);\n\
    \  }\n  return $sum;\n}\n\necho '>>> lst(array(1.0, 2.0, 3.0))' . PHP_EOL;\necho\
    \ sum_squares(array(1.0, 2.0, 3.0)) . PHP_EOL;\necho '>>> lst(array(1.0, 4.0,\
    \ 9.0))' . PHP_EOL;\necho sum_squares(array(1.0, 4.0, 9.0)) . PHP_EOL;\necho '>>>\
    \ lst(array(1.0, 3.0, 5.0, 7.0))' . PHP_EOL;\necho sum_squares(array(1.0, 3.0,\
    \ 5.0, 7.0)) . PHP_EOL;\necho '>>> lst(array(1.4, 4.2, 0.0))' . PHP_EOL;\necho\
    \ sum_squares(array(1.4, 4.2, 0.0)) . PHP_EOL;\necho '>>> lst(array(-2.4, 1.0,\
    \ 1.0))' . PHP_EOL;\necho sum_squares(array(-2.4, 1.0, 1.0)) . PHP_EOL;", "  $sum\
    \ = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n  return\
    \ $sum;\n}\necho sum_squares(array(1.0, 2.0, 3.0));\necho \"<br>\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0));\necho \"<br>\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\n\
    echo \"<br>\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho \"<br>\";\necho\
    \ sum_squares(array(-2.4, 1.0, 1.0));", "    $a = array_map('ceil', $lst);\n \
    \   return array_sum(array_map(function($b) { return $b*$b; }, $a));\n}\n\n$a\
    \ = array(1.0, 2.0, 3.0);\n$b = array(1.0, 4.0, 9.0);\n$c = array(1.0, 3.0, 5.0,\
    \ 7.0);\n$d = array(1.4, 4.2, 0.0);\n$e = array(-2.4, 1.0, 1.0);\necho sum_squares($a)\
    \ . PHP_EOL;\necho sum_squares($b) . PHP_EOL;\necho sum_squares($c) . PHP_EOL;\n\
    echo sum_squares($d) . PHP_EOL;\necho sum_squares($e) . PHP_EOL;", "  if (empty($lst))\
    \ {\n    return 0;\n  }\n  $total = 0;\n  foreach ($lst as $value) {\n    $total\
    \ += ceil($value) ** 2;\n  }\n  return $total;\n}\n\nvar_dump(sum_squares(array(1.0,\
    \ 2.0, 3.0))); // 14\nvar_dump(sum_squares(array(1.0, 4.0, 9.0))); // 98\nvar_dump(sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0))); // 84\nvar_dump(sum_squares(array(1.4, 4.2, 0.0))); // 29\n\
    var_dump(sum_squares(array(-2.4, 1.0, 1.0))); // 6", "    $total = 0;\n    foreach\
    \ ($lst as $value) {\n        $total += $value * $value;\n    }\n    return $total;\n\
    }\necho sum_squares(array(1.0, 2.0, 3.0)) . PHP_EOL;\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . PHP_EOL;\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . PHP_EOL;\n\
    echo sum_squares(array(1.4, 4.2, 0.0)) . PHP_EOL;\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . PHP_EOL;", "  $result = 0;\n  foreach ($lst as $v) {\n    $result\
    \ += pow(ceil($v), 2);\n  }\n  return $result;\n}\n\nvar_dump(sum_squares(array(1.0,\
    \ 2.0, 3.0)));\nvar_dump(sum_squares(array(1.0, 4.0, 9.0)));\nvar_dump(sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)));\nvar_dump(sum_squares(array(1.4, 4.2, 0.0)));\nvar_dump(sum_squares(array(-2.4,\
    \ 1.0, 1.0)));", "    return array_sum(array_map(function($x) {\n        return\
    \ pow(ceil($x), 2);\n    }, $lst));\n}", "    return array_sum(array_map(function($n)\
    \ {\n        return ceil($n) ** 2;\n    }, $lst));\n}\n", "    return array_sum(array_map(function($n)\
    \ { return pow(ceil($n), 2); }, $lst));\n}\n", "    $new_array = [];\n    foreach\
    \ ($lst as $num) {\n        $new_array[] = ceil($num);\n    }\n    $sum = 0;\n\
    \    foreach ($new_array as $num) {\n        $sum += $num * $num;\n    }\n   \
    \ return $sum;\n}", "    $arr = array_map('ceil', $lst);\n    $result = array_map(function($value)\
    \ {\n        return $value * $value;\n    }, $arr);\n    return array_sum($result);\n\
    }", "    $result = 0;\n    foreach ($lst as $num) {\n        $result += ceil($num)\
    \ ** 2;\n    }\n    return $result;\n}", "  $result = 0;\n  foreach ($lst as $key\
    \ => $value) {\n    $result += ceil($value) * ceil($value);\n  }\n  return $result;\n\
    }", "    // enter your code here\n    $sum = 0;\n    foreach ($lst as $value)\
    \ {\n        $sum += ceil($value) * ceil($value);\n    }\n    return $sum;\n}\n\
    echo sum_squares(array(1.0, 2.0, 3.0));", "    $result = 0;\n    foreach ($lst\
    \ as $num) {\n        $result += ceil($num) * ceil($num);\n    }\n    return $result;\n\
    }", "    $result = 0;\n    foreach ($lst as $x) {\n        $result += ceil($x)\
    \ ** 2;\n    }\n    return $result;\n}", "    return array_sum(array_map(function($x)\
    \ {\n        return pow(ceil($x), 2);\n    }, $lst));\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\necho sum_squares(array(1.0, 4.0, 9.0));\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0));\necho sum_squares(array(1.4, 4.2, 0.0));\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0));", "  $lst = array_map('ceil', $lst);\n  $sum = 0;\n  foreach ($lst\
    \ as $num) {\n    $sum += pow($num, 2);\n  }\n  return $sum;\n}\n", "    if (count($lst)\
    \ == 0) return 0;\n    return pow(ceil($lst[0]), 2) + sum_squares(array_slice($lst,\
    \ 1));\n}\n\necho sum_squares(array(1.0, 2.0, 3.0)). \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)). \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)). \"\\n\";\n\
    echo sum_squares(array(1.4, 4.2, 0.0)). \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)). \"\\n\";", "    if (empty($lst)) {\n        return 0;\n    }\n\n\
    \    $sum = 0;\n    foreach ($lst as $item) {\n        $item = ceil($item);\n\
    \        $sum += $item * $item;\n    }\n\n    return $sum;\n}\n", "    return\
    \ array_sum(array_map(function($element) {\n        return pow(ceil($element),\
    \ 2);\n    }, $lst));\n}\n", "    foreach ($lst as $key => $value) {\n       \
    \ $value = ceil($value);\n        $result += $value * $value;\n    }\n    return\
    \ $result;\n}\n\necho sum_squares(array(1.0, 2.0, 3.0)) . \"<br>\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"<br>\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"<br>\"\
    ;\necho sum_squares(array(1.4, 4.2, 0.0)) . \"<br>\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"<br>\";", "  $lst = array_map(function($n) {\n    return ceil($n);\n\
    \  }, $lst);\n  return array_sum(array_map(function($n) {\n    return $n * $n;\n\
    \  }, $lst));\n}\necho sum_squares(array(1.0, 2.0, 3.0));", "    $sum = 0;\n \
    \   foreach ($lst as $item) {\n        $sum += pow(ceil($item), 2);\n    }\n \
    \   return $sum;\n}", "    return array_sum(array_map(function($x) {\n      return\
    \ pow(round($x), 2);\n    }, $lst));\n}", "    $squares = array_map(function($i)\
    \ { return ceil($i); }, $lst);\n    $sum = 0;\n    foreach ($squares as $square)\
    \ {\n        $sum += pow($square, 2);\n    }\n    return $sum;\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));", "  // $newArray = [];\n  // foreach ($lst as $value) {\n  // \
    \  $newArray[] = ceil($value);\n  // }\n  // $newArray = array_map('ceil', $lst);\n\
    \  // return array_sum(array_map('ceil', $lst));\n  // return array_sum(array_map(function($v)\
    \ {\n  //   return ceil($v);\n  // }, $lst));\n  // return array_sum(array_map('pow',\
    \ array_map('ceil', $lst), array_fill(0, count($lst), 2)));\n  // return array_sum(array_map(function($v)\
    \ {\n  //   return pow(ceil($v), 2);\n  // }, $lst));\n  // return array_sum(array_map(function($v)\
    \ {\n  //   return pow($v, 2);\n  // }, array_map('ceil', $lst)));\n  // return\
    \ array_sum(array_map(function($v) {\n  //   return $v ** 2;\n  // }, array_map('ceil',\
    \ $lst)));\n  // return array_sum(array_map(function($v) {\n  //   return $v **\
    \ 2;\n  // }, array_map(function($v) {\n  //   return ceil($v);\n  // }, $lst)));\n\
    \  // return array_sum(array_map(function($v) {\n  //   return $v ** 2;\n  //\
    \ }, array_map(function($v) {\n  //   return ceil($v);\n  // }, $lst)));\n  //\
    \ return array_sum(array_map(function($v) {\n  //   return $v ** 2;\n  // }, array_map(function($v)\
    \ {\n  //   return ceil($v);\n  // }, $lst)));\n  // return array_sum(array_map(function($v)\
    \ {\n  //   return $v ** 2;\n  // }, array_map(function($v) {\n  //   return ceil($v);\n\
    \  // }, $lst))", "    return array_sum(array_map(function($v) {\n        return\
    \ pow(ceil($v), 2);\n    }, $lst));\n}\necho sum_squares(array(1.0, 2.0, 3.0));",
  "    $s = 0;\n    foreach ($lst as $e) {\n        $s += ceil($e) ** 2;\n    }\n\
    \    return $s;\n}\necho sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\"\
    ;\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"\\n\";", "  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++)\
    \ {\n    $sum += ceil($lst[$i])**2;\n  }\n  return $sum;\n}", "    $sum = 0;\n\
    \    foreach ($lst as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n\
    }\n", "$s = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $s += ceil($lst[$i])\
    \ ** 2;\n  }\n  return $s;\n}", "  $new_array = [];\n  foreach ($lst as $number)\
    \ {\n    $number = ceil($number);\n    $new_array[] = $number * $number;\n  }\n\
    \  return array_sum($new_array);\n}\n", "    $result = 0;\n    foreach ($lst as\
    \ $num) {\n        $result += round($num, 0, PHP_ROUND_HALF_UP) ** 2;\n    }\n\
    \    return $result;\n}\n", "  $new_array = [];\n  foreach ($lst as $value) {\n\
    \    array_push($new_array, ceil($value));\n  }\n  $sum = 0;\n  foreach ($new_array\
    \ as $value) {\n    $sum += $value**2;\n  }\n  return $sum;\n}\n", "  $sum = 0;\n\
    \  foreach ($lst as $value) {\n    $sum += ceil($value) * ceil($value);\n  }\n\
    \  return $sum;\n}\n\necho sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\necho\
    \ sum_squares(array(1.0, 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0, 3.0,\
    \ 5.0, 7.0)) . \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\necho\
    \ sum_squares(array(-2.4, 1.0, 1.0)) . \"\\n\";", "    return array_sum(array_map(function($x)\
    \ { return $x * $x; }, array_map('ceil', $lst)));\n}\n\n$lst = array(1.0, 2.0,\
    \ 3.0);\necho sum_squares($lst) . \"\\n\";\n$lst = array(1.0, 4.0, 9.0);\necho\
    \ sum_squares($lst) . \"\\n\";\n$lst = array(1.0, 3.0, 5.0, 7.0);\necho sum_squares($lst)\
    \ . \"\\n\";\n$lst = array(1.4, 4.2, 0.0);\necho sum_squares($lst) . \"\\n\";\n\
    $lst = array(-2.4, 1.0, 1.0);\necho sum_squares($lst) . \"\\n\";", "    $total\
    \ = 0;\n    foreach ($lst as $key => $num) {\n        $num = ceil($num);\n   \
    \     $num = pow($num, 2);\n        $total += $num;\n    }\n    return $total;\n\
    }\n$lst = array(1.0, 4.0, 9.0);\necho sum_squares($lst);", "    $result = 0;\n\
    \    foreach ($lst as $value) {\n        $result += ceil($value) * ceil($value);\n\
    \    }\n    return $result;\n}\necho sum_squares(array(1.0, 2.0, 3.0));\necho\
    \ '<br>';\necho sum_squares(array(1.0, 4.0, 9.0));\necho '<br>';\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0));\necho '<br>';\necho sum_squares(array(1.4, 4.2, 0.0));\necho\
    \ '<br>';\necho sum_squares(array(-2.4, 1.0, 1.0));\necho '<br>';\necho '<br>';\n",
  "  return array_sum(array_map(function($x) {\n    return ceil($x) ** 2;\n  }, $lst));\n\
    }\n$array = array(1.0, 2.0, 3.0);\nvar_dump(sum_squares($array));", "    $sum\
    \ = 0;\n    foreach ($lst as $int) {\n        $sum += ceil($int) ** 2;\n    }\n\
    \    return $sum;\n}\n", "    $lst = array_map('ceil', $lst);\n    $lst = array_map('pow',\
    \ $lst, array_fill(0, count($lst), 2));\n    return array_sum($lst);\n}", "  $sum\
    \ = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) * ceil($num);\n  }\n\
    \  return $sum;\n}\n", "    $result = 0;\n    foreach ($lst as $n) {\n       \
    \ $result += ($n <= 0 ? ceil($n) : floor($n)) * ($n <= 0 ? ceil($n) : floor($n));\n\
    \    }\n    return $result;\n}\n", "    return round(array_sum(array_map(function($i)\
    \ { return ceil($i) * ceil($i); }, $lst)));\n}", "    $sum = 0;\n    foreach ($lst\
    \ as $value) {\n        $sum += ceil($value) * ceil($value);\n    }\n    return\
    \ $sum;\n}\n", "  return array_sum(array_map(function($value) {\n    return pow(ceil($value),\
    \ 2);\n  }, $lst));\n}", "  $lst = array_map(function($num) {\n    return ceil($num);\n\
    \  }, $lst);\n  return array_sum(array_map(function($num) {\n    return $num *\
    \ $num;\n  }, $lst));\n}\n", "  $sum = 0;\n  foreach ($lst as $l) {\n    $sum\
    \ += pow(ceil($l), 2);\n  }\n  return $sum;\n}", "\t$return_val = array_sum(array_map(function($x)\
    \ {\n\t\treturn pow(ceil($x), 2);\n\t}, $lst));\n\treturn $return_val;\n}\n",
  "  $sum = 0;\n  foreach ($lst as $number) {\n    $number = ceil($number);\n    $sum\
    \ += $number * $number;\n  }\n  return $sum;\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\necho \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"\
    \\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho \"\\n\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0));\necho \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0));\necho \"\
    \\n\";\n", "  $res = 0;\n  foreach ($lst as $item) {\n    $res += round($item)\
    \ ** 2;\n  }\n  return $res;\n}", "  $result = 0;\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    $result += ceil($lst[$i]) * ceil($lst[$i]);\n  }\n  return $result;\n\
    }", "  $lst = array_map(function($val) {\n    return ceil($val);\n  }, $lst);\n\
    \  $sum = 0;\n  foreach ($lst as $val) {\n    $sum += pow($val, 2);\n  }\n  return\
    \ $sum;\n}\necho sum_squares(array(1.0, 2.0, 3.0));\necho \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0));\necho \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho\
    \ \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0));\necho \"\\n\";", "    $result = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        $lst[$i] = ceil($lst[$i]);\n        $result += $lst[$i] * $lst[$i];\n\
    \    }\n    return $result;\n}\necho sum_squares(array(1.0, 2.0, 3.0));\necho\
    \ \"<br>\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"<br>\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0));\necho \"<br>\";\necho sum_squares(array(1.4, 4.2, 0.0));\n\
    echo \"<br>\";\necho sum_squares(array(-2.4, 1.0, 1.0));\necho \"<br>\";\necho\
    \ sum_squares(array(2.2, 2.2, 2.2));\necho \"<br>\";\necho sum_squares(array(3.2,\
    \ 3.2, 3.2));\necho \"<br>\";", "    $lst = array_map(function($elem) {\n    \
    \    return ceil($elem);\n    }, $lst);\n    $sum = 0;\n    foreach ($lst as $elem)\
    \ {\n        $sum += $elem * $elem;\n    }\n    return $sum;\n}", "  $sum = 0;\n\
    \  foreach ($lst as $item) {\n    $sum += ceil($item) ** 2;\n  }\n  return $sum;\n\
    }\n", "    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum\
    \ += intval(ceil($lst[$i]));\n    }\n    return $sum*$sum;\n}\n\nprint_r(sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)));\n", "  return array_sum(array_map(function($n) {\n    return\
    \ pow(ceil($n), 2);\n  }, $lst));\n}\n\necho sum_squares(array(1.0, 4.0, 9.0));",
  "   $squares = array_map(function($e) { return pow(ceil($e), 2); }, $lst);\n   return\
    \ array_sum($squares);\n}\n$tests = [\n   [0, [1.0, 2.0, 3.0]],\n   [98, [1.0,\
    \ 4.0, 9.0]],\n   [84, [1.0, 3.0, 5.0, 7.0]],\n   [29, [1.4, 4.2, 0.0]],\n   [6,\
    \ [-2.4, 1.0, 1.0]],\n];\n\nforeach ($tests as $test) {\n   $actual = sum_squares($test[1]);\n\
    \   $expected = $test[0];\n   if ($actual != $expected) {\n      $s = var_export($test[1],\
    \ true);\n      echo \"sum_squares($s) = $actual, expected $expected\\n\";\n \
    \  }\n}", "  foreach ($lst as $key => $num) {\n    $lst[$key] = ceil($num);\n\
    \  }\n  $result = 0;\n  foreach ($lst as $num) {\n    $result += $num ** 2;\n\
    \  }\n  return $result;\n}\n\necho sum_squares([1.0, 2.0, 3.0]) . PHP_EOL;\necho\
    \ sum_squares([1.0, 4.0, 9.0]) . PHP_EOL;\necho sum_squares([1.0, 3.0, 5.0, 7.0])\
    \ . PHP_EOL;\necho sum_squares([1.4, 4.2, 0.0]) . PHP_EOL;\necho sum_squares([-2.4,\
    \ 1.0, 1.0]) . PHP_EOL;", "    $num = 0;\n    foreach ($lst as $element) {\n \
    \       $num += ($element > 0) ? ceil($element) : floor($element);\n    }\n  \
    \  return $num**2;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n       \
    \ $sum += ceil($num) ** 2;\n    }\n    return $sum;\n}", "  $sq_arr = array_map(function($x)\
    \ { return ceil($x) * ceil($x); }, $lst);\n  return array_sum($sq_arr);\n}", " \
    \   $lst = array_map(\n        function ($a) {\n            return ceil($a);\n\
    \        },\n        $lst\n    );\n    return array_sum(array_map(\n        function\
    \ ($a) {\n            return $a * $a;\n        },\n        $lst\n    ));\n}\n\n\
    echo sum_squares([1.0, 2.0, 3.0]) . \"\\n\";\necho sum_squares([1.0, 4.0, 9.0])\
    \ . \"\\n\";\necho sum_squares([1.0, 3.0, 5.0, 7.0]) . \"\\n\";\necho sum_squares([1.4,\
    \ 4.2, 0.0]) . \"\\n\";\necho sum_squares([-2.4, 1.0, 1.0]) . \"\\n\";", "  $sum\
    \ = 0;\n  $lst = array_map('ceil', $lst);\n  foreach ($lst as $v) {\n    $sum\
    \ += $v * $v;\n  }\n  return $sum;\n}\necho sum_squares(array(1.0, 2.0, 3.0))\
    \ . \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)) . \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\"\
    ;\necho sum_squares(array(-2.4, 1.0, 1.0)) . \"\\n\";", "  $n = [];\n  foreach\
    \ ($lst as $num) {\n    $n[] = ceil($num) * ceil($num);\n  }\n  return array_sum($n);\n\
    }", "    return array_sum(array_map(function($elem) {\n        return $elem **\
    \ 2;\n    }, array_map(function($elem) {\n        return ceil($elem);\n    },\
    \ $lst)));\n}\n\nprint_r(sum_squares(array(1.0, 2.0, 3.0)));\necho \"\\n\";\n\
    print_r(sum_squares(array(1.0, 4.0, 9.0)));\necho \"\\n\";\nprint_r(sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)));\necho \"\\n\";\nprint_r(sum_squares(array(1.4, 4.2, 0.0)));\n\
    echo \"\\n\";\nprint_r(sum_squares(array(-2.4, 1.0, 1.0)));\necho \"\\n\";", " \
    \ $lst_sqr = array_map(function($el) { return ceil($el) * ceil($el); }, $lst);\n\
    \  return array_sum($lst_sqr);\n}\n", "    $arr = array_map('ceil', $lst);\n \
    \   return array_sum(array_map(function($a) { return $a*$a; }, $arr));\n}\n\n\
    echo sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\"\
    ;\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"\\n\";", "  $squared_sum = 0;\n  foreach ($lst as $number) {\n\
    \    $number = ceil($number);\n    $squared_sum += $number * $number;\n  }\n \
    \ return $squared_sum;\n}", "    foreach ($lst as $value) {\n        $value =\
    \ ceil($value);\n        $sum[] = pow($value, 2);\n    }\n    return array_sum($sum);\n\
    }\n", "    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum\
    \ += $lst[$i] * $lst[$i];\n    }\n    return $sum;\n}\n$arr = array(1.4, 4.2,\
    \ 0.0);\necho sum_squares($arr);", "    $sum = 0;\n    foreach ($lst as $n) {\n\
    \        $sum += pow(ceil($n), 2);\n    }\n    return $sum;\n}\n\n$data = [1.0,\
    \ 2.0, 3.0];\necho sum_squares($data);\necho PHP_EOL;\n$data = [1.0, 4.0, 9.0];\n\
    echo sum_squares($data);\necho PHP_EOL;\n$data = [1.0, 3.0, 5.0, 7.0];\necho sum_squares($data);\n\
    echo PHP_EOL;\n$data = [1.4, 4.2, 0.0];\necho sum_squares($data);\necho PHP_EOL;\n\
    $data = [-2.4, 1.0, 1.0];\necho sum_squares($data);\necho PHP_EOL;", "\t$total\
    \ = 0;\n\t$lst = array_map(function($x) {\n\t\treturn ceil($x);\n\t}, $lst);\n\
    \tforeach ($lst as $number) {\n\t\t$total += pow($number, 2);\n\t}\n\treturn $total;\n\
    }\n\necho sum_squares(array(1.0, 2.0, 3.0));\necho sum_squares(array(1.0, 4.0,\
    \ 9.0));\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho sum_squares(array(1.4,\
    \ 4.2, 0.0));\necho sum_squares(array(-2.4, 1.0, 1.0));", "    $c=0;\n    for($i=0;$i<count($lst);$i++){\n\
    \        $a=ceil($lst[$i]);\n        $c=$c+$a*$a;\n    }\n    return $c;\n}\n\
    $lst = [0.3, 0.5, 0.1];\necho \"Input: \";\nprint_r($lst);\necho \"<br>\";\necho\
    \ \"Output: \";\necho sum_squares($lst);", "    $sum = 0;\n    for ($i = 0; $i\
    \ < count($lst); $i++) {\n        $sum += ceil($lst[$i]) ** 2;\n    }\n    return\
    \ $sum;\n}\n\n$tests = [[[1.0, 2.0, 3.0], 14],\n          [[1.0, 4.0, 9.0], 98],\n\
    \          [[1.0, 3.0, 5.0, 7.0], 84],\n          [[1.4, 4.2, 0.0], 29],\n   \
    \       [[-2.4, 1.0, 1.0], 6]];\n\nfor ($i = 0; $i < count($tests); $i++) {\n\
    \    if (sum_squares($tests[$i][0]) != $tests[$i][1]) {\n        echo(\"Error!\\\
    n\");\n    }\n}\n\necho(\"Success!\\n\");", "    $new_lst = array_map(function($num)\
    \ {\n        return ceil($num);\n    }, $lst);\n    $sum = 0;\n    foreach ($new_lst\
    \ as $i) {\n        $sum += $i ** 2;\n    }\n    return $sum;\n}", "  $results\
    \ = array_map(function($x) {\n    return ceil($x);\n  }, $lst);\n  $squared_results\
    \ = array_map(function($x) {\n    return $x * $x;\n  }, $results);\n  return array_sum($squared_results);\n\
    }", "  $lst = array_map('ceil', $lst);\n  return array_sum(array_map(function($x)\
    \ { return $x * $x; }, $lst));\n}\n", "    $arr = array_map('ceil', $lst);\n \
    \   $arr = array_map('pow', $arr, array_fill(0, count($arr), 2));\n    return\
    \ array_sum($arr);\n}", "    $arr = array_map(function($n) {\n        return ceil($n);\n\
    \    }, $lst);\n    $squares = array_map(function($n) {\n        return $n * $n;\n\
    \    }, $arr);\n    return array_sum($squares);\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0)) . \"\\n\";\necho\
    \ sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0)) . \"\\n\";",
  "    foreach ($lst as $key => $value) {\n        $lst[$key] = ceil($value);\n  \
    \  }\n    return array_sum(array_map(function($n) { return $n ** 2; }, $lst));\n\
    }\n", "    return array_sum(array_map(function($item) {\n        return $item\
    \ ** 2;\n    }, array_map('ceil', $lst)));\n}\n\n$a = array(1.0, 2.0, 3.0);\n\
    print_r(sum_squares($a));\nprint_r(\"\\n\");\n$a = array(1.0, 4.0, 9.0);\nprint_r(sum_squares($a));\n\
    print_r(\"\\n\");\n$a = array(1.0, 3.0, 5.0, 7.0);\nprint_r(sum_squares($a));\n\
    print_r(\"\\n\");\n$a = array(1.4, 4.2, 0.0);\nprint_r(sum_squares($a));\nprint_r(\"\
    \\n\");\n$a = array(-2.4, 1.0, 1.0);\nprint_r(sum_squares($a));\nprint_r(\"\\\
    n\");", "  $new = [];\n  foreach ($lst as $num) {\n    array_push($new, ceil($num));\n\
    \  }\n  $new = array_map('square', $new);\n  return array_sum($new);\n}\n", "\t\
    $lst = array_map('ceil', $lst);\n\treturn array_sum(array_map(function($x) { return\
    \ $x * $x; }, $lst));\n}", "    return array_sum(array_map(function($e) { return\
    \ pow(ceil($e), 2); }, $lst));\n}\n\nvar_dump(sum_squares(array(1.0, 2.0, 3.0)));\n\
    var_dump(sum_squares(array(1.0, 4.0, 9.0)));\nvar_dump(sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)));\nvar_dump(sum_squares(array(1.4, 4.2, 0.0)));\nvar_dump(sum_squares(array(-2.4,\
    \ 1.0, 1.0)));", "    $sum = 0;\n    foreach ($lst as $item) {\n        $sum +=\
    \ ceil($item) ** 2;\n    }\n    return $sum;\n}\n", "    return array_sum(array_map(function($x)\
    \ {\n        return ceil($x) ** 2;\n    }, $lst));\n}\n\nprint sum_squares([1.0,\
    \ 2.0, 3.0]) . \"\\n\";\nprint sum_squares([1.0, 4.0, 9.0]) . \"\\n\";\nprint\
    \ sum_squares([1.0, 3.0, 5.0, 7.0]) . \"\\n\";\nprint sum_squares([1.4, 4.2, 0.0])\
    \ . \"\\n\";\nprint sum_squares([-2.4, 1.0, 1.0]) . \"\\n\";", "  $rounded_lst\
    \ = array_map(function($x) { return ceil($x); }, $lst);\n  $sum = 0;\n  foreach\
    \ ($rounded_lst as $v) {\n    $sum += $v * $v;\n  }\n  return $sum;\n}\necho sum_squares(array(1.0,\
    \ 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0)) . \"\\n\";\necho\
    \ sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0)) . \"\\n\";",
  "    $result = 0;\n    foreach ($lst as $num) {\n        $result += pow(ceil($num),\
    \ 2);\n    }\n    return $result;\n}\n", "  $total = 0;\n  $ceil = array_map('ceil',\
    \ $lst);\n  foreach ($ceil as $value) {\n    $total += $value ** 2;\n  }\n  return\
    \ $total;\n}\n", "  // Write your code here\n  // To print results to the standard\
    \ output you can use print\n  // Example: print \"Hello world!\";\n  \n  for($i=0;$i<count($lst);$i++){\n\
    \      $lst[$i] = ceil($lst[$i]);\n      $lst[$i] = $lst[$i]*$lst[$i];\n  }\n\
    \  return array_sum($lst);\n}", "  $square_lst = array_map(function($num) { return\
    \ ceil($num) * ceil($num); }, $lst);\n  return array_sum($square_lst);\n}\necho\
    \ sum_squares(array(1.0, 2.0, 3.0));\necho \"<br>\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0));\necho \"<br>\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\n\
    echo \"<br>\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho \"<br>\";\necho\
    \ sum_squares(array(-2.4, 1.0, 1.0));\necho \"<br>\";\necho \"<br>\";", "    //\
    \ remove decimal points\n    $rounded = array_map(function($x) {\n        return\
    \ round($x);\n    }, $lst);\n    // square each number\n    $squared = array_map(function($x)\
    \ {\n        return $x * $x;\n    }, $rounded);\n    // return the sum\n    return\
    \ array_sum($squared);\n}", "    $i = 0;\n    $size = count($lst);\n    while\
    \ ($i < $size) {\n        $lst[$i] = ceil($lst[$i]);\n        $i++;\n    }\n \
    \   return array_sum(array_map(function ($n) {\n        return $n * $n;\n    },\
    \ $lst));\n}", "    $result = 0;\n    foreach ($lst as $key => $value) {\n   \
    \     $value = ceil($value);\n        $value = $value*$value;\n        $result\
    \ += $value;\n    }\n    return $result;\n}\n\nprint sum_squares(array(1.0, 2.0,\
    \ 3.0));\nprint sum_squares(array(1.0, 4.0, 9.0));\nprint sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0));\nprint sum_squares(array(1.4, 4.2, 0.0));\nprint sum_squares(array(-2.4,\
    \ 1.0, 1.0));\nprint sum_squares(array(1.4, 2.6, 5.6, 8.6));\nprint sum_squares(array(1.2,\
    \ 4.2, 7.2, 1.8));\nprint sum_squares(array(1.4, 6.8, 9.2, 5.0));\nprint sum_squares(array(1.2,\
    \ 3.6, 4.8, 6.0));", "  $result = 0;\n  foreach ($lst as $number) {\n    $result\
    \ += ceil($number) ** 2;\n  }\n  return $result;\n}\n", "  $result = 0;\n  foreach\
    \ ($lst as $number) {\n    $result += pow(ceil($number), 2);\n  }\n  return $result;\n\
    }", "    $result = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $result\
    \ += ceil($lst[$i])**2;\n    }\n    return $result;\n}\n\n$a = array(1.0, 2.0,\
    \ 3.0);\necho sum_squares($a) . \"\\n\";\n$a = array(1.0, 4.0, 9.0);\necho sum_squares($a)\
    \ . \"\\n\";\n$a = array(1.0, 3.0, 5.0, 7.0);\necho sum_squares($a) . \"\\n\"\
    ;\n$a = array(1.4, 4.2, 0.0);\necho sum_squares($a) . \"\\n\";\n$a = array(-2.4,\
    \ 1.0, 1.0);\necho sum_squares($a) . \"\\n\";\n", "    $result = 0;\n    for ($i\
    \ = 0; $i < count($lst); $i++) {\n        $result += pow(ceil($lst[$i]), 2);\n\
    \    }\n    return $result;\n}\n\necho sum_squares(array(1.0, 2.0, 3.0));\necho\
    \ \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"\\n\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0));\necho \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho\
    \ \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0));\necho \"\\n\";", "  return\
    \ array_sum(array_map(function($n) {\n    return $n * $n;\n  }, array_map(function($n)\
    \ {\n    return ceil($n);\n  }, $lst)));\n}\n", "    $total=0;\n    foreach($lst\
    \ as $n){\n        $total+=ceil($n)*ceil($n);\n    }\n    return $total;\n}\n\
    echo sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\"; // 14\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"\\n\"; // 98\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\
    \\n\"; // 84\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\"; // 29\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"\\n\"; // 6", "\t$newArray = array();\n\tforeach ($lst as $key\
    \ => $value) {\n\t\t$newArray[] = ceil($value);\n\t}\n\t$result = 0;\n\tforeach\
    \ ($newArray as $key => $value) {\n\t\t$result += $value * $value;\n\t}\n\treturn\
    \ $result;\n}\necho sum_squares(array(1.0, 2.0, 3.0));\necho sum_squares(array(1.0,\
    \ 4.0, 9.0));\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho sum_squares(array(1.4,\
    \ 4.2, 0.0));\necho sum_squares(array(-2.4, 1.0, 1.0));", "  return array_sum(array_map(function($n)\
    \ {\n    return pow(ceil($n), 2);\n  }, $lst));\n}\n", "    return array_sum(array_map(function($el)\
    \ {\n        return pow(ceil($el), 2);\n    }, $lst));\n}\n", "  return array_sum(array_map('intval',\
    \ array_map('ceil', $lst)));\n}\n", "  $lst = array_map(function($x) {\n    return\
    \ ceil($x);\n  }, $lst);\n  return array_sum(array_map(function($x) {\n    return\
    \ $x * $x;\n  }, $lst));\n}", "  $s = 0;\n  foreach ($lst as $v) {\n    $s +=\
    \ $v * $v;\n  }\n  return $s;\n}\n\n$array = array(1.0, 2.0, 3.0);\necho sum_squares($array);",
  "  $result = 0;\n  foreach ($lst as $item) {\n    $result += (int)ceil($item) *\
    \ (int)ceil($item);\n  }\n  return $result;\n}\n\n$lst = array(1.0, 2.0, 3.0);\n\
    echo sum_squares($lst);\necho \"\\n\";\n$lst = array(1.0, 4.0, 9.0);\necho sum_squares($lst);\n\
    echo \"\\n\";\n$lst = array(1.0, 3.0, 5.0, 7.0);\necho sum_squares($lst);\necho\
    \ \"\\n\";\n$lst = array(1.4, 4.2, 0.0);\necho sum_squares($lst);\necho \"\\n\"\
    ;\n$lst = array(-2.4, 1.0, 1.0);\necho sum_squares($lst);\necho \"\\n\";\n", " \
    \ return array_sum(array_map(function($x) {\n    return $x * $x;\n  }, array_map('ceil',\
    \ $lst)));\n}\n\necho sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\"\
    ;\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"\\n\";", "    return array_sum(array_map(function($n) {\n   \
    \     return $n * $n;\n    }, array_map(function($n) {\n        return (int) ceil($n);\n\
    \    }, $lst)));\n}\n\necho sum_squares([1.0, 2.0, 3.0]);\necho \"\\n\";\necho\
    \ sum_squares([1.0, 4.0, 9.0]);\necho \"\\n\";\necho sum_squares([1.0, 3.0, 5.0,\
    \ 7.0]);\necho \"\\n\";\necho sum_squares([1.4, 4.2, 0.0]);\necho \"\\n\";\necho\
    \ sum_squares([-2.4, 1.0, 1.0]);\necho \"\\n\";"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

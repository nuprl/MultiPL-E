language: php
name: HumanEval_88_sort_array
results:
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // Your code here\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpde_rc37o.php:24\n\
    Stack trace:\n#0 /tmp/tmpde_rc37o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpde_rc37o.php\
    \ on line 24\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$array_sum = array_sum($array);\n\tif ($array_sum == 0) {\n\t\treturn $array;\n\
    \t} elseif ($array_sum % 2 != 0) {\n\t\tsort($array);\n\t\treturn $array;\n\t\
    } else {\n\t\trsort($array);\n\t\treturn $array;\n\t}\n}\n\n$arr1 = array();\n\
    $arr2 = array(5);\n$arr3 = array(2, 4, 3, 0, 1, 5);\n$arr4 = array(2, 4, 3, 0,\
    \ 1, 5, 6);\n\nvar_dump(sort_array($arr1));\nvar_dump(sort_array($arr2));\nvar_dump(sort_array($arr3));\n\
    var_dump(sort_array($arr4));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(0) {\n}\narray(1) {\n  [0]=>\n  int(5)\n}\narray(6) {\n  [0]=>\n\
    \  int(0)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n  [4]=>\n\
    \  int(4)\n  [5]=>\n  int(5)\n}\narray(7) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n\
    \  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n  int(5)\n\
    \  [6]=>\n  int(6)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy34ue8ar.php:46\n\
    Stack trace:\n#0 /tmp/tmpy34ue8ar.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpy34ue8ar.php\
    \ on line 46\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (empty($array)) {\n    return $array;\n  }\n  $first_index = $array[0];\n\
    \  $last_index = end($array);\n  if ($first_index + $last_index % 2 === 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    $test = sort_array(array(2, 4, 3, 0, 1, 5));\nprint_r($test);\n$test = sort_array(array(2,\
    \ 4, 3, 0, 1, 5, 6));\nprint_r($test);\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4]\
    \ => 4\n    [5] => 5\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n\
    \    [3] => 3\n    [4] => 4\n    [5] => 5\n    [6] => 6\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp1yi854n6.php:42\nStack trace:\n#0 /tmp/tmp1yi854n6.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1yi854n6.php on line 42\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif(!empty($array)){\n\t\t$total = count($array);\n\t\t$isAsc = true;\n\t\t$odd\
    \ = $array[0] + $array[$total-1];\n\t\tif($odd % 2 === 0){\n\t\t\t$isAsc = false;\n\
    \t\t}\n\t\tsortArray($array, $isAsc);\n\t}\n    return $array;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sortArray() in\
    \ /tmp/tmpsbmhd24w.php:24\nStack trace:\n#0 /tmp/tmpsbmhd24w.php(30): sort_array(Array)\n\
    #1 /tmp/tmpsbmhd24w.php(35): candidate(Array)\n#2 /tmp/tmpsbmhd24w.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpsbmhd24w.php on line 24\n"
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif (count($array) < 2) return $array;\n\telse {\n\t\t$sum = $array[0] + $array[count($array)\
    \ - 1];\n\t\tif ($sum % 2 == 0) {\n\t\t\trsort($array);\n\t\t} else {\n\t\t\t\
    sort($array);\n\t\t}\n\t\treturn $array;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $sum = 0;\n  $count = count($array);\n  if ($count % 2) {\n    $sum = $array[0]\
    \ + $array[$count - 1];\n  } else {\n    $sum = $array[0] + $array[$count - 1];\n\
    \  }\n  if ($sum % 2) {\n    sort($array);\n  } else {\n    rsort($array);\n \
    \ }\n  return $array;\n}\n$test_data = array(\n  array(),\n  array(5),\n  array(2,\
    \ 4, 3, 0, 1, 5),\n  array(2, 4, 3, 0, 1, 5, 6),\n);\nforeach ($test_data as $item)\
    \ {\n  $result = sort_array($item);\n  echo 'array(';\n  foreach ($result as $key\
    \ => $value) {\n    echo $value;\n    if ($key != count($result) - 1) {\n    \
    \  echo ', ';\n    }\n  }\n  echo ')<br />';\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpsi7cr63y.php on line 22


    Warning: Undefined array key -1 in /tmp/tmpsi7cr63y.php on line 22

    array()<br />array(5)<br />array(0, 1, 2, 3, 4, 5)<br />array(6, 5, 4, 3, 2, 1,
    0)<br />

    Warning: Undefined array key 0 in /tmp/tmpsi7cr63y.php on line 22


    Warning: Undefined array key -1 in /tmp/tmpsi7cr63y.php on line 22

    '
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $len = count($array);\n  if ($len <= 1) {\n    return $array;\n  }\n  $first\
    \ = array_shift($array);\n  $last = array_pop($array);\n  $sum = $first + $last;\n\
    \  if ($sum % 2) {\n    return array_merge(array($first), sort_array($array),\
    \ array($last));\n  } else {\n    return array_merge(array($last), sort_array($array),\
    \ array($first));\n  }\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmparerbfmu.php:38\n\
    Stack trace:\n#0 /tmp/tmparerbfmu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmparerbfmu.php\
    \ on line 38\n"
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $total = count($array);\n    if( $total == 0 || $total == 1 ) return $array;\n\
    \    if( ($array[0] + $array[$total-1]) % 2 == 0 ) {\n        rsort($array);\n\
    \    } else {\n        sort($array);\n    }\n    return $array;\n}\necho \"<pre>\"\
    ;\nvar_dump(sort_array(array(2, 4, 3, 0, 1, 5)));\necho \"</pre>\";\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>array(6) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n\
    \  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n  int(5)\n}\n</pre>"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$count = count($array);\n\tif ($count == 0) {\n\t\treturn $array;\n\t}\n\t$result\
    \ = array();\n\t$c = 0;\n\tfor ($i = 0; $i < $count; $i++) {\n\t\t$c = $c + $array[$i];\n\
    \t}\n\tif ($c % 2 == 0) {\n\t\trsort($array);\n\t} else {\n\t\tsort($array);\n\
    \t}\n\treturn $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl30366_w.php:42\n\
    Stack trace:\n#0 /tmp/tmpl30366_w.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpl30366_w.php\
    \ on line 42\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $indexSum = $array[0] + $array[count($array) - 1];\n    if ($indexSum % 2\
    \ === 0) {\n        return rsort($array);\n    } else {\n        return sort($array);\n\
    \    }\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpnqc5vtbo.php on line 17\n\n\
    Warning: Undefined array key -1 in /tmp/tmpnqc5vtbo.php on line 17\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpnqc5vtbo.php:29\nStack trace:\n\
    #0 /tmp/tmpnqc5vtbo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnqc5vtbo.php\
    \ on line 29\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (empty($array)) {\n    return array();\n  }\n\n  $odd = array();\n  $even\
    \ = array();\n  $even_odd = array();\n\n  if (sizeof($array) % 2 != 0) {\n   \
    \ $even_odd = $array[0];\n    array_splice($array, 0, 1);\n  }\n\n  for ($i =\
    \ 0; $i < sizeof($array); $i+=2) {\n    array_push($odd, $array[$i]);\n    array_push($even,\
    \ $array[$i+1]);\n  }\n\n  sort($odd);\n  rsort($even);\n\n  return array_merge($odd,\
    \ $even, $even_odd);\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_merge(): Argument #3 must be of\
    \ type array, int given in /tmp/tmp95s2s3j5.php:38\nStack trace:\n#0 /tmp/tmp95s2s3j5.php(38):\
    \ array_merge(Array, Array, 5)\n#1 /tmp/tmp95s2s3j5.php(41): sort_array(Array)\n\
    #2 /tmp/tmp95s2s3j5.php(46): candidate(Array)\n#3 /tmp/tmp95s2s3j5.php(54): test()\n\
    #4 {main}\n  thrown in /tmp/tmp95s2s3j5.php on line 38\n"
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if(count($array) == 0) {\n        return $array;\n    }\n    if(count($array)\
    \ == 1) {\n        return $array;\n    }\n    $first_index = $array[0];\n    $last_index\
    \ = end($array);\n    $sum = $first_index + $last_index;\n    if ($sum % 2 !=\
    \ 0) {\n        sort($array);\n    } else {\n        rsort($array);\n    }\n \
    \   return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $array_size = count($array);\n    if($array_size == 0) {\n        return\
    \ array();\n    }\n    if($array_size == 1) {\n        return $array;\n    }\n\
    \    $sum = $array[0] + $array[$array_size - 1];\n    if ($sum % 2 == 0) {\n \
    \       rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$a = array(2, 4, 3, 0, 1, 5);\n$a = sort_array($a);\nprint_r($a);\n\
    echo \"\\n\";\n\n$a = array(2, 4, 3, 0, 1, 5, 6);\n$a = sort_array($a);\nprint_r($a);\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4]\
    \ => 4\n    [5] => 5\n)\n\nArray\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n\
    \    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 0\n)\n\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (empty($array)) {\n    return array();\n  }\n  //\u5229\u7528\u5FEB\u901F\
    \u6392\u5E8F\u505A\n  if (($array[0] + $array[count($array) - 1]) % 2 == 0) {\n\
    \    quick_sort($array, 0, count($array) - 1);\n  } else {\n    quick_sort($array,\
    \ 0, count($array) - 1, true);\n  }\n  return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function quick_sort()\
    \ in /tmp/tmpyjad0nrt.php:22\nStack trace:\n#0 /tmp/tmpyjad0nrt.php(30): sort_array(Array)\n\
    #1 /tmp/tmpyjad0nrt.php(35): candidate(Array)\n#2 /tmp/tmpyjad0nrt.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyjad0nrt.php on line 22\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // Your code here\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpde_rc37o.php:24\n\
    Stack trace:\n#0 /tmp/tmpde_rc37o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpde_rc37o.php\
    \ on line 24\n"
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif(!empty($array)) {\n\t\tif(($array[0] + $array[count($array) - 1]) % 2 ==\
    \ 0) {\n\t\t\trsort($array);\n\t\t} else {\n\t\t\tsort($array);\n\t\t}\n\t}\n\t\
    return $array;\n}\n$array = array(2, 4, 3, 0, 1, 5, 6);\necho \"<pre>\";\nprint_r(sort_array($array));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n\
    \    [4] => 2\n    [5] => 1\n    [6] => 0\n)\n</pre>"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n\
    \        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nclass SortArrayTest extends TestCase {\n    public function testFixed()\
    \ {\n        $this->assertEquals(array(), sort_array(array()));\n        $this->assertEquals(array(5),\
    \ sort_array(array(5)));\n        $this->assertEquals(array(0, 1, 2, 3, 4, 5),\
    \ sort_array(array(2, 4, 3, 0, 1, 5)));\n        $this->assertEquals(array(6,\
    \ 5, 4, 3, 2, 1, 0), sort_array(array(2, 4, 3, 0, 1, 5, 6)));\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"TestCase\" not found in /tmp/tmp2ooxizx4.php:26\n\
    Stack trace:\n#0 {main}\n  thrown in /tmp/tmp2ooxizx4.php on line 26\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  //if odd return sorted\n  if(array_sum($array) % 2 === 1) {\n    sort($array);\n\
    \  } else {\n    rsort($array);\n  }\n  return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_xvi7c8.php:34\n\
    Stack trace:\n#0 /tmp/tmpy_xvi7c8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy_xvi7c8.php\
    \ on line 34\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $len = count($array);\n  if ($len == 0 || $len == 1) {\n    return $array;\n\
    \  }\n  $isDesc = ($array[0] + $array[$len - 1]) % 2 == 0;\n  $result = array();\n\
    \  if ($isDesc) {\n    for ($i = $len - 1; $i >= 0; $i--) {\n      $result[] =\
    \ $array[$i];\n    }\n  } else {\n    for ($i = 0; $i < $len; $i++) {\n      $result[]\
    \ = $array[$i];\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yzoiwrf.php:42\n\
    Stack trace:\n#0 /tmp/tmp1yzoiwrf.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp1yzoiwrf.php\
    \ on line 42\n"
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (count($array) == 0) {\n        return $array;\n    } elseif (count($array)\
    \ == 1) {\n        return $array;\n    } else {\n        $sum = $array[0] + $array[count($array)\
    \ - 1];\n        if ($sum % 2 == 0) {\n            rsort($array);\n          \
    \  return $array;\n        } else {\n            sort($array);\n            return\
    \ $array;\n        }\n    }\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822314

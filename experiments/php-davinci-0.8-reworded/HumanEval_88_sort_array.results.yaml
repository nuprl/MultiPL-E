language: php
name: HumanEval_88_sort_array
results:
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // Your code here\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpde_rc37o.php:24\n\
    Stack trace:\n#0 /tmp/tmpde_rc37o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpde_rc37o.php\
    \ on line 24\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$array_sum = array_sum($array);\n\tif ($array_sum == 0) {\n\t\treturn $array;\n\
    \t} elseif ($array_sum % 2 != 0) {\n\t\tsort($array);\n\t\treturn $array;\n\t\
    } else {\n\t\trsort($array);\n\t\treturn $array;\n\t}\n}\n\n$arr1 = array();\n\
    $arr2 = array(5);\n$arr3 = array(2, 4, 3, 0, 1, 5);\n$arr4 = array(2, 4, 3, 0,\
    \ 1, 5, 6);\n\nvar_dump(sort_array($arr1));\nvar_dump(sort_array($arr2));\nvar_dump(sort_array($arr3));\n\
    var_dump(sort_array($arr4));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(0) {\n}\narray(1) {\n  [0]=>\n  int(5)\n}\narray(6) {\n  [0]=>\n\
    \  int(0)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n  [4]=>\n\
    \  int(4)\n  [5]=>\n  int(5)\n}\narray(7) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n\
    \  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n  int(5)\n\
    \  [6]=>\n  int(6)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy34ue8ar.php:46\n\
    Stack trace:\n#0 /tmp/tmpy34ue8ar.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpy34ue8ar.php\
    \ on line 46\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (empty($array)) {\n    return $array;\n  }\n  $first_index = $array[0];\n\
    \  $last_index = end($array);\n  if ($first_index + $last_index % 2 === 0) {\n\
    \    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\
    $test = sort_array(array(2, 4, 3, 0, 1, 5));\nprint_r($test);\n$test = sort_array(array(2,\
    \ 4, 3, 0, 1, 5, 6));\nprint_r($test);\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4]\
    \ => 4\n    [5] => 5\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n\
    \    [3] => 3\n    [4] => 4\n    [5] => 5\n    [6] => 6\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp1yi854n6.php:42\nStack trace:\n#0 /tmp/tmp1yi854n6.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1yi854n6.php on line 42\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif(!empty($array)){\n\t\t$total = count($array);\n\t\t$isAsc = true;\n\t\t$odd\
    \ = $array[0] + $array[$total-1];\n\t\tif($odd % 2 === 0){\n\t\t\t$isAsc = false;\n\
    \t\t}\n\t\tsortArray($array, $isAsc);\n\t}\n    return $array;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sortArray() in\
    \ /tmp/tmpsbmhd24w.php:24\nStack trace:\n#0 /tmp/tmpsbmhd24w.php(30): sort_array(Array)\n\
    #1 /tmp/tmpsbmhd24w.php(35): candidate(Array)\n#2 /tmp/tmpsbmhd24w.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpsbmhd24w.php on line 24\n"
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif (count($array) < 2) return $array;\n\telse {\n\t\t$sum = $array[0] + $array[count($array)\
    \ - 1];\n\t\tif ($sum % 2 == 0) {\n\t\t\trsort($array);\n\t\t} else {\n\t\t\t\
    sort($array);\n\t\t}\n\t\treturn $array;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $sum = 0;\n  $count = count($array);\n  if ($count % 2) {\n    $sum = $array[0]\
    \ + $array[$count - 1];\n  } else {\n    $sum = $array[0] + $array[$count - 1];\n\
    \  }\n  if ($sum % 2) {\n    sort($array);\n  } else {\n    rsort($array);\n \
    \ }\n  return $array;\n}\n$test_data = array(\n  array(),\n  array(5),\n  array(2,\
    \ 4, 3, 0, 1, 5),\n  array(2, 4, 3, 0, 1, 5, 6),\n);\nforeach ($test_data as $item)\
    \ {\n  $result = sort_array($item);\n  echo 'array(';\n  foreach ($result as $key\
    \ => $value) {\n    echo $value;\n    if ($key != count($result) - 1) {\n    \
    \  echo ', ';\n    }\n  }\n  echo ')<br />';\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpsi7cr63y.php on line 22


    Warning: Undefined array key -1 in /tmp/tmpsi7cr63y.php on line 22

    array()<br />array(5)<br />array(0, 1, 2, 3, 4, 5)<br />array(6, 5, 4, 3, 2, 1,
    0)<br />

    Warning: Undefined array key 0 in /tmp/tmpsi7cr63y.php on line 22


    Warning: Undefined array key -1 in /tmp/tmpsi7cr63y.php on line 22

    '
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $len = count($array);\n  if ($len <= 1) {\n    return $array;\n  }\n  $first\
    \ = array_shift($array);\n  $last = array_pop($array);\n  $sum = $first + $last;\n\
    \  if ($sum % 2) {\n    return array_merge(array($first), sort_array($array),\
    \ array($last));\n  } else {\n    return array_merge(array($last), sort_array($array),\
    \ array($first));\n  }\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmparerbfmu.php:38\n\
    Stack trace:\n#0 /tmp/tmparerbfmu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmparerbfmu.php\
    \ on line 38\n"
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $total = count($array);\n    if( $total == 0 || $total == 1 ) return $array;\n\
    \    if( ($array[0] + $array[$total-1]) % 2 == 0 ) {\n        rsort($array);\n\
    \    } else {\n        sort($array);\n    }\n    return $array;\n}\necho \"<pre>\"\
    ;\nvar_dump(sort_array(array(2, 4, 3, 0, 1, 5)));\necho \"</pre>\";\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>array(6) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n\
    \  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n  int(5)\n}\n</pre>"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$count = count($array);\n\tif ($count == 0) {\n\t\treturn $array;\n\t}\n\t$result\
    \ = array();\n\t$c = 0;\n\tfor ($i = 0; $i < $count; $i++) {\n\t\t$c = $c + $array[$i];\n\
    \t}\n\tif ($c % 2 == 0) {\n\t\trsort($array);\n\t} else {\n\t\tsort($array);\n\
    \t}\n\treturn $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl30366_w.php:42\n\
    Stack trace:\n#0 /tmp/tmpl30366_w.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpl30366_w.php\
    \ on line 42\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $indexSum = $array[0] + $array[count($array) - 1];\n    if ($indexSum % 2\
    \ === 0) {\n        return rsort($array);\n    } else {\n        return sort($array);\n\
    \    }\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpnqc5vtbo.php on line 17\n\n\
    Warning: Undefined array key -1 in /tmp/tmpnqc5vtbo.php on line 17\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpnqc5vtbo.php:29\nStack trace:\n\
    #0 /tmp/tmpnqc5vtbo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnqc5vtbo.php\
    \ on line 29\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (empty($array)) {\n    return array();\n  }\n\n  $odd = array();\n  $even\
    \ = array();\n  $even_odd = array();\n\n  if (sizeof($array) % 2 != 0) {\n   \
    \ $even_odd = $array[0];\n    array_splice($array, 0, 1);\n  }\n\n  for ($i =\
    \ 0; $i < sizeof($array); $i+=2) {\n    array_push($odd, $array[$i]);\n    array_push($even,\
    \ $array[$i+1]);\n  }\n\n  sort($odd);\n  rsort($even);\n\n  return array_merge($odd,\
    \ $even, $even_odd);\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_merge(): Argument #3 must be of\
    \ type array, int given in /tmp/tmp95s2s3j5.php:38\nStack trace:\n#0 /tmp/tmp95s2s3j5.php(38):\
    \ array_merge(Array, Array, 5)\n#1 /tmp/tmp95s2s3j5.php(41): sort_array(Array)\n\
    #2 /tmp/tmp95s2s3j5.php(46): candidate(Array)\n#3 /tmp/tmp95s2s3j5.php(54): test()\n\
    #4 {main}\n  thrown in /tmp/tmp95s2s3j5.php on line 38\n"
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if(count($array) == 0) {\n        return $array;\n    }\n    if(count($array)\
    \ == 1) {\n        return $array;\n    }\n    $first_index = $array[0];\n    $last_index\
    \ = end($array);\n    $sum = $first_index + $last_index;\n    if ($sum % 2 !=\
    \ 0) {\n        sort($array);\n    } else {\n        rsort($array);\n    }\n \
    \   return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $array_size = count($array);\n    if($array_size == 0) {\n        return\
    \ array();\n    }\n    if($array_size == 1) {\n        return $array;\n    }\n\
    \    $sum = $array[0] + $array[$array_size - 1];\n    if ($sum % 2 == 0) {\n \
    \       rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\n$a = array(2, 4, 3, 0, 1, 5);\n$a = sort_array($a);\nprint_r($a);\n\
    echo \"\\n\";\n\n$a = array(2, 4, 3, 0, 1, 5, 6);\n$a = sort_array($a);\nprint_r($a);\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4]\
    \ => 4\n    [5] => 5\n)\n\nArray\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n\
    \    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 0\n)\n\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (empty($array)) {\n    return array();\n  }\n  //\u5229\u7528\u5FEB\u901F\
    \u6392\u5E8F\u505A\n  if (($array[0] + $array[count($array) - 1]) % 2 == 0) {\n\
    \    quick_sort($array, 0, count($array) - 1);\n  } else {\n    quick_sort($array,\
    \ 0, count($array) - 1, true);\n  }\n  return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function quick_sort()\
    \ in /tmp/tmpyjad0nrt.php:22\nStack trace:\n#0 /tmp/tmpyjad0nrt.php(30): sort_array(Array)\n\
    #1 /tmp/tmpyjad0nrt.php(35): candidate(Array)\n#2 /tmp/tmpyjad0nrt.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyjad0nrt.php on line 22\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // Your code here\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpde_rc37o.php:24\n\
    Stack trace:\n#0 /tmp/tmpde_rc37o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpde_rc37o.php\
    \ on line 24\n"
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif(!empty($array)) {\n\t\tif(($array[0] + $array[count($array) - 1]) % 2 ==\
    \ 0) {\n\t\t\trsort($array);\n\t\t} else {\n\t\t\tsort($array);\n\t\t}\n\t}\n\t\
    return $array;\n}\n$array = array(2, 4, 3, 0, 1, 5, 6);\necho \"<pre>\";\nprint_r(sort_array($array));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n\
    \    [4] => 2\n    [5] => 1\n    [6] => 0\n)\n</pre>"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n\
    \        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nclass SortArrayTest extends TestCase {\n    public function testFixed()\
    \ {\n        $this->assertEquals(array(), sort_array(array()));\n        $this->assertEquals(array(5),\
    \ sort_array(array(5)));\n        $this->assertEquals(array(0, 1, 2, 3, 4, 5),\
    \ sort_array(array(2, 4, 3, 0, 1, 5)));\n        $this->assertEquals(array(6,\
    \ 5, 4, 3, 2, 1, 0), sort_array(array(2, 4, 3, 0, 1, 5, 6)));\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"TestCase\" not found in /tmp/tmp2ooxizx4.php:26\n\
    Stack trace:\n#0 {main}\n  thrown in /tmp/tmp2ooxizx4.php on line 26\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  //if odd return sorted\n  if(array_sum($array) % 2 === 1) {\n    sort($array);\n\
    \  } else {\n    rsort($array);\n  }\n  return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_xvi7c8.php:34\n\
    Stack trace:\n#0 /tmp/tmpy_xvi7c8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy_xvi7c8.php\
    \ on line 34\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $len = count($array);\n  if ($len == 0 || $len == 1) {\n    return $array;\n\
    \  }\n  $isDesc = ($array[0] + $array[$len - 1]) % 2 == 0;\n  $result = array();\n\
    \  if ($isDesc) {\n    for ($i = $len - 1; $i >= 0; $i--) {\n      $result[] =\
    \ $array[$i];\n    }\n  } else {\n    for ($i = 0; $i < $len; $i++) {\n      $result[]\
    \ = $array[$i];\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yzoiwrf.php:42\n\
    Stack trace:\n#0 /tmp/tmp1yzoiwrf.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp1yzoiwrf.php\
    \ on line 42\n"
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (count($array) == 0) {\n        return $array;\n    } elseif (count($array)\
    \ == 1) {\n        return $array;\n    } else {\n        $sum = $array[0] + $array[count($array)\
    \ - 1];\n        if ($sum % 2 == 0) {\n            rsort($array);\n          \
    \  return $array;\n        } else {\n            sort($array);\n            return\
    \ $array;\n        }\n    }\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822314
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $sum_index = $array[0] + $array[count($array) - 1];\n    if ($sum_index %\
    \ 2 == 0) {\n        rsort($array);\n    } else {\n        sort($array);\n   \
    \ }\n    return $array;\n}\n$array = array(2, 4, 3, 0, 1, 5, 6);\nvar_dump(sort_array($array));\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(7) {\n  [0]=>\n  int(6)\n  [1]=>\n  int(5)\n  [2]=>\n  int(4)\n \
    \ [3]=>\n  int(3)\n  [4]=>\n  int(2)\n  [5]=>\n  int(1)\n  [6]=>\n  int(0)\n}\n\
    \nWarning: Undefined array key 0 in /tmp/tmpr3ilbeum.php on line 17\n\nWarning:\
    \ Undefined array key -1 in /tmp/tmpr3ilbeum.php on line 17\n"
  timestamp: 1660009100
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (count($array) < 2) {\n        return $array;\n    }\n    $head = array_shift($array);\n\
    \    $tail = array_pop($array);\n    $total = $head + $tail;\n    if ($total %\
    \ 2 == 0) {\n        rsort($array);\n    } else {\n        sort($array);\n   \
    \ }\n    array_unshift($array, $head);\n    array_push($array, $tail);\n    return\
    \ $array;\n}\necho implode(', ', sort_array(array(2, 4, 3, 0, 1, 5, 6)));\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2, 5, 4, 3, 1, 0, 6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqgzdauo6.php:40\n\
    Stack trace:\n#0 /tmp/tmpqgzdauo6.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqgzdauo6.php\
    \ on line 40\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $count = count($array);\n  if($count == 0) return $array;\n  if($count == 1)\
    \ return $array;\n  if($count > 1) {\n    if(($array[0] + $array[$count - 1])\
    \ % 2 != 0) {\n      sort($array);\n    } else {\n      rsort($array);\n    }\n\
    \  }\n  return $array;\n}\n$array = [2, 4, 3, 0, 1, 5];\necho sort_array($array);\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Array to string conversion in /tmp/tmpxo4kh2o9.php on line 30

    Array'
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $result = array();\n    $sum = 0;\n    foreach ($array as $value) {\n   \
    \     $sum += $value;\n    }\n    $result = $array;\n    sort($result);\n    if\
    \ ($sum % 2 == 0) {\n        $result = array_reverse($result);\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpymlyze4q.php:37\n\
    Stack trace:\n#0 /tmp/tmpymlyze4q.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpymlyze4q.php\
    \ on line 37\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$i = 0;\n\t$j = count($array) - 1;\n\t$temp;\n\t$arr = array();\n\twhile($i\
    \ < $j) {\n\t\tif(($array[$i] + $array[$j]) % 2 == 0) {\n\t\t\t$temp = $array[$i];\n\
    \t\t\t$array[$i] = $array[$j];\n\t\t\t$array[$j] = $temp;\n\t\t}\n\t\t$i++;\n\t\
    \t$j--;\n\t}\n\treturn $array;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppxcqnkev.php:40\n\
    Stack trace:\n#0 /tmp/tmppxcqnkev.php(47): test()\n#1 {main}\n  thrown in /tmp/tmppxcqnkev.php\
    \ on line 40\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    //TODO\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7jhdtv_u.php:24\n\
    Stack trace:\n#0 /tmp/tmp7jhdtv_u.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7jhdtv_u.php\
    \ on line 24\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $new_array = array();\n    if (count($array) == 0) {\n        return $new_array;\n\
    \    }\n    if (count($array) == 1) {\n        return $array;\n    }\n    $sum\
    \ = $array[0] + $array[count($array) - 1];\n    if (($sum % 2) == 0) {\n     \
    \   $new_array = quicksort_desc($array);\n    } else {\n        $new_array = quicksort_asc($array);\n\
    \    }\n    return $new_array;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function quicksort_asc()\
    \ in /tmp/tmpm4srfoye.php:28\nStack trace:\n#0 /tmp/tmpm4srfoye.php(34): sort_array(Array)\n\
    #1 /tmp/tmpm4srfoye.php(40): candidate(Array)\n#2 /tmp/tmpm4srfoye.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpm4srfoye.php on line 28\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t// your code here\n\t$first = $array[0];\n\t$last = end($array);\n\t$sum = $first\
    \ + $last;\n\t$length = count($array);\n\tif($sum % 2 === 0){\n\t\tfor($i = 0;\
    \ $i < $length; $i++){\n\t\t\tfor($j = $i + 1; $j < $length; $j++){\n\t\t\t\t\
    if($array[$i] < $array[$j]){\n\t\t\t\t\t$temp = $array[$i];\n\t\t\t\t\t$array[$i]\
    \ = $array[$j];\n\t\t\t\t\t$array[$j] = $temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\
    }else{\n\t\tfor($i = 0; $i < $length; $i++){\n\t\t\tfor($j = $i + 1; $j < $length;\
    \ $j++){\n\t\t\t\tif($array[$i] > $array[$j]){\n\t\t\t\t\t$temp = $array[$i];\n\
    \t\t\t\t\t$array[$i] = $array[$j];\n\t\t\t\t\t$array[$j] = $temp;\n\t\t\t\t}\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $array;\n}\n\nclass Test {\n    public static function\
    \ run($actual, $expected) {\n        if ($actual === $expected) {\n          \
    \  echo '.';\n        } else {\n            echo \"F\";\n            echo \"\\\
    n\";\n            echo \"actual: \";\n            var_dump($actual);\n       \
    \     echo \"expected: \";\n            var_dump($expected);\n            echo\
    \ \"\\n\";\n        }\n    }\n}\n\n$array1 = array();\n$array2 = array(5);\n$array3\
    \ = array(2, 4, 3, 0, 1, 5);\n$array4 = array(2, 4, 3, 0, 1, 5, 6);\n\nTest::run(sort_array($array1),\
    \ array());\nTest::run(sort_array($array2), array(5));\nTest\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpeikndrwy.php
    on line 70

    '
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $even = TRUE;\n    $odd = FALSE;\n    if(($array[0] + $array[count($array)\
    \ - 1]) % 2 == 0) {\n        sort($array);\n        echo \"even\";\n    } else\
    \ {\n        rsort($array);\n        echo \"odd\";\n    }\n    return $array;\n\
    }\nprint_r(sort_array(array(2, 4, 3, 0, 1, 5, 6)));\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "evenArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n\
    \    [4] => 4\n    [5] => 5\n    [6] => 6\n)\n\nWarning: Undefined array key 0\
    \ in /tmp/tmpffcxed2a.php on line 19\n\nWarning: Undefined array key -1 in /tmp/tmpffcxed2a.php\
    \ on line 19\nevenevenodd\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffcxed2a.php:37\n\
    Stack trace:\n#0 /tmp/tmpffcxed2a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpffcxed2a.php\
    \ on line 37\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) {\n        return $array;\n    }\n    if (count($array)\
    \ == 1) {\n        return $array;\n    }\n    if (($array[0] + $array[count($array)\
    \ - 1]) % 2 == 0) {\n        rsort($array);\n    } else {\n        sort($array);\n\
    \    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $len = count($array);\n    if ($len <= 1) {\n        return $array;\n   \
    \ }\n\n    if (($array[0] + $array[$len - 1]) % 2 == 0) {\n        return bubble_sort($array,\
    \ 'desc');\n    } else {\n        return bubble_sort($array, 'asc');\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function bubble_sort()\
    \ in /tmp/tmpv3hdwhhq.php:25\nStack trace:\n#0 /tmp/tmpv3hdwhhq.php(30): sort_array(Array)\n\
    #1 /tmp/tmpv3hdwhhq.php(36): candidate(Array)\n#2 /tmp/tmpv3hdwhhq.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv3hdwhhq.php on line 25\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // check for empty array or if array only has one value\n    if (empty($array)\
    \ || count($array) == 1) {\n        return $array;\n    }\n    // check if first\
    \ and last index values sum to odd number\n    if (($array[0] + $array[count($array)\
    \ - 1]) % 2 != 0) {\n        sort($array);\n    } else {\n        rsort($array);\n\
    \    }\n    return $array;\n}\n\n$test_array = [2, 4, 3, 0, 1, 5];\n$test_array_two\
    \ = [2, 4, 3, 0, 1, 5, 6];\n\n$result = sort_array($test_array);\nprint_r($result);\n\
    echo \"<br>\";\n$result_two = sort_array($test_array_two);\nprint_r($result_two);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4]\
    \ => 4\n    [5] => 5\n)\n<br>Array\n(\n    [0] => 6\n    [1] => 5\n    [2] =>\
    \ 4\n    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 0\n)\n<br>"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $len = count($array);\n  if($len == 0 || $len == 1) return $array;\n  if($len\
    \ % 2 == 0) {\n    //even\n    for($i = 0; $i < $len / 2; $i++) {\n      for($j\
    \ = $len / 2 + 1; $j < $len; $j++) {\n        if($array[$i] < $array[$j]) {\n\
    \          $temp = $array[$i];\n          $array[$i] = $array[$j];\n         \
    \ $array[$j] = $temp;\n        }\n      }\n    }\n  } else {\n    //odd\n    for($i\
    \ = 0; $i < ($len - 1) / 2; $i++) {\n      for($j = ($len - 1) / 2 + 1; $j < $len;\
    \ $j++) {\n        if($array[$i] > $array[$j]) {\n          $temp = $array[$i];\n\
    \          $array[$i] = $array[$j];\n          $array[$j] = $temp;\n        }\n\
    \      }\n    }\n  }\n  return $array;\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ykbyz4o.php:52\n\
    Stack trace:\n#0 /tmp/tmp0ykbyz4o.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp0ykbyz4o.php\
    \ on line 52\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    return sum_odd($array) ? rsort($array) : sort($array);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_odd() in\
    \ /tmp/tmpad7gs32g.php:17\nStack trace:\n#0 /tmp/tmpad7gs32g.php(21): sort_array(Array)\n\
    #1 /tmp/tmpad7gs32g.php(25): candidate(Array)\n#2 /tmp/tmpad7gs32g.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpad7gs32g.php on line 17\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif (count($array) <= 1) {\n\t\treturn $array;\n\t}\n\n\t$sum = $array[0] + $array[count($array)\
    \ - 1];\n\t$sorted = $sum % 2 == 0 ? false : true;\n\n\t$result = [$array[0]];\n\
    \tfor ($i = 1; $i < count($array) - 1; $i++) {\n\t\t$j = count($result) - 1;\n\
    \t\twhile ($j >= 0 && ($sorted ? $array[$i] > $result[$j] : $array[$i] < $result[$j]))\
    \ {\n\t\t\t$j--;\n\t\t}\n\t\t$j++;\n\t\tarray_splice($result, $j, 0, $array[$i]);\n\
    \t}\n\tarray_push($result, $array[count($array) - 1]);\n\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqqixo8g.php:45\n\
    Stack trace:\n#0 /tmp/tmpzqqixo8g.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpzqqixo8g.php\
    \ on line 45\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $first = $array[0];\n    $last = $array[count($array) - 1];\n    $sum = $first\
    \ + $last;\n    if ($sum % 2 == 0) {\n        rsort($array);\n    } else {\n \
    \       sort($array);\n    }\n    return $array;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmphc98q6np.php on line 17


    Warning: Undefined array key -1 in /tmp/tmphc98q6np.php on line 18

    '
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $new = [];\n    if (array_sum($array) % 2 !== 0) {\n        sort($array);\n\
    \        foreach ($array as $key => $value) {\n            $new[] = $value;\n\
    \        }\n    } else {\n        rsort($array);\n        foreach ($array as $key\
    \ => $value) {\n            $new[] = $value;\n        }\n    }\n    return $new;\n\
    }\n\n$arr1 = [5];\n$arr2 = [2, 4, 3, 0, 1, 5];\n$arr3 = [2, 4, 3, 0, 1, 5, 6];\n\
    \nprint_r(sort_array($arr1));\nprint_r(sort_array($arr2));\nprint_r(sort_array($arr3));\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2]\
    \ => 2\n    [3] => 3\n    [4] => 4\n    [5] => 5\n)\nArray\n(\n    [0] => 0\n\
    \    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4] => 4\n    [5] => 5\n    [6]\
    \ => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiigl9dbi.php:47\n\
    Stack trace:\n#0 /tmp/tmpiigl9dbi.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpiigl9dbi.php\
    \ on line 47\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $sum = $array[0] + end($array);\n  if ($sum % 2 === 0) {\n    rsort($array);\n\
    \  } else {\n    sort($array);\n  }\n  return $array;\n}\n\n$testArray = array(2,\
    \ 4, 3, 0, 1, 5);\nprint_r(sort_array($testArray));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4]\
    \ => 4\n    [5] => 5\n)\n\nWarning: Undefined array key 0 in /tmp/tmpehnqaw9p.php\
    \ on line 17\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$i = 0;\n\t$j = count($array) - 1;\n\t$i_val = $array[$i];\n\t$j_val = $array[$j];\n\
    \t$i_val_is_even = $i_val % 2 == 0;\n\t$j_val_is_even = $j_val % 2 == 0;\n\t$temp\
    \ = 0;\n\twhile($i <= $j) {\n\t\tif(($i_val_is_even && $j_val_is_even) || (!$i_val_is_even\
    \ && !$j_val_is_even)) {\n\t\t\t// even + even or odd + odd\n\t\t\t// sort descending\n\
    \t\t\tif($i_val < $j_val) {\n\t\t\t\t$temp = $array[$i];\n\t\t\t\t$array[$i] =\
    \ $array[$j];\n\t\t\t\t$array[$j] = $temp;\n\t\t\t}\n\t\t} else {\n\t\t\t// even\
    \ + odd\n\t\t\t// sort ascending\n\t\t\tif($i_val > $j_val) {\n\t\t\t\t$temp =\
    \ $array[$i];\n\t\t\t\t$array[$i] = $array[$j];\n\t\t\t\t$array[$j] = $temp;\n\
    \t\t\t}\n\t\t}\n\t\t$i++;\n\t\t$j--;\n\t\t$i_val = $array[$i];\n\t\t$j_val = $array[$j];\n\
    \t\t$i_val_is_even = $i_val % 2 == 0;\n\t\t$j_val_is_even = $j_val % 2 == 0;\n\
    \t}\n\treturn $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpys269h2k.php on line 19\n\n\
    Warning: Undefined array key -1 in /tmp/tmpys269h2k.php on line 20\n\nWarning:\
    \ Undefined array key 1 in /tmp/tmpys269h2k.php on line 44\n\nWarning: Undefined\
    \ array key -1 in /tmp/tmpys269h2k.php on line 45\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpys269h2k.php:59\nStack trace:\n#0 /tmp/tmpys269h2k.php(66):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpys269h2k.php on line 59\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (empty($array)) {\n    return $array;\n  }\n  $odd = $even = array();\n\
    \  foreach ($array as $key => $value) {\n    if ($key % 2 == 0) {\n      $even[]\
    \ = $value;\n    } else {\n      $odd[] = $value;\n    }\n  }\n  sort($even);\n\
    \  sort($odd);\n  $odd = array_reverse($odd);\n  for ($i = 0; $i < count($array);\
    \ $i++) {\n    if ($i % 2 == 0) {\n      $array[$i] = $even[$i / 2];\n    } else\
    \ {\n      $array[$i] = $odd[($i - 1) / 2];\n    }\n  }\n  return $array;\n}\n\
    \necho implode(' ', sort_array(array(5))), PHP_EOL;\necho implode(' ', sort_array(array(2,\
    \ 4, 3, 0, 1, 5))), PHP_EOL;\necho implode(' ', sort_array(array(2, 4, 3, 0, 1,\
    \ 5, 6))), PHP_EOL;\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "5\n1 5 2 4 3 0\n1 5 2 4 3 0 6\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjnrervyb.php:51\nStack trace:\n#0 /tmp/tmpjnrervyb.php(58):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjnrervyb.php on line 51\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if ($array === array()) {\n        return $array;\n    }\n    if (count($array)\
    \ == 1) {\n        return $array;\n    }\n    $i = 0;\n    $j = count($array)\
    \ - 1;\n    $sum = $array[$i] + $array[$j];\n    if ($sum % 2 == 0) {\n      \
    \  rsort($array);\n    } else {\n        sort($array);\n    }\n    return $array;\n\
    }\n\nvar_dump(sort_array(array()));\nvar_dump(sort_array(array(5)));\nvar_dump(sort_array(array(2,\
    \ 4, 3, 0, 1, 5)));\nvar_dump(sort_array(array(2, 4, 3, 0, 1, 5, 6)));\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(0) {\n}\narray(1) {\n  [0]=>\n  int(5)\n}\narray(6) {\n  [0]=>\n\
    \  int(0)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n  [4]=>\n\
    \  int(4)\n  [5]=>\n  int(5)\n}\narray(7) {\n  [0]=>\n  int(6)\n  [1]=>\n  int(5)\n\
    \  [2]=>\n  int(4)\n  [3]=>\n  int(3)\n  [4]=>\n  int(2)\n  [5]=>\n  int(1)\n\
    \  [6]=>\n  int(0)\n}\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (count($array) == 0) {\n        return $array;\n    }\n    if (count($array)\
    \ == 1) {\n        return $array;\n    }\n    $first = $array[0];\n    $last =\
    \ end($array);\n    $sum = $first + $last;\n    if ($sum % 2 == 0) {\n       \
    \ rsort($array);\n    } else {\n        sort($array);\n    }\n    return $array;\n\
    }\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // Your Code \n}\n\nprint_r(sort_array(array(2, 4, 3, 0, 1, 5)));\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz4kpkvx2.php:26\n\
    Stack trace:\n#0 /tmp/tmpz4kpkvx2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpz4kpkvx2.php\
    \ on line 26\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $odd = $even = array();\n  for ($i = 0; $i < count($array); $i++) {\n    if\
    \ ($i % 2 == 0) {\n      $odd[] = $array[$i];\n    } else {\n      $even[] = $array[$i];\n\
    \    }\n  }\n  sort($odd);\n  rsort($even);\n  for ($i = 0; $i < count($array);\
    \ $i++) {\n    if ($i % 2 == 0) {\n      $array[$i] = array_shift($odd);\n   \
    \ } else {\n      $array[$i] = array_shift($even);\n    }\n  }\n  return $array;\n\
    }\n$array = array(2, 4, 3, 0, 1, 5, 6);\n$result = sort_array($array);\nvar_dump($result);\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(7) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(5)\n  [2]=>\n  int(2)\n \
    \ [3]=>\n  int(4)\n  [4]=>\n  int(3)\n  [5]=>\n  int(0)\n  [6]=>\n  int(6)\n}\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcgmin5nt.php:46\nStack\
    \ trace:\n#0 /tmp/tmpcgmin5nt.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpcgmin5nt.php\
    \ on line 46\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $first = $array[0];\n    $last = end($array);\n    if ($first + $last % 2)\
    \ {\n        sort($array);\n    } else {\n        rsort($array);\n    }\n    return\
    \ $array;\n}\n\nvar_dump(sort_array(array(5)));\nvar_dump(sort_array(array(2,\
    \ 4, 3, 0, 1, 5)));\nvar_dump(sort_array(array(2, 4, 3, 0, 1, 5, 6)));\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(1) {\n  [0]=>\n  int(5)\n}\narray(6) {\n  [0]=>\n  int(0)\n  [1]=>\n\
    \  int(1)\n  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n\
    \  int(5)\n}\narray(7) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n\
    \  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n  int(5)\n  [6]=>\n  int(6)\n\
    }\n\nWarning: Undefined array key 0 in /tmp/tmp5clmx5gv.php on line 17\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp5clmx5gv.php:38\nStack trace:\n\
    #0 /tmp/tmp5clmx5gv.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5clmx5gv.php\
    \ on line 38\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $size = count($array);\n  // Odd\n  if (($array[0] + $array[$size - 1]) % 2\
    \ != 0) {\n    sort($array);\n  }\n  // Even\n  else {\n    rsort($array);\n \
    \ }\n  return $array;\n}\n\nprint_r(sort_array(array(2, 4, 3, 0, 1, 5)));\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4]\
    \ => 4\n    [5] => 5\n)\n\nWarning: Undefined array key 0 in /tmp/tmpyrnln1xi.php\
    \ on line 19\n\nWarning: Undefined array key -1 in /tmp/tmpyrnln1xi.php on line\
    \ 19\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $count = count($array);\n  if ($count == 0) {\n    return $array;\n  }\n  $sum\
    \ = $array[0] + $array[$count - 1];\n  if ($sum % 2 == 0) {\n    rsort($array);\n\
    \  } else {\n    sort($array);\n  }\n  return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $count = count($array);\n    if ($count < 2) {\n        return $array;\n\
    \    }\n\n    if (($array[0] + $array[$count - 1]) % 2 == 0) {\n        return\
    \ asc($array);\n    } else {\n        return desc($array);\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function desc() in /tmp/tmp0jgwef2r.php:25\n\
    Stack trace:\n#0 /tmp/tmp0jgwef2r.php(30): sort_array(Array)\n#1 /tmp/tmp0jgwef2r.php(36):\
    \ candidate(Array)\n#2 /tmp/tmp0jgwef2r.php(43): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp0jgwef2r.php on line 25\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $res = array();\n    $len = count($array);\n    $count = 0;\n    $start =\
    \ 0;\n    $end = $len - 1;\n    while ($count < $len) {\n        if ($array[$start]\
    \ < $array[$end]) {\n            $res[$count] = $array[$start];\n            $start++;\n\
    \        } else {\n            $res[$count] = $array[$end];\n            $end--;\n\
    \        }\n        $count++;\n    }\n    if ($start + $end == $len) {\n     \
    \   return $res;\n    } else {\n        return array_reverse($res);\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpefwa2p89.php:46\n\
    Stack trace:\n#0 /tmp/tmpefwa2p89.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpefwa2p89.php\
    \ on line 46\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n   \
    \ rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\necho\
    \ \"should be [0, 1, 2, 3, 4, 5]: \";\nvar_dump(sort_array(array(2, 4, 3, 0, 1,\
    \ 5)));\necho \"should be [6, 5, 4, 3, 2, 1, 0]: \";\nvar_dump(sort_array(array(2,\
    \ 4, 3, 0, 1, 5, 6)));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "should be [0, 1, 2, 3, 4, 5]: array(6) {\n  [0]=>\n  int(0)\n  [1]=>\n\
    \  int(1)\n  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n\
    \  int(5)\n}\nshould be [6, 5, 4, 3, 2, 1, 0]: array(7) {\n  [0]=>\n  int(6)\n\
    \  [1]=>\n  int(5)\n  [2]=>\n  int(4)\n  [3]=>\n  int(3)\n  [4]=>\n  int(2)\n\
    \  [5]=>\n  int(1)\n  [6]=>\n  int(0)\n}\n\nWarning: Undefined array key 0 in\
    \ /tmp/tmp6w2d9mcj.php on line 17\n\nWarning: Undefined array key -1 in /tmp/tmp6w2d9mcj.php\
    \ on line 17\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array))\n        return $array;\n    if (count($array) < 2)\n\
    \        return $array;\n    if (($array[0] + $array[count($array) - 1]) % 2 ==\
    \ 0) {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n \
    \   return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) {\n        return $array;\n    }\n    if (count($array)\
    \ == 1) {\n        return $array;\n    }\n    if (($array[0] + $array[count($array)\
    \ - 1]) % 2 == 0) {\n        rsort($array);\n    } else {\n        sort($array);\n\
    \    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t// your code here\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyrovype4.php:24\n\
    Stack trace:\n#0 /tmp/tmpyrovype4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyrovype4.php\
    \ on line 24\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if(empty($array)){\n        return $array;\n    }\n    $sum = $array[0] +\
    \ $array[count($array)-1];\n    if($sum % 2 == 0){\n        rsort($array);\n \
    \   } else {\n        sort($array);\n    }\n    return $array;\n}\n\n$arr = array(2,\
    \ 4, 3, 0, 1, 5, 6);\nprint_r(sort_array($arr));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4]\
    \ => 2\n    [5] => 1\n    [6] => 0\n)\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if(empty($array)) {\n        return array();\n    }\n    if(count($array)\
    \ == 1) {\n        return $array;\n    }\n    $first = array_shift($array);\n\
    \    $last = array_pop($array);\n    $sum = $first + $last;\n    if($sum % 2 ==\
    \ 0) {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n \
    \   array_unshift($array, $first);\n    array_push($array, $last);\n    return\
    \ $array;\n}\n\n$array = array(2, 4, 3, 0, 1, 5);\n$res = sort_array($array);\n\
    var_dump($res);\n\n$array = array(2, 4, 3, 0, 1, 5, 6);\n$res = sort_array($array);\n\
    var_dump($res);\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(6) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(0)\n  [2]=>\n  int(1)\n \
    \ [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n  int(5)\n}\narray(7) {\n  [0]=>\n\
    \  int(2)\n  [1]=>\n  int(5)\n  [2]=>\n  int(4)\n  [3]=>\n  int(3)\n  [4]=>\n\
    \  int(1)\n  [5]=>\n  int(0)\n  [6]=>\n  int(6)\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp5zurex1w.php:50\nStack trace:\n#0 /tmp/tmp5zurex1w.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5zurex1w.php on line 50\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array))\n        return $array;\n    if (array_sum($array) % 2\
    \ == 0)\n        $array = array_reverse($array);\n    return $array;\n}\n\necho\
    \ '<pre>';\nprint_r(sort_array(array(2, 4, 3, 0, 1, 5)));\necho '</pre>';\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 3\n    [3] => 0\n\
    \    [4] => 1\n    [5] => 5\n)\n</pre>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpj7675rtj.php:34\nStack trace:\n#0 /tmp/tmpj7675rtj.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpj7675rtj.php on line 34\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (count($array) == 0) {\n        return $array;\n    }\n    $first = $array[0];\n\
    \    $last = $array[count($array) - 1];\n    $total = $first + $last;\n    if\
    \ ($total % 2) {\n        sort($array);\n    } else {\n        rsort($array);\n\
    \    }\n    return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (empty($array))\n    return $array;\n  $sum = $array[0] + $array[count($array)\
    \ - 1];\n  if ($sum % 2 == 0)\n    return sort_array_desc($array);\n  else\n \
    \   return sort_array_asc($array);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sort_array_desc()\
    \ in /tmp/tmpou_vmn0j.php:21\nStack trace:\n#0 /tmp/tmpou_vmn0j.php(27): sort_array(Array)\n\
    #1 /tmp/tmpou_vmn0j.php(32): candidate(Array)\n#2 /tmp/tmpou_vmn0j.php(40): test()\n\
    #3 {main}\n  thrown in /tmp/tmpou_vmn0j.php on line 21\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (empty($array)) return $array;\n  if ($array[0] + end($array) % 2 == 0)\
    \ arsort($array);\n  else asort($array);\n  return $array;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2csfogsb.php:29\n\
    Stack trace:\n#0 /tmp/tmp2csfogsb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2csfogsb.php\
    \ on line 29\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if(empty($array)) return $array;\n  $a = array_shift($array);\n  $b = array_pop($array);\n\
    \  if(($a + $b) % 2 == 0) $array = array_reverse($array);\n  if(!empty($array))\
    \ sort($array);\n  array_unshift($array, $a);\n  array_push($array, $b);\n  return\
    \ $array;\n}\n\nvar_dump(sort_array(array()));\nvar_dump(sort_array(array(5)));\n\
    var_dump(sort_array(array(2, 4, 3, 0, 1, 5)));\nvar_dump(sort_array(array(2, 4,\
    \ 3, 0, 1, 5, 6)));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(0) {\n}\narray(2) {\n  [0]=>\n  int(5)\n  [1]=>\n  NULL\n}\narray(6)\
    \ {\n  [0]=>\n  int(2)\n  [1]=>\n  int(0)\n  [2]=>\n  int(1)\n  [3]=>\n  int(3)\n\
    \  [4]=>\n  int(4)\n  [5]=>\n  int(5)\n}\narray(7) {\n  [0]=>\n  int(2)\n  [1]=>\n\
    \  int(0)\n  [2]=>\n  int(1)\n  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n\
    \  int(5)\n  [6]=>\n  int(6)\n}\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpvta4mev7.php:37\nStack trace:\n#0 /tmp/tmpvta4mev7.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvta4mev7.php on line 37\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $count = count($array);\n    if ($count === 0 || $count === 1) {\n      \
    \  return $array;\n    }\n    $oddEven = $array[0] + $array[$count - 1] % 2;\n\
    \    if ($oddEven) {\n        sort($array);\n    } else {\n        rsort($array);\n\
    \    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoufaquua.php:37\n\
    Stack trace:\n#0 /tmp/tmpoufaquua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpoufaquua.php\
    \ on line 37\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $temp_array = array();\n    $array_len = count($array);\n    if($array_len\
    \ == 0) {\n        return $array;\n    }\n    $sum = $array[0] + $array[$array_len\
    \ - 1];\n    if($sum % 2 == 0) {\n        $array = array_reverse($array);\n  \
    \  }\n    foreach($array as $key => $value) {\n        if($value % 2 == 0) {\n\
    \            $temp_array[] = $value;\n            unset($array[$key]);\n     \
    \   }\n    }\n    sort($temp_array);\n    $array = array_merge($array, $temp_array);\n\
    \    return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfc6_osmo.php:44\n\
    Stack trace:\n#0 /tmp/tmpfc6_osmo.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpfc6_osmo.php\
    \ on line 44\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$array_size = count($array);\n\tif ($array_size <= 1) {\n\t\treturn $array;\n\
    \t}\n\t// sort the array\n\t$sorted_array = sort_array_util($array, 0, $array_size\
    \ - 1);\n\treturn $sorted_array;\n}\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sort_array_util()\
    \ in /tmp/tmp4a99kvvw.php:22\nStack trace:\n#0 /tmp/tmp4a99kvvw.php(26): sort_array(Array)\n\
    #1 /tmp/tmp4a99kvvw.php(32): candidate(Array)\n#2 /tmp/tmp4a99kvvw.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4a99kvvw.php on line 22\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $f = $array[0];\n    $l = $array[count($array) - 1];\n    $sum = $f + $l;\n\
    \    $check = $sum % 2 == 0 ? false : true;\n    $temp = $array;\n    for ($i\
    \ = 0; $i < count($array); $i ++) {\n        for ($j = $i + 1; $j < count($array);\
    \ $j ++) {\n            if ($check) {\n                if ($array[$i] > $array[$j])\
    \ {\n                    $temp = $array[$i];\n                    $array[$i] =\
    \ $array[$j];\n                    $array[$j] = $temp;\n                }\n  \
    \          } else {\n                if ($array[$i] < $array[$j]) {\n        \
    \            $temp = $array[$i];\n                    $array[$i] = $array[$j];\n\
    \                    $array[$j] = $temp;\n                }\n            }\n \
    \       }\n    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpg7f55ydu.php on line 17


    Warning: Undefined array key -1 in /tmp/tmpg7f55ydu.php on line 18

    '
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if(empty($array)) return $array;\n    $sum = $array[0] + $array[count($array)\
    \ - 1];\n    if($sum % 2 == 0) rsort($array);\n    else sort($array);\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // your code here\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr8zmgz6i.php:24\n\
    Stack trace:\n#0 /tmp/tmpr8zmgz6i.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpr8zmgz6i.php\
    \ on line 24\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (array_sum($array) % 2 == 0) {\n    rsort($array);\n  } else {\n    sort($array);\n\
    \  }\n  return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_e_on9s.php:33\n\
    Stack trace:\n#0 /tmp/tmpn_e_on9s.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn_e_on9s.php\
    \ on line 33\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif (count($array) <= 1) {\n\t\treturn $array;\n\t}\n\tif (($array[0] + $array[count($array)\
    \ - 1]) % 2 == 0) {\n\t\trsort($array);\n\t} else {\n\t\tsort($array);\n\t}\n\t\
    return $array;\n}\n\n$test_cases = array(\n\tarray(),\n\tarray(5),\n\tarray(2,\
    \ 4, 3, 0, 1, 5),\n\tarray(2, 4, 3, 0, 1, 5, 6),\n);\n\nforeach ($test_cases as\
    \ $test_case) {\n\techo \"input: \" . implode(', ', $test_case) . \"\\n\";\n\t\
    echo \"output: \" . implode(', ', sort_array($test_case)) . \"\\n\";\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "input: \noutput: \ninput: 5\noutput: 5\ninput: 2, 4, 3, 0, 1, 5\noutput:\
    \ 0, 1, 2, 3, 4, 5\ninput: 2, 4, 3, 0, 1, 5, 6\noutput: 6, 5, 4, 3, 2, 1, 0\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif (empty($array)) {\n\t\treturn array();\n\t}\n\tif (count($array) <= 1) {\n\
    \t\treturn $array;\n\t}\n\tif (($array[0] + $array[count($array) - 1]) % 2) {\n\
    \t\tsort($array);\n\t} else {\n\t\trsort($array);\n\t}\n\treturn $array;\n}\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (sizeof($array) < 2) {\n        return $array;\n    }\n\n    $head = array_shift($array);\n\
    \    $tail = array_pop($array);\n    $sum = $head + $tail;\n\n    // Bubble sort\
    \ here.\n    // ...\n}\n```\n\n\u5176\u5B9E\u5C31\u662F\u6309\u7167\u5947\u5076\
    \u6027\u6392\u5E8F\uFF0C\n\u5BF9\u4E8E\u5947\u6570\u548C\u5076\u6570\u662F\u9006\
    \u5E8F\uFF0C\u5BF9\u4E8E\u6570\u5B57\u5927\u5C0F\u662F\u987A\u5E8F\n\n```php\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "`" in /tmp/tmp5g_7k52k.php on line
    28

    '
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $first = array_shift($array);\n    $last = array_pop($array);\n    $sum =\
    \ $first + $last;\n    if($sum % 2 == 0) {\n        rsort($array);\n    }\n  \
    \  else {\n        sort($array);\n    }\n    array_unshift($array, $first);\n\
    \    array_push($array, $last);\n    return $array;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01xunny1.php:35\n\
    Stack trace:\n#0 /tmp/tmp01xunny1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp01xunny1.php\
    \ on line 35\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // BEGIN (write your solution here)\n    if (sizeof($array) == 0) {\n   \
    \     return $array;\n    }\n    $sum = $array[0] + $array[sizeof($array) - 1];\n\
    \    $ascending = ($sum % 2 == 0) ? false : true;\n    $temp = $array;\n    for\
    \ ($i = 0; $i < sizeof($array); $i++) {\n        for ($j = 0; $j < sizeof($array)\
    \ - 1; $j++) {\n            if (($ascending && $temp[$j] > $temp[$j + 1]) || (!$ascending\
    \ && $temp[$j] < $temp[$j + 1])) {\n                $val = $temp[$j];\n      \
    \          $temp[$j] = $temp[$j + 1];\n                $temp[$j + 1] = $val;\n\
    \            }\n        }\n    }\n    return $temp;\n    // END\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $first = $array[0];\n    $last = $array[count($array) - 1];\n    $sum = $first\
    \ + $last;\n    if ($sum % 2 == 0) {\n        rsort($array);\n    } else {\n \
    \       sort($array);\n    }\n    return $array;\n}\necho \"\\nGiven an array\
    \ of non-negative integers, return a cophp of the given array after sorting,\\\
    n you will sort the given array in ascending order if the sum( first index value,\
    \ last index value) is odd,\\n or sort it in descending order if the sum( first\
    \ index value, last index value) is even.\\n Note:\\n * don't change the given\
    \ array.\\n Examples:\\n >>> sort_array(array())\\n array()\\n >>> sort_array(array(5))\\\
    n array(5)\\n >>> sort_array(array(2, 4, 3, 0, 1, 5))\\n array(0, 1, 2, 3, 4,\
    \ 5)\\n >>> sort_array(array(2, 4, 3, 0, 1, 5, 6))\\n array(6, 5, 4, 3, 2, 1,\
    \ 0)\\n\";\necho 'Input: $array = array(2, 4, 3, 0, 1, 5)'.\"\\n\";\necho 'Output:\
    \ ';\nvar_dump(sort_array(array(2, 4, 3, 0, 1, 5)));\necho 'Input: $array = array(2,\
    \ 4, 3, 0, 1, 5, 6)'.\"\\n\";\necho 'Output: ';\nvar_dump(sort_array(array(2,\
    \ 4, 3, 0, 1, 5, 6)));\necho 'Input: $array = array()'.\"\\n\";\necho 'Output:\
    \ ';\nvar_dump(sort_array(array()));\necho 'Input: $array = array(5)'.\"\\n\"\
    ;\necho 'Output: ';\nvar_dump(sort_array(array(5)));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "\nGiven an array of non-negative integers, return a cophp of the given\
    \ array after sorting,\n you will sort the given array in ascending order if the\
    \ sum( first index value, last index value) is odd,\n or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n Note:\n *\
    \ don't change the given array.\n Examples:\n >>> sort_array(array())\n array()\n\
    \ >>> sort_array(array(5))\n array(5)\n >>> sort_array(array(2, 4, 3, 0, 1, 5))\n\
    \ array(0, 1, 2, 3, 4, 5)\n >>> sort_array(array(2, 4, 3, 0, 1, 5, 6))\n array(6,\
    \ 5, 4, 3, 2, 1, 0)\nInput: $array = array(2, 4, 3, 0, 1, 5)\nOutput: array(6)\
    \ {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n\
    \  [4]=>\n  int(4)\n  [5]=>\n  int(5)\n}\nInput: $array = array(2, 4, 3, 0, 1,\
    \ 5, 6)\nOutput: array(7) {\n  [0]=>\n  int(6)\n  [1]=>\n  int(5)\n  [2]=>\n \
    \ int(4)\n  [3]=>\n  int(3)\n  [4]=>\n  int(2)\n  [5]=>\n  int(1)\n  [6]=>\n \
    \ int(0)\n}\nInput: $array = array()\nOutput: \nWarning: Undefined array key 0\
    \ in /tmp/tmp_icds3sk.php on line 17\n\nWarning: Undefined array key -1 in /tmp/tmp_icds3sk.php\
    \ on line 18\narray(0) {\n}\nInput: $array = array(5)\nOutput: array(1) {\n  [0]=>\n\
    \  int(5)\n}\n\nWarning: Undefined array key 0 in /tmp/tmp_icds3sk.php on line\
    \ 17\n\nWarning: Undefined array key -1 in /tmp/tmp_icds3sk.php on line 18\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif (count($array) <= 1) {\n\t\treturn $array;\n\t}\n\tif (($array[0] + $array[count($array)\
    \ - 1]) % 2 === 0) {\n\t\t//even\n\t\trsort($array);\n\t} else {\n\t\t//odd\n\t\
    \tsort($array);\n\t}\n\treturn $array;\n}\necho PHP_EOL;\nprint_r(sort_array(array()));\n\
    echo PHP_EOL;\nprint_r(sort_array(array(5)));\necho PHP_EOL;\nprint_r(sort_array(array(2,\
    \ 4, 3, 0, 1, 5)));\necho PHP_EOL;\nprint_r(sort_array(array(2, 4, 3, 0, 1, 5,\
    \ 6)));\necho PHP_EOL;\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "\nArray\n(\n)\n\nArray\n(\n    [0] => 5\n)\n\nArray\n(\n    [0] => 0\n\
    \    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4] => 4\n    [5] => 5\n)\n\nArray\n\
    (\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5]\
    \ => 1\n    [6] => 0\n)\n\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $length = count($array);\n    if($length <= 1) {\n        return $array;\n\
    \    }\n    if(($array[0] + $array[$length - 1]) % 2 == 0) {\n        return arsort($array);\n\
    \    }\n    else {\n        return asort($array);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2i7uxsf0.php:35\n\
    Stack trace:\n#0 /tmp/tmp2i7uxsf0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2i7uxsf0.php\
    \ on line 35\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if(count($array) <= 1) return $array;\n    if(($array[0] + $array[count($array)\
    \ - 1]) % 2 == 0) {\n        rsort($array);\n    } else {\n        sort($array);\n\
    \    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $count = count($array);\n    if ($count <= 1) {\n        return $array;\n\
    \    }\n    $odd_even = $array[0] + $array[$count - 1] % 2 == 0 ? 'even' : 'odd';\n\
    \    for ($i = 0; $i < $count; $i++) {\n        for ($j = 0; $j < $count - $i\
    \ - 1; $j++) {\n            if (($odd_even == 'even' && $array[$j] < $array[$j\
    \ + 1]) || ($odd_even == 'odd' && $array[$j] > $array[$j + 1])) {\n          \
    \      $temp = $array[$j];\n                $array[$j] = $array[$j + 1];\n   \
    \             $array[$j + 1] = $temp;\n            }\n        }\n    }\n    return\
    \ $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq87otixw.php:41\n\
    Stack trace:\n#0 /tmp/tmpq87otixw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpq87otixw.php\
    \ on line 41\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$sum = $array[0] + $array[count($array) - 1];\n\tif ($sum % 2 == 0) {\n\t\t\
    rsort($array);\n\t} else {\n\t\tsort($array);\n\t}\n\treturn $array;\n}\n\n$test_cases\
    \ = array(\n\tarray(),\n\tarray(5),\n\tarray(2, 4, 3, 0, 1, 5),\n\tarray(2, 4,\
    \ 3, 0, 1, 5, 6),\n);\nforeach ($test_cases as $case) {\n\techo implode(', ',\
    \ sort_array($case)) . \"\\n\";\n}\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpc26ojapl.php on line 17


    Warning: Undefined array key -1 in /tmp/tmpc26ojapl.php on line 17


    5

    0, 1, 2, 3, 4, 5

    6, 5, 4, 3, 2, 1, 0


    Warning: Undefined array key 0 in /tmp/tmpc26ojapl.php on line 17


    Warning: Undefined array key -1 in /tmp/tmpc26ojapl.php on line 17

    '
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$sum = 0;\n\tif (count($array) % 2 == 0) {\n\t\tfor ($i = 0; $i < count($array);\
    \ $i++) {\n\t\t\t$sum += $array[$i];\n\t\t}\n\t\tif ($sum % 2 == 0) {\n\t\t\t\
    sort($array);\n\t\t} else {\n\t\t\trsort($array);\n\t\t}\n\t} else {\n\t\tfor\
    \ ($i = 0; $i < count($array); $i++) {\n\t\t\t$sum += $array[$i];\n\t\t}\n\t\t\
    if ($sum % 2 == 0) {\n\t\t\trsort($array);\n\t\t} else {\n\t\t\tsort($array);\n\
    \t\t}\n\t}\n\treturn $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp8obgea.php:46\n\
    Stack trace:\n#0 /tmp/tmpjp8obgea.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpjp8obgea.php\
    \ on line 46\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $length = count($array);\n    $result = $array;\n    if (count($array) ==\
    \ 0) {\n        return $array;\n    }\n    $sum = $array[0] + $array[$length -\
    \ 1];\n    if ($sum % 2 == 0) {\n        rsort($result);\n    } else {\n     \
    \   sort($result);\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (count($array) === 0) {\n        return $array;\n    }\n    $first_val\
    \ = $array[0];\n    $last_val = $array[count($array) - 1];\n    $is_odd = ($first_val\
    \ + $last_val) % 2 !== 0;\n    if ($is_odd) {\n        sort($array);\n    } else\
    \ {\n        rsort($array);\n    }\n    return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (count($array) % 2 == 0) {\n        $array = array_reverse($array);\n\
    \    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11nhbkn0.php:29\n\
    Stack trace:\n#0 /tmp/tmp11nhbkn0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp11nhbkn0.php\
    \ on line 29\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif (empty($array)) {\n\t\treturn $array;\n\t}\n\tif (($array[0] + $array[count($array)\
    \ - 1]) % 2 == 0) {\n\t\trsort($array);\n\t} else {\n\t\tsort($array);\n\t}\n\t\
    return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$sum = $array[0] + $array[count($array) - 1];\n\tif ($sum % 2 === 0) {\n\t\t\
    rsort($array);\n\t} else {\n\t\tsort($array);\n\t}\n\treturn $array;\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmp2o_mhc4t.php on line 17


    Warning: Undefined array key -1 in /tmp/tmp2o_mhc4t.php on line 17

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $sum = $array[0] + end($array);\n  if ($sum % 2 == 0) {\n    $sorted = rsort($array);\n\
    \  } else {\n    $sorted = sort($array);\n  }\n  return $array;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpyfk307gf.php on line 17

    '
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (!empty($array)) {\n        $i = 0;\n        while($i < count($array))\
    \ {\n            if ($array[0] + $array[count($array) - 1] % 2 == 0) {\n     \
    \           $array = sort_odd_even($array);\n            } else {\n          \
    \      $array = sort_even_odd($array);\n            }\n            $i++;\n   \
    \     }\n    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sort_even_odd()\
    \ in /tmp/tmpnongi02w.php:23\nStack trace:\n#0 /tmp/tmpnongi02w.php(31): sort_array(Array)\n\
    #1 /tmp/tmpnongi02w.php(36): candidate(Array)\n#2 /tmp/tmpnongi02w.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnongi02w.php on line 23\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (array_sum($array) % 2 == 0) {\n    rsort($array);\n  } else {\n    sort($array);\n\
    \  }\n  return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_e_on9s.php:33\n\
    Stack trace:\n#0 /tmp/tmpn_e_on9s.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn_e_on9s.php\
    \ on line 33\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $sum = $array[0] + end($array);\n    $sort = $sum % 2 == 0 ? SORT_DESC :\
    \ SORT_ASC;\n    asort($array, $sort);\n    return $array;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpoz56cuhz.php on line 17\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpoz56cuhz.php:29\nStack\
    \ trace:\n#0 /tmp/tmpoz56cuhz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpoz56cuhz.php\
    \ on line 29\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  // Write your code here\n  // To print results to the standard output you can\
    \ use print\n  // Example: print \"Hello world!\";\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8fnv919.php:26\n\
    Stack trace:\n#0 /tmp/tmps8fnv919.php(35): test()\n#1 {main}\n  thrown in /tmp/tmps8fnv919.php\
    \ on line 26\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $count = count($array);\n  if ($count < 2) {\n    return $array;\n  }\n  $sum\
    \ = $array[0] + $array[$count - 1];\n  if ($sum % 2 == 0) {\n    rsort($array);\n\
    \  } else {\n    sort($array);\n  }\n  return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $arr = [];\n  $sum = 0;\n  for ($i = 0; $i < count($array); $i++) {\n    $sum\
    \ += $array[$i];\n  }\n  if ($sum % 2 == 0) {\n    rsort($array);\n  } else {\n\
    \    sort($array);\n  }\n  return $array;\n}\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8eadcc1d.php:37\n\
    Stack trace:\n#0 /tmp/tmp8eadcc1d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8eadcc1d.php\
    \ on line 37\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $sorted_array = [];\n  $first_value = $array[0];\n  $last_value = $array[count($array)\
    \ - 1];\n  $odd_sum = $first_value + $last_value;\n  if ($odd_sum % 2 != 0) {\n\
    \    sort($array);\n    $sorted_array = $array;\n  } else {\n    rsort($array);\n\
    \    $sorted_array = $array;\n  }\n  return $sorted_array;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpumm_z1q6.php on line 18


    Warning: Undefined array key -1 in /tmp/tmpumm_z1q6.php on line 19

    '
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $length = count($array);\n    if ($length === 0 || $length === 1) {\n   \
    \     return $array;\n    }\n\n    $firstValue = $array[0];\n    $lastValue =\
    \ $array[$length - 1];\n    $sum = $firstValue + $lastValue;\n    if ($sum % 2\
    \ === 0) {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n\
    \    return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif(!is_array($array)) {\n\t\treturn $array;\n\t}\n\tif(sizeof($array) == 0)\
    \ {\n\t\treturn $array;\n\t}\n\tif(sizeof($array) == 1) {\n\t\treturn $array;\n\
    \t}\n\tif(sizeof($array) == 2) {\n\t\tif(($array[0] + $array[1]) % 2 == 0) {\n\
    \t\t\tsort($array);\n\t\t} else {\n\t\t\trsort($array);\n\t\t}\n\t\treturn $array;\n\
    \t}\n\t$new_array = array();\n\t$first_array = array();\n\t$second_array = array();\n\
    \tfor($i = 0; $i < sizeof($array); $i++) {\n\t\tif($i == 0) {\n\t\t\t$first_array[]\
    \ = $array[$i];\n\t\t} else if($i == sizeof($array) - 1) {\n\t\t\t$second_array[]\
    \ = $array[$i];\n\t\t} else {\n\t\t\t$new_array[] = $array[$i];\n\t\t}\n\t}\n\t\
    if(($first_array[0] + $second_array[0]) % 2 == 0) {\n\t\trsort($new_array);\n\t\
    } else {\n\t\tsort($new_array);\n\t}\n\treturn array_merge($first_array, $new_array,\
    \ $second_array);\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx7w65e_p.php:60\n\
    Stack trace:\n#0 /tmp/tmpx7w65e_p.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpx7w65e_p.php\
    \ on line 60\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $length = count($array);\n    if ($length <= 1) {\n        return $array;\n\
    \    }\n    $first = $array[0];\n    $last = $array[$length - 1];\n    if (($first\
    \ + $last) % 2 == 0) {\n        sort($array);\n    } else {\n        rsort($array);\n\
    \    }\n    return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpptyntgr2.php:38\n\
    Stack trace:\n#0 /tmp/tmpptyntgr2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpptyntgr2.php\
    \ on line 38\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $len = count($array);\n  if ($len == 0) {\n    return $array;\n  }\n  $odd\
    \ = ($array[0] + $array[$len - 1]) % 2 == 1;\n  if ($odd) {\n    sort($array);\n\
    \  } else {\n    rsort($array);\n  }\n  return $array;\n}\necho '<pre>';\nvar_dump(sort_array(array()));\n\
    var_dump(sort_array(array(5)));\nvar_dump(sort_array(array(2, 4, 3, 0, 1, 5)));\n\
    var_dump(sort_array(array(2, 4, 3, 0, 1, 5, 6)));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>array(0) {\n}\narray(1) {\n  [0]=>\n  int(5)\n}\narray(6) {\n  [0]=>\n\
    \  int(0)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n  [4]=>\n\
    \  int(4)\n  [5]=>\n  int(5)\n}\narray(7) {\n  [0]=>\n  int(6)\n  [1]=>\n  int(5)\n\
    \  [2]=>\n  int(4)\n  [3]=>\n  int(3)\n  [4]=>\n  int(2)\n  [5]=>\n  int(1)\n\
    \  [6]=>\n  int(0)\n}\n</pre>"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (sizeof($array) == 0 || sizeof($array) == 1) {\n    return $array;\n  }\n\
    \n  // check if the sum of the first and last index is odd or even.\n  $sum =\
    \ $array[0] + $array[sizeof($array) - 1];\n  if ($sum % 2 != 0) {\n    // sort\
    \ array in ascending order.\n    sort($array);\n  } else {\n    // sort array\
    \ in descending order.\n    rsort($array);\n  }\n  return $array;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) {\n        return $array;\n    }\n    $first = $array[0];\n\
    \    $last = end($array);\n    $sum = $first + $last;\n    if (count($array) ==\
    \ 1) {\n        return $array;\n    }\n    if ($sum % 2 == 0) {\n        rsort($array);\n\
    \    } else {\n        sort($array);\n    }\n    return $array;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $array_length = count($array);\n    $first_index = $array[0];\n    $last_index\
    \ = $array[$array_length - 1];\n    if(($first_index + $last_index) % 2 == 0)\
    \ {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpw4f4mzt1.php on line 18


    Warning: Undefined array key -1 in /tmp/tmpw4f4mzt1.php on line 19

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $first_num = $array[0];\n  $last_num = $array[count($array) - 1];\n  if(($first_num\
    \ + $last_num) % 2 == 0) {\n    arsort($array);\n  }\n  else {\n    asort($array);\n\
    \  }\n  return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpj4uw25e6.php on line 17\n\n\
    Warning: Undefined array key -1 in /tmp/tmpj4uw25e6.php on line 18\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpj4uw25e6.php:34\nStack trace:\n\
    #0 /tmp/tmpj4uw25e6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpj4uw25e6.php\
    \ on line 34\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $first = array_shift($array);\n    $last = array_pop($array);\n    $sum =\
    \ $first + $last;\n    if ($sum % 2) {\n        sort($array);\n    } else {\n\
    \        rsort($array);\n    }\n    return array_merge(array($first), $array,\
    \ array($last));\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2o1pyhn6.php:32\n\
    Stack trace:\n#0 /tmp/tmp2o1pyhn6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2o1pyhn6.php\
    \ on line 32\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $sum = $array[0] + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n   \
    \ $array = array_reverse($array);\n  }\n  return $array;\n}\necho \"<pre>\";\n\
    print_r(sort_array(array(2, 4, 3, 0, 1, 5)));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(sort_array(array(2, 4, 3, 0, 1, 5, 6)));\necho \"</pre>\";\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 3\n    [3] => 0\n\
    \    [4] => 1\n    [5] => 5\n)\n</pre><pre>Array\n(\n    [0] => 6\n    [1] =>\
    \ 5\n    [2] => 1\n    [3] => 0\n    [4] => 3\n    [5] => 4\n    [6] => 2\n)\n\
    </pre>\nWarning: Undefined array key 0 in /tmp/tmppwifkldb.php on line 17\n\n\
    Warning: Undefined array key -1 in /tmp/tmppwifkldb.php on line 17\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmppwifkldb.php:36\nStack trace:\n\
    #0 /tmp/tmppwifkldb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmppwifkldb.php\
    \ on line 36\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n\
    \        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpmmc_dtqc.php on line 17


    Warning: Undefined array key -1 in /tmp/tmpmmc_dtqc.php on line 17

    '
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // Your code here\n}\n\nclass TestClass extends TestCase {\n    protected\
    \ function setUp() {\n        // your code here\n    }\n\n    protected function\
    \ tearDown() {\n        // your code here\n    }\n\n    public function test1()\
    \ {\n        $this->assertEquals(array(), sort_array(array()));\n    }\n\n   \
    \ public function test2() {\n        $this->assertEquals(array(5), sort_array(array(5)));\n\
    \    }\n\n    public function test3() {\n        $this->assertEquals(array(0,\
    \ 1, 2, 3, 4, 5), sort_array(array(2, 4, 3, 0, 1, 5)));\n    }\n\n    public function\
    \ test4() {\n        $this->assertEquals(array(6, 5, 4, 3, 2, 1, 0), sort_array(array(2,\
    \ 4, 3, 0, 1, 5, 6)));\n    }\n}\n\n$t = new TestClass();\n$t->run();\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"TestCase\" not found in /tmp/tmpd5mps7vp.php:20\n\
    Stack trace:\n#0 {main}\n  thrown in /tmp/tmpd5mps7vp.php on line 20\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (empty($array)) {\n    return $array;\n  }\n  $sum = $array[0] + $array[count($array)\
    \ - 1];\n  if ($sum % 2 == 0) {\n    sort($array);\n    return array_reverse($array);\n\
    \  } else {\n    sort($array);\n    return $array;\n  }\n}\n\nclass SortArrayTest\
    \ extends TestCase {\n  public function testDescriptionExamples() {\n    $this->assertEquals(sort_array(array()),\
    \ array());\n    $this->assertEquals(sort_array(array(5)), array(5));\n    $this->assertEquals(sort_array(array(2,\
    \ 4, 3, 0, 1, 5)), array(0, 1, 2, 3, 4, 5));\n    $this->assertEquals(sort_array(array(2,\
    \ 4, 3, 0, 1, 5, 6)), array(6, 5, 4, 3, 2, 1, 0));\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"TestCase\" not found in /tmp/tmp69hcceyy.php:30\n\
    Stack trace:\n#0 {main}\n  thrown in /tmp/tmp69hcceyy.php on line 30\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $first_value = reset($array);\n    $last_value = end($array);\n    $result\
    \ = [];\n    if (array_sum([$first_value, $last_value]) % 2) {\n        $result\
    \ = $array;\n        asort($result);\n    } else {\n        $result = $array;\n\
    \        arsort($result);\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6iqk35ds.php:36\n\
    Stack trace:\n#0 /tmp/tmp6iqk35ds.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6iqk35ds.php\
    \ on line 36\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) {\n        return $array;\n    }\n\n    $first = $array[0];\n\
    \    $last = $array[count($array) - 1];\n    $sum = $first + $last;\n\n    if\
    \ ($sum % 2 == 0) {\n        arsort($array);\n    } else {\n        asort($array);\n\
    \    }\n\n    return $array;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_yzofhcj.php:41\n\
    Stack trace:\n#0 /tmp/tmp_yzofhcj.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_yzofhcj.php\
    \ on line 41\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) return $array;\n    if (count($array) == 1) return $array;\n\
    \    $arr = array();\n    $left = 0;\n    $right = count($array) - 1;\n    $middle\
    \ = $right >> 1;\n    if (($array[$left] + $array[$right]) % 2 == 0) {\n     \
    \   for ($i = 0; $i <= $middle; $i++) {\n            if ($i == $middle) {\n  \
    \              $arr[$i] = $array[$right];\n            } else {\n            \
    \    $arr[$i] = $array[$right];\n                $arr[$right] = $array[$i];\n\
    \                $right--;\n            }\n        }\n    } else {\n        for\
    \ ($i = 0; $i <= $middle; $i++) {\n            if ($i == $middle) {\n        \
    \        $arr[$i] = $array[$left];\n            } else {\n                $arr[$i]\
    \ = $array[$left];\n                $arr[$right] = $array[$i];\n             \
    \   $left++;\n            }\n        }\n    }\n    return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadtzlrmy.php:53\n\
    Stack trace:\n#0 /tmp/tmpadtzlrmy.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpadtzlrmy.php\
    \ on line 53\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) {\n        return array();\n    }\n    $key = array_search(0,\
    \ $array);\n    if ($key !== false) {\n        unset($array[$key]);\n    }\n \
    \   $array = array_values($array);\n    $first = $array[0];\n    $last = end($array);\n\
    \    if (($first + $last) % 2 === 0) {\n        rsort($array);\n    } else {\n\
    \        sort($array);\n    }\n    return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tni2et0.php:42\n\
    Stack trace:\n#0 /tmp/tmp5tni2et0.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp5tni2et0.php\
    \ on line 42\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // Your code here\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpde_rc37o.php:24\n\
    Stack trace:\n#0 /tmp/tmpde_rc37o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpde_rc37o.php\
    \ on line 24\n"
  timestamp: 1659822314
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $i = 0;\n    $ii = count($array) - 1;\n    $result = [];\n    while ($i <=\
    \ $ii) {\n        if (($array[$i] + $array[$ii]) % 2 === 0) {\n            $result[]\
    \ = $array[$ii];\n            $ii--;\n        } else {\n            $result[]\
    \ = $array[$i];\n            $i++;\n        }\n    }\n    return $result;\n}\n\
    \n$input = array(2, 4, 3, 0, 1, 5);\necho implode(', ', sort_array($input));\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2, 4, 5, 1, 3, 0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdsisax1.php:41\n\
    Stack trace:\n#0 /tmp/tmpjdsisax1.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpjdsisax1.php\
    \ on line 41\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if(count($array) == 0) {\n    return array();\n  } elseif(count($array) ==\
    \ 1) {\n    return $array;\n  } else {\n    $last = end($array);\n    $first =\
    \ $array[0];\n    if(($first + $last) % 2 == 0) {\n      rsort($array);\n    }\
    \ else {\n      sort($array);\n    }\n    return $array;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (count($array) <= 1) {\n        return $array;\n    }\n    $firstIndex\
    \ = $array[0];\n    $lastIndex = $array[count($array) - 1];\n    $sum = $firstIndex\
    \ + $lastIndex;\n    if ($sum % 2 == 0) {\n        $desc = function($a, $b) {\n\
    \            return $b <=> $a;\n        };\n        usort($array, $desc);\n  \
    \  } else {\n        $asc = function($a, $b) {\n            return $a <=> $b;\n\
    \        };\n        usort($array, $asc);\n    }\n    return $array;\n}\n$array\
    \ = [2, 4, 3, 0, 1, 5, 6];\nprint_r(sort_array($array));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4]\
    \ => 2\n    [5] => 1\n    [6] => 0\n)\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) return $array;\n    $sort_array = array();\n    $odd_array\
    \ = array();\n    $even_array = array();\n    foreach ($array as $v) {\n     \
    \   if ($v % 2 == 0) {\n            $even_array[] = $v;\n        } else {\n  \
    \          $odd_array[] = $v;\n        }\n    }\n    sort($odd_array);\n    sort($even_array);\n\
    \    $even_array = array_reverse($even_array);\n    $sort_array = array_merge($odd_array,\
    \ $even_array);\n    return $sort_array;\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvsests3m.php:42\n\
    Stack trace:\n#0 /tmp/tmpvsests3m.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpvsests3m.php\
    \ on line 42\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $len = count($array);\n    $sum = $array[0] + $array[$len - 1];\n    if ($sum\
    \ % 2 == 0) {\n        rsort($array);\n    } else {\n        sort($array);\n \
    \   }\n    return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpw0ruw3e4.php on line 18


    Warning: Undefined array key -1 in /tmp/tmpw0ruw3e4.php on line 18

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  // Write your code here...\n}\n\n$a = array(3,6,2,6,2,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6,9,6\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp1dfrf5hn.php
    on line 21

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  // your code\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wasp9ru.php:24\n\
    Stack trace:\n#0 /tmp/tmp9wasp9ru.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9wasp9ru.php\
    \ on line 24\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$sum = $array[0] + $array[count($array) - 1];\n\tif ($sum % 2 == 0) {\n\t\t\
    sort($array);\n\t\t$array = array_reverse($array);\n\t} else {\n\t\tsort($array);\n\
    \t}\n\treturn $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpuek4n3vc.php on line 17


    Warning: Undefined array key -1 in /tmp/tmpuek4n3vc.php on line 17

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $odd_even = array_sum( [ $array[0], $array[count($array)-1] ] ) % 2;\n  \
    \  for ($i=0; $i < count($array); $i++) {\n        for ($j=0; $j < count($array);\
    \ $j++) {\n            if ($odd_even == 0) {\n                if ($array[$i] >\
    \ $array[$j]) {\n                    $temp = $array[$i];\n                   \
    \ $array[$i] = $array[$j];\n                    $array[$j] = $temp;\n        \
    \        }\n            } else {\n                if ($array[$i] < $array[$j])\
    \ {\n                    $temp = $array[$i];\n                    $array[$i] =\
    \ $array[$j];\n                    $array[$j] = $temp;\n                }\n  \
    \          }\n        }\n    }\n    return $array;\n}\necho \"Examples:\" . PHP_EOL;\n\
    echo implode(\",\", sort_array(array(2, 4, 3, 0, 1, 5))) . PHP_EOL;\necho implode(\"\
    ,\", sort_array(array(2, 4, 3, 0, 1, 5, 6))) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Examples:

    0,1,2,3,4,5

    6,5,4,3,2,1,0


    Warning: Undefined array key 0 in /tmp/tmp8j1ufk9f.php on line 17


    Warning: Undefined array key -1 in /tmp/tmp8j1ufk9f.php on line 17

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if(empty($array)) return $array;\n  $odd = $even = $res = array();\n  foreach($array\
    \ as $key => $value) {\n    if($key % 2 == 0) {\n      $even[] = $value;\n   \
    \ } else {\n      $odd[] = $value;\n    }\n  }\n  sort($even);\n  sort($odd);\n\
    \  $odd = array_reverse($odd);\n  foreach($array as $key => $value) {\n    if($key\
    \ % 2 == 0) {\n      $res[] = array_shift($even);\n    } else {\n      $res[]\
    \ = array_shift($odd);\n    }\n  }\n  return $res;\n}\nprint_r(sort_array(array(2,\
    \ 4, 3, 0, 1, 5)));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 5\n    [2] => 2\n    [3] => 4\n    [4]\
    \ => 3\n    [5] => 0\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhx80_6b.php:46\n\
    Stack trace:\n#0 /tmp/tmpbhx80_6b.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpbhx80_6b.php\
    \ on line 46\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $first = 0;\n    $last = count($array) - 1;\n    $sum = $array[$first] +\
    \ $array[$last];\n    $even = true;\n    if ($sum % 2 == 0) {\n        $even =\
    \ false;\n    }\n    if ($even) {\n        $sorted_array = sort_even($array);\n\
    \    } else {\n        $sorted_array = sort_odd($array);\n    }\n    return $sorted_array;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmppmc50sc9.php on line 19\n\n\
    Warning: Undefined array key -1 in /tmp/tmppmc50sc9.php on line 19\n\nFatal error:\
    \ Uncaught Error: Call to undefined function sort_odd() in /tmp/tmppmc50sc9.php:27\n\
    Stack trace:\n#0 /tmp/tmppmc50sc9.php(33): sort_array(Array)\n#1 /tmp/tmppmc50sc9.php(37):\
    \ candidate(Array)\n#2 /tmp/tmppmc50sc9.php(46): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmppmc50sc9.php on line 27\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $cnt = count($array);\n    if ($cnt == 0 || $cnt == 1) {\n        return\
    \ $array;\n    }\n    if ($array[0] + $array[$cnt - 1] % 2 == 0) {\n        for\
    \ ($i = 0; $i < $cnt; $i++) {\n            for ($j = $i + 1; $j < $cnt; $j++)\
    \ {\n                if ($array[$i] < $array[$j]) {\n                    $temp\
    \ = $array[$i];\n                    $array[$i] = $array[$j];\n              \
    \      $array[$j] = $temp;\n                }\n            }\n        }\n    }\
    \ else {\n        for ($i = 0; $i < $cnt; $i++) {\n            for ($j = $i +\
    \ 1; $j < $cnt; $j++) {\n                if ($array[$i] > $array[$j]) {\n    \
    \                $temp = $array[$i];\n                    $array[$i] = $array[$j];\n\
    \                    $array[$j] = $temp;\n                }\n            }\n \
    \       }\n    }\n    return $array;\n}\n$array = array(2, 4, 3, 0, 1, 5, 6);\n\
    print_r(sort_array($array));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4]\
    \ => 4\n    [5] => 5\n    [6] => 6\n)\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpp6oqr75_.php:54\nStack trace:\n#0 /tmp/tmpp6oqr75_.php(60):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpp6oqr75_.php on line 54\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $sum = $array[0] + end($array);\n    $sort = $sum % 2 == 0 ? 'desc' : 'asc';\n\
    \    sort($array);\n    if ($sort == 'desc') {\n        $array = array_reverse($array);\n\
    \    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpoyvlcdxn.php on line 17

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $len = count($array);\n    if ($len < 2) {\n        return $array;\n    }\n\
    \    $pivot = $array[0];\n    $left = array();\n    $right = array();\n    for\
    \ ($i = 1; $i < $len; $i++) {\n        if ($array[$i] <= $pivot) {\n         \
    \   $left[] = $array[$i];\n        } else {\n            $right[] = $array[$i];\n\
    \        }\n    }\n    $left = sort_array($left);\n    $right = sort_array($right);\n\
    \    return array_merge($left, array($pivot), $right);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tus_gs9.php:44\n\
    Stack trace:\n#0 /tmp/tmp1tus_gs9.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp1tus_gs9.php\
    \ on line 44\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if(count($array)<2) {\n        return $array;\n    }\n    $sum = $array[0]\
    \ + $array[count($array)-1];\n    if($sum%2==0) {\n        // decreasing order\n\
    \        rsort($array);\n    } else {\n        // increasing order\n        sort($array);\n\
    \    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $array_sum = array_sum($array);\n    if ($array_sum % 2 == 0) {\n       \
    \ rsort($array);\n    } else {\n        sort($array);\n    }\n    return $array;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg749q954.php:34\n\
    Stack trace:\n#0 /tmp/tmpg749q954.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpg749q954.php\
    \ on line 34\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $size = count($array);\n    if ($size == 0 || $size == 1) {\n        return\
    \ $array;\n    }\n    $sum = $array[0] + $array[$size - 1];\n    if ($sum % 2\
    \ == 0) {\n        arsort($array);\n    } else {\n        asort($array);\n   \
    \ }\n    return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvk56fi_.php:37\n\
    Stack trace:\n#0 /tmp/tmpdvk56fi_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpdvk56fi_.php\
    \ on line 37\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if(count($array) < 2) {\n        return $array;\n    }\n    $even = ($array[0]\
    \ + $array[count($array) - 1]) % 2 == 0;\n    if($even) {\n        rsort($array);\n\
    \    } else {\n        sort($array);\n    }\n    return $array;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $head = $array[0];\n    $tail = $array[count($array) - 1];\n    $sort_array\
    \ = array();\n    if (($head + $tail) % 2 == 0) {\n        $order = SORT_DESC;\n\
    \    } else {\n        $order = SORT_ASC;\n    }\n    array_unshift($array, null);\n\
    \    unset($array[0]);\n    foreach ($array as $key => $value) {\n        $sort_array[$key]\
    \ = $value;\n    }\n    array_multisort($sort_array, $order, $array);\n    return\
    \ $array;\n}\n$a1 = array();\nvar_dump(sort_array($a1));\n$a2 = array(5);\nvar_dump(sort_array($a2));\n\
    $a3 = array(2, 4, 3, 0, 1, 5);\nvar_dump(sort_array($a3));\n$a4 = array(2, 4,\
    \ 3, 0, 1, 5, 6);\nvar_dump(sort_array($a4));\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpy363ahk2.php on line 17\n\n\
    Warning: Undefined array key -1 in /tmp/tmpy363ahk2.php on line 18\narray(0) {\n\
    }\narray(1) {\n  [0]=>\n  int(5)\n}\narray(6) {\n  [0]=>\n  int(0)\n  [1]=>\n\
    \  int(1)\n  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n\
    \  int(5)\n}\narray(7) {\n  [0]=>\n  int(6)\n  [1]=>\n  int(5)\n  [2]=>\n  int(4)\n\
    \  [3]=>\n  int(3)\n  [4]=>\n  int(2)\n  [5]=>\n  int(1)\n  [6]=>\n  int(0)\n\
    }\n\nWarning: Undefined array key 0 in /tmp/tmpy363ahk2.php on line 17\n\nWarning:\
    \ Undefined array key -1 in /tmp/tmpy363ahk2.php on line 18\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (sizeof($array) <= 1) {\n        return $array;\n    }\n    $f = $array[0];\n\
    \    $l = end($array);\n    if (($f + $l) % 2 == 0) {\n        rsort($array);\n\
    \    } else {\n        sort($array);\n    }\n    return $array;\n}\necho \"<pre>\"\
    ;\necho \"<b>Input:</b> <br/>\";\n$array = array(2, 4, 3, 0, 1, 5, 6);\nvar_dump($array);\n\
    echo \"<b>Output:</b> <br/>\";\nvar_dump(sort_array($array));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre><b>Input:</b> <br/>array(7) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(4)\n\
    \  [2]=>\n  int(3)\n  [3]=>\n  int(0)\n  [4]=>\n  int(1)\n  [5]=>\n  int(5)\n\
    \  [6]=>\n  int(6)\n}\n<b>Output:</b> <br/>array(7) {\n  [0]=>\n  int(6)\n  [1]=>\n\
    \  int(5)\n  [2]=>\n  int(4)\n  [3]=>\n  int(3)\n  [4]=>\n  int(2)\n  [5]=>\n\
    \  int(1)\n  [6]=>\n  int(0)\n}\n</pre>"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if(empty($array)) {\n    return $array;\n  }\n  if(count($array) % 2 == 0)\
    \ {\n    sort($array);\n  }\n  else {\n    rsort($array);\n  }\n  return $array;\n\
    }\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpueplkjau.php:39\n\
    Stack trace:\n#0 /tmp/tmpueplkjau.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpueplkjau.php\
    \ on line 39\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n    $sum_head_tail =\
    \ $array[0] + $array[count($array) - 1];\n    if ($sum_head_tail % 2 === 0) {\n\
    \        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpry4uolf7.php on line 20


    Warning: Undefined array key -1 in /tmp/tmpry4uolf7.php on line 20

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$sum_first_and_last = array_shift($array) + array_pop($array);\n\t$sum_first_and_last\
    \ % 2 == 0 ? rsort($array) : sort($array);\n\treturn $array;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpml9hbydn.php:27\n\
    Stack trace:\n#0 /tmp/tmpml9hbydn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpml9hbydn.php\
    \ on line 27\n"
  timestamp: 1660028884
- exit_code: -1
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$i = 0;\n\t$j = count($array) - 1;\n\t$arr = $array;\n\t$swap = function($array,\
    \ $i, $j) {\n\t\t$temp = $array[$i];\n\t\t$array[$i] = $array[$j];\n\t\t$array[$j]\
    \ = $temp;\n\t\treturn $array;\n\t};\n\tif (($array[0] + $array[count($array)\
    \ - 1]) % 2) {\n\t\twhile ($i < $j) {\n\t\t\twhile ($array[$i] % 2) {\n\t\t\t\t\
    $i++;\n\t\t\t}\n\t\t\twhile (!($array[$j] % 2)) {\n\t\t\t\t$j--;\n\t\t\t}\n\t\t\
    \tif ($i < $j) {\n\t\t\t\t$arr = $swap($array, $i, $j);\n\t\t\t}\n\t\t}\n\t\t\
    return $arr;\n\t} else {\n\t\twhile ($i < $j) {\n\t\t\twhile ($array[$i] % 2)\
    \ {\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\twhile (!($array[$j] % 2)) {\n\t\t\t\t$j--;\n\
    \t\t\t}\n\t\t\tif ($i < $j) {\n\t\t\t\t$arr = $swap($array, $i, $j);\n\t\t\t}\n\
    \t\t}\n\t\treturn array_reverse($arr);\n\t}\n}\nvar_dump(sort_array(array(2, 4,\
    \ 3, 0, 1, 5)));\nvar_dump(sort_array(array(2, 4, 3, 0, 1, 5, 6)));\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028889
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // $array = array(2, 4, 3, 0, 1, 5, 6);\n    // var_dump($array);\n    //\
    \ var_dump(count($array));\n    // var_dump($array[0]);\n    // var_dump($array[count($array)-1]);\n\
    \    // var_dump($array[0] + $array[count($array)-1]);\n    // var_dump(($array[0]\
    \ + $array[count($array)-1]) % 2);\n    // var_dump($array[0] + $array[count($array)-1]\
    \ % 2);\n    // var_dump(($array[0] + $array[count($array)-1]) % 2 == 0);\n  \
    \  // var_dump($array[0] + $array[count($array)-1] % 2 == 0);\n    // var_dump(($array[0]\
    \ + $array[count($array)-1]) % 2 != 0);\n    // var_dump($array[0] + $array[count($array)-1]\
    \ % 2 != 0);\n    if (count($array) == 0) {\n        return $array;\n    } else\
    \ if (count($array) == 1) {\n        return $array;\n    } else if (($array[0]\
    \ + $array[count($array)-1]) % 2 == 0) {\n        // var_dump($array);\n     \
    \   // sort($array);\n        // var_dump($array);\n        // rsort($array);\n\
    \        // var_dump($array);\n        rsort($array);\n        return $array;\n\
    \    } else if (($array[0] + $array[count($array)-1]) % 2 != 0) {\n        //\
    \ var_dump($array);\n        // sort($array);\n        // var_dump($array);\n\
    \        // rsort($array);\n        // var_dump($array);\n        sort($array);\n\
    \        return $array;\n    }\n    // var_dump($array);\n    // var_dump($array[0]);\n\
    \    // var_dump($array[count($array)-1]);\n    // var_dump($array[0] + $array[count($array)-1]);\n\
    \    // if (($array[\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 16 in /tmp/tmpmp61hlaz.php on line 69

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (array_sum($array) % 2 == 0) {\n        rsort($array);\n    } else {\n\
    \        sort($array);\n    }\n    return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxb7c7qe.php:33\n\
    Stack trace:\n#0 /tmp/tmpxxb7c7qe.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxxb7c7qe.php\
    \ on line 33\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t// Write your code here\n\t// To print results to the standard output you can\
    \ use print\n\t// Example: print \"Hello world!\";\n\t$length = count($array);\n\
    \tif($length == 0) {\n\t\treturn $array;\n\t} else if($length == 1) {\n\t\treturn\
    \ $array;\n\t} else {\n\t\tif(($array[0] + $array[$length - 1]) % 2 == 0) {\n\t\
    \t\tfor($i = 0; $i < $length; $i++) {\n\t\t\t\tfor($j = $i + 1; $j < $length;\
    \ $j++) {\n\t\t\t\t\tif($array[$i] < $array[$j]) {\n\t\t\t\t\t\t$temp = $array[$i];\n\
    \t\t\t\t\t\t$array[$i] = $array[$j];\n\t\t\t\t\t\t$array[$j] = $temp;\n\t\t\t\t\
    \t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor($i = 0; $i < $length; $i++) {\n\
    \t\t\t\tfor($j = $i + 1; $j < $length; $j++) {\n\t\t\t\t\tif($array[$i] > $array[$j])\
    \ {\n\t\t\t\t\t\t$temp = $array[$i];\n\t\t\t\t\t\t$array[$i] = $array[$j];\n\t\
    \t\t\t\t\t$array[$j] = $temp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn\
    \ $array;\n\t}\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if(empty($array)) return $array;\n    // check if the first index value and\
    \ last index value sum even or odd\n    $isOdd = ($array[0] + $array[count($array)\
    \ - 1]) % 2;\n    if($isOdd) {\n        // Sort in ascending order\n        sort($array);\n\
    \    } else {\n        // Sort in descending order\n        rsort($array);\n \
    \   }\n    return $array;\n}\n\necho implode(', ', sort_array(array(2, 4, 3, 0,\
    \ 1, 5, 6)));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 6, 5, 4, 3, 2, 1, 0
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$size = count($array);\n\tif ($size === 0) {\n\t\treturn $array;\n\t}\n\tif\
    \ ($size === 1) {\n\t\treturn $array;\n\t}\n\t$sum = $array[0] + $array[$size\
    \ - 1];\n\tif ($sum % 2 === 0) {\n\t\trsort($array);\n\t} else {\n\t\tsort($array);\n\
    \t}\n\treturn $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if(count($array) == 0) return $array;\n  if(count($array) == 1) return $array;\n\
    \  $mid = ($array[0] + $array[count($array) - 1]) % 2;\n  if($mid == 0) {\n  \
    \  rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n}\n\n\
    print_r(sort_array(array(2, 4, 3, 0, 1, 5)));\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4]\
    \ => 4\n    [5] => 5\n)\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    return count($array) > 0 && (($array[0] + $array[count($array) - 1]) % 2)\
    \ ? rsort($array) : sort($array);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnltvkj2g.php:25\n\
    Stack trace:\n#0 /tmp/tmpnltvkj2g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnltvkj2g.php\
    \ on line 25\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $result = [];\n  $summ = ($array[0] + end($array)) % 2;\n  if ($summ === 0)\
    \ {\n    rsort($array);\n  } else {\n    sort($array);\n  }\n  return $array;\n\
    }\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmprdtyagck.php on line 18

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (count($array) > 0) {\n    $first = $array[0];\n    $last = $array[count($array)\
    \ - 1];\n    $sum = $first + $last;\n    if ($sum % 2 == 0) {\n      rsort($array);\n\
    \    } else {\n      sort($array);\n    }\n  }\n  return $array;\n}\n\necho \"\
    sort_array(array())\";\nvar_dump(sort_array(array()));\necho \"sort_array(array(5))\"\
    ;\nvar_dump(sort_array(array(5)));\necho \"sort_array(array(2, 4, 3, 0, 1, 5))\"\
    ;\nvar_dump(sort_array(array(2, 4, 3, 0, 1, 5)));\necho \"sort_array(array(2,\
    \ 4, 3, 0, 1, 5, 6))\";\nvar_dump(sort_array(array(2, 4, 3, 0, 1, 5, 6)));\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "sort_array(array())array(0) {\n}\nsort_array(array(5))array(1) {\n  [0]=>\n\
    \  int(5)\n}\nsort_array(array(2, 4, 3, 0, 1, 5))array(6) {\n  [0]=>\n  int(0)\n\
    \  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n\
    \  [5]=>\n  int(5)\n}\nsort_array(array(2, 4, 3, 0, 1, 5, 6))array(7) {\n  [0]=>\n\
    \  int(6)\n  [1]=>\n  int(5)\n  [2]=>\n  int(4)\n  [3]=>\n  int(3)\n  [4]=>\n\
    \  int(2)\n  [5]=>\n  int(1)\n  [6]=>\n  int(0)\n}\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $start = $array[0];\n    $end = $array[count($array) - 1];\n    $is_odd =\
    \ (($start + $end) % 2 === 1);\n    if ($is_odd) {\n        sort($array);\n  \
    \  } else {\n        rsort($array);\n    }\n    return $array;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmp27jko3xx.php on line 17


    Warning: Undefined array key -1 in /tmp/tmp27jko3xx.php on line 18

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif (!$array) {\n\t\treturn $array;\n\t}\n\tif (count($array) == 1) {\n\t\treturn\
    \ $array;\n\t}\n\tif (array_sum($array) % 2 == 0) {\n\t\trsort($array);\n\t} else\
    \ {\n\t\tsort($array);\n\t}\n\treturn $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn37nbwat.php:39\n\
    Stack trace:\n#0 /tmp/tmpn37nbwat.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpn37nbwat.php\
    \ on line 39\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (!$array) {\n    return $array;\n  }\n  if (sizeof($array) == 1) {\n   \
    \ return $array;\n  }\n  if (sizeof($array) == 2) {\n    return $array[0] > $array[1]\
    \ ? array($array[1], $array[0]) : $array;\n  }\n  $i = 1;\n  $size = sizeof($array);\n\
    \  while ($i < $size) {\n    if (($array[0] + $array[$size - 1]) % 2) {\n    \
    \  if ($array[$i] < $array[$i - 1]) {\n        $temp = $array[$i];\n        $array[$i]\
    \ = $array[$i - 1];\n        $array[$i - 1] = $temp;\n        $i = 1;\n      }\
    \ else {\n        $i++;\n      }\n    } else {\n      if ($array[$i] > $array[$i\
    \ - 1]) {\n        $temp = $array[$i];\n        $array[$i] = $array[$i - 1];\n\
    \        $array[$i - 1] = $temp;\n        $i = 1;\n      } else {\n        $i++;\n\
    \      }\n    }\n  }\n  return $array;\n}\n$a = array(2, 4, 3, 0, 1, 5);\nprint_r(sort_array($a));\n\
    echo \"<br>\";\n$a = array(2, 4, 3, 0, 1, 5, 6);\nprint_r(sort_array($a));\necho\
    \ \"<br>\";\n$a = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(sort_array($a));\n\
    echo \"<br>\";\n$a = array(21, 21, 21, 21, 20, 21, 21, 21, 20, 21, 21, 21, 21,\
    \ 21, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\
    \ 21, 21, 21, 21, 21, 21, 21\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpdvw4tost.php
    on line 61

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $array_length = count($array);\n    $first_last_sum = $array[0] + $array[$array_length\
    \ - 1];\n    if($first_last_sum % 2 == 0) {\n        rsort($array);\n    }\n \
    \   else {\n        sort($array);\n    }\n    return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmppludmhh7.php on line 18


    Warning: Undefined array key -1 in /tmp/tmppludmhh7.php on line 18

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif ($array == null) {\n\t\treturn $array;\n\t}\n\t$ret = $array;\n\t$first =\
    \ $array[0];\n\t$last = $array[count($array) - 1];\n\tif (($first + $last) % 2\
    \ == 0) {\n\t\tfor ($i = 0; $i < count($array); $i++) {\n\t\t\tfor ($j = 0; $j\
    \ < count($array) - 1; $j++) {\n\t\t\t\tif ($array[$j] < $array[$j + 1]) {\n\t\
    \t\t\t\t$array[$j] = $array[$j] + $array[$j + 1];\n\t\t\t\t\t$array[$j + 1] =\
    \ $array[$j] - $array[$j + 1];\n\t\t\t\t\t$array[$j] = $array[$j] - $array[$j\
    \ + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ($i = 0; $i < count($array);\
    \ $i++) {\n\t\t\tfor ($j = 0; $j < count($array) - 1; $j++) {\n\t\t\t\tif ($array[$j]\
    \ > $array[$j + 1]) {\n\t\t\t\t\t$array[$j] = $array[$j] + $array[$j + 1];\n\t\
    \t\t\t\t$array[$j + 1] = $array[$j] - $array[$j + 1];\n\t\t\t\t\t$array[$j] =\
    \ $array[$j] - $array[$j + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $array;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wnk8_60.php:26\n\
    Stack trace:\n#0 /tmp/tmp7wnk8_60.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7wnk8_60.php\
    \ on line 26\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t// write your code here\n\t// Please add your code here\n}\n\n$input0 = array();\n\
    $expectedOutput0 = array();\n$input1 = array(5);\n$expectedOutput1 = array(5);\n\
    $input2 = array(2, 4, 3, 0, 1, 5);\n$expectedOutput2 = array(0, 1, 2, 3, 4, 5);\n\
    $input3 = array(2, 4, 3, 0, 1, 5, 6);\n$expectedOutput3 = array(6, 5, 4, 3, 2,\
    \ 1, 0);\n\necho \"Input: \";\nprint_r($input0);\necho \"\\n\";\necho \"Output:\
    \ \";\nprint_r(sort_array($input0));\necho \"\\n\";\necho \"Expected: \";\nprint_r($expectedOutput0);\n\
    echo \"\\n\";\n\necho \"Input: \";\nprint_r($input1);\necho \"\\n\";\necho \"\
    Output: \";\nprint_r(sort_array($input1));\necho \"\\n\";\necho \"Expected: \"\
    ;\nprint_r($expectedOutput1);\necho \"\\n\";\n\necho \"Input: \";\nprint_r($input2);\n\
    echo \"\\n\";\necho \"Output: \";\nprint_r(sort_array($input2));\necho \"\\n\"\
    ;\necho \"Expected: \";\nprint_r($expectedOutput2);\necho \"\\n\";\n\necho \"\
    Input: \";\nprint_r($input3);\necho \"\\n\";\necho \"Output: \";\nprint_r(sort_array($input3));\n\
    echo \"\\n\";\necho \"Expected: \";\nprint_r($expectedOutput3);\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Input: Array\n(\n)\n\nOutput: \nExpected: Array\n(\n)\n\nInput: Array\n\
    (\n    [0] => 5\n)\n\nOutput: \nExpected: Array\n(\n    [0] => 5\n)\n\nInput:\
    \ Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 3\n    [3] => 0\n    [4] =>\
    \ 1\n    [5] => 5\n)\n\nOutput: \nExpected: Array\n(\n    [0] => 0\n    [1] =>\
    \ 1\n    [2] => 2\n    [3] => 3\n    [4] => 4\n    [5] => 5\n)\n\nInput: Array\n\
    (\n    [0] => 2\n    [1] => 4\n    [2] => 3\n    [3] => 0\n    [4] => 1\n    [5]\
    \ => 5\n    [6] => 6\n)\n\nOutput: \nExpected: Array\n(\n    [0] => 6\n    [1]\
    \ => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 0\n\
    )\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8n1gy76u.php:74\n\
    Stack trace:\n#0 /tmp/tmp8n1gy76u.php(83): test()\n#1 {main}\n  thrown in /tmp/tmp8n1gy76u.php\
    \ on line 74\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t// TODO: your code here\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbybbcn5k.php:25\n\
    Stack trace:\n#0 /tmp/tmpbybbcn5k.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbybbcn5k.php\
    \ on line 25\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) return $array;\n    $sum = $array[0] + $array[count($array)\
    \ - 1];\n    $order = ($sum % 2 == 0) ? 'desc' : 'asc';\n    return quick_sort($array,\
    \ $order);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function quick_sort()\
    \ in /tmp/tmpju0qr5cq.php:20\nStack trace:\n#0 /tmp/tmpju0qr5cq.php(24): sort_array(Array)\n\
    #1 /tmp/tmpju0qr5cq.php(29): candidate(Array)\n#2 /tmp/tmpju0qr5cq.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmpju0qr5cq.php on line 20\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $sum = $array[0] + end($array);\n  if ($sum % 2 == 0) {\n    rsort($array);\n\
    \  } else {\n    sort($array);\n  }\n  return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmph3ybdm16.php on line 17

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $first = $array[0];\n  $last = $array[count($array) - 1];\n  $sort_array =\
    \ sort($array);\n  if (($first + $last) % 2 == 0) {\n    $sort_array = array_reverse($sort_array);\n\
    \  }\n  return $sort_array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp29n1p8vc.php on line 17\n\n\
    Warning: Undefined array key -1 in /tmp/tmp29n1p8vc.php on line 18\n\nFatal error:\
    \ Uncaught TypeError: array_reverse(): Argument #1 ($array) must be of type array,\
    \ bool given in /tmp/tmp29n1p8vc.php:21\nStack trace:\n#0 /tmp/tmp29n1p8vc.php(21):\
    \ array_reverse(true)\n#1 /tmp/tmp29n1p8vc.php(26): sort_array(Array)\n#2 /tmp/tmp29n1p8vc.php(30):\
    \ candidate(Array)\n#3 /tmp/tmp29n1p8vc.php(39): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmp29n1p8vc.php on line 21\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  \n  if (empty($array)) return array();\n  if (count($array) == 1) return $array;\n\
    \  \n  $a = $array[0];\n  $b = $array[count($array) - 1];\n  \n  if (($a + $b)\
    \ % 2 == 0) {\n    // sort in descending order\n    rsort($array);\n  } else {\n\
    \    // sort in ascending order\n    sort($array);\n  }\n  \n  return $array;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (count($array) < 2 || empty($array)) return $array;\n  $sum = $array[0]\
    \ + $array[count($array) - 1];\n  if ($sum % 2 == 0) {\n    sort($array);\n  \
    \  return array_reverse($array);\n  } else {\n    sort($array);\n    return $array;\n\
    \  }\n}\necho \"Test #1: \" . (sort_array(array()) == array() ? \"SUCCESS\" :\
    \ \"FAILED\") . \"\\n\";\necho \"Test #2: \" . (sort_array(array(5)) == array(5)\
    \ ? \"SUCCESS\" : \"FAILED\") . \"\\n\";\necho \"Test #3: \" . (sort_array(array(2,\
    \ 4, 3, 0, 1, 5)) == array(0, 1, 2, 3, 4, 5) ? \"SUCCESS\" : \"FAILED\") . \"\\\
    n\";\necho \"Test #4: \" . (sort_array(array(2, 4, 3, 0, 1, 5, 6)) == array(6,\
    \ 5, 4, 3, 2, 1, 0) ? \"SUCCESS\" : \"FAILED\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Test #1: SUCCESS

    Test #2: SUCCESS

    Test #3: SUCCESS

    Test #4: SUCCESS

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif (empty($array)) {\n\t\treturn $array;\n\t}\n\t$odd = $array[0] + $array[count($array)\
    \ - 1] % 2 == 1;\n\tfor ($i = 0; $i < count($array); $i++) {\n\t\tfor ($j = 0;\
    \ $j < count($array) - 1; $j++) {\n\t\t\tif ($odd) {\n\t\t\t\tif ($array[$j] >\
    \ $array[$j + 1]) {\n\t\t\t\t\t$temp = $array[$j];\n\t\t\t\t\t$array[$j] = $array[$j\
    \ + 1];\n\t\t\t\t\t$array[$j + 1] = $temp;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t\
    if ($array[$j] < $array[$j + 1]) {\n\t\t\t\t\t$temp = $array[$j];\n\t\t\t\t\t\
    $array[$j] = $array[$j + 1];\n\t\t\t\t\t$array[$j + 1] = $temp;\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $array;\n}\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzzvbtzs.php:47\n\
    Stack trace:\n#0 /tmp/tmpwzzvbtzs.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpwzzvbtzs.php\
    \ on line 47\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $len = count($array);\n    if ($len == 0 || $len == 1) {\n        return\
    \ $array;\n    }\n    $first = $array[0];\n    $last = $array[$len - 1];\n   \
    \ $sum = $first + $last;\n    if ($sum % 2 == 0) {\n        rsort($array);\n \
    \   } else {\n        sort($array);\n    }\n    return $array;\n}\necho PHP_EOL;\n\
    echo 'Given an array of non-negative integers, return a cophp of the given array\
    \ after sorting, you will sort the given array in ascending order if the sum(\
    \ first index value, last index value) is odd, or sort it in descending order\
    \ if the sum( first index value, last index value) is even.' . PHP_EOL;\n$array\
    \ = [1, 2, 3, 4, 5, 6];\necho 'For array: ' . implode(', ', $array) . PHP_EOL;\n\
    echo 'Sort array: ' . implode(', ', sort_array($array)) . PHP_EOL;\n$array = [2,\
    \ 4, 3, 0, 1, 5];\necho 'For array: ' . implode(', ', $array) . PHP_EOL;\necho\
    \ 'Sort array: ' . implode(', ', sort_array($array)) . PHP_EOL;\n$array = [2,\
    \ 4, 3, 0, 1, 5, 6];\necho 'For array: ' . implode(', ', $array) . PHP_EOL;\n\
    echo 'Sort array: ' . implode(', ', sort_array($array)) . PHP_EOL;\n$array = [5];\n\
    echo 'For array: ' . implode(', ', $array) . PHP_EOL;\necho 'Sort array: ' . implode(',\
    \ ', sort_array($array)) . PHP_EOL;\n$array = [];\necho 'For array: ' . implode(',\
    \ ', $array) . PHP_EOL;\necho 'Sort array: ' . implode(', ', sort_array($array))\
    \ . PHP_EOL;\necho PHP_EOL;\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "\nGiven an array of non-negative integers, return a cophp of the given\
    \ array after sorting, you will sort the given array in ascending order if the\
    \ sum( first index value, last index value) is odd, or sort it in descending order\
    \ if the sum( first index value, last index value) is even.\nFor array: 1, 2,\
    \ 3, 4, 5, 6\nSort array: 1, 2, 3, 4, 5, 6\nFor array: 2, 4, 3, 0, 1, 5\nSort\
    \ array: 0, 1, 2, 3, 4, 5\nFor array: 2, 4, 3, 0, 1, 5, 6\nSort array: 6, 5, 4,\
    \ 3, 2, 1, 0\nFor array: 5\nSort array: 5\nFor array: \nSort array: \n\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) {\n        return $array;\n    }\n    if (count($array)\
    \ == 1) {\n        return $array;\n    }\n    if (($array[0] + $array[count($array)\
    \ - 1]) % 2 == 0) {\n        rsort($array);\n    } else {\n        sort($array);\n\
    \    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif (count($array) <= 1) {\n\t\treturn $array;\n\t}\n\n\tif (($array[0] + $array[count($array)\
    \ - 1]) % 2 == 0) {\n\t\trsort($array);\n\t} else {\n\t\tsort($array);\n\t}\n\n\
    \treturn $array;\n}\n\nprint_r(sort_array(array(2, 4, 3, 0, 1, 5)));\necho PHP_EOL;\n\
    print_r(sort_array(array(2, 4, 3, 0, 1, 5, 6)));\necho PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4]\
    \ => 4\n    [5] => 5\n)\n\nArray\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n\
    \    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 0\n)\n\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (!$array) return $array;\n    $result = $array;\n    //Sum the values\
    \ at first and last index\n    $sum = $array[0] + $array[count($array) - 1];\n\
    \    //If sum is odd, sort the array in ascending order\n    if ($sum % 2 == 1)\
    \ {\n        sort($result);\n    }\n    //If sum is even, sort the array in descending\
    \ order\n    else {\n        rsort($result);\n    }\n    return $result;\n}\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$count = count($array);\n\t$sum = $array[0] + $array[$count - 1];\n\t$key =\
    \ $sum % 2;\n\tif ($key == 0) {\n\t\trsort($array);\n\t} else {\n\t\tsort($array);\n\
    \t}\n\treturn $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmp9v3efvkj.php on line 18


    Warning: Undefined array key -1 in /tmp/tmp9v3efvkj.php on line 18

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif(count($array) == 0) return $array;\n\t\n\t$result = [];\n\t$odd = [];\n\t\
    $even = [];\n\t\n\tforeach($array as $value) {\n\t\tif($value % 2 == 0) {\n\t\t\
    \t$even[] = $value;\n\t\t} else {\n\t\t\t$odd[] = $value;\n\t\t}\n\t}\n\t\n\t\
    sort($odd);\n\tsort($even);\n\t\n\t$sum = $array[0] + $array[count($array) - 1];\n\
    \t\n\tif($sum % 2 == 0) {\n\t\trsort($odd);\n\t\trsort($even);\n\t}\n\t\n\t$odd_pointer\
    \ = 0;\n\t$even_pointer = 0;\n\t\n\tforeach($array as $key => $value) {\n\t\t\
    if($value % 2 == 0) {\n\t\t\t$result[$key] = $even[$even_pointer];\n\t\t\t$even_pointer++;\n\
    \t\t} else {\n\t\t\t$result[$key] = $odd[$odd_pointer];\n\t\t\t$odd_pointer++;\n\
    \t\t}\n\t}\n\t\n\treturn $result;\n}\n\nprint_r(sort_array(array(2, 4, 3, 0, 1,\
    \ 5)));\nprint_r(sort_array(array(2, 4, 3, 0, 1, 5, 6)));\nprint_r(sort_array(array()));\n\
    print_r(sort_array(array(5)));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 2\n    [2] => 1\n    [3] => 4\n    [4]\
    \ => 3\n    [5] => 5\n)\nArray\n(\n    [0] => 6\n    [1] => 4\n    [2] => 5\n\
    \    [3] => 2\n    [4] => 3\n    [5] => 1\n    [6] => 0\n)\nArray\n(\n)\nArray\n\
    (\n    [0] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8rmxkb5.php:68\n\
    Stack trace:\n#0 /tmp/tmph8rmxkb5.php(75): test()\n#1 {main}\n  thrown in /tmp/tmph8rmxkb5.php\
    \ on line 68\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (empty($array)) {\n    return array();\n  }\n  if (count($array) == 1) {\n\
    \    return $array;\n  }\n  $odd_sum = is_odd($array[0] + $array[count($array)\
    \ - 1]);\n  if ($odd_sum) {\n    asort($array);\n  } else {\n    arsort($array);\n\
    \  }\n  return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_odd() in /tmp/tmpi9yfb3ws.php:23\n\
    Stack trace:\n#0 /tmp/tmpi9yfb3ws.php(32): sort_array(Array)\n#1 /tmp/tmpi9yfb3ws.php(38):\
    \ candidate(Array)\n#2 /tmp/tmpi9yfb3ws.php(45): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpi9yfb3ws.php on line 23\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) {\n        return $array;\n    }\n    $sum = 0;\n    for\
    \ ($i = 0; $i < 2; $i++) {\n        $sum += $array[$i];\n    }\n    if ($sum %\
    \ 2 == 0) {\n        rsort($array);\n    } else {\n        sort($array);\n   \
    \ }\n    return $array;\n}\n\n$array = array(2, 4, 3, 0, 1, 5, 6);\nprint_r(sort_array($array));\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4]\
    \ => 2\n    [5] => 1\n    [6] => 0\n)\n\nWarning: Undefined array key 1 in /tmp/tmp_ooqehmz.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ooqehmz.php:41\n\
    Stack trace:\n#0 /tmp/tmp_ooqehmz.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_ooqehmz.php\
    \ on line 41\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $sum = array_sum(array($array[0], $array[sizeof($array) - 1]));\n  $array =\
    \ sort($array);\n  if ($sum % 2 === 0) {\n    return array_reverse($array);\n\
    \  } else {\n    return $array;\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp3zn8bmfk.php on line 17\n\n\
    Warning: Undefined array key -1 in /tmp/tmp3zn8bmfk.php on line 17\n\nFatal error:\
    \ Uncaught TypeError: array_reverse(): Argument #1 ($array) must be of type array,\
    \ bool given in /tmp/tmp3zn8bmfk.php:20\nStack trace:\n#0 /tmp/tmp3zn8bmfk.php(20):\
    \ array_reverse(true)\n#1 /tmp/tmp3zn8bmfk.php(26): sort_array(true)\n#2 /tmp/tmp3zn8bmfk.php(30):\
    \ candidate(Array)\n#3 /tmp/tmp3zn8bmfk.php(39): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmp3zn8bmfk.php on line 20\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $result = [];\n    $count = count($array);\n    $i = 0;\n    $k = $count\
    \ - 1;\n    $flag = ($array[0] + $array[$count - 1]) % 2 == 0;\n    while ($i\
    \ < $count) {\n        if ($flag) {\n            $result[] = $array[$k];\n   \
    \         $k--;\n        } else {\n            $result[] = $array[$i];\n     \
    \       $i++;\n        }\n        $flag = !$flag;\n    }\n    return $result;\n\
    }\n\n$input1 = [5];\n$input2 = [2, 4, 3, 0, 1, 5];\n$input3 = [2, 4, 3, 0, 1,\
    \ 5, 6];\n$input4 = [];\n$input5 = [5, 4, 3, 2, 1, 0];\n$input6 = [1, 1, 0, 1,\
    \ 0, 1, 0];\n$input7 = [10, 8, 6, 4, 2, 0];\n\n$output1 = sort_array($input1);\n\
    $output2 = sort_array($input2);\n$output3 = sort_array($input3);\n$output4 = sort_array($input4);\n\
    $output5 = sort_array($input5);\n$output6 = sort_array($input6);\n$output7 = sort_array($input7);\n\
    \necho $output1 . \"\\n\";\necho $output2 . \"\\n\";\necho $output3 . \"\\n\"\
    ;\necho $output4 . \"\\n\";\necho $output5 . \"\\n\";\necho $output6 . \"\\n\"\
    ;\necho $output7 . \"\\n\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp9uvxsamb.php on line 21\n\n\
    Warning: Undefined array key -1 in /tmp/tmp9uvxsamb.php on line 21\n\nWarning:\
    \ Array to string conversion in /tmp/tmp9uvxsamb.php on line 51\nArray\n\nWarning:\
    \ Array to string conversion in /tmp/tmp9uvxsamb.php on line 52\nArray\n\nWarning:\
    \ Array to string conversion in /tmp/tmp9uvxsamb.php on line 53\nArray\n\nWarning:\
    \ Array to string conversion in /tmp/tmp9uvxsamb.php on line 54\nArray\n\nWarning:\
    \ Array to string conversion in /tmp/tmp9uvxsamb.php on line 55\nArray\n\nWarning:\
    \ Array to string conversion in /tmp/tmp9uvxsamb.php on line 56\nArray\n\nWarning:\
    \ Array to string conversion in /tmp/tmp9uvxsamb.php on line 57\nArray\n\nWarning:\
    \ Undefined array key 0 in /tmp/tmp9uvxsamb.php on line 21\n\nWarning: Undefined\
    \ array key -1 in /tmp/tmp9uvxsamb.php on line 21\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp9uvxsamb.php:64\nStack trace:\n#0 /tmp/tmp9uvxsamb.php(72):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9uvxsamb.php on line 64\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if(count($array) == 0) {\n        return $array;\n    }\n    $sum = $array[0]\
    \ + $array[count($array) - 1];\n    if($sum % 2 == 0) {\n        return bubbleSort($array,\
    \ \"desc\");\n    } else {\n        return bubbleSort($array, \"asc\");\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function bubbleSort()\
    \ in /tmp/tmpkg3uja_a.php:22\nStack trace:\n#0 /tmp/tmpkg3uja_a.php(29): sort_array(Array)\n\
    #1 /tmp/tmpkg3uja_a.php(34): candidate(Array)\n#2 /tmp/tmpkg3uja_a.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpkg3uja_a.php on line 22\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) return $array;\n    $sum = $array[0] + $array[count($array)\
    \ - 1];\n    sort($array);\n    if ($sum % 2 == 0) {\n        $array = array_reverse($array);\n\
    \    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $first = array_shift($array);\n  $last = array_pop($array);\n  if(($first +\
    \ $last) % 2 === 0) {\n    rsort($array);\n  } else {\n    sort($array);\n  }\n\
    \  array_unshift($array, $first);\n  array_push($array, $last);\n  return $array;\n\
    }\n$test = array(0, 1, 2, 3, 4, 5);\necho '<pre>';\nvar_dump(sort_array($test));\n\
    echo '</pre>';\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>array(6) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n\
    \  [3]=>\n  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n  int(5)\n}\n</pre>\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpo4r5wt6w.php:38\nStack trace:\n\
    #0 /tmp/tmpo4r5wt6w.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpo4r5wt6w.php\
    \ on line 38\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if(count($array) % 2 == 0) {\n        return sort_desc($array);\n    } else\
    \ {\n        return sort_asc($array);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sort_desc() in\
    \ /tmp/tmphdkcshxc.php:18\nStack trace:\n#0 /tmp/tmphdkcshxc.php(25): sort_array(Array)\n\
    #1 /tmp/tmphdkcshxc.php(29): candidate(Array)\n#2 /tmp/tmphdkcshxc.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmphdkcshxc.php on line 18\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    // Your code here\n    $array_frist_index_val = $array[0];\n    $array_last_index_val\
    \ = end($array);\n    $sum_val = $array_frist_index_val + $array_last_index_val;\n\
    \    // if odd\n    if ($sum_val % 2 != 0) {\n        // sort in ascending order\n\
    \        sort($array);\n    }\n    // if even\n    else {\n        // sort in\
    \ descending order\n        rsort($array);\n    }\n    return $array;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpjfhuwut_.php on line 18

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $first = $array[0];\n    $last = end($array);\n    $sum = $first + $last;\n\
    \    if ($sum % 2 == 0) {\n        rsort($array);\n    } else {\n        sort($array);\n\
    \    }\n    return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpn4tinhzx.php on line 17

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if(!empty($array)) {\n        $first = $array[0];\n        $last = $array[count($array)\
    \ - 1];\n        $total = $first + $last;\n        $even = true;\n        if($total\
    \ % 2 == 0) {\n            $even = false;\n        }\n        for($i = 0; $i <\
    \ count($array); $i++) {\n            for($j = $i + 1; $j < count($array); $j++)\
    \ {\n                if($even) {\n                    if($array[$i] < $array[$j])\
    \ {\n                        $temp = $array[$i];\n                        $array[$i]\
    \ = $array[$j];\n                        $array[$j] = $temp;\n               \
    \     }\n                } else {\n                    if($array[$i] > $array[$j])\
    \ {\n                        $temp = $array[$i];\n                        $array[$i]\
    \ = $array[$j];\n                        $array[$j] = $temp;\n               \
    \     }\n                }\n            }\n        }\n    }\n    return $array;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpau2q9oso.php:53\n\
    Stack trace:\n#0 /tmp/tmpau2q9oso.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpau2q9oso.php\
    \ on line 53\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) return $array;\n    $first_index = $array[0];\n    $last_index\
    \ = end($array);\n    $sum = $first_index + $last_index;\n    if ($sum % 2 ===\
    \ 0) {\n        rsort($array);\n    } else {\n        sort($array);\n    }\n \
    \   return $array;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$len = count($array);\n\tif ($len == 0) {\n\t\treturn array();\n\t}\n\tif ($len\
    \ == 1) {\n\t\treturn $array;\n\t}\n\tif (($array[0] + $array[$len - 1]) % 2 ==\
    \ 0) {\n\t\trsort($array);\n\t} else {\n\t\tsort($array);\n\t}\n\treturn $array;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $size = count($array);\n  if($size <= 1) {\n    return $array;\n  }\n  if(($array[0]\
    \ + $array[$size - 1]) % 2 === 0) {\n    rsort($array);\n  } else {\n    sort($array);\n\
    \  }\n  return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $first = $array[0];\n    $last = $array[count($array) - 1];\n    $sum = $first\
    \ + $last;\n    if ($sum % 2 == 0) {\n        rsort($array);\n    } else {\n \
    \       sort($array);\n    }\n    return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmp1h_wm7ef.php on line 17


    Warning: Undefined array key -1 in /tmp/tmp1h_wm7ef.php on line 18

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (count($array) <= 1) return $array;\n  $result = [];\n  $sorted = [];\n\
    \  $arrSum = array_sum($array);\n  $isEven = isEven($arrSum);\n  $isOdd = isOdd($arrSum);\n\
    \  if ($isEven) {\n    $sorted = rsort($array);\n  } else if ($isOdd) {\n    $sorted\
    \ = sort($array);\n  }\n  foreach ($array as $key => $val) {\n    if (isEven($key))\
    \ {\n      $result[] = $val;\n    }\n  }\n  foreach ($array as $key => $val) {\n\
    \    if (isOdd($key)) {\n      $result[] = $val;\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isEven() in /tmp/tmp9go3efou.php:21\n\
    Stack trace:\n#0 /tmp/tmp9go3efou.php(41): sort_array(Array)\n#1 /tmp/tmp9go3efou.php(47):\
    \ candidate(Array)\n#2 /tmp/tmp9go3efou.php(54): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp9go3efou.php on line 21\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $first = $array[0];\n    $last = $array[count($array) - 1];\n    $sum = $first\
    \ + $last;\n    if($sum % 2 == 0) {\n        rsort($array);\n    } else {\n  \
    \      sort($array);\n    }\n    return $array;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpmd4uik9q.php on line 17


    Warning: Undefined array key -1 in /tmp/tmpmd4uik9q.php on line 18

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (count($array) < 2) return $array;\n  $odds = $evens = [];\n  for ($i =\
    \ 0; $i < count($array); $i++) {\n    if ($i % 2) {\n      $odds[] = $array[$i];\n\
    \    } else {\n      $evens[] = $array[$i];\n    }\n  }\n  sort($odds);\n  rsort($evens);\n\
    \  for ($i = 0; $i < count($array); $i++) {\n    if ($i % 2) {\n      $array[$i]\
    \ = array_shift($odds);\n    } else {\n      $array[$i] = array_shift($evens);\n\
    \    }\n  }\n  return $array;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshyznl85.php:45\n\
    Stack trace:\n#0 /tmp/tmpshyznl85.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpshyznl85.php\
    \ on line 45\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (!is_array($array) || count($array) < 2) {\n        return $array;\n \
    \   }\n    if (($array[0] + $array[count($array) - 1]) % 2) {\n        asort($array);\n\
    \    } else {\n        arsort($array);\n    }\n    return $array;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx6hafhm6.php:35\n\
    Stack trace:\n#0 /tmp/tmpx6hafhm6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpx6hafhm6.php\
    \ on line 35\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (sizeof($array) <= 1) {\n        return $array;\n    }\n    // TODO: implement\
    \ sort array\n    $size = sizeof($array);\n    if(($array[0] + $array[$size -\
    \ 1]) % 2 != 0){\n        sort($array);\n    }else{\n        rsort($array);\n\
    \    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $sortArray = [];\n    $firstIndex = $array[0];\n    $lastIndex = $array[sizeof($array)\
    \ - 1];\n    $sum = $firstIndex + $lastIndex;\n    for ($i = 0; $i < sizeof($array);\
    \ $i++) {\n        if ($sum % 2 == 0) {\n            $sortArray[] = max($array);\n\
    \            $array[array_search(max($array), $array)] = min($array);\n      \
    \  } else {\n            $sortArray[] = min($array);\n            $array[array_search(min($array),\
    \ $array)] = max($array);\n        }\n    }\n    return $sortArray;\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpzp8qmk92.php on line 18


    Warning: Undefined array key -1 in /tmp/tmpzp8qmk92.php on line 19

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $count = count($array);\n    if ($count <= 1) {\n        return $array;\n\
    \    }\n    if ($count % 2 != 0) {\n        $array[] = 0;\n        $count++;\n\
    \    }\n    $output = array();\n    for ($i = 0; $i < $count / 2; $i++) {\n  \
    \      $output[] = $array[$i];\n        $output[] = $array[$count - $i - 1];\n\
    \    }\n    return $output;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwlad7i5t.php:39\n\
    Stack trace:\n#0 /tmp/tmpwlad7i5t.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwlad7i5t.php\
    \ on line 39\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $input = $array;\n  $input = merge_sort($input);\n  if(((int)$input[0] + (int)$input[count($input)\
    \ - 1]) % 2 == 0) {\n    $input = array_reverse($input);\n  }\n  return $input;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function merge_sort()\
    \ in /tmp/tmpvcxs0_o1.php:18\nStack trace:\n#0 /tmp/tmpvcxs0_o1.php(26): sort_array(Array)\n\
    #1 /tmp/tmpvcxs0_o1.php(30): candidate(Array)\n#2 /tmp/tmpvcxs0_o1.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvcxs0_o1.php on line 18\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $length = count($array);\n    // if array is empty or has 1 element, return\
    \ itself\n    if($length < 2) {\n        return $array;\n    }\n    // if array\
    \ sum of the first and last element is odd, sort in ascending order\n    if (($array[0]\
    \ + $array[$length - 1]) % 2 == 1) {\n        sort($array);\n    }\n    // if\
    \ array sum of the first and last element is even, sort in descending order\n\
    \    else {\n        rsort($array);\n    }\n    return $array;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $first_last_sum = $array[0] + $array[count($array) - 1];\n    if ($first_last_sum\
    \ % 2 === 0) {\n        rsort($array);\n    } else {\n        sort($array);\n\
    \    }\n    return $array;\n}\n\n$ex = array(2, 4, 3, 0, 1, 5);\nprint_r(sort_array($ex));\n\
    echo \"\\n\";\n$ex = array(2, 4, 3, 0, 1, 5, 6);\nprint_r(sort_array($ex));\n\
    echo \"\\n\";\n$ex = array(2, 4, 3, 0, 1, 5, 6, 9);\nprint_r(sort_array($ex));\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4]\
    \ => 4\n    [5] => 5\n)\n\nArray\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n\
    \    [3] => 3\n    [4] => 2\n    [5] => 1\n    [6] => 0\n)\n\nArray\n(\n    [0]\
    \ => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4] => 4\n    [5] => 5\n\
    \    [6] => 6\n    [7] => 9\n)\n\n\nWarning: Undefined array key 0 in /tmp/tmp7alao__p.php\
    \ on line 17\n\nWarning: Undefined array key -1 in /tmp/tmp7alao__p.php on line\
    \ 17\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $output = [];\n  $odd = [];\n  $even = [];\n  if (count($array) == 0 || count($array)\
    \ == 1) {\n    return $array;\n  }\n  for ($i = 0; $i < count($array); $i++) {\n\
    \    if ($i % 2 == 0) {\n      $odd[] = $array[$i];\n    } else {\n      $even[]\
    \ = $array[$i];\n    }\n  }\n  sort($odd);\n  rsort($even);\n  for ($i = 0; $i\
    \ < count($odd); $i++) {\n    $output[] = $odd[$i];\n    $output[] = $even[$i];\n\
    \  }\n  return $output;\n}\necho \"<pre>sort_array(array(2, 4, 3, 0, 1, 5))\\\
    r\\n\";\nvar_dump(sort_array(array(2, 4, 3, 0, 1, 5)));\necho \"</pre>\";\necho\
    \ \"<pre>sort_array(array(2, 4, 3, 0, 1, 5, 6))\\r\\n\";\nvar_dump(sort_array(array(2,\
    \ 4, 3, 0, 1, 5, 6)));\necho \"</pre>\";\necho \"<pre>sort_array(array())\\r\\\
    n\";\nvar_dump(sort_array(array()));\necho \"</pre>\";\necho \"<pre>sort_array(array(5))\\\
    r\\n\";\nvar_dump(sort_array(array(5)));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>sort_array(array(2, 4, 3, 0, 1, 5))\r\narray(6) {\n  [0]=>\n  int(1)\n\
    \  [1]=>\n  int(5)\n  [2]=>\n  int(2)\n  [3]=>\n  int(4)\n  [4]=>\n  int(3)\n\
    \  [5]=>\n  int(0)\n}\n</pre><pre>sort_array(array(2, 4, 3, 0, 1, 5, 6))\r\n\n\
    Warning: Undefined array key 3 in /tmp/tmppf54x1fz.php on line 34\narray(8) {\n\
    \  [0]=>\n  int(1)\n  [1]=>\n  int(5)\n  [2]=>\n  int(2)\n  [3]=>\n  int(4)\n\
    \  [4]=>\n  int(3)\n  [5]=>\n  int(0)\n  [6]=>\n  int(6)\n  [7]=>\n  NULL\n}\n\
    </pre><pre>sort_array(array())\r\narray(0) {\n}\n</pre><pre>sort_array(array(5))\r\
    \narray(1) {\n  [0]=>\n  int(5)\n}\n</pre>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmppf54x1fz.php:57\nStack trace:\n#0 /tmp/tmppf54x1fz.php(64):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppf54x1fz.php on line 57\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$front = [];\n\t$back = [];\n\tif($array) {\n\t\tif(array_sum($array) % 2 ==\
    \ 0) {\n\t\t\t$front = $array;\n\t\t\trsort($front);\n\t\t} else {\n\t\t\t$back\
    \ = $array;\n\t\t\tsort($back);\n\t\t}\n\t}\n\n\t$sortArray = [];\n\tfor($i =\
    \ 0; $i < count($array); $i++) {\n\t\tif($i % 2 == 0) {\n\t\t\tarray_push($sortArray,\
    \ array_shift($front));\n\t\t} else {\n\t\t\tarray_push($sortArray, array_shift($back));\n\
    \t\t}\n\t}\n\treturn $sortArray;\n}\n\necho \"<pre> sort_array(array(2, 4, 3,\
    \ 0, 1, 5))\\n\";\nvar_dump(sort_array(array(2, 4, 3, 0, 1, 5)));\necho \"</pre>\"\
    ;\n\necho \"<pre> sort_array(array(2, 4, 3, 0, 1, 5, 6))\\n\";\nvar_dump(sort_array(array(2,\
    \ 4, 3, 0, 1, 5, 6)));\necho \"</pre>\";\n\necho \"<pre> sort_array(array())\\\
    n\";\nvar_dump(sort_array(array()));\necho \"</pre>\";\n\necho \"<pre> sort_array(array(5))\\\
    n\";\nvar_dump(sort_array(array(5)));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre> sort_array(array(2, 4, 3, 0, 1, 5))\narray(6) {\n  [0]=>\n  NULL\n\
    \  [1]=>\n  int(0)\n  [2]=>\n  NULL\n  [3]=>\n  int(1)\n  [4]=>\n  NULL\n  [5]=>\n\
    \  int(2)\n}\n</pre><pre> sort_array(array(2, 4, 3, 0, 1, 5, 6))\narray(7) {\n\
    \  [0]=>\n  NULL\n  [1]=>\n  int(0)\n  [2]=>\n  NULL\n  [3]=>\n  int(1)\n  [4]=>\n\
    \  NULL\n  [5]=>\n  int(2)\n  [6]=>\n  NULL\n}\n</pre><pre> sort_array(array())\n\
    array(0) {\n}\n</pre><pre> sort_array(array(5))\narray(1) {\n  [0]=>\n  NULL\n\
    }\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps5o18hyi.php:61\n\
    Stack trace:\n#0 /tmp/tmps5o18hyi.php(69): test()\n#1 {main}\n  thrown in /tmp/tmps5o18hyi.php\
    \ on line 61\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \t$sum = $array[0] + $array[count($array) - 1];\n\tif($sum % 2 == 0) {\n\t\tarsort($array);\n\
    \t} else {\n\t\tasort($array);\n\t}\n\treturn $array;\n}\n\necho \"\\n\\n\";\n\
    echo \"sort_array(array(2, 4, 3, 0, 1, 5, 6)):\\n\";\nvar_dump(sort_array(array(2,\
    \ 4, 3, 0, 1, 5, 6)));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\nsort_array(array(2, 4, 3, 0, 1, 5, 6)):\narray(7) {\n  [6]=>\n  int(6)\n\
    \  [5]=>\n  int(5)\n  [1]=>\n  int(4)\n  [2]=>\n  int(3)\n  [0]=>\n  int(2)\n\
    \  [4]=>\n  int(1)\n  [3]=>\n  int(0)\n}\n\nWarning: Undefined array key 0 in\
    \ /tmp/tmpn_8qdadb.php on line 17\n\nWarning: Undefined array key -1 in /tmp/tmpn_8qdadb.php\
    \ on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_8qdadb.php:36\n\
    Stack trace:\n#0 /tmp/tmpn_8qdadb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpn_8qdadb.php\
    \ on line 36\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  if (count($array) <= 0) {\n    return $array;\n  }\n  $count = count($array);\n\
    \  for ($i = 0; $i < $count; $i++) {\n    for ($j = $i; $j < $count; $j++) {\n\
    \      if (($array[$i] + $array[$count - 1 - $i]) % 2 == 0) {\n        if ($array[$j]\
    \ > $array[$i]) {\n          $temp = $array[$i];\n          $array[$i] = $array[$j];\n\
    \          $array[$j] = $temp;\n        }\n      } else {\n        if ($array[$j]\
    \ < $array[$i]) {\n          $temp = $array[$i];\n          $array[$i] = $array[$j];\n\
    \          $array[$j] = $temp;\n        }\n      }\n    }\n  }\n  return $array;\n\
    }\n\n$array = array(2, 4, 3, 0, 1, 5, 6);\nprint_r(sort_array($array));\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 1\n    [2] => 0\n    [3] => 6\n    [4]\
    \ => 3\n    [5] => 2\n    [6] => 4\n)\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpk7p5udgr.php:50\nStack trace:\n#0 /tmp/tmpk7p5udgr.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpk7p5udgr.php on line 50\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $length = count($array);\n    $key = $array[0] + $array[$length - 1];\n \
    \   if ($key % 2 == 0) {\n        $odd = 1;\n    } else {\n        $odd = 0;\n\
    \    }\n    if ($odd) {\n        return $array;\n    } else {\n        rsort($array);\n\
    \        return $array;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpc6nqhx6e.php on line 18\n\n\
    Warning: Undefined array key -1 in /tmp/tmpc6nqhx6e.php on line 18\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpc6nqhx6e.php:39\nStack trace:\n\
    #0 /tmp/tmpc6nqhx6e.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpc6nqhx6e.php\
    \ on line 39\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) {\n        return $array;\n    }\n\n    $first = array_shift($array);\n\
    \    $last = array_pop($array);\n    $sum = $first + $last;\n\n    usort($array,\
    \ function($a, $b) use ($sum) {\n        if (($sum % 2) === 0) {\n           \
    \ return ($a < $b) ? 1 : -1;\n        }\n        return ($a < $b) ? -1 : 1;\n\
    \    });\n\n    array_unshift($array, $first);\n    array_push($array, $last);\n\
    \n    return $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyczm_mn2.php:43\n\
    Stack trace:\n#0 /tmp/tmpyczm_mn2.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpyczm_mn2.php\
    \ on line 43\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    if (empty($array)) {\n        return $array;\n    }\n\n    $isOdd = ($array[0]\
    \ + $array[count($array) - 1]) % 2 == 1;\n    $compare = $isOdd ? '<' : '>';\n\
    \n    for ($i = 0; $i < count($array); $i++) {\n        for ($j = $i + 1; $j <\
    \ count($array); $j++) {\n            if ($array[$i] $compare $array[$j]) {\n\
    \                $temp = $array[$i];\n                $array[$i] = $array[$j];\n\
    \                $array[$j] = $temp;\n            }\n        }\n    }\n\n    return\
    \ $array;\n}\n\nassert(is_array(sort_array(array())));\nassert(is_array(sort_array(array(5))));\n\
    assert(is_array(sort_array(array(2, 4, 3, 0, 1, 5))));\nassert(is_array(sort_array(array(2,\
    \ 4, 3, 0, 1, 5, 6))));\nassert_options(ASSERT_BAIL, 1);\nassert(array() == sort_array(array()));\n\
    assert(array(5) == sort_array(array(5)));\nassert(array(0, 1, 2, 3, 4, 5) == sort_array(array(2,\
    \ 4, 3, 0, 1, 5)));\nassert(array(6, 5, 4, 3, 2, 1, 0) == sort_array(array(2,\
    \ 4, 3, 0, 1, 5, 6)));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected variable "$compare" in /tmp/tmpp2y4xrmb.php
    on line 26

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n\
    \        rsort($array);\n    } else {\n        sort($array);\n    }\n    return\
    \ $array;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmp0m311z9_.php on line 17


    Warning: Undefined array key -1 in /tmp/tmp0m311z9_.php on line 17

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \    $first = array_shift($array);\n    $last = array_pop($array);\n    $new =\
    \ array_merge(array($first), $array, array($last));\n    $sum = $first + $last;\n\
    \    if ($sum % 2 == 0) {\n        rsort($new);\n    } else {\n        sort($new);\n\
    \    }\n    return $new;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mcr7jee.php:33\n\
    Stack trace:\n#0 /tmp/tmp1mcr7jee.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1mcr7jee.php\
    \ on line 33\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  // Your code here\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== array(5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3,\
    \ 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps9x5hbjm.php:24\n\
    Stack trace:\n#0 /tmp/tmps9x5hbjm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmps9x5hbjm.php\
    \ on line 24\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \tif (empty($array)) return array();\n\t$len = count($array);\n\tif ($len < 2)\
    \ return $array;\n\tif (($array[0] + $array[$len - 1]) % 2 == 0) {\n\t\trsort($array);\n\
    \t} else {\n\t\tsort($array);\n\t}\n\treturn $array;\n}\n\n$array = array(2, 4,\
    \ 3, 0, 1, 5);\necho \"<pre>\";\nprint_r(sort_array($array));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1,\
    \ 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11,\
    \ 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 3\n\
    \    [4] => 4\n    [5] => 5\n)\n</pre>"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Given an array of non-negative integers, return a cophp of the\
    \ given array after sorting,\n// you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n// or sort it in descending\
    \ order if the sum( first index value, last index value) is even.\n// Note:\n\
    // * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n\
    // array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
    \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
    \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n\
    \  $result = $array;\n  $count = count($array);\n  for ($i = 0; $i < $count; $i++)\
    \ {\n    for ($j = $i + 1; $j < $count; $j++) {\n      if (($array[$i] + $array[$count\
    \ - 1 - $i]) % 2 == 1) {\n        if ($array[$i] > $array[$j]) {\n          $temp\
    \ = $array[$i];\n          $array[$i] = $array[$j];\n          $array[$j] = $temp;\n\
    \        }\n      } else {\n        if ($array[$i] < $array[$j]) {\n         \
    \ $temp = $array[$i];\n          $array[$i] = $array[$j];\n          $array[$j]\
    \ = $temp;\n        }\n      }\n    }\n  }\n  return $array;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1,\
    \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1))\
    \ !== array(1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(21, 14, 23, 11)) !== array(23, 21,\
    \ 14, 11)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfcpcxob.php:45\n\
    Stack trace:\n#0 /tmp/tmpqfcpcxob.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpqfcpcxob.php\
    \ on line 45\n"
  timestamp: 1660028884

language: php
name: HumanEval_9_rolling_max
results:
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $result = array();\n  $running_max = null;\n  foreach ($numbers as $number)\
    \ {\n    if ($running_max === null || $number > $running_max) {\n      $running_max\
    \ = $number;\n    }\n    $result[] = $running_max;\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpx8zxw6yt.php on line 8

    '
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\tif (!is_array($numbers)) {\n\t\treturn false;\n\t}\n\t$max_elements = array();\n\
    \tforeach ($numbers as $i => $number) {\n\t\tif ($i == 0) {\n\t\t\t$max_elements[]\
    \ = $number;\n\t\t} else {\n\t\t\t$max_elements[] = max($number, $max_elements[$i\
    \ - 1]);\n\t\t}\n\t}\n\treturn $max_elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maxes = [];\n    $max = null;\n    foreach ($numbers as $num) {\n  \
    \      if ($max === null || $num > $max) {\n            $max = $num;\n       \
    \ }\n        $maxes[] = $max;\n    }\n    return $maxes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$result = array();\n\t$current_max = $numbers[0];\n\t$result[] = $current_max;\n\
    \tforeach ($numbers as $index => $value) {\n\t\tif ($index == 0) {\n\t\t\tcontinue;\n\
    \t\t}\n\t\tif ($value > $current_max) {\n\t\t\t$current_max = $value;\n\t\t}\n\
    \t\t$result[] = $current_max;\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpd516jjze.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpd516jjze.php:27\nStack\
    \ trace:\n#0 /tmp/tmpd516jjze.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpd516jjze.php\
    \ on line 27\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$result = [];\n\t$max = null;\n\tforeach ($numbers as $number) {\n\t\t\
    if ($max === null || $number > $max) {\n\t\t\t$max = $number;\n\t\t}\n\t\t$result[]\
    \ = $max;\n\t}\n\treturn $result;\n}\n\nprint_r(rolling_max([1, 2, 3, 2, 3, 4,\
    \ 2]));\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $count = count($numbers);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $result[] = max(array_slice($numbers, 0, $i + 1));\n    }\n\
    \    return $result;\n}\n\nvar_dump(rolling_max([1, 2, 3, 2, 3, 4, 2]));\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(7) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n \
    \ [3]=>\n  int(3)\n  [4]=>\n  int(3)\n  [5]=>\n  int(4)\n  [6]=>\n  int(4)\n}\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = -1;\n  $maxes = array();\n  foreach ($numbers as $number) {\n  \
    \  if ($number > $max) {\n      $max = $number;\n    }\n    $maxes[] = $max;\n\
    \  }\n  return $maxes;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    if (count($numbers) == 0) {\n        return array();\n    }\n    $max_so_far\
    \ = $numbers[0];\n    $result = array($max_so_far);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max_so_far = max($max_so_far, $numbers[$i]);\n        $result[]\
    \ = $max_so_far;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = NULL;\n  $maxes = array();\n  foreach ($numbers as $number) {\n\
    \    if (empty($max) || $number > $max) {\n      $max = $number;\n    }\n    $maxes[]\
    \ = $max;\n  }\n  return $maxes;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $ret = array();\n    $max = $numbers[0];\n    $ret[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $ret[] = $max;\n    }\n\
    \    return $ret;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp3qugphhq.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp3qugphhq.php:24\nStack\
    \ trace:\n#0 /tmp/tmp3qugphhq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp3qugphhq.php\
    \ on line 24\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $roll_max = array();\n  $max = null;\n  for ($i = 0; $i < count($numbers);\
    \ $i++) {\n    $max = max($max, $numbers[$i]);\n    $roll_max[] = $max;\n  }\n\
    \  return $roll_max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    for ($i = 0; $i < count($numbers); $i++) {\n   \
    \     if ($i === 0) {\n            $max[$i] = $numbers[$i];\n        } else if\
    \ ($numbers[$i] > $max[$i - 1]) {\n            $max[$i] = $numbers[$i];\n    \
    \    } else {\n            $max[$i] = $max[$i - 1];\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $rolling_max = [];\n    $max = $numbers[0];\n    foreach ($numbers as\
    \ $value) {\n        if ($value > $max) {\n            $max = $value;\n      \
    \  }\n        $rolling_max[] = $max;\n    }\n    return $rolling_max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpf76ee902.php on line 8

    '
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$max = null;\n\t$res = array();\n\tforeach ($numbers as $n) {\n\t\tif ($max\
    \ === null || $n > $max) {\n\t\t\t$max = $n;\n\t\t}\n\t\t$res[] = $max;\n\t}\n\
    \treturn $res;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    // We'll keep track of current maximum, and the result array\n    $max\
    \ = $numbers[0];\n    $result = array($max);\n\n    // Loop through the numbers,\
    \ starting from the second\n    for ($i = 1; $i < count($numbers); $i++) {\n \
    \       // If current number is greater than current maximum, update both.\n \
    \       if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n       \
    \ }\n        // Store the current maximum as the result\n        $result[] = $max;\n\
    \    }\n\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp6dw32jrc.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp6dw32jrc.php:29\nStack\
    \ trace:\n#0 /tmp/tmp6dw32jrc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6dw32jrc.php\
    \ on line 29\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $return = array();\n    $current_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $current_max) {\n            $current_max\
    \ = $number;\n        }\n        $return[] = $current_max;\n    }\n    return\
    \ $return;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpajmu_tue.php on line 8

    '
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $output = array();\n  $currentMax = null;\n  foreach ($numbers as $i =>\
    \ $number) {\n    if (is_null($currentMax) || $number > $currentMax) {\n     \
    \ $currentMax = $number;\n    }\n    $output[] = $currentMax;\n  }\n  return $output;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maxes = [];\n    $currentMax = $numbers[0];\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $current = $numbers[$i];\n        if ($current > $currentMax)\
    \ {\n            $currentMax = $current;\n        }\n        $maxes[] = $currentMax;\n\
    \    }\n    return $maxes;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmp47ypccgs.php on line 8

    '
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_number = $numbers[0];\n    $max_list = array($max_number);\n   \
    \ for ($i = 1; $i < count($numbers); $i++) {\n        $max_number = max($max_number,\
    \ $numbers[$i]);\n        $max_list[] = $max_number;\n    }\n    return $max_list;\n\
    }\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpppsfym6p.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpppsfym6p.php:20\nStack\
    \ trace:\n#0 /tmp/tmpppsfym6p.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpppsfym6p.php\
    \ on line 20\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$maxes = array();\n\t$current_max = null;\n\tforeach ($numbers as $number)\
    \ {\n\t\tif ($current_max === null || $number > $current_max) {\n\t\t\t$current_max\
    \ = $number;\n\t\t}\n\t\t$maxes[] = $current_max;\n\t}\n\treturn $maxes;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    if (!is_array($numbers)) {\n        throw new InvalidArgumentException('Invalid\
    \ argument type');\n    }\n\n    $size = count($numbers);\n    if ($size === 0)\
    \ {\n        return array();\n    }\n\n    $result = array();\n    $result[0]\
    \ = $numbers[0];\n    for ($i = 1; $i < $size; $i++) {\n        $result[$i] =\
    \ max($result[$i - 1], $numbers[$i]);\n    }\n\n    return $result;\n}\n\necho\
    \ \"Test #1: <pre>\";\nprint_r(rolling_max(array(1, 2, 3, 2, 3, 4, 2)));\necho\
    \ \"</pre>\";\n\necho \"Test #2: <pre>\";\nprint_r(rolling_max(array(1, 2, 3,\
    \ 2, 3, 4, 2, 4, 5, 5, 8, 9, 8, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5,\
    \ 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9,\
    \ 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5,\
    \ 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9,\
    \ 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5,\
    \ 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5, 5, 9, 8, 5,\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp04xggv_c.php on line 31

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maxes = [];\n    $max = $numbers[0];\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $maxes[] = $max;\n\
    \    }\n    return $maxes;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpe5_h31xp.php on line 8

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $result = [];\n  $max = $numbers[0];\n  foreach ($numbers as $number) {\n\
    \    $max = max($max, $number);\n    $result[] = $max;\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpi91u20m0.php on line 8

    '
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = current($numbers);\n    $rolling_max = array($max);\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        $rolling_max[] = $max;\n    }\n    return $rolling_max;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4aapdiy.php:23\n\
    Stack trace:\n#0 /tmp/tmpl4aapdiy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpl4aapdiy.php\
    \ on line 23\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    if (count($numbers) === 0) {\n        return array();\n    }\n\n    $currentMax\
    \ = $numbers[0];\n    $result = array();\n    $result[] = $currentMax;\n\n   \
    \ for ($i = 1; $i < count($numbers); $i++) {\n        $currentMax = max($currentMax,\
    \ $numbers[$i]);\n        $result[] = $currentMax;\n    }\n\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = array();\n  $result[] = $max;\n  foreach\
    \ (array_slice($numbers, 1) as $number) {\n    if ($number > $max) {\n      $max\
    \ = $number;\n    }\n    $result[] = $max;\n  }\n  return $result;\n}\n\n$maxes\
    \ = rolling_max(array(1, 2, 3, 2, 3, 4, 2));\nprint_r($maxes);\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n\nWarning: Undefined array key 0 in /tmp/tmpl9n99yhw.php\
    \ on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl9n99yhw.php:26\n\
    Stack trace:\n#0 /tmp/tmpl9n99yhw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpl9n99yhw.php\
    \ on line 26\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $maximums = array();\n  $max = $numbers[0];\n  $maximums[] = $max;\n  for\
    \ ($i = 1; $i < count($numbers); $i++) {\n    if ($numbers[$i] > $max) {\n   \
    \   $max = $numbers[$i];\n    }\n    $maximums[] = $max;\n  }\n  return $maximums;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp2kzndr_l.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp2kzndr_l.php:24\nStack\
    \ trace:\n#0 /tmp/tmp2kzndr_l.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2kzndr_l.php\
    \ on line 24\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $output = array();\n    $lastMax = -1;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $lastMax = $numbers[$i] > $lastMax ? $numbers[$i] : $lastMax;\n\
    \        $output[] = $lastMax;\n    }\n    return $output;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n      \
    \  }\n        $numbers[$i] = $max;\n    }\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpliqh10p3.php on line 7

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  if (count($numbers) == 0) {\n    return array();\n  }\n  $max = $numbers[0];\n\
    \  $arr = array($max);\n  for ($i = 1; $i < count($numbers); $i++) {\n    $max\
    \ = max($max, $numbers[$i]);\n    $arr[] = $max;\n  }\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maxes = [];\n    $max = $numbers[0];\n    $maxes[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $maxes[] = $max;\n    }\n\
    \    return $maxes;\n}\n\n$numbers = [1, 2, 3, 2, 3, 4, 2];\nvar_dump(rolling_max($numbers));\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(7) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n \
    \ [3]=>\n  int(3)\n  [4]=>\n  int(3)\n  [5]=>\n  int(4)\n  [6]=>\n  int(4)\n}\n\
    \nWarning: Undefined array key 0 in /tmp/tmpb8ho3njq.php on line 8\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpb8ho3njq.php:26\nStack trace:\n\
    #0 /tmp/tmpb8ho3njq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpb8ho3njq.php\
    \ on line 26\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $best = null;\n    foreach ($numbers as $value)\
    \ {\n        if ($best === null || $value > $best) {\n            $best = $value;\n\
    \        }\n        $result[] = $best;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $queue = new SplQueue();\n  $result = array();\n  foreach ($numbers as\
    \ $n) {\n    while (!$queue->isEmpty() && $queue->bottom() < $n) {\n      $queue->dequeue();\n\
    \    }\n    $queue->enqueue($n);\n    $result[] = $queue->bottom();\n  }\n  return\
    \ $result;\n}\n\n$tests = array(\n  array(1, 2, 3, 2, 3, 4, 2),\n  array(1, 2,\
    \ 3, 4, 5, 6, 7),\n  array(7, 6, 5, 4, 3, 2, 1),\n  array(1, 1, 1, 1, 1, 1, 1),\n\
    \  array(1, 2, 1, 2, 1, 2, 1),\n  array(1, 2, 3, 3, 2, 1, 0),\n  array(1, 2, 3,\
    \ 2, 3, 2, 1),\n  array(1, 1, 1, 2, 2, 2, 1),\n  array(1, 2, 3, 4, 3, 2, 1),\n\
    \  array(1, 2, 3, 4, 5, 4, 3),\n  array(1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1),\n\
    \  array(5, 5, 6, 3, 5, 5, 6, 4, 5, 5, 6, 4, 5, 5, 6, 3, 5, 5, 6, 4, 5, 5, 6,\
    \ 4, 5, 5, 6, 3, 5, 5, 6, 4, 5, 5, 6, 4, 5, 5, 6, 3, 5, 5, 6, 4, 5, 5, 6, 4, 5,\
    \ 5, 6, 3, 5, 5, 6, 4, 5, 5, 6, 4, 5, 5, 6, 3, 5, 5, 6, 4, 5, 5, 6, 4, 5, 5, 6,\
    \ 3, 5, 5, 6, 4, 5, 5, 6, 4, 5, 5, 6, 3, 5, 5, 6, 4, 5, 5, 6, 4, 5, 5, 6, 3\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp9de2zsun.php
    on line 32

    '
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $m = $numbers[0];\n    $result[] = $m;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        $m = max($m, $numbers[$i]);\n\
    \        $result[] = $m;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp6b18kxvy.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp6b18kxvy.php:22\nStack\
    \ trace:\n#0 /tmp/tmp6b18kxvy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6b18kxvy.php\
    \ on line 22\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $rolling_max = [];\n  $max = $numbers[0];\n  foreach ($numbers as $number)\
    \ {\n    if ($number > $max) {\n      $max = $number;\n    }\n    $rolling_max[]\
    \ = $max;\n  }\n  return $rolling_max;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpgtnsmyy1.php on line 8

    '
  timestamp: 1659979113
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $rolling_max = array();\n    $len = count($numbers);\n    for ($i = 0;\
    \ $i < $len; $i++) {\n        $max = $numbers[$i];\n        for ($j = $i - 1;\
    \ $j >= 0; $j--) {\n            if ($numbers[$j] > $max) {\n                $max\
    \ = $numbers[$j];\n            }\n        }\n        $rolling_max[] = $max;\n\
    \    }\n    return $rolling_max;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $currentMax = $numbers[0];\n  $result = array($currentMax);\n  for ($i\
    \ = 1; $i < count($numbers); $i++) {\n    $currentMax = max($currentMax, $numbers[$i]);\n\
    \    $result[] = $currentMax;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp_7k7g90r.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp_7k7g90r.php:21\nStack\
    \ trace:\n#0 /tmp/tmp_7k7g90r.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_7k7g90r.php\
    \ on line 21\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    if (count($numbers) == 0) {\n        return array();\n    }\n\n    $result\
    \ = array($numbers[0]);\n    for ($i = 1; $i < count($numbers); $i++) {\n    \
    \    $result[] = max($result[$i - 1], $numbers[$i]);\n    }\n\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    if (empty($numbers)) {\n        return [];\n    }\n    $rolling_max =\
    \ [max($numbers[0], $numbers[1])];\n    for ($i = 2; $i < count($numbers); $i++)\
    \ {\n        $rolling_max[] = max($rolling_max[$i - 1], $numbers[$i]);\n    }\n\
    \    return $rolling_max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpix41ype1.php on line 12\n\n\
    Warning: Undefined array key 2 in /tmp/tmpix41ype1.php on line 12\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpix41ype1.php:23\nStack trace:\n\
    #0 /tmp/tmpix41ype1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpix41ype1.php\
    \ on line 23\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    foreach ($numbers as $value) {\n        $max[] =\
    \ isset($max[sizeof($max) - 1]) ? max($max[sizeof($max) - 1], $value) : $value;\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $size = count($numbers);\n    $max_till_now = array_fill(0, $size, 0);\n\
    \    $max_till_now[0] = $numbers[0];\n    for ($i = 1; $i < $size; $i++) {\n \
    \       $max_till_now[$i] = max($max_till_now[$i - 1], $numbers[$i]);\n    }\n\
    \    return $max_till_now;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpoja2grsz.php on line 9\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpoja2grsz.php:21\nStack\
    \ trace:\n#0 /tmp/tmpoja2grsz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpoja2grsz.php\
    \ on line 21\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max_so_far = $numbers[0];\n  $results = array();\n  foreach ($numbers\
    \ as $number) {\n    $max_so_far = max($max_so_far, $number);\n    $results[]\
    \ = $max_so_far;\n  }\n  return $results;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpeorvtcof.php on line 7

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $result = array();\n    foreach ($numbers as $n) {\n\
    \        if ($max === null || $n > $max) {\n            $max = $n;\n        }\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    for ($i = 0; $i < count($numbers); $i++) {\n\
    \        $result[] = $numbers[$i];\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if ($numbers[$j] > $result[$i]) {\n                $result[$i]\
    \ = $numbers[$j];\n            }\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4stamfb.php:25\n\
    Stack trace:\n#0 /tmp/tmpy4stamfb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpy4stamfb.php\
    \ on line 25\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maximums = array();\n    $current_max = $numbers[0];\n    $maximums[]\
    \ = $current_max;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] > $current_max) {\n            $current_max = $numbers[$i];\n\
    \        }\n        $maximums[] = $current_max;\n    }\n    return $maximums;\n\
    }\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp90rgpuz6.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp90rgpuz6.php:23\nStack\
    \ trace:\n#0 /tmp/tmp90rgpuz6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp90rgpuz6.php\
    \ on line 23\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = 0;\n    foreach ($numbers as $number) {\n        if ($number >\
    \ $max) {\n            $max = $number;\n        }\n        $max_numbers[] = $max;\n\
    \    }\n    return $max_numbers;\n}\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $max_numbers in /tmp/tmp8z4oafxu.php on line\
    \ 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8z4oafxu.php:21\n\
    Stack trace:\n#0 /tmp/tmp8z4oafxu.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8z4oafxu.php\
    \ on line 21\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_so_far = $numbers[0];\n    $result = array($max_so_far);\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        $max_so_far = max($max_so_far,\
    \ $numbers[$i]);\n        $result[] = $max_so_far;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp1z67yzb3.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp1z67yzb3.php:21\nStack\
    \ trace:\n#0 /tmp/tmp1z67yzb3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1z67yzb3.php\
    \ on line 21\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $maxes = [];\n  $max = null;\n  foreach ($numbers as $number) {\n    if\
    \ ($max === null || $number > $max) {\n      $max = $number;\n    }\n    $maxes[]\
    \ = $max;\n  }\n  return $maxes;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $results = array();\n    $max = PHP_INT_MIN;\n    foreach ($numbers as\
    \ $number) {\n        $max = max($max, $number);\n        $results[] = $max;\n\
    \    }\n    return $results;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $maximum = null;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $maximum) {\n            $maximum = $number;\n\
    \        }\n        $result[$index] = $maximum;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maxes = array();\n    $max_so_far = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_so_far) {\n            $max_so_far\
    \ = $number;\n        }\n        $maxes[] = $max_so_far;\n    }\n    return $maxes;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpwl56v_hi.php on line 8

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$results = array();\n\t$current_max = $numbers[0];\n\tfor ($i = 0; $i <\
    \ count($numbers); $i++) {\n\t\t$current_max = max($current_max, $numbers[$i]);\n\
    \t\t$results[] = $current_max;\n\t}\n\treturn $results;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpn8lndbfv.php on line 8

    '
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = array_shift($numbers);\n  $result = array($max);\n  foreach ($numbers\
    \ as $item) {\n    $max = max($max, $item);\n    $result[] = $max;\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0os2vkpv.php:21\n\
    Stack trace:\n#0 /tmp/tmp0os2vkpv.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp0os2vkpv.php\
    \ on line 21\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$max_elements = [];\n\t$count = count($numbers);\n\tif ($count > 0) {\n\
    \t\t$max_elements[] = $numbers[0];\n\t\tfor ($i = 1; $i < $count; $i++) {\n\t\t\
    \t$max_elements[] = max($max_elements[$i - 1], $numbers[$i]);\n\t\t}\n\t}\n\t\
    return $max_elements;\n}\n\n$numbers = [1, 2, 3, 2, 3, 4, 2];\nvar_dump(rolling_max($numbers));\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(7) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n \
    \ [3]=>\n  int(3)\n  [4]=>\n  int(3)\n  [5]=>\n  int(4)\n  [6]=>\n  int(4)\n}\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $maxes = array();\n  $current_max = -INF;\n  foreach ($numbers as $number)\
    \ {\n    $current_max = max($current_max, $number);\n    $maxes[] = $current_max;\n\
    \  }\n  return $maxes;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maxes = [];\n    $max = 0;\n    foreach ($numbers as $number) {\n  \
    \      if ($number > $max) {\n            $max = $number;\n        }\n       \
    \ $maxes[] = $max;\n    }\n    return $maxes;\n}\n\n$array = array(1, 2, 3, 2,\
    \ 3, 4, 2);\n$result = rolling_max($array);\n\nforeach ($result as $item) {\n\
    \    echo $item . '<br>';\n}\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>2<br>3<br>3<br>3<br>4<br>4<br>
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = 0;\n    foreach ($numbers as $number)\
    \ {\n        $max = max($max, $number);\n        $result[] = $max;\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $result = [];\n  $max = null;\n  foreach ($numbers as $num) {\n    if ($max\
    \ === null || $num > $max) {\n      $max = $num;\n    }\n    $result[] = $max;\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = 0;\n    foreach ($numbers as $number)\
    \ {\n        $max = max($max, $number);\n        $result[] = $max;\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $len = count($numbers);\n    $result = array();\n    for ($i = 0; $i\
    \ < $len; $i++) {\n        $max = $numbers[$i];\n        for ($j = $i; $j < $len;\
    \ $j++) {\n            if ($numbers[$j] > $max) {\n                $max = $numbers[$j];\n\
    \            }\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n$result = rolling_max(array(1, 2, 3, 2, 3, 4, 2));\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnpyqhv6d.php:29\n\
    Stack trace:\n#0 /tmp/tmpnpyqhv6d.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnpyqhv6d.php\
    \ on line 29\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_found = array_shift($numbers);\n    $max_found_till_now = array($max_found);\n\
    \    foreach ($numbers as $number) {\n        $max_found = max($max_found, $number);\n\
    \        $max_found_till_now[] = $max_found;\n    }\n    return $max_found_till_now;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfejpcv0n.php:21\n\
    Stack trace:\n#0 /tmp/tmpfejpcv0n.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfejpcv0n.php\
    \ on line 21\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $rolling_max = array();\n    foreach ($numbers as $number) {\n      \
    \  $rolling_max[] = max($rolling_max ?: array(0), $number);\n    }\n    return\
    \ $rolling_max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdm2ttzin.php:20\n\
    Stack trace:\n#0 /tmp/tmpdm2ttzin.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdm2ttzin.php\
    \ on line 20\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = null;\n  $result = array();\n  foreach ($numbers as $n) {\n    if\
    \ ($max === null || $n > $max) {\n      $max = $n;\n    }\n    $result[] = $max;\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = 0;\n    $numbers = array_map(function($number) use (&$max) {\n\
    \        $max = max($max, $number);\n        return $max;\n    }, $numbers);\n\
    \    return $numbers;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$result = array();\n\t$max = null;\n\tforeach ($numbers as $i => $number)\
    \ {\n\t\tif ($max === null || $number > $max) {\n\t\t\t$max = $number;\n\t\t}\n\
    \t\t$result[$i] = $max;\n\t}\n\treturn $result;\n}\n\necho array_to_str(rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2)));\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function array_to_str()\
    \ in /tmp/tmpt4egh169.php:18\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpt4egh169.php\
    \ on line 18\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  for ($i = 1; $i < count($numbers); $i++) {\n   \
    \ if ($numbers[$i] > $max) {\n      $max = $numbers[$i];\n    }\n    $numbers[$i]\
    \ = $max;\n  }\n  return $numbers;\n}\n\nprint_r(rolling_max(array(1, 2, 3, 2,\
    \ 3, 4, 2)));\nprint_r(rolling_max(array(100, -100, -50, -200, -100, -150, -25)));\n\
    print_r(rolling_max(array(1, 2, 3, 2, 3, 4, 2, 1, 2, 0, 100, 2, 3, 2, 1, 2, 0,\
    \ 1)));\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\nArray\n(\n    [0] => 100\n    [1] => 100\n\
    \    [2] => 100\n    [3] => 100\n    [4] => 100\n    [5] => 100\n    [6] => 100\n\
    )\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4] =>\
    \ 3\n    [5] => 4\n    [6] => 4\n    [7] => 4\n    [8] => 4\n    [9] => 4\n  \
    \  [10] => 100\n    [11] => 100\n    [12] => 100\n    [13] => 100\n    [14] =>\
    \ 100\n    [15] => 100\n    [16] => 100\n    [17] => 100\n)\n\nWarning: Undefined\
    \ array key 0 in /tmp/tmpjq80d81m.php on line 7\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $retval = array();\n  foreach ($numbers as $number) {\n    if (empty($retval))\
    \ {\n      $retval[] = $number;\n    } else {\n      $retval[] = max($retval[count($retval)\
    \ - 1], $number);\n    }\n  }\n  return $retval;\n}\n\nclass RollingMaximumTest\
    \ extends PHPUnit_Framework_TestCase {\n  public function testRollingMaximumTest()\
    \ {\n    $expected = array(1, 2, 3, 3, 3, 4, 4);\n    $this->assertEquals($expected,\
    \ rolling_max(array(1, 2, 3, 2, 3, 4, 2)));\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"PHPUnit_Framework_TestCase\" not\
    \ found in /tmp/tmpfhzxctw5.php:18\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpfhzxctw5.php\
    \ on line 18\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = null;\n  $running = array();\n  foreach ($numbers as $v) {\n   \
    \ if ($max === null || $v > $max) {\n      $max = $v;\n    }\n    $running[] =\
    \ $max;\n  }\n  return $running;\n}\n\nprint_r(rolling_max(array(1, 2, 3, 2, 3,\
    \ 4, 2)));\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = array($max);\n  for ($i = 1; $i < count($numbers);\
    \ $i++) {\n    $number = $numbers[$i];\n    if ($number > $max) {\n      $max\
    \ = $number;\n    }\n    $result[] = $max;\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpvt6tw8u7.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpvt6tw8u7.php:24\nStack\
    \ trace:\n#0 /tmp/tmpvt6tw8u7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvt6tw8u7.php\
    \ on line 24\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    if (!$numbers) {\n        return [];\n    }\n    $current_max = $numbers[0];\n\
    \    $maxes = [$current_max];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $number = $numbers[$i];\n        if ($number > $current_max) {\n    \
    \        $current_max = $number;\n        }\n        $maxes[] = $current_max;\n\
    \    }\n    return $maxes;\n}\necho '<pre>';\nprint_r(rolling_max([1, 2, 3, 2,\
    \ 3, 4, 2]));\necho '</pre>';\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n\
    \    [4] => 3\n    [5] => 4\n    [6] => 4\n)\n</pre>"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n      \
    \  }\n        $numbers[$i] = $max;\n    }\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpliqh10p3.php on line 7

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$result = array();\n\tfor ($i = 0; $i < count($numbers); $i++) {\n\t\t\
    $sub = array_slice($numbers, 0, $i + 1);\n\t\t$result[] = max($sub);\n\t}\n\t\
    return $result;\n}\n\nassert(\n\trolling_max(array(1, 2, 3, 2, 3, 4, 2)) ==\n\t\
    array(1, 2, 3, 3, 3, 4, 4)\n);\nassert(\n\trolling_max(array(1, 4, 2, 3, 4, 3,\
    \ 1)) ==\n\tarray(1, 4, 4, 4, 4, 4, 4)\n);\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $current_max = -INF;\n    foreach ($numbers as\
    \ $number) {\n        $current_max = max($current_max, $number);\n        $result[]\
    \ = $current_max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    if (count($numbers) < 1) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    $current_max = $numbers[0];\n    $result[] = $current_max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $current_max)\
    \ {\n            $current_max = $numbers[$i];\n        }\n        $result[] =\
    \ $current_max;\n    }\n    return $result;\n}\n\n$numbers = array(1, 2, 3, 2,\
    \ 3, 4, 2);\n$result = rolling_max($numbers);\nprint_r($result);\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$maximum = array();\n\t$max = 0;\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\tif ($numbers[$i] > $max) {\n\t\t\t$max = $numbers[$i];\n\t\t}\n\
    \t\t$maximum[] = $max;\n\t}\n\treturn $maximum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $rolling_max = array();\n    foreach ($numbers as $index => $value) {\n\
    \        if ($index === 0) {\n            $rolling_max[$index] = $value;\n   \
    \     } else {\n            $rolling_max[$index] = max($rolling_max[$index - 1],\
    \ $value);\n        }\n    }\n    return $rolling_max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $results = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $results[] = $max;\n    }\n    return $results;\n}\n\nprint_r(rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2)));\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $last = false;\n    foreach ($numbers as $number) {\n\
    \        if ($last == false || $number > $last) {\n            $last = $number;\n\
    \        }\n        $max[] = $last;\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $res = array($max);\n  for ($i = 1; $i < count($numbers);\
    \ $i++) {\n    $num = $numbers[$i];\n    if ($num > $max) {\n      $max = $num;\n\
    \    }\n    $res[] = $max;\n  }\n  return $res;\n}\necho '<pre>';\nvar_dump(rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2)));\necho '</pre>';\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>array(7) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n\
    \  [3]=>\n  int(3)\n  [4]=>\n  int(3)\n  [5]=>\n  int(4)\n  [6]=>\n  int(4)\n\
    }\n</pre>\nWarning: Undefined array key 0 in /tmp/tmpyqlriu99.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyqlriu99.php:26\nStack\
    \ trace:\n#0 /tmp/tmpyqlriu99.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpyqlriu99.php\
    \ on line 26\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_number = $numbers[0];\n    $max_numbers = array();\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max_number) {\n            $max_number\
    \ = $number;\n        }\n        $max_numbers[] = $max_number;\n    }\n    return\
    \ $max_numbers;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmplertyacs.php on line 7

    '
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[] = $max;\n        if ($numbers[$i] > $max) {\n   \
    \         $max = $numbers[$i];\n        }\n    }\n    return $result;\n}\nprint_r(rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2]));\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 3\n    [6] => 4\n)\n\nWarning: Undefined array key 0 in /tmp/tmpho6l5ewi.php\
    \ on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpho6l5ewi.php:24\n\
    Stack trace:\n#0 /tmp/tmpho6l5ewi.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpho6l5ewi.php\
    \ on line 24\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = null;\n    foreach ($numbers as $number)\
    \ {\n        if (is_null($max) || $number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    if (!is_array($numbers)) {\n        return array();\n    }\n    $max_sequence\
    \ = array();\n    $current_max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($current_max === null || $number > $current_max) {\n            $current_max\
    \ = $number;\n        }\n        $max_sequence[] = $current_max;\n    }\n    return\
    \ $max_sequence;\n}\n\n$tests = array(\n    array(1, 2, 3, 2, 3, 4, 2),\n    array(1,\
    \ 2, 1, 2, 1, 2, 1),\n    array(2, 2, 2, 2, 2, 2, 2),\n    array(1, 1, 1, 1, 1,\
    \ 1, 1),\n    array(2, 3, 4, 5, 6, 7, 8),\n    array(8, 7, 6, 5, 4, 3, 2),\n \
    \   array(1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,\
    \ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmplkm7ojrj.php
    on line 29

    '
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = -INF;\n  $result = [];\n  foreach ($numbers as $number) {\n    $max\
    \ = max($max, $number);\n    $result[] = $max;\n  }\n  return $result;\n}\n\n\
    $tests = [\n  [\n    'input' => [1, 2, 3, 2, 3, 4, 2],\n    'expected' => [1,\
    \ 2, 3, 3, 3, 4, 4],\n  ],\n  [\n    'input' => [],\n    'expected' => [],\n \
    \ ],\n  [\n    'input' => [1],\n    'expected' => [1],\n  ],\n  [\n    'input'\
    \ => [1, 2],\n    'expected' => [1, 2],\n  ],\n  [\n    'input' => [2, 1],\n \
    \   'expected' => [2, 2],\n  ],\n  [\n    'input' => [1, 1, 1, 1, 1, 1, 1],\n\
    \    'expected' => [1, 1, 1, 1, 1, 1, 1],\n  ],\n  [\n    'input' => [2, 1, 2,\
    \ 1, 2, 1, 2],\n    'expected' => [2, 2, 2, 2, 2, 2, 2],\n  ],\n  [\n    'input'\
    \ => [3, 2, 1, 3, 2, 1, 3],\n    'expected' => [3, 3, 3, 3, 3, 3, 3],\n  ],\n\
    \  [\n    'input' => [3, 2, 1, -3, -2, -1, -3],\n    'expected' => [3, 3, 3, 3,\
    \ 3, 3, 3],\n  ],\n  [\n    'input' => [-3, -2, -1, -3, -2, -1, -3],\n    'expected'\
    \ => [-3, -2, -1, -1, -1, -1, -1],\n  ],\n  [\n    'input' => [-3, -2, -1, 3,\
    \ 2, 1, 3],\n    'expected' => [-3, -2, -1,\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp_p7p8qmi.php on line 60

    '
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $values = array($max);\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        $max = max($max, $numbers[$i]);\n      \
    \  $values[] = $max;\n    }\n    return $values;\n}\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpiq6t8zw8.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpiq6t8zw8.php:20\nStack\
    \ trace:\n#0 /tmp/tmpiq6t8zw8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpiq6t8zw8.php\
    \ on line 20\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t// TODO\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m3fk1i5.php:15\n\
    Stack trace:\n#0 /tmp/tmp_m3fk1i5.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp_m3fk1i5.php\
    \ on line 15\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maxes = array();\n    $maxes[0] = $numbers[0];\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        $maxes[$i] = max($maxes[$i - 1], $numbers[$i]);\n\
    \    }\n    return $maxes;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpbcegn_0j.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpbcegn_0j.php:20\nStack\
    \ trace:\n#0 /tmp/tmpbcegn_0j.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbcegn_0j.php\
    \ on line 20\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_found = 0;\n    $max_array = array();\n    foreach ($numbers as\
    \ $number) {\n        if ($number > $max_found) {\n            $max_found = $number;\n\
    \        }\n        $max_array[] = $max_found;\n    }\n    return $max_array;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $result = array();\n  foreach ($numbers as $number) {\n    if (count($result)\
    \ == 0) {\n      $result[] = $number;\n    } else {\n      $result[] = max($result[count($result)\
    \ - 1], $number);\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $results = array();\n    $max     = null;\n    foreach ($numbers as $n)\
    \ {\n        if ($max === null || $n > $max) {\n            $max = $n;\n     \
    \   }\n        $results[] = $max;\n    }\n    return $results;\n}\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $rolling_maxes = array();\n    $local_max = $numbers[0];\n    foreach\
    \ ($numbers as $n) {\n        if ($n > $local_max) {\n            $local_max =\
    \ $n;\n        }\n        $rolling_maxes[] = $local_max;\n    }\n    return $rolling_maxes;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmp29wlihak.php on line 8

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $result = [];\n  $max = PHP_INT_MIN;\n  foreach ($numbers as $number) {\n\
    \    $max = max($max, $number);\n    $result[] = $max;\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $result = [];\n  $max = PHP_INT_MIN;\n  foreach ($numbers as $number) {\n\
    \    $max = max($max, $number);\n    $result[] = $max;\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = array();\n  $max[] = $numbers[0];\n  for ($i = 1; $i < count($numbers);\
    \ $i++) {\n    $max[] = max($max[$i - 1], $numbers[$i]);\n  }\n  return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp4r_3_xpc.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp4r_3_xpc.php:20\nStack\
    \ trace:\n#0 /tmp/tmp4r_3_xpc.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4r_3_xpc.php\
    \ on line 20\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$max = NULL;\n\t$result = array();\n\tforeach ($numbers as $number) {\n\
    \t\tif (is_null($max) || $number > $max) {\n\t\t\t$max = $number;\n\t\t}\n\t\t\
    $result[] = $max;\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $current_max = $numbers[0];\n  $next_max = function ($n) use (&$current_max)\
    \ {\n    if ($n > $current_max) {\n      $current_max = $n;\n    }\n    return\
    \ $current_max;\n  };\n  return array_map($next_max, $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpyyumilxv.php on line 7

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_values = [];\n    $max_so_far = null;\n    foreach ($numbers as\
    \ $number) {\n        if ($max_so_far === null || $number > $max_so_far) {\n \
    \           $max_so_far = $number;\n        }\n        $max_values[] = $max_so_far;\n\
    \    }\n    return $max_values;\n}\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $array = [];\n    $counter = 0;\n    $max = $numbers[0];\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n   \
    \         $max = $numbers[$i];\n        }\n        $array[$counter] = $max;\n\
    \        $counter++;\n    }\n    return $array;\n}\n\nprint_r(rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2]));\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n\nWarning: Undefined array key 0 in /tmp/tmp0watd_kk.php\
    \ on line 9\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$max_value = $numbers[0];\n\t$results = array();\n\tforeach ($numbers as\
    \ $number) {\n\t\tif ($number > $max_value) {\n\t\t\t$max_value = $number;\n\t\
    \t}\n\t\t$results[] = $max_value;\n\t}\n\treturn $results;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpn9ngi2uj.php on line 7

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $rolling_max = [];\n  $local_max = 0;\n  foreach ($numbers as $number)\
    \ {\n    $local_max = max($local_max, $number);\n    $rolling_max[] = $local_max;\n\
    \  }\n  return $rolling_max;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$maxes = [];\n\t$max = null;\n\tforeach ($numbers as $number) {\n\t\tif\
    \ ($max === null || $number > $max) {\n\t\t\t$max = $number;\n\t\t}\n\t\t$maxes[]\
    \ = $max;\n\t}\n\treturn $maxes;\n}\n\necho \"Running test cases:\\n\";\n$expected\
    \ = [1, 2, 3, 3, 3, 4, 4];\nassert(rolling_max([1, 2, 3, 2, 3, 4, 2]) === $expected);\n\
    echo \".\";\nassert(rolling_max([]) === []);\necho \".\";\nassert(rolling_max([1])\
    \ === [1]);\necho \".\";\nassert(rolling_max([10, 9, 8, 7, 6, 5, 4, 3, 2, 1])\
    \ === [10, 10, 10, 10, 10, 10, 10, 10, 10, 10]);\necho \".\";\nassert(rolling_max([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]) === [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\necho \"\
    .\";\n\necho \"\\n\";\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Running test cases:

    .....

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $rolling_max = [];\n  $maximum = 0;\n  foreach ($numbers as $number) {\n\
    \    $maximum = max($maximum, $number);\n    $rolling_max[] = $maximum;\n  }\n\
    \  return $rolling_max;\n}\nprint_r(rolling_max([1, 2, 3, 2, 3, 4, 2]));\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\tif (!count($numbers)) return $numbers;\n\t$rolling_max_numbers = array();\n\
    \t$max = $numbers[0];\n\tforeach ($numbers as $number) {\n\t\tif ($number > $max)\
    \ $max = $number;\n\t\t$rolling_max_numbers[] = $max;\n\t}\n\treturn $rolling_max_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $output = array();\n    foreach ($numbers as $i => $n) {\n        if\
    \ ($i > 0) {\n            $output[] = max($n, $output[$i - 1]);\n        } else\
    \ {\n            $output[] = $n;\n        }\n    }\n    return $output;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$max_so_far = 0;\n\t$roll_max = array();\n\tforeach ($numbers as $number)\
    \ {\n\t\tif ($number > $max_so_far) {\n\t\t\t$max_so_far = $number;\n\t\t}\n\t\
    \t$roll_max[] = $max_so_far;\n\t}\n\treturn $roll_max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    for ($i = 0; $i < count($numbers); $i++) {\n   \
    \     $max[$i] = $numbers[$i];\n        for ($j = 0; $j < $i; $j++) {\n      \
    \      if ($numbers[$j] > $max[$i]) {\n                $max[$i] = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $max;\n}\n\n$a = array(1, 2, 3, 2,\
    \ 3, 4, 2);\nprint_r(rolling_max($a));\n\nfunction candidate(...$args) {\n   \
    \ return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $results = array();\n    $max = -1;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $results[] = $max;\n    }\n    return $results;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $rolling_max = array();\n    $curr_max = null;\n    for ($i = 0; $i <\
    \ count($numbers); $i++) {\n        if ($curr_max === null || $numbers[$i] > $curr_max)\
    \ {\n            $curr_max = $numbers[$i];\n        }\n        $rolling_max[]\
    \ = $curr_max;\n    }\n    return $rolling_max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpx8zxw6yt.php on line 8

    '
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $rolling_max = array();\n    $max = 0;\n    foreach ($numbers as $n)\
    \ {\n        $max = max($max, $n);\n        $rolling_max[] = $max;\n    }\n  \
    \  return $rolling_max;\n}\n\nclass Test extends PHPUnit_Framework_TestCase {\n\
    \    public function testEqual() {\n        $this->assertEquals(array(1, 2, 3,\
    \ 3, 3, 4, 4), rolling_max(array(1, 2, 3, 2, 3, 4, 2)));\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"PHPUnit_Framework_TestCase\" not\
    \ found in /tmp/tmp5006dkj6.php:16\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp5006dkj6.php\
    \ on line 16\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max_so_far = [];\n  $current_max = $numbers[0];\n  $max_so_far[] = $current_max;\n\
    \  foreach ($numbers as $index => $number) {\n    if ($index == 0) {\n      continue;\n\
    \    }\n    if ($number > $current_max) {\n      $current_max = $number;\n   \
    \ }\n    $max_so_far[] = $current_max;\n  }\n  return $max_so_far;\n}\n\necho\
    \ json_encode(rolling_max([1, 2, 3, 2, 3, 4, 2]));\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "[1,2,3,3,3,4,4]\nWarning: Undefined array key 0 in /tmp/tmpt9hik0cp.php\
    \ on line 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9hik0cp.php:28\n\
    Stack trace:\n#0 /tmp/tmpt9hik0cp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt9hik0cp.php\
    \ on line 28\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $rolling_max = null;\n    foreach ($numbers as\
    \ $num) {\n        if ($rolling_max === null || $num > $rolling_max) {\n     \
    \       $rolling_max = $num;\n        }\n        $result[] = $rolling_max;\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $result = [];\n  $max = $numbers[0];\n  $result[] = $max;\n  for ($i =\
    \ 1; $i < count($numbers); $i++) {\n    if ($numbers[$i] > $max) {\n      $max\
    \ = $numbers[$i];\n    }\n    $result[] = $max;\n  }\n  return $result;\n}\n\n\
    $numbers = [1, 2, 3, 2, 3, 4, 2];\n$result = rolling_max($numbers);\n\necho \"\
    Given array: \" . implode(\", \", $numbers) . \"\\n\";\necho \"Result: \" . implode(\"\
    , \", $result) . \"\\n\";\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Given array: 1, 2, 3, 2, 3, 4, 2\nResult: 1, 2, 3, 3, 3, 4, 4\n\nWarning:\
    \ Undefined array key 0 in /tmp/tmp41mkucel.php on line 8\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp41mkucel.php:29\nStack trace:\n#0 /tmp/tmp41mkucel.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp41mkucel.php on line 29\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $rolls = [];\n    $max   = null;\n    foreach ($numbers as $number) {\n\
    \        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $rolls[] = $max;\n    }\n    return $rolls;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $curr_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $curr_max) {\n            $curr_max = $number;\n\
    \        }\n        $result[] = $curr_max;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmp_0oi4xh2.php on line 8

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_elements = array();\n    $running_max = 0;\n    foreach ($numbers\
    \ as $number) {\n        $running_max = max($running_max, $number);\n        $max_elements[]\
    \ = $running_max;\n    }\n    return $max_elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $current_max = 0;\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        $current_max = max($current_max, $number);\n        $result[] = $current_max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_numbers = array_fill(0, count($numbers), null);\n    $max_so_far\
    \ = -PHP_INT_MAX;\n    for ($i = 0; $i < count($numbers); $i++) {\n        $max_so_far\
    \ = max($max_so_far, $numbers[$i]);\n        $max_numbers[$i] = $max_so_far;\n\
    \    }\n    return $max_numbers;\n}\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $result = array();\n  $max = -1;\n  foreach ($numbers as $number) {\n \
    \   if ($number > $max) {\n      $max = $number;\n    }\n    $result[] = $max;\n\
    \  }\n  return $result;\n}\nprint_r(rolling_max(array(1, 2, 3, 2, 3, 4, 2)));\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$result = array();\n\t$max = $numbers[0];\n\t$result[] = $max;\n\tfor ($i\
    \ = 1; $i < count($numbers); $i++) {\n\t\tif ($numbers[$i] > $max) {\n\t\t\t$max\
    \ = $numbers[$i];\n\t\t}\n\t\t$result[] = $max;\n\t}\n\treturn $result;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmptyx6edcu.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmptyx6edcu.php:24\nStack\
    \ trace:\n#0 /tmp/tmptyx6edcu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmptyx6edcu.php\
    \ on line 24\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    $result = array($max);\n    foreach\
    \ ($numbers as $number) {\n        $max = max($max, $number);\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n   \
    \ return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ar23cc9.php:20\n\
    Stack trace:\n#0 /tmp/tmp1ar23cc9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1ar23cc9.php\
    \ on line 20\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maximums = [];\n    $maximum = NULL;\n    foreach ($numbers as $number)\
    \ {\n        if (is_null($maximum) || $number > $maximum) {\n            $maximum\
    \ = $number;\n        }\n        $maximums[] = $maximum;\n    }\n    return $maximums;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $rolling_max = [];\n    $max = PHP_INT_MIN;\n    foreach ($numbers as\
    \ $number) {\n        $max = max($max, $number);\n        $rolling_max[] = $max;\n\
    \    }\n    return $rolling_max;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  // TODO\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx2m3dnky.php:15\n\
    Stack trace:\n#0 /tmp/tmpx2m3dnky.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpx2m3dnky.php\
    \ on line 15\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maxes = array();\n    $running_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        $running_max = max($running_max, $number);\n        $maxes[]\
    \ = $running_max;\n    }\n    return $maxes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpcx5elbym.php on line 8

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $solution = [];\n  $maximum = $numbers[0];\n  for ($i = 0; $i < count($numbers);\
    \ $i++) {\n    $number = $numbers[$i];\n    if ($number > $maximum) {\n      $maximum\
    \ = $number;\n    }\n    $solution[] = $maximum;\n  }\n  return $solution;\n}\n\
    \nprint_r(rolling_max([1, 2, 3, 2, 3, 4, 2]));\nprint_r(rolling_max([1, 2, 3,\
    \ 2, 3, 4, -6]));\nprint_r(rolling_max([-1, -2, -3, -2, -3, -4, -2]));\nprint_r(rolling_max([-1,\
    \ -2, -3, -2, -3, -4, -6]));\nprint_r(rolling_max([-1, -2, -3, -2, -3, 4, -6]));\n\
    print_r(rolling_max([-1, -2, -3, -2, 3, 4, -6]));\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n\
    \    [2] => 3\n    [3] => 3\n    [4] => 3\n    [5] => 4\n    [6] => 4\n)\nArray\n\
    (\n    [0] => -1\n    [1] => -1\n    [2] => -1\n    [3] => -1\n    [4] => -1\n\
    \    [5] => -1\n    [6] => -1\n)\nArray\n(\n    [0] => -1\n    [1] => -1\n   \
    \ [2] => -1\n    [3] => -1\n    [4] => -1\n    [5] => -1\n    [6] => -1\n)\nArray\n\
    (\n    [0] => -1\n    [1] => -1\n    [2] => -1\n    [3] => -1\n    [4] => -1\n\
    \    [5] => 4\n    [6] => 4\n)\nArray\n(\n    [0] => -1\n    [1] => -1\n    [2]\
    \ => -1\n    [3] => -1\n    [4] => 3\n    [5] => 4\n    [6] => 4\n)\n\nWarning:\
    \ Undefined array key 0 in /tmp/tmpiyw1qlav.php on line 8\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $result = array();\n  $max    = 0;\n  foreach ($numbers as $num) {\n  \
    \  $max = max($max, $num);\n    $result[] = $max;\n  }\n  return $result;\n}\n\
    \nclass RollingMaxTest extends PHPUnit_Framework_TestCase {\n  function testRollingMax()\
    \ {\n    $this->assertEquals(array(1, 2, 3, 3, 3, 4, 4), rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2)));\n  }\n}\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"PHPUnit_Framework_TestCase\" not\
    \ found in /tmp/tmptjrkhmxf.php:16\nStack trace:\n#0 {main}\n  thrown in /tmp/tmptjrkhmxf.php\
    \ on line 16\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maximums = [];\n    $current_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($current_max === null || $number > $current_max) {\n        \
    \    $current_max = $number;\n        }\n        $maximums[] = $current_max;\n\
    \    }\n    return $maximums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $max_numbers = [$max];\n  for ($i = 1; $i < count($numbers);\
    \ $i++) {\n    $number = $numbers[$i];\n    if ($number > $max) {\n      $max\
    \ = $number;\n    }\n    $max_numbers[] = $max;\n  }\n  return $max_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmph4vwmxim.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmph4vwmxim.php:24\nStack\
    \ trace:\n#0 /tmp/tmph4vwmxim.php(30): test()\n#1 {main}\n  thrown in /tmp/tmph4vwmxim.php\
    \ on line 24\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$result = array();\n\t$current_max = $numbers[0];\n\t$result[] = $current_max;\n\
    \tfor ($i = 1; $i < count($numbers); $i++) {\n\t\tif ($numbers[$i] > $current_max)\
    \ {\n\t\t\t$current_max = $numbers[$i];\n\t\t}\n\t\t$result[] = $current_max;\n\
    \t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpjywx6r25.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpjywx6r25.php:24\nStack\
    \ trace:\n#0 /tmp/tmpjywx6r25.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjywx6r25.php\
    \ on line 24\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_so_far = 0;\n    $res = array();\n    foreach ($numbers as $v) {\n\
    \        $max_so_far = max($max_so_far, $v);\n        $res[] = $max_so_far;\n\
    \    }\n    return $res;\n}\n\nvar_dump(rolling_max(array(1, 2, 3, 2, 3, 4, 2)));\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(7) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n \
    \ [3]=>\n  int(3)\n  [4]=>\n  int(3)\n  [5]=>\n  int(4)\n  [6]=>\n  int(4)\n}\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $result = array();\n  $currentMax = null;\n  foreach ($numbers as $num)\
    \ {\n    if (empty($currentMax) || $num > $currentMax) {\n      $currentMax =\
    \ $num;\n    }\n    $result[] = $currentMax;\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    foreach ($numbers as $number) {\n        if (empty($max))\
    \ {\n            $max[] = $number;\n        } else {\n            $max[] = max($max[count($max)\
    \ - 1], $number);\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    foreach ($numbers as\
    \ $n) {\n        $max = max($max, $n);\n        $result[] = $max;\n    }\n   \
    \ return $result;\n}\n\n$example = array(1, 2, 3, 2, 3, 4, 2);\nprint_r(rolling_max($example));\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n\nWarning: Undefined array key 0 in /tmp/tmppknfnbsu.php\
    \ on line 8\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = -PHP_INT_MAX;\n    foreach ($numbers as\
    \ $number) {\n        $max = max($max, $number);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $maxes = array();\n  $maxes[0] = $numbers[0];\n  for ($i = 1; $i < count($numbers);\
    \ $i++) {\n    $maxes[$i] = max($maxes[$i - 1], $numbers[$i]);\n  }\n  return\
    \ $maxes;\n}\n\nvar_dump(rolling_max(array(1, 2, 3, 2, 3, 4, 2)));\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(7) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n \
    \ [3]=>\n  int(3)\n  [4]=>\n  int(3)\n  [5]=>\n  int(4)\n  [6]=>\n  int(4)\n}\n\
    \nWarning: Undefined array key 0 in /tmp/tmpuj6w_fzj.php on line 8\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpuj6w_fzj.php:21\nStack trace:\n\
    #0 /tmp/tmpuj6w_fzj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpuj6w_fzj.php\
    \ on line 21\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $output = [];\n  $max = 0;\n  foreach ($numbers as $number) {\n    $max\
    \ = $number > $max ? $number : $max;\n    $output[] = $max;\n  }\n  return $output;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  for ($i = 1; $i < count($numbers); $i++) {\n   \
    \ if ($numbers[$i] > $max) {\n      $max = $numbers[$i];\n    }\n    $numbers[$i]\
    \ = $max;\n  }\n  return $numbers;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmp3vdbr9s4.php on line 7

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maximum = array();\n    $m = 0;\n    foreach ($numbers as $number) {\n\
    \        $m = max($m, $number);\n        $maximum[] = $m;\n    }\n    return $maximum;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $rolling_max = [];\n    $max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $rolling_max[] = $max;\n    }\n    return $rolling_max;\n}\n\nvar_dump(rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2]));\nvar_dump(rolling_max([1, 2, 3, 2, 3, 4, 2, 4, 5, 1, 6,\
    \ 8, 5, 9, 1, 3, 5, 9, 10, 1, 5, 6, 7, 8, 5, 9, 10, 3, 5, 9, 4, 5, 5, 9, 1, 4,\
    \ 5, 7, 8, 9, 10, 1, 6, 3, 5, 7, 9, 10, 5, 7, 8, 9, 10, 2, 4, 5, 6, 7, 8, 2, 1,\
    \ 2, 3, 4, 5, 7, 6, 2, 4, 6, 7, 1, 3, 2, 1, 2, 4, 1, 4, 5, 6, 7, 6, 4, 5, 7, 1,\
    \ 4, 5, 7, 4, 5, 6, 7, 8, 9, 1, 4, 5, 6, 8, 9, 1, 2, 4, 5, 6, 7, 8, 2, 4, 7, 8,\
    \ 1, 4, 7, 8, 2, 4, 7, 8, 2, 4, 7, 8, 2, 3, 4, 7, 2, 3, 4, 6, 2, 3, 4, 5, 2, 3,\
    \ 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5,\
    \ 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3,\
    \ 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3,\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpf88j_7pv.php on line 20

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_map(function ($number) {\n        return $number;\n    },\
    \ $numbers);\n\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max[$i - 1]) {\n            $max[$i] = $numbers[$i];\n        } else {\n\
    \            $max[$i] = $max[$i - 1];\n        }\n    }\n\n    return $max;\n\
    }\n\n$numbers = array(1, 2, 3, 2, 3, 4, 2);\n\nprint_r(rolling_max($numbers));\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $key => $val)\
    \ {\n        if ($max === null || $val > $max) {\n            $max = $val;\n \
    \       }\n        $result[$key] = $max;\n    }\n    return $result;\n}\n\n$input\
    \ = array(1, 2, 3, 2, 3, 4, 2);\nprint_r(rolling_max($input));\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $rolling_max = [];\n    $maximum = null;\n    foreach ($numbers as $i\
    \ => $num) {\n        if ($num > $maximum) {\n            $maximum = $num;\n \
    \       }\n        $rolling_max[$i] = $maximum;\n    }\n    return $rolling_max;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max_value = array_shift($numbers);\n    $result[]\
    \ = $max_value;\n    foreach ($numbers as $number) {\n        if ($number > $max_value)\
    \ {\n            $max_value = $number;\n        }\n        $result[] = $max_value;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbvx33bud.php:24\n\
    Stack trace:\n#0 /tmp/tmpbvx33bud.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbvx33bud.php\
    \ on line 24\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$max = $numbers[0];\n\t$result = array($max);\n\tfor ($i = 1; $i < count($numbers);\
    \ $i++) {\n\t\t$num = $numbers[$i];\n\t\tif ($num > $max) {\n\t\t\t$max = $num;\n\
    \t\t}\n\t\t$result[] = $max;\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpzuw29cfs.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpzuw29cfs.php:24\nStack\
    \ trace:\n#0 /tmp/tmpzuw29cfs.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzuw29cfs.php\
    \ on line 24\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $rolling_max = array();\n    $current_max = $numbers[0];\n    $rolling_max[]\
    \ = $current_max;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] > $current_max) {\n            $current_max = $numbers[$i];\n\
    \        }\n        $rolling_max[] = $current_max;\n    }\n    return $rolling_max;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpyj_md8g4.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyj_md8g4.php:24\nStack\
    \ trace:\n#0 /tmp/tmpyj_md8g4.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyj_md8g4.php\
    \ on line 24\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        $max = max($max, $number);\n        $result[] = $max;\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpbo604iwm.php on line 7

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = [];\n  $rolling = -1;\n  foreach ($numbers as $number) {\n    if\
    \ ($number > $rolling) {\n      $rolling = $number;\n    }\n    $max[] = $rolling;\n\
    \  }\n  return $max;\n}\n\n$numbers = [1, 2, 3, 2, 3, 4, 2];\n$max = rolling_max($numbers);\n\
    \necho implode(', ', $max) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1, 2, 3, 3, 3, 4, 4

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $current_max = null;\n    foreach ($numbers as\
    \ $number) {\n        if ($current_max === null || $number > $current_max) {\n\
    \            $current_max = $number;\n        }\n        $result[] = $current_max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t// basic check for invalid input\n\tif (!is_array($numbers)) {\n\t\tthrow\
    \ new InvalidArgumentException();\n\t}\n\n\t// check for empty array\n\tif (empty($numbers))\
    \ {\n\t\treturn array();\n\t}\n\n\t// initialize output array\n\t$rolling_max\
    \ = array($numbers[0]);\n\n\t// find rolling max by looping through the array\
    \ from the second element\n\tfor ($i = 1; $i < count($numbers); $i++) {\n\t\t\
    $rolling_max[] = max($rolling_max[$i - 1], $numbers[$i]);\n\t}\n\n\treturn $rolling_max;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $length = count($numbers);\n    $result = array();\n    $max = 0;\n \
    \   for ($i = 0; $i < $length; $i++) {\n        $max = max($max, $numbers[$i]);\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$maxes = [];\n\t$max = $numbers[0];\n\t$maxes[] = $max;\n\tfor ($i = 1;\
    \ $i < count($numbers); $i++) {\n\t\tif ($numbers[$i] > $max) {\n\t\t\t$max =\
    \ $numbers[$i];\n\t\t}\n\t\t$maxes[] = $max;\n\t}\n\treturn $maxes;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpoyhcetvp.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpoyhcetvp.php:24\nStack\
    \ trace:\n#0 /tmp/tmpoyhcetvp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpoyhcetvp.php\
    \ on line 24\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_so_far = NULL;\n    foreach ($numbers as $number) {\n        if\
    \ ($max_so_far === NULL) {\n            $max_so_far = $number;\n        } else\
    \ {\n            $max_so_far = max($max_so_far, $number);\n        }\n       \
    \ $max[] = $max_so_far;\n    }\n    return $max;\n}\n\n$numbers = array(1, 2,\
    \ 3, 2, 3, 4, 2);\nprint_r(rolling_max($numbers));\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n\nWarning: Undefined variable $max in /tmp/tmpvh2dnv_5.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvh2dnv_5.php:27\n\
    Stack trace:\n#0 /tmp/tmpvh2dnv_5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpvh2dnv_5.php\
    \ on line 27\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $rolling_max = array();\n  foreach ($numbers as $num) {\n    $rolling_max[]\
    \ = max($rolling_max + array($num));\n  }\n  return $rolling_max;\n}\n\n$numbers\
    \ = array(1, 2, 3, 2, 3, 4, 2);\necho implode(', ', rolling_max($numbers)) . PHP_EOL;\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 1, 1, 1, 1, 1, 1\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpg4xasfb1.php:23\nStack trace:\n#0 /tmp/tmpg4xasfb1.php(28): test()\n\
    #1 {main}\n  thrown in /tmp/tmpg4xasfb1.php on line 23\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = PHP_INT_MIN;\n  $result = array();\n  foreach ($numbers as $number)\
    \ {\n    $max = max($max, $number);\n    $result[] = $max;\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $array = [];\n    $max = 0;\n    foreach ($numbers as $number) {\n  \
    \      if ($number > $max) {\n            $max = $number;\n        }\n       \
    \ $array[] = $max;\n    }\n    return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$prev_max = array();\n\t$max = -1;\n\tforeach ($numbers as $n) {\n\t\t\
    if ($n > $max) {\n\t\t\t$max = $n;\n\t\t}\n\t\t$prev_max[] = $max;\n\t}\n\treturn\
    \ $prev_max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = 0;\n    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        $max = max($max, $number);\n        $result[] = $max;\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $roll_max = [];\n    $max = 0;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $num = $numbers[$i];\n        if ($num > $max) {\n        \
    \    $max = $num;\n        }\n        $roll_max[] = $max;\n    }\n    return $roll_max;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = array($max);\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        $number = $numbers[$i];\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp9wb0dkub.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp9wb0dkub.php:24\nStack\
    \ trace:\n#0 /tmp/tmp9wb0dkub.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9wb0dkub.php\
    \ on line 24\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $rolling = [];\n  foreach ($numbers as $i => $number) {\n    $rolling[$i]\
    \ = $number;\n    foreach ($numbers as $k => $other) {\n      if ($k < $i && $rolling[$k]\
    \ > $rolling[$i]) {\n        $rolling[$i] = $rolling[$k];\n      }\n    }\n  }\n\
    \  return $rolling;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $rolling_max = [];\n    foreach ($numbers as\
    \ $number) {\n        if ($number > $max) {\n            $max = $number;\n   \
    \     }\n        $rolling_max[] = $max;\n    }\n    return $rolling_max;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpj5tt76_j.php on line 7

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $current_max = null;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if (empty($current_max) || $numbers[$i] > $current_max) {\n\
    \            $current_max = $numbers[$i];\n        }\n        $max[] = $current_max;\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\tif (count($numbers) == 0) {\n\t\treturn $numbers;\n\t}\n\n\t$curr_max =\
    \ $numbers[0];\n\t$numbers[0] = $curr_max;\n\tfor ($i = 1; $i < count($numbers);\
    \ $i++) {\n\t\tif ($numbers[$i] > $curr_max) {\n\t\t\t$curr_max = $numbers[$i];\n\
    \t\t}\n\t\t$numbers[$i] = $curr_max;\n\t}\n\n\treturn $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $length = count($numbers);\n  $result = array();\n  $current_max = -INF;\n\
    \  for ($i = 0; $i < $length; $i++) {\n    $current_max = max($current_max, $numbers[$i]);\n\
    \    $result[] = $current_max;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $result = [];\n  $current_max = null;\n  foreach ($numbers as $number)\
    \ {\n    if ($current_max === null || $number > $current_max) {\n      $current_max\
    \ = $number;\n    }\n    $result[] = $current_max;\n  }\n  return $result;\n}\n\
    print_r(rolling_max([1, 2, 3, 2, 3, 4, 2]));\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = array();\n  foreach ($numbers as $number) {\n    if (empty($max))\
    \ {\n      $max[] = $number;\n    } else {\n      $max[] = max($max[count($max)\
    \ - 1], $number);\n    }\n  }\n  return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$result = array();\n\t$max = null;\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\t$max = max($max, $numbers[$i]);\n\t\t$result[] = $max;\n\t}\n\t\
    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maxes = [];\n    $max = 0;\n    foreach ($numbers as $number) {\n  \
    \      if ($number > $max) {\n            $max = $number;\n        }\n       \
    \ $maxes[] = $max;\n    }\n    return $maxes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp57dg_kww.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp57dg_kww.php:24\nStack\
    \ trace:\n#0 /tmp/tmp57dg_kww.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp57dg_kww.php\
    \ on line 24\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maxes = [];\n    $max = $numbers[0];\n    foreach ($numbers as $num)\
    \ {\n        if ($num > $max) {\n            $max = $num;\n        }\n       \
    \ $maxes[] = $max;\n    }\n    return $maxes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpqg9kujhi.php on line 8

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = 0;\n    $rolling_max = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $rolling_max[] = $max;\n    }\n    return $rolling_max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = NULL;\n    foreach ($numbers as $number)\
    \ {\n        if ($max === NULL) {\n            $max = $number;\n        } elseif\
    \ ($number > $max) {\n            $max = $number;\n        }\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$max = array_pop($numbers);\n\t$ret = array($max);\n\twhile ($number =\
    \ array_pop($numbers)) {\n\t\t$max = max($max, $number);\n\t\tarray_unshift($ret,\
    \ $max);\n\t}\n\treturn $ret;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphwzmdrbj.php:21\n\
    Stack trace:\n#0 /tmp/tmphwzmdrbj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphwzmdrbj.php\
    \ on line 21\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maxes = array();\n    foreach ($numbers as $i => $number) {\n      \
    \  if ($i == 0) {\n            $maxes[] = $number;\n        } else {\n       \
    \     $previous_max = $maxes[$i - 1];\n            $maxes[] = max($previous_max,\
    \ $number);\n        }\n    }\n    return $maxes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = 0;\n    $max_numbers = array();\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $max_numbers[] = $max;\n    }\n    return $max_numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$max = 0;\n\t$res = array();\n\tforeach ($numbers as $number) {\n\t\tif\
    \ ($number > $max) {\n\t\t\t$max = $number;\n\t\t}\n\t\t$res[] = $max;\n\t}\n\t\
    return $res;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n     \
    \   $result[] = max(array_slice($numbers, 0, $i + 1));\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $count = count($numbers);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $max = $numbers[$i];\n        for ($j = $i; $j < $count; $j++)\
    \ {\n            if ($numbers[$j] > $max) {\n                $max = $numbers[$j];\n\
    \            }\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpamm_mdwq.php:26\n\
    Stack trace:\n#0 /tmp/tmpamm_mdwq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpamm_mdwq.php\
    \ on line 26\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_so_far = [];\n    $result = [];\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $cur_num = $numbers[$i];\n        if (empty($max_so_far)) {\n\
    \            $max_so_far[] = $cur_num;\n            $result[] = $cur_num;\n  \
    \      } else {\n            if ($cur_num > $max_so_far[$i - 1]) {\n         \
    \       $max_so_far[] = $cur_num;\n                $result[] = $cur_num;\n   \
    \         } else {\n                $max_so_far[] = $max_so_far[$i - 1];\n   \
    \             $result[] = $max_so_far[$i - 1];\n            }\n        }\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $result[] = $max_value;\n\
    \    $length = count($numbers);\n    for ($i = 1; $i < $length; $i++) {\n    \
    \    $max_value = max($max_value, $numbers[$i]);\n        $result[] = $max_value;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpm2_yjs9a.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpm2_yjs9a.php:23\nStack\
    \ trace:\n#0 /tmp/tmpm2_yjs9a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpm2_yjs9a.php\
    \ on line 23\n"
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $m = $numbers[0];\n    $r = array($m);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $m = max($m, $numbers[$i]);\n        $r[] = $m;\n    }\n  \
    \  return $r;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp6o7m4z8m.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp6o7m4z8m.php:21\nStack\
    \ trace:\n#0 /tmp/tmp6o7m4z8m.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6o7m4z8m.php\
    \ on line 21\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n\t$max_list = array();\n\tfor ($i = 0; $i < count($numbers); $i++) {\n\t\t\
    if ($i == 0) {\n\t\t\t$max_list[$i] = $numbers[$i];\n\t\t} else {\n\t\t\t$max_list[$i]\
    \ = max($max_list[$i - 1], $numbers[$i]);\n\t\t}\n\t}\n\treturn $max_list;\n}\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $currentMax = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $currentMax) {\n            $currentMax\
    \ = $number;\n        }\n        $result[] = $currentMax;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpo4di9ixx.php on line 8

    '
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $current_max = $numbers[0];\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        $result[] = $current_max;\n        if\
    \ ($numbers[$i] > $current_max) {\n            $current_max = $numbers[$i];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpr0f4u265.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpr0f4u265.php:24\nStack\
    \ trace:\n#0 /tmp/tmpr0f4u265.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr0f4u265.php\
    \ on line 24\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $maxes = [];\n  $max_to_now = 0;\n  foreach ($numbers as $n) {\n    $max_to_now\
    \ = max($max_to_now, $n);\n    $maxes[] = $max_to_now;\n  }\n  return $maxes;\n\
    }\n\n$numbers = array(1, 2, 3, 2, 3, 4, 2);\nprint_r(rolling_max($numbers));\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpx8zxw6yt.php on line 8

    '
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $maxes = [];\n    $max = $numbers[0];\n    foreach ($numbers as $num)\
    \ {\n        if ($num > $max) {\n            $max = $num;\n        }\n       \
    \ $maxes[] = $max;\n    }\n    return $maxes;\n}\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmp_0olunlo.php on line 8

    '
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_elements = array();\n    $max_element = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n        }\n        $max_elements[] = $max_element;\n    }\n    return\
    \ $max_elements;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    $max[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max[] = max($max[$i - 1], $numbers[$i]);\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpvqumve1z.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpvqumve1z.php:20\nStack\
    \ trace:\n#0 /tmp/tmpvqumve1z.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvqumve1z.php\
    \ on line 20\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $max = 0;\n  $new_numbers = array();\n  foreach ($numbers as $number) {\n\
    \    if ($number > $max) {\n      $max = $number;\n    }\n    $new_numbers[] =\
    \ $max;\n  }\n  return $new_numbers;\n}\n$numbers = array(1, 2, 3, 2, 3, 4, 2);\n\
    print_r(rolling_max($numbers));\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 4\n    [6] => 4\n)\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $length = count($numbers);\n    $roll_max = [];\n    for ($i = 0; $i\
    \ < $length; $i++) {\n        $roll_max[$i] = max(array_slice($numbers, 0, $i\
    \ + 1));\n    }\n    return $roll_max;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 255
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    $max[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max[] = max($max[$i - 1], $numbers[$i]);\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpvqumve1z.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpvqumve1z.php:20\nStack\
    \ trace:\n#0 /tmp/tmpvqumve1z.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvqumve1z.php\
    \ on line 20\n"
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $rolling_max = array();\n    $current_max = 0;\n    foreach ($numbers\
    \ as $n) {\n        if ($n > $current_max) {\n            $current_max = $n;\n\
    \        }\n        $rolling_max[] = $current_max;\n    }\n    return $rolling_max;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $result = array();\n  $max = null;\n  foreach ($numbers as $number) {\n\
    \    if (is_null($max) || $number > $max) {\n      $max = $number;\n    }\n  \
    \  $result[] = $max;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114
- exit_code: 0
  program: "<?php\n// From a given array of integers, generate an array of rolling\
    \ maximum element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n  $rolling_max = [];\n  $current_max = null;\n  foreach ($numbers as $i =>\
    \ $number) {\n    if ($current_max === null || $number > $current_max) {\n   \
    \   $current_max = $number;\n    }\n    $rolling_max[$i] = $current_max;\n  }\n\
    \  return $rolling_max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979114

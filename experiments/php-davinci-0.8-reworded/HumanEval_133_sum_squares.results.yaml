language: php
name: HumanEval_133_sum_squares
results:
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $result = array_map(function($x)\
    \ {\n    return ceil($x);\n  }, $lst);\n  return array_sum(array_map(function($x)\
    \ {\n    return $x * $x;\n  }, $result));\n}\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39uuoy04.php:29\n\
    Stack trace:\n#0 /tmp/tmp39uuoy04.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp39uuoy04.php\
    \ on line 29\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $number) {\n    $rounded = ceil($number);\n    $squared = $rounded * $rounded;\n\
    \    $sum += $squared;\n  }\n  return $sum;\n}\n$lst = array(1.0, 2.0, 3.0);\n\
    $result = sum_squares($lst);\necho $result;\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_ib7kph.php:33\n\
    Stack trace:\n#0 /tmp/tmpk_ib7kph.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpk_ib7kph.php\
    \ on line 33\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n\t$sum=0;\n\tfor($i=0;$i<count($lst);$i++){\n\
    \t\t$sum+=(ceil($lst[$i])*ceil($lst[$i]));\n\t}\n\treturn $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoqr1cu8i.php:28\n\
    Stack trace:\n#0 /tmp/tmpoqr1cu8i.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpoqr1cu8i.php\
    \ on line 28\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $result = 0;\n  foreach ($lst\
    \ as $item) {\n    $result += ceil($item) ** 2;\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpncuccppu.php:28\n\
    Stack trace:\n#0 /tmp/tmpncuccppu.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpncuccppu.php\
    \ on line 28\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $key => $number) {\n        $number = ceil($number);\n        $result\
    \ += $number * $number;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi5tuf5uz.php:29\n\
    Stack trace:\n#0 /tmp/tmpi5tuf5uz.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpi5tuf5uz.php\
    \ on line 29\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $total = 0;\n    $count\
    \ = count($lst);\n    for ($i = 0; $i < $count; $i++) {\n        $val = ceil($lst[$i]);\n\
    \        $total += $val * $val;\n    }\n    return $total;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb01172to.php:31\n\
    Stack trace:\n#0 /tmp/tmpb01172to.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpb01172to.php\
    \ on line 31\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $n = 0;\n  foreach ($lst as\
    \ $num) {\n    $num = ceil($num);\n    $n += $num * $num;\n  }\n  return $n;\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplx3ki8pn.php:30\n\
    Stack trace:\n#0 /tmp/tmplx3ki8pn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmplx3ki8pn.php\
    \ on line 30\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $arr = array_map(\n    \
    \    function ($n) {\n            return ceil($n);\n        },\n        $lst\n\
    \    );\n    return array_sum(array_map(\n        function ($n) {\n          \
    \  return $n * $n;\n        },\n        $arr\n    ));\n}\n\n$arr = [1.0, 2.0,\
    \ 3.0];\necho sum_squares($arr);\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsnsreb_.php:38\n\
    Stack trace:\n#0 /tmp/tmpzsnsreb_.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpzsnsreb_.php\
    \ on line 38\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n\t$result = array_map('ceil',\
    \ $lst);\n\treturn array_sum(array_map(function($val) { return $val * $val; },\
    \ $result));\n}\necho sum_squares(array(1.0, 2.0, 3.0)).PHP_EOL;\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)).PHP_EOL;\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)).PHP_EOL;\n\
    echo sum_squares(array(1.4, 4.2, 0.0)).PHP_EOL;\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)).PHP_EOL;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgqqr1nds.php:30\n\
    Stack trace:\n#0 /tmp/tmpgqqr1nds.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgqqr1nds.php\
    \ on line 30\n"
  timestamp: 1659824266
- exit_code: 0
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    foreach ($lst as $key =>\
    \ $value) {\n        $ceil[] = (int)ceil($value);\n    }\n    $sum = 0;\n    foreach\
    \ ($ceil as $key => $value) {\n        $sum += $value * $value;\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n    $result = 0;\n    foreach ($lst as $n) {\n    \
    \    $result += pow(ceil($n), 2);\n    }\n    print $result;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9i56_pmz.php:31\n\
    Stack trace:\n#0 /tmp/tmp9i56_pmz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9i56_pmz.php\
    \ on line 31\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  foreach ($lst as $key => $val)\
    \ {\n    $lst[$key] = ceil($val);\n  }\n  return array_sum(array_map('square',\
    \ $lst));\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"square\" not found or invalid function\
    \ name in /tmp/tmp5n0l4abu.php:20\nStack trace:\n#0 /tmp/tmp5n0l4abu.php(20):\
    \ array_map('square', Array)\n#1 /tmp/tmp5n0l4abu.php(24): sum_squares(Array)\n\
    #2 /tmp/tmp5n0l4abu.php(28): candidate(Array)\n#3 /tmp/tmp5n0l4abu.php(42): test()\n\
    #4 {main}\n  thrown in /tmp/tmp5n0l4abu.php on line 20\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($n)\
    \ {\n        return $n ** 2;\n    }, array_map(function($n) {\n        return\
    \ ceil($n);\n    }, $lst)));\n}\n\n$lst = array(1.0, 2.0, 3.0);\n\necho sum_squares($lst);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_sj2ou4y.php:32\n\
    Stack trace:\n#0 /tmp/tmp_sj2ou4y.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_sj2ou4y.php\
    \ on line 32\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($num)\
    \ {\n        return pow(ceil($num), 2);\n    }, $lst));\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrmx3ehh.php:27\n\
    Stack trace:\n#0 /tmp/tmpkrmx3ehh.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkrmx3ehh.php\
    \ on line 27\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($n)\
    \ {\n        return pow($n, 2);\n    }, array_map(function($n) {\n        return\
    \ ceil($n);\n    }, $lst)));\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjnpxh3ga.php:28\n\
    Stack trace:\n#0 /tmp/tmpjnpxh3ga.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjnpxh3ga.php\
    \ on line 28\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sq = [];\n  foreach ($lst\
    \ as $item) {\n    $sq[] = ceil($item) * ceil($item);\n  }\n  return array_sum($sq);\n\
    }\nprint sum_squares([1.0, 2.0, 3.0]); // 14\nprint \"\\n\";\nprint sum_squares([1.0,\
    \ 4.0, 9.0]); // 98\nprint \"\\n\";\nprint sum_squares([1.0, 3.0, 5.0, 7.0]);\
    \ // 84\nprint \"\\n\";\nprint sum_squares([1.4, 4.2, 0.0]); // 29\nprint \"\\\
    n\";\nprint sum_squares([-2.4, 1.0, 1.0]); // 6\nprint \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2wwa_88e.php:38\n\
    Stack trace:\n#0 /tmp/tmp2wwa_88e.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp2wwa_88e.php\
    \ on line 38\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $number) {\n        $number = ceil($number);\n        $number = $number **\
    \ 2;\n        $sum += $number;\n    }\n    return $sum;\n}\n\n$array = array(1.0,\
    \ 2.0, 3.0);\necho sum_squares($array) . PHP_EOL;\n\n$array = array(1.0, 4.0,\
    \ 9.0);\necho sum_squares($array) . PHP_EOL;\n\n$array = array(1.0, 3.0, 5.0,\
    \ 7.0);\necho sum_squares($array) . PHP_EOL;\n\n$array = array(1.4, 4.2, 0.0);\n\
    echo sum_squares($array) . PHP_EOL;\n\n$array = array(-2.4, 1.0, 1.0);\necho sum_squares($array)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps6rtui7o.php:45\n\
    Stack trace:\n#0 /tmp/tmps6rtui7o.php(59): test()\n#1 {main}\n  thrown in /tmp/tmps6rtui7o.php\
    \ on line 45\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    foreach ($lst as $k => $v)\
    \ {\n        $lst[$k] = ceil($v);\n    }\n    return array_sum(array_map(function($v)\
    \ {\n        return $v * $v;\n    }, $lst));\n}\necho sum_squares(array(1.0, 2.0,\
    \ 3.0)) . \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)) . \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\"\
    ;\necho sum_squares(array(-2.4, 1.0, 1.0)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvb7pw5eo.php:34\n\
    Stack trace:\n#0 /tmp/tmpvb7pw5eo.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvb7pw5eo.php\
    \ on line 34\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $arr = array_map(function($el)\
    \ { return ceil($el); }, $lst);\n    return array_sum(array_map(function($el)\
    \ { return $el ** 2; }, $arr));\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5bf40_mn.php:26\n\
    Stack trace:\n#0 /tmp/tmp5bf40_mn.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5bf40_mn.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $item) {\n        $result += pow(ceil($item), 2);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ndx_mbe.php:29\n\
    Stack trace:\n#0 /tmp/tmp0ndx_mbe.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0ndx_mbe.php\
    \ on line 29\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $result = 0;\n  foreach ($lst\
    \ as $val) {\n    $result += pow(ceil($val), 2);\n  }\n  return $result;\n}\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_zwpr4s.php:28\n\
    Stack trace:\n#0 /tmp/tmpn_zwpr4s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpn_zwpr4s.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $new_array = [];\n  foreach\
    \ ($lst as $value) {\n    $new_array[] = ceil($value);\n  }\n  return array_sum(array_map('convert',\
    \ $new_array));\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"convert\" not found or invalid\
    \ function name in /tmp/tmp137d829v.php:21\nStack trace:\n#0 /tmp/tmp137d829v.php(21):\
    \ array_map('convert', Array)\n#1 /tmp/tmp137d829v.php(25): sum_squares(Array)\n\
    #2 /tmp/tmp137d829v.php(29): candidate(Array)\n#3 /tmp/tmp137d829v.php(43): test()\n\
    #4 {main}\n  thrown in /tmp/tmp137d829v.php on line 21\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $arr = [];\n  foreach ($lst\
    \ as $num) {\n    $arr[] = ceil($num);\n  }\n  $total = 0;\n  foreach ($arr as\
    \ $num) {\n    $total += $num * $num;\n  }\n  return $total;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaeff05g8.php:32\n\
    Stack trace:\n#0 /tmp/tmpaeff05g8.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpaeff05g8.php\
    \ on line 32\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map(function($n)\
    \ {\n    return pow(ceil($n), 2);\n  }, $lst));\n}\necho \"lst(array(1.0, 2.0,\
    \ 3.0)) = \" . sum_squares(array(1.0, 2.0, 3.0)) . PHP_EOL;\necho \"lst(array(1.0,\
    \ 4.0, 9.0)) = \" . sum_squares(array(1.0, 4.0, 9.0)) . PHP_EOL;\necho \"lst(array(1.0,\
    \ 3.0, 5.0, 7.0)) = \" . sum_squares(array(1.0, 3.0, 5.0, 7.0)) . PHP_EOL;\necho\
    \ \"lst(array(1.4, 4.2, 0.0)) = \" . sum_squares(array(1.4, 4.2, 0.0)) . PHP_EOL;\n\
    echo \"lst(array(-2.4, 1.0, 1.0)) = \" . sum_squares(array(-2.4, 1.0, 1.0)) .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "lst(array(1.0, 2.0, 3.0)) = 14\nlst(array(1.0, 4.0, 9.0)) = 98\nlst(array(1.0,\
    \ 3.0, 5.0, 7.0)) = 84\nlst(array(1.4, 4.2, 0.0)) = 29\nlst(array(-2.4, 1.0, 1.0))\
    \ = 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp85v126al.php:31\n\
    Stack trace:\n#0 /tmp/tmp85v126al.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp85v126al.php\
    \ on line 31\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $number) {\n        $num = ceil($number);\n        $sum += $num ** 2;\n \
    \   }\n    return $sum;\n}\n\n$arr = array(1.0, 2.0, 3.0);\necho sum_squares($arr);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpom9onzen.php:32\n\
    Stack trace:\n#0 /tmp/tmpom9onzen.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpom9onzen.php\
    \ on line 32\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  // your code goes here\n \
    \ // return sum of squared numbers\n  return 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbp6mqz_n.php:27\n\
    Stack trace:\n#0 /tmp/tmpbp6mqz_n.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbp6mqz_n.php\
    \ on line 27\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $value) {\n        $sum += pow(ceil($value), 2);\n    }\n    return $sum;\n\
    }\necho sum_squares(array(1.0, 2.0, 3.0));\necho \"<br>\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0));\necho \"<br>\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\n\
    echo \"<br>\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho \"<br>\";\necho\
    \ sum_squares(array(-2.4, 1.0, 1.0));\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14<br>98<br>84<br>29<br>6\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpvch3oywm.php:37\nStack trace:\n#0 /tmp/tmpvch3oywm.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvch3oywm.php on line 37\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $array = [];\n  foreach ($lst\
    \ as $key => $value) {\n    $lst[$key] = ceil($value);\n    $array[] = $lst[$key]\
    \ * $lst[$key];\n  }\n  return array_sum($array);\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplc5l2c7l.php:29\n\
    Stack trace:\n#0 /tmp/tmplc5l2c7l.php(43): test()\n#1 {main}\n  thrown in /tmp/tmplc5l2c7l.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $lst = array_map('ceil',\
    \ $lst);\n    $sum = 0;\n    foreach ($lst as $value) {\n        $sum += $value\
    \ ** 2;\n    }\n    return $sum;\n}\n\necho sum_squares(array(1.0, 2.0, 3.0));\n\
    echo \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"\\n\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0));\necho \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho\
    \ \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0));\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy08373rk.php:40\n\
    Stack trace:\n#0 /tmp/tmpy08373rk.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpy08373rk.php\
    \ on line 40\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $num) {\n    $sum += ceil($num) ** 2;\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk5gwld_p.php:29\n\
    Stack trace:\n#0 /tmp/tmpk5gwld_p.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk5gwld_p.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $ans = 0;\n    foreach ($lst\
    \ as $item) {\n        $ans += ceil($item) * ceil($item);\n    }\n    return $ans;\n\
    }\n$a = array(1.0, 2.0, 3.0);\n$b = array(1.0, 4.0, 9.0);\n$c = array(1.0, 3.0,\
    \ 5.0, 7.0);\n$d = array(1.4, 4.2, 0.0);\n$e = array(-2.4, 1.0, 1.0);\necho sum_squares($a).\"\
    \\n\";\necho sum_squares($b).\"\\n\";\necho sum_squares($c).\"\\n\";\necho sum_squares($d).\"\
    \\n\";\necho sum_squares($e).\"\\n\";\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffvo23o1.php:38\n\
    Stack trace:\n#0 /tmp/tmpffvo23o1.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpffvo23o1.php\
    \ on line 38\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    for ($i\
    \ = 0; $i < count($lst); $i++) {\n        $result += ceil($lst[$i]) ** 2;\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjrniwx39.php:29\n\
    Stack trace:\n#0 /tmp/tmpjrniwx39.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjrniwx39.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map(function($n)\
    \ {\n    return pow(ceil($n), 2);\n  }, $lst));\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1iokld0.php:26\n\
    Stack trace:\n#0 /tmp/tmpw1iokld0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpw1iokld0.php\
    \ on line 26\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $ret = 0;\n  $i = 0;\n  while\
    \ ($i < count($lst)) {\n    $ret += pow(round($lst[$i]), 2);\n    $i++;\n  }\n\
    \  return $ret;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaxksxksp.php:30\n\
    Stack trace:\n#0 /tmp/tmpaxksxksp.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpaxksxksp.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $lst = array_map('ceil',\
    \ $lst);\n    $result = 0;\n    foreach ($lst as $number) {\n        $result +=\
    \ $number * $number;\n    }\n    return $result;\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\necho '<br>';\necho sum_squares(array(1.0, 4.0, 9.0));\necho '<br>';\n\
    echo sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho '<br>';\necho sum_squares(array(1.4,\
    \ 4.2, 0.0));\necho '<br>';\necho sum_squares(array(-2.4, 1.0, 1.0));\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14<br>98<br>84<br>29<br>6\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpbkdgxt3t.php:39\nStack trace:\n#0 /tmp/tmpbkdgxt3t.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmpbkdgxt3t.php on line 39\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $result = 0;\n  foreach ($lst\
    \ as $num) {\n    $result += ceil($num) * ceil($num);\n  }\n  return $result;\n\
    }\n\nvar_dump(sum_squares(array(1.0, 2.0, 3.0)) === 14);\nvar_dump(sum_squares(array(1.0,\
    \ 4.0, 9.0)) === 98);\nvar_dump(sum_squares(array(1.0, 3.0, 5.0, 7.0)) === 84);\n\
    var_dump(sum_squares(array(1.4, 4.2, 0.0)) === 29);\nvar_dump(sum_squares(array(-2.4,\
    \ 1.0, 1.0)) === 6);\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp0d6t542z.php:34\nStack trace:\n\
    #0 /tmp/tmp0d6t542z.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp0d6t542z.php\
    \ on line 34\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $result = 0;\n  foreach ($lst\
    \ as $value) {\n    $value = ceil($value);\n    $result += $value * $value;\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91y72zrd.php:30\n\
    Stack trace:\n#0 /tmp/tmp91y72zrd.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp91y72zrd.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map(function($n)\
    \ { return $n ** 2; }, $lst));\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxf5y61j3.php:25\n\
    Stack trace:\n#0 /tmp/tmpxf5y61j3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxf5y61j3.php\
    \ on line 25\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $lst_item) {\n        $result += pow(ceil($lst_item), 2);\n    }\n\
    \    return $result;\n}\necho sum_squares(array(1.0, 2.0, 3.0)) . PHP_EOL;\necho\
    \ sum_squares(array(1.0, 4.0, 9.0)) . PHP_EOL;\necho sum_squares(array(1.0, 3.0,\
    \ 5.0, 7.0)) . PHP_EOL;\necho sum_squares(array(1.4, 4.2, 0.0)) . PHP_EOL;\necho\
    \ sum_squares(array(-2.4, 1.0, 1.0)) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuil3i5d3.php:33\n\
    Stack trace:\n#0 /tmp/tmpuil3i5d3.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpuil3i5d3.php\
    \ on line 33\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $num) {\n    $num = ceil($num);\n    $sum += $num * $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37bbc30b.php:30\n\
    Stack trace:\n#0 /tmp/tmp37bbc30b.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp37bbc30b.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $result = array_map(function($number)\
    \ {\n    return ceil($number);\n  }, $lst);\n  $result = array_map(function($number)\
    \ {\n    return $number ** 2;\n  }, $result);\n  return array_sum($result);\n\
    }\n\necho sum_squares([1.0, 2.0, 3.0]) . \"\\n\";\necho sum_squares([1.0, 4.0,\
    \ 9.0]) . \"\\n\";\necho sum_squares([1.0, 3.0, 5.0, 7.0]) . \"\\n\";\necho sum_squares([1.4,\
    \ 4.2, 0.0]) . \"\\n\";\necho sum_squares([-2.4, 1.0, 1.0]) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf9beqyc8.php:36\n\
    Stack trace:\n#0 /tmp/tmpf9beqyc8.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpf9beqyc8.php\
    \ on line 36\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $i) {\n    $sum += pow(ceil($i), 2);\n  }\n  return $sum;\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyy58flxg.php:30\n\
    Stack trace:\n#0 /tmp/tmpyy58flxg.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpyy58flxg.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  // Good luck!\n  for ($i =\
    \ 0; $i < count($lst); $i++) {\n    $lst[$i] = round($lst[$i]);\n  }\n  return\
    \ array_sum(array_map(function($v) {\n    return $v * $v;\n  }, $lst));\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuvs68bo9.php:30\n\
    Stack trace:\n#0 /tmp/tmpuvs68bo9.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpuvs68bo9.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map(function($value)\
    \ {\n    return pow(ceil($value), 2);\n  }, $lst));\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphkof9swb.php:26\n\
    Stack trace:\n#0 /tmp/tmphkof9swb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphkof9swb.php\
    \ on line 26\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvl7u_rk5.php:25\n\
    Stack trace:\n#0 /tmp/tmpvl7u_rk5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvl7u_rk5.php\
    \ on line 25\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $squared_lst = array_map(function($item)\
    \ {\n    return round($item) ** 2;\n  }, $lst);\n  return array_sum($squared_lst);\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpucwpwavg.php:27\n\
    Stack trace:\n#0 /tmp/tmpucwpwavg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpucwpwavg.php\
    \ on line 27\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $value = 0;\n  foreach ($lst\
    \ as $number) {\n    $newNumber = $number < 0 ? round($number) - 1 : round($number);\n\
    \    $value += $newNumber * $newNumber;\n  }\n  return $value;\n}\n$a = [1.0,\
    \ 2.0, 3.0];\n$b = [1.0, 4.0, 9.0];\n$c = [1.0, 3.0, 5.0, 7.0];\n$d = [1.4, 4.2,\
    \ 0.0];\n$e = [-2.4, 1.0, 1.0];\n\necho '<pre>';\necho sum_squares($a) . '<br\
    \ />';\necho sum_squares($b) . '<br />';\necho sum_squares($c) . '<br />';\necho\
    \ sum_squares($d) . '<br />';\necho sum_squares($e) . '<br />';\necho '</pre>';\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>14<br />98<br />84<br />17<br />11<br /></pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpux46dim8.php:43\nStack trace:\n#0 /tmp/tmpux46dim8.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpux46dim8.php on line 43\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $value) {\n    $sum += pow(ceil($value), 2);\n  }\n  return $sum;\n}\necho\
    \ sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0, 4.0,\
    \ 9.0)) . \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\";\necho\
    \ sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4, 1.0,\
    \ 1.0)) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18wdkd5b.php:33\n\
    Stack trace:\n#0 /tmp/tmp18wdkd5b.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp18wdkd5b.php\
    \ on line 33\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map(function($x)\
    \ { return pow(ceil($x), 2); }, $lst));\n}\n\necho sum_squares(array(1.0, 2.0,\
    \ 3.0)).\"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0)).\"\\n\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)).\"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0)).\"\\n\";\n\
    echo sum_squares(array(-2.4, 1.0, 1.0)).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3e09pzo3.php:30\n\
    Stack trace:\n#0 /tmp/tmp3e09pzo3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3e09pzo3.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n\treturn array_sum(array_map(function($n)\
    \ {\n\t\treturn $n * $n;\n\t}, array_map('ceil', $lst)));\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0)), \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0)), \"\\n\";\necho\
    \ sum_squares(array(1.0, 3.0, 5.0, 7.0)), \"\\n\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0)), \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0)), \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7b8o9kh.php:32\n\
    Stack trace:\n#0 /tmp/tmpp7b8o9kh.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpp7b8o9kh.php\
    \ on line 32\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $num) {\n        $result += pow(ceil($num), 2);\n    }\n    return\
    \ $result;\n}\n\n$arr1 = array(1.0, 2.0, 3.0);\necho \"lst($arr1) = \" . sum_squares($arr1)\
    \ . \"\\n\";\n$arr2 = array(1.0, 4.0, 9.0);\necho \"lst($arr2) = \" . sum_squares($arr2)\
    \ . \"\\n\";\n$arr3 = array(1.0, 3.0, 5.0, 7.0);\necho \"lst($arr3) = \" . sum_squares($arr3)\
    \ . \"\\n\";\n$arr4 = array(1.4, 4.2, 0.0);\necho \"lst($arr4) = \" . sum_squares($arr4)\
    \ . \"\\n\";\n$arr5 = array(-2.4, 1.0, 1.0);\necho \"lst($arr5) = \" . sum_squares($arr5)\
    \ . \"\\n\";\n\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmphceeswxo.php on line 25\n\
    lst(Array) = 14\n\nWarning: Array to string conversion in /tmp/tmphceeswxo.php\
    \ on line 27\nlst(Array) = 98\n\nWarning: Array to string conversion in /tmp/tmphceeswxo.php\
    \ on line 29\nlst(Array) = 84\n\nWarning: Array to string conversion in /tmp/tmphceeswxo.php\
    \ on line 31\nlst(Array) = 29\n\nWarning: Array to string conversion in /tmp/tmphceeswxo.php\
    \ on line 33\nlst(Array) = 6\n\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmphceeswxo.php:42\nStack trace:\n#0 /tmp/tmphceeswxo.php(56): test()\n\
    #1 {main}\n  thrown in /tmp/tmphceeswxo.php on line 42\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    for ($i =\
    \ 0; $i < count($lst); $i++) {\n        $sum += $lst[$i] ** 2;\n    }\n    return\
    \ $sum;\n}\n\n$a = array(1.0, 2.0, 3.0);\n$b = array(1.0, 4.0, 9.0);\n$c = array(1.0,\
    \ 3.0, 5.0, 7.0);\n$d = array(1.4, 4.2, 0.0);\n$e = array(-2.4, 1.0, 1.0);\n\n\
    var_dump(sum_squares($a));\nvar_dump(sum_squares($b));\nvar_dump(sum_squares($c));\n\
    var_dump(sum_squares($d));\nvar_dump(sum_squares($e));\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "float(14)\nfloat(98)\nfloat(84)\nfloat(19.6)\nfloat(7.76)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpk5pt_fmh.php:40\nStack trace:\n\
    #0 /tmp/tmpk5pt_fmh.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpk5pt_fmh.php\
    \ on line 40\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $s = 0;\n    foreach ($lst\
    \ as $i) {\n        $s += pow(ceil($i), 2);\n    }\n    return $s;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17scjazb.php:29\n\
    Stack trace:\n#0 /tmp/tmp17scjazb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp17scjazb.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $v) {\n        $result += pow(ceil($v), 2);\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbokamg1a.php:28\n\
    Stack trace:\n#0 /tmp/tmpbokamg1a.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpbokamg1a.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    // your code here\n    $total\
    \ = 0;\n    foreach ($lst as $element) {\n        $total += pow(ceil($element),\
    \ 2);\n    }\n    return $total;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0s898y7e.php:30\n\
    Stack trace:\n#0 /tmp/tmp0s898y7e.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0s898y7e.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $res = 0;\n    for ($i =\
    \ 0; $i < count($lst); $i++) {\n        $res += pow(ceil($lst[$i]), 2);\n    }\n\
    \    return $res;\n}\necho sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\necho\
    \ sum_squares(array(1.0, 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0, 3.0,\
    \ 5.0, 7.0)) . \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\necho\
    \ sum_squares(array(-2.4, 1.0, 1.0)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3gar8i5.php:33\n\
    Stack trace:\n#0 /tmp/tmpo3gar8i5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpo3gar8i5.php\
    \ on line 33\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum_sq = 0;\n    foreach\
    \ ($lst as $elem) {\n        $sum_sq += pow(ceil($elem), 2);\n    }\n    return\
    \ $sum_sq;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf9h8tfq0.php:29\n\
    Stack trace:\n#0 /tmp/tmpf9h8tfq0.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpf9h8tfq0.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n\tif(!is_array($lst)){\n\t\t\
    return 0;\n\t}\n\t$sum = 0;\n\tforeach($lst as $n){\n\t\t$n = ceil($n);\n\t\t\
    $sum += $n * $n;\n\t}\n\treturn $sum;\n}\nfunction candidate(...$args) {\n   \
    \ return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz447efug.php:32\n\
    Stack trace:\n#0 /tmp/tmpz447efug.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpz447efug.php\
    \ on line 32\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    if(count($lst) == 0) return\
    \ 0;\n    return array_sum(array_map('square', array_map('ceil', $lst)));\n}\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"square\" not found or invalid function\
    \ name in /tmp/tmpmgeb1poh.php:18\nStack trace:\n#0 /tmp/tmpmgeb1poh.php(18):\
    \ array_map('square', Array)\n#1 /tmp/tmpmgeb1poh.php(22): sum_squares(Array)\n\
    #2 /tmp/tmpmgeb1poh.php(26): candidate(Array)\n#3 /tmp/tmpmgeb1poh.php(40): test()\n\
    #4 {main}\n  thrown in /tmp/tmpmgeb1poh.php on line 18\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $total = 0;\n  foreach ($lst\
    \ as $el) {\n    $total += ceil($el) ** 2;\n  }\n  return $total;\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvxlv2fvh.php:28\n\
    Stack trace:\n#0 /tmp/tmpvxlv2fvh.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvxlv2fvh.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $lst = array_map(function($x)\
    \ {\n    return ceil($x);\n  }, $lst);\n  return array_sum(array_map(function($x)\
    \ {\n    return $x * $x;\n  }, $lst));\n}\n\nprint sum_squares(array(1.0, 2.0,\
    \ 3.0)) . \"\\n\";\nprint sum_squares(array(1.0, 4.0, 9.0)) . \"\\n\";\nprint\
    \ sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\";\nprint sum_squares(array(1.4,\
    \ 4.2, 0.0)) . \"\\n\";\nprint sum_squares(array(-2.4, 1.0, 1.0)) . \"\\n\";\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoadm_agi.php:35\n\
    Stack trace:\n#0 /tmp/tmpoadm_agi.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpoadm_agi.php\
    \ on line 35\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    foreach ($lst as $k => $v)\
    \ {\n        $lst[$k] = ceil($v);\n    }\n    return array_sum(array_map(function($item)\
    \ { return $item * $item; }, $lst));\n}\n\nfunction candidate(...$args) {\n  \
    \  return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmypewfcj.php:28\n\
    Stack trace:\n#0 /tmp/tmpmypewfcj.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmypewfcj.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $item) {\n        $item = ceil($item);\n        $result += pow($item,\
    \ 2);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppixy1s0y.php:30\n\
    Stack trace:\n#0 /tmp/tmppixy1s0y.php(44): test()\n#1 {main}\n  thrown in /tmp/tmppixy1s0y.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $arr = array_map(function($a)\
    \ { return ceil($a); }, $lst);\n    return array_sum(array_map(function($a) {\
    \ return $a * $a; }, $arr));\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hqjo6rw.php:25\n\
    Stack trace:\n#0 /tmp/tmp7hqjo6rw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7hqjo6rw.php\
    \ on line 25\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($num)\
    \ {\n        return pow(ceil($num), 2);\n    }, $lst));\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrmx3ehh.php:27\n\
    Stack trace:\n#0 /tmp/tmpkrmx3ehh.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkrmx3ehh.php\
    \ on line 27\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $key => $value) {\n    $sum += pow(ceil($value), 2);\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj2qb5xdg.php:29\n\
    Stack trace:\n#0 /tmp/tmpj2qb5xdg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpj2qb5xdg.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map('square',\
    \ $lst));\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"square\" not found or invalid function\
    \ name in /tmp/tmpmp6jxay2.php:17\nStack trace:\n#0 /tmp/tmpmp6jxay2.php(17):\
    \ array_map('square', Array)\n#1 /tmp/tmpmp6jxay2.php(21): sum_squares(Array)\n\
    #2 /tmp/tmpmp6jxay2.php(25): candidate(Array)\n#3 /tmp/tmpmp6jxay2.php(39): test()\n\
    #4 {main}\n  thrown in /tmp/tmpmp6jxay2.php on line 17\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $arr = array_map(function($elem)\
    \ {\n        return ceil($elem);\n    }, $lst);\n    return array_sum(array_map(function($elem)\
    \ {\n        return $elem * $elem;\n    }, $arr));\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zsg0dup.php:29\n\
    Stack trace:\n#0 /tmp/tmp1zsg0dup.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1zsg0dup.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $item) {\n        $result += ceil($item) ** 2;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0yz2pimm.php:29\n\
    Stack trace:\n#0 /tmp/tmp0yz2pimm.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0yz2pimm.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $arr = array_map(function($i)\
    \ {\n        return ceil($i);\n    }, $lst);\n    $arr = array_map(function($i)\
    \ {\n        return $i*$i;\n    }, $arr);\n    return array_sum($arr);\n}\necho\
    \ sum_squares(array(1.0, 2.0, 3.0)) . PHP_EOL;\necho sum_squares(array(1.0, 4.0,\
    \ 9.0)) . PHP_EOL;\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . PHP_EOL;\necho\
    \ sum_squares(array(1.4, 4.2, 0.0)) . PHP_EOL;\necho sum_squares(array(-2.4, 1.0,\
    \ 1.0)) . PHP_EOL;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppf_jhm9u.php:35\n\
    Stack trace:\n#0 /tmp/tmppf_jhm9u.php(49): test()\n#1 {main}\n  thrown in /tmp/tmppf_jhm9u.php\
    \ on line 35\n"
  timestamp: 1660028799
- exit_code: 0
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $element) {\n        $result += (int) ceil($element) ** 2;\n    }\n\
    \    return $result;\n}\n\n$test = array(1.0, 2.0, 3.0);\necho sum_squares($test)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '14

    '
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n\tfor ($i = 0; $i < count($lst);\
    \ $i++) {\n\t\t$lst[$i] = ceil($lst[$i]);\n\t\t$lst[$i] = $lst[$i] * $lst[$i];\n\
    \t}\n\treturn array_sum($lst);\n}\necho sum_squares(array(1.0, 2.0, 3.0)) . \"\
    <br>\";\necho sum_squares(array(1.0, 4.0, 9.0)) . \"<br>\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)) . \"<br>\";\necho sum_squares(array(1.4, 4.2, 0.0)) . \"<br>\"\
    ;\necho sum_squares(array(-2.4, 1.0, 1.0)) . \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14<br>98<br>84<br>29<br>6<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdlc94av4.php:34\nStack trace:\n#0 /tmp/tmpdlc94av4.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdlc94av4.php on line 34\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  foreach ($lst as $key => $value)\
    \ {\n    $lst[$key] = round($value);\n  }\n  return array_sum(array_map(function($a)\
    \ { return $a * $a; }, $lst));\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3kvu7ya.php:28\n\
    Stack trace:\n#0 /tmp/tmpg3kvu7ya.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpg3kvu7ya.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < count($lst); $i++) {\n    $sum += ceil($lst[$i]) ** 2;\n  }\n  return $sum;\n\
    }\necho sum_squares(array(1.0, 2.0, 3.0));\necho \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0));\necho \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho\
    \ \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0));\necho \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5tjvmh5.php:38\n\
    Stack trace:\n#0 /tmp/tmpx5tjvmh5.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpx5tjvmh5.php\
    \ on line 38\n"
  timestamp: 1660028799
- exit_code: 0
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $value) {\n        $result += (int) ceil($value) * (int) ceil($value);\n\
    \    }\n    return $result;\n}\n\necho sum_squares(array(1.0, 2.0, 3.0));\necho\
    \ \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"\\n\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0));\necho \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho\
    \ \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0));\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '14

    98

    84

    29

    6

    '
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $key => $value) {\n    $sum += ceil($value) ** 2;\n  }\n  return $sum;\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphlxwl2mn.php:28\n\
    Stack trace:\n#0 /tmp/tmphlxwl2mn.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphlxwl2mn.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $result = 0;\n  for ($i =\
    \ 0; $i < count($lst); $i++) {\n    $result += ceil($lst[$i]) ** 2;\n  }\n  return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6o6ozb4s.php:28\n\
    Stack trace:\n#0 /tmp/tmp6o6ozb4s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp6o6ozb4s.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $arr = [];\n    foreach\
    \ ($lst as $key => $value) {\n        $arr[] = ceil($value);\n    }\n    $result\
    \ = 0;\n    foreach ($arr as $key => $value) {\n        $result += $value * $value;\n\
    \    }\n    return $result;\n}\necho sum_squares(array(1.0, 2.0, 3.0)) . PHP_EOL;\
    \ // 14\necho sum_squares(array(1.0, 4.0, 9.0)) . PHP_EOL; // 98\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)) . PHP_EOL; // 84\necho sum_squares(array(1.4, 4.2, 0.0)) . PHP_EOL;\
    \ // 29\necho sum_squares(array(-2.4, 1.0, 1.0)) . PHP_EOL; // 6\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyd3s4ghd.php:37\n\
    Stack trace:\n#0 /tmp/tmpyd3s4ghd.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpyd3s4ghd.php\
    \ on line 37\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $res = 0;\n  foreach ($lst\
    \ as $el) {\n    $res += ceil($el) ** 2;\n  }\n  return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmb1rqjc.php:29\n\
    Stack trace:\n#0 /tmp/tmppmb1rqjc.php(43): test()\n#1 {main}\n  thrown in /tmp/tmppmb1rqjc.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $key => $value) {\n        $value = ceil($value);\n        $sum += $value\
    \ ** 2;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ecihin2.php:30\n\
    Stack trace:\n#0 /tmp/tmp5ecihin2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5ecihin2.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 0
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return (int)array_sum(array_map(function($item)\
    \ {\n    return $item * $item;\n  }, array_map('ceil', $lst)));\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\necho \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"\
    \\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho \"\\n\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0));\necho \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0));\necho \"\
    \\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '14

    98

    84

    29

    6

    '
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map(function($num)\
    \ {\n    return ceil($num) ** 2;\n  }, $lst));\n}\nprint_r(sum_squares([1.0, 2.0,\
    \ 3.0]) . \"\\n\");\nprint_r(sum_squares([1.0, 4.0, 9.0]) . \"\\n\");\nprint_r(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]) . \"\\n\");\nprint_r(sum_squares([1.4, 4.2, 0.0]) . \"\\n\"\
    );\nprint_r(sum_squares([-2.4, 1.0, 1.0]) . \"\\n\");\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ko8lbor.php:31\n\
    Stack trace:\n#0 /tmp/tmp2ko8lbor.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp2ko8lbor.php\
    \ on line 31\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  foreach ($lst as $value) {\n\
    \    $new_lst[] = ceil($value) ** 2;\n  }\n  return array_sum($new_lst);\n}\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_vt6m23.php:27\n\
    Stack trace:\n#0 /tmp/tmpe_vt6m23.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpe_vt6m23.php\
    \ on line 27\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $lst = array_map(function($x)\
    \ { return ceil($x); }, $lst);\n  return array_reduce($lst, function($a, $b) {\
    \ return $a + pow($b, 2); }, 0);\n}\n$cases = array(\n  array(1.0, 2.0, 3.0),\n\
    \  array(1.0, 4.0, 9.0),\n  array(1.0, 3.0, 5.0, 7.0),\n  array(1.4, 4.2, 0.0),\n\
    \  array(-2.4, 1.0, 1.0),\n);\nforeach ($cases as $case) {\n  echo sum_squares($case)\
    \ . \"\\n\";\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps5m5xzx8.php:35\n\
    Stack trace:\n#0 /tmp/tmps5m5xzx8.php(49): test()\n#1 {main}\n  thrown in /tmp/tmps5m5xzx8.php\
    \ on line 35\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $array_of_elements = array_map(function($x)\
    \ {\n        return ceil($x);\n    }, $lst);\n    return array_sum(array_map(function($x)\
    \ {\n        return $x*$x;\n    }, $array_of_elements));\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7niii7en.php:29\n\
    Stack trace:\n#0 /tmp/tmp7niii7en.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7niii7en.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map(function($x)\
    \ { return pow(ceil($x), 2); }, $lst));\n}\nfunction candidate(...$args) {\n \
    \   return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpss2pzgod.php:24\n\
    Stack trace:\n#0 /tmp/tmpss2pzgod.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpss2pzgod.php\
    \ on line 24\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $ret = 0;\n    foreach ($lst\
    \ as $el) {\n        $ret += ceil($el) * ceil($el);\n    }\n    return $ret;\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpopewqluh.php:29\n\
    Stack trace:\n#0 /tmp/tmpopewqluh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpopewqluh.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $number) {\n    $number = ceil($number);\n    $sum += pow($number, 2);\n\
    \  }\n  return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpumuyq96a.php:29\n\
    Stack trace:\n#0 /tmp/tmpumuyq96a.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpumuyq96a.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < count($lst); $i++) {\n    $sum += ceil($lst[$i]) * ceil($lst[$i]);\n  }\n\
    \  return $sum;\n}\n\necho '>>> lst(array(1.0, 2.0, 3.0))' . PHP_EOL;\necho sum_squares(array(1.0,\
    \ 2.0, 3.0)) . PHP_EOL;\necho '>>> lst(array(1.0, 4.0, 9.0))' . PHP_EOL;\necho\
    \ sum_squares(array(1.0, 4.0, 9.0)) . PHP_EOL;\necho '>>> lst(array(1.0, 3.0,\
    \ 5.0, 7.0))' . PHP_EOL;\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . PHP_EOL;\n\
    echo '>>> lst(array(1.4, 4.2, 0.0))' . PHP_EOL;\necho sum_squares(array(1.4, 4.2,\
    \ 0.0)) . PHP_EOL;\necho '>>> lst(array(-2.4, 1.0, 1.0))' . PHP_EOL;\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . PHP_EOL;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ">>> lst(array(1.0, 2.0, 3.0))\n14\n>>> lst(array(1.0, 4.0, 9.0))\n98\n\
    >>> lst(array(1.0, 3.0, 5.0, 7.0))\n84\n>>> lst(array(1.4, 4.2, 0.0))\n29\n>>>\
    \ lst(array(-2.4, 1.0, 1.0))\n6\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpfm9uu633.php:39\nStack trace:\n#0 /tmp/tmpfm9uu633.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmpfm9uu633.php on line 39\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $num) {\n    $sum += ceil($num) ** 2;\n  }\n  return $sum;\n}\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\necho \"<br>\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"\
    <br>\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho \"<br>\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0));\necho \"<br>\";\necho sum_squares(array(-2.4, 1.0, 1.0));\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14<br>98<br>84<br>29<br>6\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaoxxffkj.php:37\nStack trace:\n#0 /tmp/tmpaoxxffkj.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaoxxffkj.php on line 37\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $a = array_map('ceil', $lst);\n\
    \    return array_sum(array_map(function($b) { return $b*$b; }, $a));\n}\n\n$a\
    \ = array(1.0, 2.0, 3.0);\n$b = array(1.0, 4.0, 9.0);\n$c = array(1.0, 3.0, 5.0,\
    \ 7.0);\n$d = array(1.4, 4.2, 0.0);\n$e = array(-2.4, 1.0, 1.0);\necho sum_squares($a)\
    \ . PHP_EOL;\necho sum_squares($b) . PHP_EOL;\necho sum_squares($c) . PHP_EOL;\n\
    echo sum_squares($d) . PHP_EOL;\necho sum_squares($e) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6cekv6z.php:36\n\
    Stack trace:\n#0 /tmp/tmp_6cekv6z.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp_6cekv6z.php\
    \ on line 36\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  if (empty($lst)) {\n    return\
    \ 0;\n  }\n  $total = 0;\n  foreach ($lst as $value) {\n    $total += ceil($value)\
    \ ** 2;\n  }\n  return $total;\n}\n\nvar_dump(sum_squares(array(1.0, 2.0, 3.0)));\
    \ // 14\nvar_dump(sum_squares(array(1.0, 4.0, 9.0))); // 98\nvar_dump(sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0))); // 84\nvar_dump(sum_squares(array(1.4, 4.2, 0.0))); // 29\n\
    var_dump(sum_squares(array(-2.4, 1.0, 1.0))); // 6\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "float(14)\nfloat(98)\nfloat(84)\nfloat(29)\nfloat(6)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmphjpusck4.php:37\nStack trace:\n#0 /tmp/tmphjpusck4.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphjpusck4.php on line 37\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $total = 0;\n    foreach\
    \ ($lst as $value) {\n        $total += $value * $value;\n    }\n    return $total;\n\
    }\necho sum_squares(array(1.0, 2.0, 3.0)) . PHP_EOL;\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . PHP_EOL;\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . PHP_EOL;\n\
    echo sum_squares(array(1.4, 4.2, 0.0)) . PHP_EOL;\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . PHP_EOL;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n19.6\n7.76\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppsi7ad_4.php:33\nStack trace:\n#0 /tmp/tmppsi7ad_4.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmppsi7ad_4.php on line 33\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $result = 0;\n  foreach ($lst\
    \ as $v) {\n    $result += pow(ceil($v), 2);\n  }\n  return $result;\n}\n\nvar_dump(sum_squares(array(1.0,\
    \ 2.0, 3.0)));\nvar_dump(sum_squares(array(1.0, 4.0, 9.0)));\nvar_dump(sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)));\nvar_dump(sum_squares(array(1.4, 4.2, 0.0)));\nvar_dump(sum_squares(array(-2.4,\
    \ 1.0, 1.0)));\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "float(14)\nfloat(98)\nfloat(84)\nfloat(29)\nfloat(6)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpmi_ynrp5.php:34\nStack trace:\n#0 /tmp/tmpmi_ynrp5.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmi_ynrp5.php on line 34\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($x)\
    \ {\n        return pow(ceil($x), 2);\n    }, $lst));\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjytizydc.php:26\n\
    Stack trace:\n#0 /tmp/tmpjytizydc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpjytizydc.php\
    \ on line 26\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($n)\
    \ {\n        return ceil($n) ** 2;\n    }, $lst));\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1usg9yeq.php:27\n\
    Stack trace:\n#0 /tmp/tmp1usg9yeq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1usg9yeq.php\
    \ on line 27\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($n)\
    \ { return pow(ceil($n), 2); }, $lst));\n}\n\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyl9ptyp.php:25\n\
    Stack trace:\n#0 /tmp/tmphyl9ptyp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphyl9ptyp.php\
    \ on line 25\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $new_array = [];\n    foreach\
    \ ($lst as $num) {\n        $new_array[] = ceil($num);\n    }\n    $sum = 0;\n\
    \    foreach ($new_array as $num) {\n        $sum += $num * $num;\n    }\n   \
    \ return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2liahfmb.php:32\n\
    Stack trace:\n#0 /tmp/tmp2liahfmb.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp2liahfmb.php\
    \ on line 32\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $arr = array_map('ceil',\
    \ $lst);\n    $result = array_map(function($value) {\n        return $value *\
    \ $value;\n    }, $arr);\n    return array_sum($result);\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7_67dmn.php:28\n\
    Stack trace:\n#0 /tmp/tmpa7_67dmn.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpa7_67dmn.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $num) {\n        $result += ceil($num) ** 2;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3oop6u6.php:28\n\
    Stack trace:\n#0 /tmp/tmpl3oop6u6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpl3oop6u6.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $result = 0;\n  foreach ($lst\
    \ as $key => $value) {\n    $result += ceil($value) * ceil($value);\n  }\n  return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsn4ha4xr.php:28\n\
    Stack trace:\n#0 /tmp/tmpsn4ha4xr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpsn4ha4xr.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    // enter your code here\n\
    \    $sum = 0;\n    foreach ($lst as $value) {\n        $sum += ceil($value) *\
    \ ceil($value);\n    }\n    return $sum;\n}\necho sum_squares(array(1.0, 2.0,\
    \ 3.0));\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyonm2i7v.php:30\n\
    Stack trace:\n#0 /tmp/tmpyonm2i7v.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpyonm2i7v.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $num) {\n        $result += ceil($num) * ceil($num);\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0jb4fje.php:28\n\
    Stack trace:\n#0 /tmp/tmpz0jb4fje.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpz0jb4fje.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $x) {\n        $result += ceil($x) ** 2;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2j4lf1ce.php:28\n\
    Stack trace:\n#0 /tmp/tmp2j4lf1ce.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2j4lf1ce.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($x)\
    \ {\n        return pow(ceil($x), 2);\n    }, $lst));\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\necho sum_squares(array(1.0, 4.0, 9.0));\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0));\necho sum_squares(array(1.4, 4.2, 0.0));\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0));\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wo2kc87.php:32\n\
    Stack trace:\n#0 /tmp/tmp7wo2kc87.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp7wo2kc87.php\
    \ on line 32\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $lst = array_map('ceil', $lst);\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += pow($num, 2);\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2t3iej6v.php:30\n\
    Stack trace:\n#0 /tmp/tmp2t3iej6v.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2t3iej6v.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    if (count($lst) == 0) return\
    \ 0;\n    return pow(ceil($lst[0]), 2) + sum_squares(array_slice($lst, 1));\n\
    }\n\necho sum_squares(array(1.0, 2.0, 3.0)). \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)). \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)). \"\\n\";\n\
    echo sum_squares(array(1.4, 4.2, 0.0)). \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)). \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppitqb3e_.php:31\n\
    Stack trace:\n#0 /tmp/tmppitqb3e_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppitqb3e_.php\
    \ on line 31\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    if (empty($lst)) {\n   \
    \     return 0;\n    }\n\n    $sum = 0;\n    foreach ($lst as $item) {\n     \
    \   $item = ceil($item);\n        $sum += $item * $item;\n    }\n\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpacw418hs.php:35\n\
    Stack trace:\n#0 /tmp/tmpacw418hs.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpacw418hs.php\
    \ on line 35\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($element)\
    \ {\n        return pow(ceil($element), 2);\n    }, $lst));\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkye0fbhy.php:27\n\
    Stack trace:\n#0 /tmp/tmpkye0fbhy.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkye0fbhy.php\
    \ on line 27\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    foreach ($lst as $key =>\
    \ $value) {\n        $value = ceil($value);\n        $result += $value * $value;\n\
    \    }\n    return $result;\n}\n\necho sum_squares(array(1.0, 2.0, 3.0)) . \"\
    <br>\";\necho sum_squares(array(1.0, 4.0, 9.0)) . \"<br>\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)) . \"<br>\";\necho sum_squares(array(1.4, 4.2, 0.0)) . \"<br>\"\
    ;\necho sum_squares(array(-2.4, 1.0, 1.0)) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $result in /tmp/tmp1ivhamwe.php on line 19\n\
    14<br>\nWarning: Undefined variable $result in /tmp/tmp1ivhamwe.php on line 19\n\
    98<br>\nWarning: Undefined variable $result in /tmp/tmp1ivhamwe.php on line 19\n\
    84<br>\nWarning: Undefined variable $result in /tmp/tmp1ivhamwe.php on line 19\n\
    29<br>\nWarning: Undefined variable $result in /tmp/tmp1ivhamwe.php on line 19\n\
    6<br>\nWarning: Undefined variable $result in /tmp/tmp1ivhamwe.php on line 19\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ivhamwe.php:34\nStack\
    \ trace:\n#0 /tmp/tmp1ivhamwe.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1ivhamwe.php\
    \ on line 34\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $lst = array_map(function($n)\
    \ {\n    return ceil($n);\n  }, $lst);\n  return array_sum(array_map(function($n)\
    \ {\n    return $n * $n;\n  }, $lst));\n}\necho sum_squares(array(1.0, 2.0, 3.0));\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdh_fb3_.php:30\n\
    Stack trace:\n#0 /tmp/tmpxdh_fb3_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxdh_fb3_.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $item) {\n        $sum += pow(ceil($item), 2);\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2peylaq2.php:28\n\
    Stack trace:\n#0 /tmp/tmp2peylaq2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2peylaq2.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($x)\
    \ {\n      return pow(round($x), 2);\n    }, $lst));\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaywm5dx0.php:26\n\
    Stack trace:\n#0 /tmp/tmpaywm5dx0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpaywm5dx0.php\
    \ on line 26\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $squares = array_map(function($i)\
    \ { return ceil($i); }, $lst);\n    $sum = 0;\n    foreach ($squares as $square)\
    \ {\n        $sum += pow($square, 2);\n    }\n    return $sum;\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2uu847c9.php:31\n\
    Stack trace:\n#0 /tmp/tmp2uu847c9.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp2uu847c9.php\
    \ on line 31\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  // $newArray = [];\n  // foreach\
    \ ($lst as $value) {\n  //   $newArray[] = ceil($value);\n  // }\n  // $newArray\
    \ = array_map('ceil', $lst);\n  // return array_sum(array_map('ceil', $lst));\n\
    \  // return array_sum(array_map(function($v) {\n  //   return ceil($v);\n  //\
    \ }, $lst));\n  // return array_sum(array_map('pow', array_map('ceil', $lst),\
    \ array_fill(0, count($lst), 2)));\n  // return array_sum(array_map(function($v)\
    \ {\n  //   return pow(ceil($v), 2);\n  // }, $lst));\n  // return array_sum(array_map(function($v)\
    \ {\n  //   return pow($v, 2);\n  // }, array_map('ceil', $lst)));\n  // return\
    \ array_sum(array_map(function($v) {\n  //   return $v ** 2;\n  // }, array_map('ceil',\
    \ $lst)));\n  // return array_sum(array_map(function($v) {\n  //   return $v **\
    \ 2;\n  // }, array_map(function($v) {\n  //   return ceil($v);\n  // }, $lst)));\n\
    \  // return array_sum(array_map(function($v) {\n  //   return $v ** 2;\n  //\
    \ }, array_map(function($v) {\n  //   return ceil($v);\n  // }, $lst)));\n  //\
    \ return array_sum(array_map(function($v) {\n  //   return $v ** 2;\n  // }, array_map(function($v)\
    \ {\n  //   return ceil($v);\n  // }, $lst)));\n  // return array_sum(array_map(function($v)\
    \ {\n  //   return $v ** 2;\n  // }, array_map(function($v) {\n  //   return ceil($v);\n\
    \  // }, $lst))\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 16 in /tmp/tmp0fv_qq5q.php on line 75

    '
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($v)\
    \ {\n        return pow(ceil($v), 2);\n    }, $lst));\n}\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgh0socm.php:27\n\
    Stack trace:\n#0 /tmp/tmpbgh0socm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbgh0socm.php\
    \ on line 27\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $s = 0;\n    foreach ($lst\
    \ as $e) {\n        $s += ceil($e) ** 2;\n    }\n    return $s;\n}\necho sum_squares(array(1.0,\
    \ 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0)) . \"\\n\";\necho\
    \ sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0)) . \"\\n\";\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv0x21dm5.php:33\n\
    Stack trace:\n#0 /tmp/tmpv0x21dm5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpv0x21dm5.php\
    \ on line 33\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  for ($i = 0;\
    \ $i < count($lst); $i++) {\n    $sum += ceil($lst[$i])**2;\n  }\n  return $sum;\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcd98fdkw.php:28\n\
    Stack trace:\n#0 /tmp/tmpcd98fdkw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpcd98fdkw.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $n) {\n        $sum += pow($n, 2);\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmqmr1vpg.php:29\n\
    Stack trace:\n#0 /tmp/tmpmqmr1vpg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmqmr1vpg.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n$s = 0;\n  for ($i = 0; $i <\
    \ count($lst); $i++) {\n    $s += ceil($lst[$i]) ** 2;\n  }\n  return $s;\n}\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0vwlme4.php:28\n\
    Stack trace:\n#0 /tmp/tmpf0vwlme4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpf0vwlme4.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $new_array = [];\n  foreach\
    \ ($lst as $number) {\n    $number = ceil($number);\n    $new_array[] = $number\
    \ * $number;\n  }\n  return array_sum($new_array);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpma5s8p_c.php:30\n\
    Stack trace:\n#0 /tmp/tmpma5s8p_c.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpma5s8p_c.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $num) {\n        $result += round($num, 0, PHP_ROUND_HALF_UP) ** 2;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5c84jmnj.php:29\n\
    Stack trace:\n#0 /tmp/tmp5c84jmnj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5c84jmnj.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $new_array = [];\n  foreach\
    \ ($lst as $value) {\n    array_push($new_array, ceil($value));\n  }\n  $sum =\
    \ 0;\n  foreach ($new_array as $value) {\n    $sum += $value**2;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpndzcmmsz.php:33\n\
    Stack trace:\n#0 /tmp/tmpndzcmmsz.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpndzcmmsz.php\
    \ on line 33\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $value) {\n    $sum += ceil($value) * ceil($value);\n  }\n  return $sum;\n\
    }\n\necho sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\"\
    ;\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0crxx232.php:34\n\
    Stack trace:\n#0 /tmp/tmp0crxx232.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp0crxx232.php\
    \ on line 34\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($x)\
    \ { return $x * $x; }, array_map('ceil', $lst)));\n}\n\n$lst = array(1.0, 2.0,\
    \ 3.0);\necho sum_squares($lst) . \"\\n\";\n$lst = array(1.0, 4.0, 9.0);\necho\
    \ sum_squares($lst) . \"\\n\";\n$lst = array(1.0, 3.0, 5.0, 7.0);\necho sum_squares($lst)\
    \ . \"\\n\";\n$lst = array(1.4, 4.2, 0.0);\necho sum_squares($lst) . \"\\n\";\n\
    $lst = array(-2.4, 1.0, 1.0);\necho sum_squares($lst) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyfboza7_.php:35\n\
    Stack trace:\n#0 /tmp/tmpyfboza7_.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpyfboza7_.php\
    \ on line 35\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $total = 0;\n    foreach\
    \ ($lst as $key => $num) {\n        $num = ceil($num);\n        $num = pow($num,\
    \ 2);\n        $total += $num;\n    }\n    return $total;\n}\n$lst = array(1.0,\
    \ 4.0, 9.0);\necho sum_squares($lst);\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "98\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgr0us1ww.php:32\n\
    Stack trace:\n#0 /tmp/tmpgr0us1ww.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpgr0us1ww.php\
    \ on line 32\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $value) {\n        $result += ceil($value) * ceil($value);\n    }\n\
    \    return $result;\n}\necho sum_squares(array(1.0, 2.0, 3.0));\necho '<br>';\n\
    echo sum_squares(array(1.0, 4.0, 9.0));\necho '<br>';\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0));\necho '<br>';\necho sum_squares(array(1.4, 4.2, 0.0));\necho\
    \ '<br>';\necho sum_squares(array(-2.4, 1.0, 1.0));\necho '<br>';\necho '<br>';\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14<br>98<br>84<br>29<br>6<br><br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpwjdqd6md.php:40\nStack trace:\n#0 /tmp/tmpwjdqd6md.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwjdqd6md.php on line 40\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map(function($x)\
    \ {\n    return ceil($x) ** 2;\n  }, $lst));\n}\n$array = array(1.0, 2.0, 3.0);\n\
    var_dump(sum_squares($array));\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "float(14)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxl1h4qy_.php:28\n\
    Stack trace:\n#0 /tmp/tmpxl1h4qy_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxl1h4qy_.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $int) {\n        $sum += ceil($int) ** 2;\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf7pxuf5.php:29\n\
    Stack trace:\n#0 /tmp/tmpmf7pxuf5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmf7pxuf5.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $lst = array_map('ceil',\
    \ $lst);\n    $lst = array_map('pow', $lst, array_fill(0, count($lst), 2));\n\
    \    return array_sum($lst);\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfj1jv6y.php:26\n\
    Stack trace:\n#0 /tmp/tmpbfj1jv6y.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbfj1jv6y.php\
    \ on line 26\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $num) {\n    $sum += ceil($num) * ceil($num);\n  }\n  return $sum;\n}\n\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfeq5_khn.php:29\n\
    Stack trace:\n#0 /tmp/tmpfeq5_khn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfeq5_khn.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $n) {\n        $result += ($n <= 0 ? ceil($n) : floor($n)) * ($n <=\
    \ 0 ? ceil($n) : floor($n));\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj79roh6z.php:29\n\
    Stack trace:\n#0 /tmp/tmpj79roh6z.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpj79roh6z.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return round(array_sum(array_map(function($i)\
    \ { return ceil($i) * ceil($i); }, $lst)));\n}\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ol9wgfa.php:24\n\
    Stack trace:\n#0 /tmp/tmp7ol9wgfa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7ol9wgfa.php\
    \ on line 24\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $value) {\n        $sum += ceil($value) * ceil($value);\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuav25pwh.php:29\n\
    Stack trace:\n#0 /tmp/tmpuav25pwh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpuav25pwh.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map(function($value)\
    \ {\n    return pow(ceil($value), 2);\n  }, $lst));\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphkof9swb.php:26\n\
    Stack trace:\n#0 /tmp/tmphkof9swb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphkof9swb.php\
    \ on line 26\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $lst = array_map(function($num)\
    \ {\n    return ceil($num);\n  }, $lst);\n  return array_sum(array_map(function($num)\
    \ {\n    return $num * $num;\n  }, $lst));\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03c7bgro.php:30\n\
    Stack trace:\n#0 /tmp/tmp03c7bgro.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp03c7bgro.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $l) {\n    $sum += pow(ceil($l), 2);\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9etg8k0p.php:28\n\
    Stack trace:\n#0 /tmp/tmp9etg8k0p.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9etg8k0p.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n\t$return_val = array_sum(array_map(function($x)\
    \ {\n\t\treturn pow(ceil($x), 2);\n\t}, $lst));\n\treturn $return_val;\n}\n\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp04e3uryt.php:28\n\
    Stack trace:\n#0 /tmp/tmp04e3uryt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp04e3uryt.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $number) {\n    $number = ceil($number);\n    $sum += $number * $number;\n\
    \  }\n  return $sum;\n}\n\necho sum_squares(array(1.0, 2.0, 3.0));\necho \"\\\
    n\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"\\n\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0));\necho \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho\
    \ \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0));\necho \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmdsaufti.php:41\n\
    Stack trace:\n#0 /tmp/tmpmdsaufti.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpmdsaufti.php\
    \ on line 41\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $res = 0;\n  foreach ($lst\
    \ as $item) {\n    $res += round($item) ** 2;\n  }\n  return $res;\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8wuuzc7_.php:28\n\
    Stack trace:\n#0 /tmp/tmp8wuuzc7_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8wuuzc7_.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $result = 0;\n  for ($i =\
    \ 0; $i < count($lst); $i++) {\n    $result += ceil($lst[$i]) * ceil($lst[$i]);\n\
    \  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoctjmig7.php:28\n\
    Stack trace:\n#0 /tmp/tmpoctjmig7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpoctjmig7.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $lst = array_map(function($val)\
    \ {\n    return ceil($val);\n  }, $lst);\n  $sum = 0;\n  foreach ($lst as $val)\
    \ {\n    $sum += pow($val, 2);\n  }\n  return $sum;\n}\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\necho \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"\
    \\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho \"\\n\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0));\necho \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0));\necho \"\
    \\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmm0akvfd.php:41\n\
    Stack trace:\n#0 /tmp/tmpmm0akvfd.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpmm0akvfd.php\
    \ on line 41\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    for ($i\
    \ = 0; $i < count($lst); $i++) {\n        $lst[$i] = ceil($lst[$i]);\n       \
    \ $result += $lst[$i] * $lst[$i];\n    }\n    return $result;\n}\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\necho \"<br>\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"\
    <br>\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho \"<br>\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0));\necho \"<br>\";\necho sum_squares(array(-2.4, 1.0, 1.0));\necho\
    \ \"<br>\";\necho sum_squares(array(2.2, 2.2, 2.2));\necho \"<br>\";\necho sum_squares(array(3.2,\
    \ 3.2, 3.2));\necho \"<br>\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14<br>98<br>84<br>29<br>6<br>27<br>48<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpny174ks7.php:43\nStack trace:\n#0 /tmp/tmpny174ks7.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpny174ks7.php on line 43\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $lst = array_map(function($elem)\
    \ {\n        return ceil($elem);\n    }, $lst);\n    $sum = 0;\n    foreach ($lst\
    \ as $elem) {\n        $sum += $elem * $elem;\n    }\n    return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4c064fqr.php:31\n\
    Stack trace:\n#0 /tmp/tmp4c064fqr.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp4c064fqr.php\
    \ on line 31\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $item) {\n    $sum += ceil($item) ** 2;\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50xo7my7.php:29\n\
    Stack trace:\n#0 /tmp/tmp50xo7my7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp50xo7my7.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    for ($i =\
    \ 0; $i < count($lst); $i++) {\n        $sum += intval(ceil($lst[$i]));\n    }\n\
    \    return $sum*$sum;\n}\n\nprint_r(sum_squares(array(1.0, 3.0, 5.0, 7.0)));\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "256\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzjhdgo6_.php:31\n\
    Stack trace:\n#0 /tmp/tmpzjhdgo6_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpzjhdgo6_.php\
    \ on line 31\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map(function($n)\
    \ {\n    return pow(ceil($n), 2);\n  }, $lst));\n}\n\necho sum_squares(array(1.0,\
    \ 4.0, 9.0));\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "98\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxnqvfdak.php:28\n\
    Stack trace:\n#0 /tmp/tmpxnqvfdak.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxnqvfdak.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n   $squares = array_map(function($e)\
    \ { return pow(ceil($e), 2); }, $lst);\n   return array_sum($squares);\n}\n$tests\
    \ = [\n   [0, [1.0, 2.0, 3.0]],\n   [98, [1.0, 4.0, 9.0]],\n   [84, [1.0, 3.0,\
    \ 5.0, 7.0]],\n   [29, [1.4, 4.2, 0.0]],\n   [6, [-2.4, 1.0, 1.0]],\n];\n\nforeach\
    \ ($tests as $test) {\n   $actual = sum_squares($test[1]);\n   $expected = $test[0];\n\
    \   if ($actual != $expected) {\n      $s = var_export($test[1], true);\n    \
    \  echo \"sum_squares($s) = $actual, expected $expected\\n\";\n   }\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "sum_squares(array (\n  0 => 1.0,\n  1 => 2.0,\n  2 => 3.0,\n)) = 14, expected\
    \ 0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0ersqcb.php:41\n\
    Stack trace:\n#0 /tmp/tmpz0ersqcb.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpz0ersqcb.php\
    \ on line 41\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  foreach ($lst as $key => $num)\
    \ {\n    $lst[$key] = ceil($num);\n  }\n  $result = 0;\n  foreach ($lst as $num)\
    \ {\n    $result += $num ** 2;\n  }\n  return $result;\n}\n\necho sum_squares([1.0,\
    \ 2.0, 3.0]) . PHP_EOL;\necho sum_squares([1.0, 4.0, 9.0]) . PHP_EOL;\necho sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]) . PHP_EOL;\necho sum_squares([1.4, 4.2, 0.0]) . PHP_EOL;\necho\
    \ sum_squares([-2.4, 1.0, 1.0]) . PHP_EOL;\nfunction candidate(...$args) {\n \
    \   return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_a3aska.php:37\n\
    Stack trace:\n#0 /tmp/tmp7_a3aska.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp7_a3aska.php\
    \ on line 37\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $num = 0;\n    foreach ($lst\
    \ as $element) {\n        $num += ($element > 0) ? ceil($element) : floor($element);\n\
    \    }\n    return $num**2;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0gj8ws2.php:28\n\
    Stack trace:\n#0 /tmp/tmpl0gj8ws2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpl0gj8ws2.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += ceil($num) ** 2;\n    }\n    return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3pz0r9ht.php:28\n\
    Stack trace:\n#0 /tmp/tmp3pz0r9ht.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3pz0r9ht.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sq_arr = array_map(function($x)\
    \ { return ceil($x) * ceil($x); }, $lst);\n  return array_sum($sq_arr);\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyv5ymvs.php:25\n\
    Stack trace:\n#0 /tmp/tmpyyv5ymvs.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyyv5ymvs.php\
    \ on line 25\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $lst = array_map(\n    \
    \    function ($a) {\n            return ceil($a);\n        },\n        $lst\n\
    \    );\n    return array_sum(array_map(\n        function ($a) {\n          \
    \  return $a * $a;\n        },\n        $lst\n    ));\n}\n\necho sum_squares([1.0,\
    \ 2.0, 3.0]) . \"\\n\";\necho sum_squares([1.0, 4.0, 9.0]) . \"\\n\";\necho sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]) . \"\\n\";\necho sum_squares([1.4, 4.2, 0.0]) . \"\\n\";\necho\
    \ sum_squares([-2.4, 1.0, 1.0]) . \"\\n\";\nfunction candidate(...$args) {\n \
    \   return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1nfe8qz.php:41\n\
    Stack trace:\n#0 /tmp/tmpk1nfe8qz.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpk1nfe8qz.php\
    \ on line 41\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  $lst = array_map('ceil',\
    \ $lst);\n  foreach ($lst as $v) {\n    $sum += $v * $v;\n  }\n  return $sum;\n\
    }\necho sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\"\
    ;\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwey80ulf.php:34\n\
    Stack trace:\n#0 /tmp/tmpwey80ulf.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpwey80ulf.php\
    \ on line 34\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $n = [];\n  foreach ($lst\
    \ as $num) {\n    $n[] = ceil($num) * ceil($num);\n  }\n  return array_sum($n);\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03hg34fp.php:28\n\
    Stack trace:\n#0 /tmp/tmp03hg34fp.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp03hg34fp.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($elem)\
    \ {\n        return $elem ** 2;\n    }, array_map(function($elem) {\n        return\
    \ ceil($elem);\n    }, $lst)));\n}\n\nprint_r(sum_squares(array(1.0, 2.0, 3.0)));\n\
    echo \"\\n\";\nprint_r(sum_squares(array(1.0, 4.0, 9.0)));\necho \"\\n\";\nprint_r(sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)));\necho \"\\n\";\nprint_r(sum_squares(array(1.4, 4.2, 0.0)));\n\
    echo \"\\n\";\nprint_r(sum_squares(array(-2.4, 1.0, 1.0)));\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxbymp8m.php:39\n\
    Stack trace:\n#0 /tmp/tmptxbymp8m.php(53): test()\n#1 {main}\n  thrown in /tmp/tmptxbymp8m.php\
    \ on line 39\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $lst_sqr = array_map(function($el)\
    \ { return ceil($el) * ceil($el); }, $lst);\n  return array_sum($lst_sqr);\n}\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d9st77b.php:26\n\
    Stack trace:\n#0 /tmp/tmp8d9st77b.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8d9st77b.php\
    \ on line 26\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $arr = array_map('ceil',\
    \ $lst);\n    return array_sum(array_map(function($a) { return $a*$a; }, $arr));\n\
    }\n\necho sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\"\
    ;\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph91mbcfs.php:31\n\
    Stack trace:\n#0 /tmp/tmph91mbcfs.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph91mbcfs.php\
    \ on line 31\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $squared_sum = 0;\n  foreach\
    \ ($lst as $number) {\n    $number = ceil($number);\n    $squared_sum += $number\
    \ * $number;\n  }\n  return $squared_sum;\n}\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk8juflw6.php:29\n\
    Stack trace:\n#0 /tmp/tmpk8juflw6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk8juflw6.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    foreach ($lst as $value)\
    \ {\n        $value = ceil($value);\n        $sum[] = pow($value, 2);\n    }\n\
    \    return array_sum($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5w2997ui.php:29\n\
    Stack trace:\n#0 /tmp/tmp5w2997ui.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5w2997ui.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    for ($i =\
    \ 0; $i < count($lst); $i++) {\n        $sum += $lst[$i] * $lst[$i];\n    }\n\
    \    return $sum;\n}\n$arr = array(1.4, 4.2, 0.0);\necho sum_squares($arr);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "19.6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpokfk09ys.php:30\n\
    Stack trace:\n#0 /tmp/tmpokfk09ys.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpokfk09ys.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $n) {\n        $sum += pow(ceil($n), 2);\n    }\n    return $sum;\n}\n\n\
    $data = [1.0, 2.0, 3.0];\necho sum_squares($data);\necho PHP_EOL;\n$data = [1.0,\
    \ 4.0, 9.0];\necho sum_squares($data);\necho PHP_EOL;\n$data = [1.0, 3.0, 5.0,\
    \ 7.0];\necho sum_squares($data);\necho PHP_EOL;\n$data = [1.4, 4.2, 0.0];\necho\
    \ sum_squares($data);\necho PHP_EOL;\n$data = [-2.4, 1.0, 1.0];\necho sum_squares($data);\n\
    echo PHP_EOL;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29pwlw_h.php:44\n\
    Stack trace:\n#0 /tmp/tmp29pwlw_h.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp29pwlw_h.php\
    \ on line 44\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n\t$total = 0;\n\t$lst = array_map(function($x)\
    \ {\n\t\treturn ceil($x);\n\t}, $lst);\n\tforeach ($lst as $number) {\n\t\t$total\
    \ += pow($number, 2);\n\t}\n\treturn $total;\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0));\necho sum_squares(array(1.0, 4.0, 9.0));\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0));\necho sum_squares(array(1.4, 4.2, 0.0));\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0));\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55gt7c1q.php:37\n\
    Stack trace:\n#0 /tmp/tmp55gt7c1q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp55gt7c1q.php\
    \ on line 37\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $c=0;\n    for($i=0;$i<count($lst);$i++){\n\
    \        $a=ceil($lst[$i]);\n        $c=$c+$a*$a;\n    }\n    return $c;\n}\n\
    $lst = [0.3, 0.5, 0.1];\necho \"Input: \";\nprint_r($lst);\necho \"<br>\";\necho\
    \ \"Output: \";\necho sum_squares($lst);\nfunction candidate(...$args) {\n   \
    \ return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Input: Array\n(\n    [0] => 0.3\n    [1] => 0.5\n    [2] => 0.1\n)\n<br>Output:\
    \ 3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa3whk9ds.php:35\n\
    Stack trace:\n#0 /tmp/tmpa3whk9ds.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpa3whk9ds.php\
    \ on line 35\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    for ($i =\
    \ 0; $i < count($lst); $i++) {\n        $sum += ceil($lst[$i]) ** 2;\n    }\n\
    \    return $sum;\n}\n\n$tests = [[[1.0, 2.0, 3.0], 14],\n          [[1.0, 4.0,\
    \ 9.0], 98],\n          [[1.0, 3.0, 5.0, 7.0], 84],\n          [[1.4, 4.2, 0.0],\
    \ 29],\n          [[-2.4, 1.0, 1.0], 6]];\n\nfor ($i = 0; $i < count($tests);\
    \ $i++) {\n    if (sum_squares($tests[$i][0]) != $tests[$i][1]) {\n        echo(\"\
    Error!\\n\");\n    }\n}\n\necho(\"Success!\\n\");\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Success!\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhgepm4u.php:42\n\
    Stack trace:\n#0 /tmp/tmphhgepm4u.php(56): test()\n#1 {main}\n  thrown in /tmp/tmphhgepm4u.php\
    \ on line 42\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $new_lst = array_map(function($num)\
    \ {\n        return ceil($num);\n    }, $lst);\n    $sum = 0;\n    foreach ($new_lst\
    \ as $i) {\n        $sum += $i ** 2;\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9byggim1.php:31\n\
    Stack trace:\n#0 /tmp/tmp9byggim1.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9byggim1.php\
    \ on line 31\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $results = array_map(function($x)\
    \ {\n    return ceil($x);\n  }, $lst);\n  $squared_results = array_map(function($x)\
    \ {\n    return $x * $x;\n  }, $results);\n  return array_sum($squared_results);\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd364aq7v.php:30\n\
    Stack trace:\n#0 /tmp/tmpd364aq7v.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpd364aq7v.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $lst = array_map('ceil', $lst);\n\
    \  return array_sum(array_map(function($x) { return $x * $x; }, $lst));\n}\n\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoda9dprz.php:26\n\
    Stack trace:\n#0 /tmp/tmpoda9dprz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpoda9dprz.php\
    \ on line 26\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $arr = array_map('ceil',\
    \ $lst);\n    $arr = array_map('pow', $arr, array_fill(0, count($arr), 2));\n\
    \    return array_sum($arr);\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfyhjmmti.php:26\n\
    Stack trace:\n#0 /tmp/tmpfyhjmmti.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfyhjmmti.php\
    \ on line 26\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $arr = array_map(function($n)\
    \ {\n        return ceil($n);\n    }, $lst);\n    $squares = array_map(function($n)\
    \ {\n        return $n * $n;\n    }, $arr);\n    return array_sum($squares);\n\
    }\n\necho sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\"\
    ;\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxaeo2f29.php:36\n\
    Stack trace:\n#0 /tmp/tmpxaeo2f29.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpxaeo2f29.php\
    \ on line 36\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    foreach ($lst as $key =>\
    \ $value) {\n        $lst[$key] = ceil($value);\n    }\n    return array_sum(array_map(function($n)\
    \ { return $n ** 2; }, $lst));\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp880munlu.php:28\n\
    Stack trace:\n#0 /tmp/tmp880munlu.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp880munlu.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($item)\
    \ {\n        return $item ** 2;\n    }, array_map('ceil', $lst)));\n}\n\n$a =\
    \ array(1.0, 2.0, 3.0);\nprint_r(sum_squares($a));\nprint_r(\"\\n\");\n$a = array(1.0,\
    \ 4.0, 9.0);\nprint_r(sum_squares($a));\nprint_r(\"\\n\");\n$a = array(1.0, 3.0,\
    \ 5.0, 7.0);\nprint_r(sum_squares($a));\nprint_r(\"\\n\");\n$a = array(1.4, 4.2,\
    \ 0.0);\nprint_r(sum_squares($a));\nprint_r(\"\\n\");\n$a = array(-2.4, 1.0, 1.0);\n\
    print_r(sum_squares($a));\nprint_r(\"\\n\");\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaz7qz_wf.php:42\n\
    Stack trace:\n#0 /tmp/tmpaz7qz_wf.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpaz7qz_wf.php\
    \ on line 42\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $new = [];\n  foreach ($lst\
    \ as $num) {\n    array_push($new, ceil($num));\n  }\n  $new = array_map('square',\
    \ $new);\n  return array_sum($new);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"square\" not found or invalid function\
    \ name in /tmp/tmpff9o3nvw.php:21\nStack trace:\n#0 /tmp/tmpff9o3nvw.php(21):\
    \ array_map('square', Array)\n#1 /tmp/tmpff9o3nvw.php(26): sum_squares(Array)\n\
    #2 /tmp/tmpff9o3nvw.php(30): candidate(Array)\n#3 /tmp/tmpff9o3nvw.php(44): test()\n\
    #4 {main}\n  thrown in /tmp/tmpff9o3nvw.php on line 21\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n\t$lst = array_map('ceil', $lst);\n\
    \treturn array_sum(array_map(function($x) { return $x * $x; }, $lst));\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoaxdn9v8.php:25\n\
    Stack trace:\n#0 /tmp/tmpoaxdn9v8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpoaxdn9v8.php\
    \ on line 25\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($e)\
    \ { return pow(ceil($e), 2); }, $lst));\n}\n\nvar_dump(sum_squares(array(1.0,\
    \ 2.0, 3.0)));\nvar_dump(sum_squares(array(1.0, 4.0, 9.0)));\nvar_dump(sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)));\nvar_dump(sum_squares(array(1.4, 4.2, 0.0)));\nvar_dump(sum_squares(array(-2.4,\
    \ 1.0, 1.0)));\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "float(14)\nfloat(98)\nfloat(84)\nfloat(29)\nfloat(6)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpi1zunr3c.php:30\nStack trace:\n#0 /tmp/tmpi1zunr3c.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi1zunr3c.php on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $item) {\n        $sum += ceil($item) ** 2;\n    }\n    return $sum;\n}\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc3iphpfe.php:29\n\
    Stack trace:\n#0 /tmp/tmpc3iphpfe.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpc3iphpfe.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($x)\
    \ {\n        return ceil($x) ** 2;\n    }, $lst));\n}\n\nprint sum_squares([1.0,\
    \ 2.0, 3.0]) . \"\\n\";\nprint sum_squares([1.0, 4.0, 9.0]) . \"\\n\";\nprint\
    \ sum_squares([1.0, 3.0, 5.0, 7.0]) . \"\\n\";\nprint sum_squares([1.4, 4.2, 0.0])\
    \ . \"\\n\";\nprint sum_squares([-2.4, 1.0, 1.0]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoiu3zy5j.php:32\n\
    Stack trace:\n#0 /tmp/tmpoiu3zy5j.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpoiu3zy5j.php\
    \ on line 32\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $rounded_lst = array_map(function($x)\
    \ { return ceil($x); }, $lst);\n  $sum = 0;\n  foreach ($rounded_lst as $v) {\n\
    \    $sum += $v * $v;\n  }\n  return $sum;\n}\necho sum_squares(array(1.0, 2.0,\
    \ 3.0)) . \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0)) . \"\\n\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0)) . \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\"\
    ;\necho sum_squares(array(-2.4, 1.0, 1.0)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfj8q5g4.php:34\n\
    Stack trace:\n#0 /tmp/tmpbfj8q5g4.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpbfj8q5g4.php\
    \ on line 34\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $num) {\n        $result += pow(ceil($num), 2);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtssx715.php:29\n\
    Stack trace:\n#0 /tmp/tmpdtssx715.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpdtssx715.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $total = 0;\n  $ceil = array_map('ceil',\
    \ $lst);\n  foreach ($ceil as $value) {\n    $total += $value ** 2;\n  }\n  return\
    \ $total;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3lszx9kr.php:30\n\
    Stack trace:\n#0 /tmp/tmp3lszx9kr.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3lszx9kr.php\
    \ on line 30\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n  \n  for($i=0;$i<count($lst);$i++){\n      $lst[$i]\
    \ = ceil($lst[$i]);\n      $lst[$i] = $lst[$i]*$lst[$i];\n  }\n  return array_sum($lst);\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqav8g_aw.php:32\n\
    Stack trace:\n#0 /tmp/tmpqav8g_aw.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpqav8g_aw.php\
    \ on line 32\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $square_lst = array_map(function($num)\
    \ { return ceil($num) * ceil($num); }, $lst);\n  return array_sum($square_lst);\n\
    }\necho sum_squares(array(1.0, 2.0, 3.0));\necho \"<br>\";\necho sum_squares(array(1.0,\
    \ 4.0, 9.0));\necho \"<br>\";\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\n\
    echo \"<br>\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho \"<br>\";\necho\
    \ sum_squares(array(-2.4, 1.0, 1.0));\necho \"<br>\";\necho \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14<br>98<br>84<br>29<br>6<br><br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpcu7rxr58.php:36\nStack trace:\n#0 /tmp/tmpcu7rxr58.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcu7rxr58.php on line 36\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    // remove decimal points\n\
    \    $rounded = array_map(function($x) {\n        return round($x);\n    }, $lst);\n\
    \    // square each number\n    $squared = array_map(function($x) {\n        return\
    \ $x * $x;\n    }, $rounded);\n    // return the sum\n    return array_sum($squared);\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpazg3357c.php:33\n\
    Stack trace:\n#0 /tmp/tmpazg3357c.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpazg3357c.php\
    \ on line 33\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $i = 0;\n    $size = count($lst);\n\
    \    while ($i < $size) {\n        $lst[$i] = ceil($lst[$i]);\n        $i++;\n\
    \    }\n    return array_sum(array_map(function ($n) {\n        return $n * $n;\n\
    \    }, $lst));\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9e0e_kwx.php:32\n\
    Stack trace:\n#0 /tmp/tmp9e0e_kwx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9e0e_kwx.php\
    \ on line 32\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    foreach\
    \ ($lst as $key => $value) {\n        $value = ceil($value);\n        $value =\
    \ $value*$value;\n        $result += $value;\n    }\n    return $result;\n}\n\n\
    print sum_squares(array(1.0, 2.0, 3.0));\nprint sum_squares(array(1.0, 4.0, 9.0));\n\
    print sum_squares(array(1.0, 3.0, 5.0, 7.0));\nprint sum_squares(array(1.4, 4.2,\
    \ 0.0));\nprint sum_squares(array(-2.4, 1.0, 1.0));\nprint sum_squares(array(1.4,\
    \ 2.6, 5.6, 8.6));\nprint sum_squares(array(1.2, 4.2, 7.2, 1.8));\nprint sum_squares(array(1.4,\
    \ 6.8, 9.2, 5.0));\nprint sum_squares(array(1.2, 3.6, 4.8, 6.0));\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1498842961309717881\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_7kbf2o.php:40\n\
    Stack trace:\n#0 /tmp/tmpx_7kbf2o.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpx_7kbf2o.php\
    \ on line 40\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $result = 0;\n  foreach ($lst\
    \ as $number) {\n    $result += ceil($number) ** 2;\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8n4u7rez.php:29\n\
    Stack trace:\n#0 /tmp/tmp8n4u7rez.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8n4u7rez.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $result = 0;\n  foreach ($lst\
    \ as $number) {\n    $result += pow(ceil($number), 2);\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmskqdsp_.php:28\n\
    Stack trace:\n#0 /tmp/tmpmskqdsp_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmskqdsp_.php\
    \ on line 28\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    for ($i\
    \ = 0; $i < count($lst); $i++) {\n        $result += ceil($lst[$i])**2;\n    }\n\
    \    return $result;\n}\n\n$a = array(1.0, 2.0, 3.0);\necho sum_squares($a) .\
    \ \"\\n\";\n$a = array(1.0, 4.0, 9.0);\necho sum_squares($a) . \"\\n\";\n$a =\
    \ array(1.0, 3.0, 5.0, 7.0);\necho sum_squares($a) . \"\\n\";\n$a = array(1.4,\
    \ 4.2, 0.0);\necho sum_squares($a) . \"\\n\";\n$a = array(-2.4, 1.0, 1.0);\necho\
    \ sum_squares($a) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd9z771x1.php:40\n\
    Stack trace:\n#0 /tmp/tmpd9z771x1.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpd9z771x1.php\
    \ on line 40\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $result = 0;\n    for ($i\
    \ = 0; $i < count($lst); $i++) {\n        $result += pow(ceil($lst[$i]), 2);\n\
    \    }\n    return $result;\n}\n\necho sum_squares(array(1.0, 2.0, 3.0));\necho\
    \ \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0));\necho \"\\n\";\necho sum_squares(array(1.0,\
    \ 3.0, 5.0, 7.0));\necho \"\\n\";\necho sum_squares(array(1.4, 4.2, 0.0));\necho\
    \ \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0));\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ewptdn5.php:39\n\
    Stack trace:\n#0 /tmp/tmp3ewptdn5.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp3ewptdn5.php\
    \ on line 39\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map(function($n)\
    \ {\n    return $n * $n;\n  }, array_map(function($n) {\n    return ceil($n);\n\
    \  }, $lst)));\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4j9jw6b.php:29\n\
    Stack trace:\n#0 /tmp/tmpr4j9jw6b.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpr4j9jw6b.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $total=0;\n    foreach($lst\
    \ as $n){\n        $total+=ceil($n)*ceil($n);\n    }\n    return $total;\n}\n\
    echo sum_squares(array(1.0, 2.0, 3.0)) . \"\\n\"; // 14\necho sum_squares(array(1.0,\
    \ 4.0, 9.0)) . \"\\n\"; // 98\necho sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\
    \\n\"; // 84\necho sum_squares(array(1.4, 4.2, 0.0)) . \"\\n\"; // 29\necho sum_squares(array(-2.4,\
    \ 1.0, 1.0)) . \"\\n\"; // 6\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplswct4zk.php:33\n\
    Stack trace:\n#0 /tmp/tmplswct4zk.php(47): test()\n#1 {main}\n  thrown in /tmp/tmplswct4zk.php\
    \ on line 33\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n\t$newArray = array();\n\tforeach\
    \ ($lst as $key => $value) {\n\t\t$newArray[] = ceil($value);\n\t}\n\t$result\
    \ = 0;\n\tforeach ($newArray as $key => $value) {\n\t\t$result += $value * $value;\n\
    \t}\n\treturn $result;\n}\necho sum_squares(array(1.0, 2.0, 3.0));\necho sum_squares(array(1.0,\
    \ 4.0, 9.0));\necho sum_squares(array(1.0, 3.0, 5.0, 7.0));\necho sum_squares(array(1.4,\
    \ 4.2, 0.0));\necho sum_squares(array(-2.4, 1.0, 1.0));\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppijzv27u.php:37\n\
    Stack trace:\n#0 /tmp/tmppijzv27u.php(51): test()\n#1 {main}\n  thrown in /tmp/tmppijzv27u.php\
    \ on line 37\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map(function($n)\
    \ {\n    return pow(ceil($n), 2);\n  }, $lst));\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj84fmgg5.php:27\n\
    Stack trace:\n#0 /tmp/tmpj84fmgg5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpj84fmgg5.php\
    \ on line 27\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($el)\
    \ {\n        return pow(ceil($el), 2);\n    }, $lst));\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_qqkzp79.php:27\n\
    Stack trace:\n#0 /tmp/tmp_qqkzp79.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_qqkzp79.php\
    \ on line 27\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map('intval',\
    \ array_map('ceil', $lst)));\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0zd_t4g2.php:25\n\
    Stack trace:\n#0 /tmp/tmp0zd_t4g2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0zd_t4g2.php\
    \ on line 25\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $lst = array_map(function($x)\
    \ {\n    return ceil($x);\n  }, $lst);\n  return array_sum(array_map(function($x)\
    \ {\n    return $x * $x;\n  }, $lst));\n}\nfunction candidate(...$args) {\n  \
    \  return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpegfgeff5.php:29\n\
    Stack trace:\n#0 /tmp/tmpegfgeff5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpegfgeff5.php\
    \ on line 29\n"
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $s = 0;\n  foreach ($lst as\
    \ $v) {\n    $s += $v * $v;\n  }\n  return $s;\n}\n\n$array = array(1.0, 2.0,\
    \ 3.0);\necho sum_squares($array);\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp853aweko.php:31\n\
    Stack trace:\n#0 /tmp/tmp853aweko.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp853aweko.php\
    \ on line 31\n"
  timestamp: 1660028799
- exit_code: 0
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $result = 0;\n  foreach ($lst\
    \ as $item) {\n    $result += (int)ceil($item) * (int)ceil($item);\n  }\n  return\
    \ $result;\n}\n\n$lst = array(1.0, 2.0, 3.0);\necho sum_squares($lst);\necho \"\
    \\n\";\n$lst = array(1.0, 4.0, 9.0);\necho sum_squares($lst);\necho \"\\n\";\n\
    $lst = array(1.0, 3.0, 5.0, 7.0);\necho sum_squares($lst);\necho \"\\n\";\n$lst\
    \ = array(1.4, 4.2, 0.0);\necho sum_squares($lst);\necho \"\\n\";\n$lst = array(-2.4,\
    \ 1.0, 1.0);\necho sum_squares($lst);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '14

    98

    84

    29

    6

    '
  timestamp: 1660028799
- exit_code: 255
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  return array_sum(array_map(function($x)\
    \ {\n    return $x * $x;\n  }, array_map('ceil', $lst)));\n}\n\necho sum_squares(array(1.0,\
    \ 2.0, 3.0)) . \"\\n\";\necho sum_squares(array(1.0, 4.0, 9.0)) . \"\\n\";\necho\
    \ sum_squares(array(1.0, 3.0, 5.0, 7.0)) . \"\\n\";\necho sum_squares(array(1.4,\
    \ 4.2, 0.0)) . \"\\n\";\necho sum_squares(array(-2.4, 1.0, 1.0)) . \"\\n\";\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlllvth6.php:32\n\
    Stack trace:\n#0 /tmp/tmpmlllvth6.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpmlllvth6.php\
    \ on line 32\n"
  timestamp: 1660028799
- exit_code: 0
  program: "<?php\n// You are given an array of numbers.\n// You need to return the\
    \ sum of squared numbers in the given array,\n// round each element in the array\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    return array_sum(array_map(function($n)\
    \ {\n        return $n * $n;\n    }, array_map(function($n) {\n        return\
    \ (int) ceil($n);\n    }, $lst)));\n}\n\necho sum_squares([1.0, 2.0, 3.0]);\n\
    echo \"\\n\";\necho sum_squares([1.0, 4.0, 9.0]);\necho \"\\n\";\necho sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]);\necho \"\\n\";\necho sum_squares([1.4, 4.2, 0.0]);\necho \"\
    \\n\";\necho sum_squares([-2.4, 1.0, 1.0]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '14

    98

    84

    29

    6

    '
  timestamp: 1660028799

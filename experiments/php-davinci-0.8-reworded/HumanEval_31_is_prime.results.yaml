language: php
name: HumanEval_31_is_prime
results:
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if($n == 1) {\n        return false;\n    }\n    for($i = 2; $i < $n; $i++)\
    \ {\n        if($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n\n  $i = 2;\n  while ($i < $n) {\n \
    \   if ($n % $i == 0) {\n      return false;\n    }\n    $i++;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n === 2) {\n      \
    \  return true;\n    }\n    if ($n % 2 === 0) {\n        return false;\n    }\n\
    \    for ($i = 3; $i < $n; $i += 2) {\n        if ($n % $i === 0) {\n        \
    \    return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\necho is_prime(6) . \"\\n\";\n\
    echo is_prime(101) . \"\\n\";\necho is_prime(11) . \"\\n\";\necho is_prime(13441)\
    \ . \"\\n\";\necho is_prime(61) . \"\\n\";\necho is_prime(4) . \"\\n\";\necho\
    \ is_prime(1) . \"\\n\";\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n1\n1\n1\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13k17v6q.php:43\n\
    Stack trace:\n#0 /tmp/tmp13k17v6q.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp13k17v6q.php\
    \ on line 43\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgrdbiib5.php:36\n\
    Stack trace:\n#0 /tmp/tmpgrdbiib5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgrdbiib5.php\
    \ on line 36\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n <= 1) {\n        return false;\n    }\n    $i = 2;\n    while ($i\
    \ < $n) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($x = 2; $x < $n; $x++) {\n        if ($n % $x == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl426_8hc.php:36\n\
    Stack trace:\n#0 /tmp/tmpl426_8hc.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpl426_8hc.php\
    \ on line 36\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    // A variable to tell us whether it's prime\n    $is_prime = True;\n    //\
    \ A variable to iterate through\n    $i = 2;\n    while ($i < $n) {\n        if\
    \ ($n % $i == 0) {\n            $is_prime = False;\n        }\n        $i++;\n\
    \    }\n    return $is_prime;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpicio5ies.php:42\n\
    Stack trace:\n#0 /tmp/tmpicio5ies.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpicio5ies.php\
    \ on line 42\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i <= sqrt($n); $i++)\
    \ {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n\n  for ($i = 2; $i <= sqrt($n); $i++)\
    \ {\n    if ($n % $i == 0) {\n      return false;\n    }\n  }\n\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if($n == 1) {\n        return false;\n    }\n    if($n == 2) {\n        return\
    \ true;\n    }\n    if($n % 2 == 0) {\n        return false;\n    }\n    for($i\
    \ = 3; $i <= ceil(sqrt($n)); $i++) {\n        if($n % $i == 0) {\n           \
    \ return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxtfof6g.php:37\n\
    Stack trace:\n#0 /tmp/tmptxtfof6g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptxtfof6g.php\
    \ on line 37\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n == 1) {\n\t\treturn false;\n\t}\n\t$max = sqrt($n);\n\tfor ($i = 2; $i\
    \ <= $max; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\
    \treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if($n == 1) {\n        return false;\n    }\n    if($n == 2) {\n        return\
    \ true;\n    }\n    if($n%2 == 0) {\n        return false;\n    }\n    for($i\
    \ = 3; $i <= floor(sqrt($n)); $i+=2) {\n        if($n%$i == 0) {\n           \
    \ return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    $i = 2;\n    while ($i <\
    \ $n) {\n        if ($n % $i == 0) {\n            return false;\n        }\n \
    \       $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgrdbiib5.php:36\n\
    Stack trace:\n#0 /tmp/tmpgrdbiib5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgrdbiib5.php\
    \ on line 36\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n == 1) {\n\t\treturn false;\n\t}\n\tif ($n == 2) {\n\t\treturn true;\n\
    \t}\n\tif ($n % 2 == 0) {\n\t\treturn false;\n\t}\n\tfor ($i = 3; $i < sqrt($n);\
    \ $i+=2) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n\necho is_prime(1) . \"\\n\";\necho is_prime(2) . \"\\n\";\necho is_prime(3)\
    \ . \"\\n\";\necho is_prime(4) . \"\\n\";\necho is_prime(5) . \"\\n\";\necho is_prime(6)\
    \ . \"\\n\";\necho is_prime(13441) . \"\\n\";\necho is_prime(61) . \"\\n\";\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    1

    1


    1


    1

    1

    '
  timestamp: 1660012069
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  for ($i = 2; $i < $n; $i++) {\n  \
    \  if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012069
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 2) {\n        return true;\n    }\n    if ($n == 1 || $n % 2 ==\
    \ 0) {\n        return false;\n    }\n    for ($i = 3; $i <= floor(sqrt($n));\
    \ $i += 2) {\n        if ($n % $i == 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012069
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    } elseif ($n == 2) {\n       \
    \ return true;\n    } else {\n        for ($i = 2; $i < $n; $i++) {\n        \
    \    if ($n % $i == 0) {\n                return false;\n            }\n     \
    \   }\n        return true;\n    }\n}\n\necho is_prime(6) . \"\\n\";\necho is_prime(101)\
    \ . \"\\n\";\necho is_prime(11) . \"\\n\";\necho is_prime(13441) . \"\\n\";\n\
    echo is_prime(61) . \"\\n\";\necho is_prime(4) . \"\\n\";\necho is_prime(1) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    1

    1

    1

    1



    '
  timestamp: 1660012069
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t$isPrime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\
    \t\t\t$isPrime = false;\n\t\t}\n\t}\n\treturn $isPrime;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0trb3bo9.php:37\n\
    Stack trace:\n#0 /tmp/tmp0trb3bo9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0trb3bo9.php\
    \ on line 37\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n == 1) {\n    return false;\n  }\n  $max = sqrt($n);\n  for ($i = 2;\
    \ $i <= $max; $i++) {\n    if ($n % $i == 0) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    for ($i = 2; $i <= $n\
    \ / 2; $i++) {\n        if ($n % $i == 0) {\n            return false;\n     \
    \   }\n    }\n\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t// only need to check numbers from 2 to n/2\n\t$is_prime = true;\n\tfor ($i\
    \ = 2; $i <= ($n / 2); $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t$is_prime = false;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn $is_prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeuecvc7w.php:40\n\
    Stack trace:\n#0 /tmp/tmpeuecvc7w.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpeuecvc7w.php\
    \ on line 40\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t$prime = false;\n\tif ($n > 1) {\n\t\tfor ($i = 2; $i < $n; $i++) {\n\t\t\t\
    if ($n % $i == 0) {\n\t\t\t\t$prime = false;\n\t\t\t\tbreak;\n\t\t\t} else {\n\
    \t\t\t\t$prime = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n <= 1) {\n        return false;\n    }\n    for ($i = 2; $i <= $n /\
    \ 2; $i++) {\n        if ($n % $i == 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n\t$isPrime = true;\n\
    \tif ($n == 1) return false;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i\
    \ == 0) {\n\t\t\t$isPrime = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $isPrime;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  $number_of_divisors = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($n % $i\
    \ == 0) {\n      $number_of_divisors++;\n    }\n  }\n  if ($number_of_divisors\
    \ == 2) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t$prime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\
    \t\t$prime = false;\n\t\t}\n\t}\n\treturn $prime;\n}\necho is_prime(101);\necho\
    \ \"<br>\";\necho is_prime(6);\necho \"<br>\";\necho is_prime(11);\necho \"<br>\"\
    ;\necho is_prime(4);\necho \"<br>\";\necho is_prime(1);\necho \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br><br>1<br><br>1<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpqsos3l1j.php:47\nStack trace:\n#0 /tmp/tmpqsos3l1j.php(56): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqsos3l1j.php on line 47\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i\
    \ == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $counter = 0;\n    if ($n == 1) {\n        return false;\n    }\n    for\
    \ ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $counter++;\n\
    \        }\n    }\n    if ($counter == 0) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgrdbiib5.php:36\n\
    Stack trace:\n#0 /tmp/tmpgrdbiib5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgrdbiib5.php\
    \ on line 36\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n <= 1) {\n        return false;\n    }\n    for ($i = 2; $i <= $n/2;\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif($n <= 1) {\n\t\treturn false;\n\t}\n\tfor($i = 2; $i <= $n / 2; $i++) {\n\
    \t\tif($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n <= 1) return false;\n\t$i = 2;\n\twhile ($i * $i <= $n) {\n\t\tif ($n\
    \ % $i == 0) return false;\n\t\t$i++;\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif($n <= 0) return false;\n\tif($n == 1) return false;\n\tif($n == 2) return\
    \ true;\n\tfor($i = 2; $i <= $n-1; $i++) {\n\t\tif($n % $i == 0) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n == 2) {\n\t\treturn true;\n\t} elseif ($n < 2 || $n % 2 == 0) {\n\t\t\
    return false;\n\t} else {\n\t\tfor ($i = 3; $i <= $n / 2; $i++) {\n\t\t\tif ($n\
    \ % $i == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n <= 1) {\n        return false;\n    }\n\n    for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n\n  if ($n == 2) {\n    return true;\n\
    \  }\n\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return\
    \ false;\n    }\n  }\n\n  return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $is_prime = true;\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i\
    \ == 0) {\n            $is_prime = false;\n            break;\n        }\n   \
    \ }\n    return $is_prime;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1pohsp4z.php:39\n\
    Stack trace:\n#0 /tmp/tmp1pohsp4z.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1pohsp4z.php\
    \ on line 39\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $i = 2;\n    while ($i < $n) {\n        if ($n % $i == 0) {\n           \
    \ return false;\n        }\n        $i += 1;\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy96pa5ny.php:38\n\
    Stack trace:\n#0 /tmp/tmpy96pa5ny.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpy96pa5ny.php\
    \ on line 38\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ( $n == 1 ) {\n\t\treturn false;\n\t}\n\tfor ( $i = 2; $i < $n; $i++ ) {\n\
    \t\tif ( $n % $i == 0 ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\
    \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n === 1) {\n        return false;\n    }\n    if ($n === 2) {\n    \
    \    return true;\n    }\n    $sqrt = floor(sqrt($n));\n    for ($i = 2; $i <=\
    \ $sqrt; $i++) {\n        if ($n % $i === 0) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 1) {\n    return false;\n  }\n  for ($i = 2; $i < $n; $i++) {\n  \
    \  if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0htcr02.php:40\n\
    Stack trace:\n#0 /tmp/tmpf0htcr02.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpf0htcr02.php\
    \ on line 40\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif($n <= 1) return false;\n\tfor($i = 2; $i < $n; $i++) {\n\t\tif($n % $i ==\
    \ 0) return false;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if($n == 2 || $n == 3) {\n    return true;\n  }\n  elseif($n == 1 || $n % 2\
    \ == 0 || $n % 3 == 0) {\n    return false;\n  }\n  else {\n    for($i = 5; $i\
    \ <= floor(sqrt($n)); $i += 6) {\n      if($n % $i == 0 || $n % ($i + 2) == 0)\
    \ {\n        return false;\n      }\n    }\n    return true;\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t// $n must be a natural number greater than 1.\n\tif ($n > 1) {\n\t\t// Loop\
    \ through numbers from 2 to $n / 2.\n\t\tfor ($i = 2; $i <= $n / 2; $i++) {\n\t\
    \t\t// If $n is divisible by $i, it's not prime.\n\t\t\tif ($n % $i == 0) {\n\t\
    \t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t// No number can divide $n, so it's prime.\n\
    \t\treturn true;\n\t}\n\t// If $n is less than 2, it can't be prime.\n\treturn\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t$primality = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\
    \t\t\t$primality = false;\n\t\t}\n\t}\n\treturn $primality;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_jzxkxs.php:38\n\
    Stack trace:\n#0 /tmp/tmpo_jzxkxs.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpo_jzxkxs.php\
    \ on line 38\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t$prime = true;\n\tfor ($i = $n - 1; $i > 1; $i--) {\n\t\tif ($n % $i == 0) {\n\
    \t\t\t$prime = false;\n\t\t}\n\t}\n\treturn $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfi0f48t.php:38\n\
    Stack trace:\n#0 /tmp/tmpmfi0f48t.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpmfi0f48t.php\
    \ on line 38\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i\
    \ == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t$isPrime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\
    \t\t\t$isPrime = false;\n\t\t}\n\t}\n\treturn $isPrime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjisn74qq.php:38\n\
    Stack trace:\n#0 /tmp/tmpjisn74qq.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpjisn74qq.php\
    \ on line 38\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if($n < 2) {\n        return false;\n    }\n    for($i = 2; $i < $n; $i++)\
    \ {\n        if($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho is_prime(61);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n\n  for ($i = 2; $i < $n; $i++) {\n\
    \    if ($n % $i == 0) {\n      return false;\n    }\n  }\n\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t$is_prime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\
    \t\t\t$is_prime = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $is_prime;\n}\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpucahyoyi.php:38\n\
    Stack trace:\n#0 /tmp/tmpucahyoyi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpucahyoyi.php\
    \ on line 38\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  for ($x = 2; $x < $n; $x++) {\n    if ($n % $x == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1o6y62ro.php:36\n\
    Stack trace:\n#0 /tmp/tmp1o6y62ro.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1o6y62ro.php\
    \ on line 36\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif($n < 2) {\n\t\treturn false;\n\t}\n\n\tfor($i = 2; $i <= sqrt($n); $i++)\
    \ {\n\t\tif($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i < $n; $i++) {\n\t\t\
    if ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    $i = 2;\n    while ($i <\
    \ $n) {\n        if ($n % $i == 0) {\n            return false;\n        }\n \
    \       $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n <= 1) {\n    return false;\n  }\n  if ($n <= 3) {\n    return true;\n\
    \  }\n  if ($n % 2 == 0 || $n % 3 == 0) {\n    return false;\n  }\n  $i = 5;\n\
    \  while ($i * $i <= $n) {\n    if ($n % $i == 0 || $n % ($i + 2) == 0) {\n  \
    \    return false;\n    }\n    $i += 6;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n <= 1) {\n        return false;\n    }\n    for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n > 1) {\n\t\t$divisor = 2;\n\t\twhile ($divisor < $n) {\n\t\t\tif ($n\
    \ % $divisor == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t$divisor += 1;\n\t\
    \t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxtfof6g.php:37\n\
    Stack trace:\n#0 /tmp/tmptxtfof6g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptxtfof6g.php\
    \ on line 37\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpar9xi92b.php:37\n\
    Stack trace:\n#0 /tmp/tmpar9xi92b.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpar9xi92b.php\
    \ on line 37\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  \n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7faksi_.php:26\n\
    Stack trace:\n#0 /tmp/tmpj7faksi_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpj7faksi_.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if($n == 1){\n        return false;\n    }\n    for($i = 2; $i < $n; $i++){\n\
    \        if($n % $i == 0){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7g6cpcg2.php:36\n\
    Stack trace:\n#0 /tmp/tmp7g6cpcg2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7g6cpcg2.php\
    \ on line 36\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i < sqrt($n); $i++) {\n\
    \t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmhn8910h.php:39\n\
    Stack trace:\n#0 /tmp/tmpmhn8910h.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpmhn8910h.php\
    \ on line 39\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n === 2) {\n      \
    \  return true;\n    }\n    if ($n % 2 === 0) {\n        return false;\n    }\n\
    \    for ($i = 3; $i < $n; $i += 2) {\n        if ($n % $i === 0) {\n        \
    \    return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnr38mcif.php:26\n\
    Stack trace:\n#0 /tmp/tmpnr38mcif.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnr38mcif.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    if ($n == 2) {\n      \
    \  return true;\n    }\n    $root = sqrt($n);\n    $i = 2;\n    while ($i <= $root)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n     \
    \   $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i <= $n -\
    \ 1; $i++) {\n        if ($n % $i == 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  // if ($n === 1) {\n  //   return false;\n  // }\n  // for ($i = 2; $i < $n;\
    \ $i++) {\n  //   if ($n % $i === 0) {\n  //     return false;\n  //   }\n  //\
    \ }\n  // return true;\n\n  if ($n === 1) {\n    return false;\n  } else if ($n\
    \ === 2) {\n    return true;\n  } else {\n    for ($i = 2; $i < $n; $i++) {\n\
    \      if ($n % $i === 0) {\n        return false;\n      }\n    }\n    return\
    \ true;\n  }\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  // TODO\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8tpcoe2y.php:25\n\
    Stack trace:\n#0 /tmp/tmp8tpcoe2y.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8tpcoe2y.php\
    \ on line 25\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n == 1) {\n\t\treturn false;\n\t}\n\tif ($n == 2) {\n\t\treturn true;\n\
    \t}\n\tif ($n % 2 == 0) {\n\t\treturn false;\n\t}\n\tfor ($i = 3; $i < sqrt($n);\
    \ $i+=2) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\necho is_prime(61);\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tfor ($i = $n - 1; $i > 1; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpip_otsen.php:36\n\
    Stack trace:\n#0 /tmp/tmpip_otsen.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpip_otsen.php\
    \ on line 36\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i <= sqrt($n); $i++) {\n        if ($n % $i == 0) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpydfi9y3_.php:37\n\
    Stack trace:\n#0 /tmp/tmpydfi9y3_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpydfi9y3_.php\
    \ on line 37\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n <= 1) {\n        return false;\n    }\n    for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t$range = range(2, ($n - 1));\n\tforeach ($range as $i) {\n\t\tif (($n % $i)\
    \ == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif($n == 1) {\n\t\treturn false;\n\t}\n\n\tfor($i = 2; $i <= $n / 2; $i++) {\n\
    \t\tif($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\
    \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    //TO-DO\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0x_0omjd.php:27\n\
    Stack trace:\n#0 /tmp/tmp0x_0omjd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0x_0omjd.php\
    \ on line 27\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if($n < 2) {\n        return false;\n    }\n    if($n == 2) {\n        return\
    \ true;\n    }\n    for($i = 2; $i <= $n / 2; $i++) {\n        if($n % $i == 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\necho \"\
    <h2>Return true if a given number is prime, and false otherwise.</h2>\";\necho\
    \ \"is_prime(6): \" . is_prime(6) . \"<br />\";\necho \"is_prime(101): \" . is_prime(101)\
    \ . \"<br />\";\necho \"is_prime(11): \" . is_prime(11) . \"<br />\";\necho \"\
    is_prime(13441): \" . is_prime(13441) . \"<br />\";\necho \"is_prime(61): \" .\
    \ is_prime(61) . \"<br />\";\necho \"is_prime(4): \" . is_prime(4) . \"<br />\"\
    ;\necho \"is_prime(1): \" . is_prime(1) . \"<br />\";\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '<h2>Return true if a given number is prime, and false otherwise.</h2>is_prime(6):
    <br />is_prime(101): 1<br />is_prime(11): 1<br />is_prime(13441): 1<br />is_prime(61):
    1<br />is_prime(4): <br />is_prime(1): <br />'
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n <= 1) {\n    return false;\n  }\n  for ($i = 2; $i < $n; $i++) {\n \
    \   if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i < $n; $i++) {\n\t\t\
    if ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuc6046w5.php:37\n\
    Stack trace:\n#0 /tmp/tmpuc6046w5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpuc6046w5.php\
    \ on line 37\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n == 1) {\n        return false;\n    }\n    for\
    \ ($i = 2; $i < sqrt($n); $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8gbccddm.php:39\n\
    Stack trace:\n#0 /tmp/tmp8gbccddm.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp8gbccddm.php\
    \ on line 39\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n == 1) {\n    return false;\n  }\n  for ($i = 2; $i < $n; $i++) {\n \
    \   if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\necho is_prime(6) . \"\\n\";\necho is_prime(101)\
    \ . \"\\n\";\necho is_prime(11) . \"\\n\";\necho is_prime(13441) . \"\\n\";\n\
    echo is_prime(61) . \"\\n\";\necho is_prime(4) . \"\\n\";\necho is_prime(1) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n1\n1\n1\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqaw2vej.php:43\n\
    Stack trace:\n#0 /tmp/tmpeqaw2vej.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpeqaw2vej.php\
    \ on line 43\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n === 1) {\n\t\treturn false;\n\t}\n\n\tfor ($i = 2; $i < $n; $i++) {\n\
    \t\tif ($n % $i === 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n > 1) {\n        for ($i = 2; $i <= sqrt($n); $i++) {\n           \
    \ if ($n % $i == 0) {\n                return false;\n            }\n        }\n\
    \        return true;\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n < 2) return false;\n\tfor ($i = 2; $i <= sqrt($n); $i++) {\n\t\tif ($n\
    \ % $i == 0) return false;\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t$is_prime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif($n % $i == 0) {\n\
    \t\t\t$is_prime = false;\n\t\t}\n\t}\n\treturn $is_prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrh39aud.php:38\n\
    Stack trace:\n#0 /tmp/tmpbrh39aud.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpbrh39aud.php\
    \ on line 38\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxtfof6g.php:37\n\
    Stack trace:\n#0 /tmp/tmptxtfof6g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptxtfof6g.php\
    \ on line 37\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($x = 2; $x < $n; $x++) {\n        if ($n % $x == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\necho is_prime(6) . \"\\n\"\
    ;\necho is_prime(101) . \"\\n\";\necho is_prime(11) . \"\\n\";\necho is_prime(13441)\
    \ . \"\\n\";\necho is_prime(61) . \"\\n\";\necho is_prime(4) . \"\\n\";\necho\
    \ is_prime(1) . \"\\n\";\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n1\n1\n1\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbcdxuksm.php:44\n\
    Stack trace:\n#0 /tmp/tmpbcdxuksm.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpbcdxuksm.php\
    \ on line 44\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t// check if the number is divisible by 2, if so it is not prime\n\tif ($n %\
    \ 2 == 0 && $n != 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 3; $i < $n; $i+=2)\
    \ {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5il_6v0k.php:41\n\
    Stack trace:\n#0 /tmp/tmp5il_6v0k.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp5il_6v0k.php\
    \ on line 41\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1 || $n == 2) {\n        return true;\n    } else {\n        for\
    \ ($i = 2; $i < $n; $i++) {\n            if ($n % $i == 0) {\n               \
    \ return false;\n            }\n        }\n        return true;\n    }\n}\n\n\
    $res = is_prime(101);\nvar_dump($res);\necho \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\n<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph48rily0.php:45\n\
    Stack trace:\n#0 /tmp/tmph48rily0.php(54): test()\n#1 {main}\n  thrown in /tmp/tmph48rily0.php\
    \ on line 45\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($x = 2; $x < $n; $x++) {\n        if ($n % $x == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ih86gvh.php:37\n\
    Stack trace:\n#0 /tmp/tmp6ih86gvh.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6ih86gvh.php\
    \ on line 37\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n === 1) {\n    return false;\n  }\n  $prime = true;\n  $i = 2;\n  while\
    \ ($i < $n) {\n    if ($n % $i === 0) {\n      $prime = false;\n      break;\n\
    \    }\n    $i++;\n  }\n  return $prime;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    for ($i = 2; $i < $n;\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n == 1) {\n\t\treturn false;\n\t}\n\t$isPrime = true;\n\t$i = 2;\n\twhile\
    \ ($i < $n) {\n\t\tif ($n % $i == 0) {\n\t\t\t$isPrime = false;\n\t\t\tbreak;\n\
    \t\t}\n\t\t$i += 1;\n\t}\n\treturn $isPrime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    // Hint: implement the is_divisible_by function\n    if ($n < 2) {\n    \
    \    return false;\n    }\n    for ($i = 2; $i < $n; $i++) {\n        if (is_divisible_by($n,\
    \ $i)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_divisible_by()\
    \ in /tmp/tmp9t1yd4am.php:23\nStack trace:\n#0 /tmp/tmp9t1yd4am.php(31): is_prime(6)\n\
    #1 /tmp/tmp9t1yd4am.php(35): candidate(6)\n#2 /tmp/tmp9t1yd4am.php(50): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9t1yd4am.php on line 23\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $prime = true;\n    if ( $n == 1 ){\n        $prime = false;\n    } else\
    \ {\n        for ($i = 2; $i < $n; $i++) {\n            if ( $n % $i == 0 ) {\n\
    \                $prime = false;\n            }\n        }\n    }\n    return\
    \ $prime;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $max_check = ceil(sqrt($n));\n    for ($i = 3; $i <= $max_check; $i += 2)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nvar_dump(is_prime(6));\nvar_dump(is_prime(101));\nvar_dump(is_prime(11));\n\
    var_dump(is_prime(13441));\nvar_dump(is_prime(61));\nvar_dump(is_prime(4));\n\
    var_dump(is_prime(1));\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(false)

    bool(true)

    bool(true)

    bool(true)

    bool(true)

    bool(false)

    bool(false)

    '
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n == 2) return true;\n\tif ($n == 1 || $n % 2 == 0) return false;\n\t$max\
    \ = sqrt($n);\n\tfor ($i = 3; $i <= $max; $i++) {\n\t\tif ($n % $i == 0) {\n\t\
    \t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n == 1) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i < $n; $i++) {\n\t\t\
    if ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\necho\
    \ is_prime(6).\"\\n\";\necho is_prime(101).\"\\n\";\necho is_prime(11).\"\\n\"\
    ;\necho is_prime(13441).\"\\n\";\necho is_prime(61).\"\\n\";\necho is_prime(4).\"\
    \\n\";\necho is_prime(1).\"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    1

    1

    1

    1



    '
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t// assuming it is not prime and then check if it is\n\t$prime = false;\n\tif\
    \ ($n == 2) {\n\t\t$prime = true;\n\t}\n\telse if ($n > 2) {\n\t\tfor ($i = 2;\
    \ $i < $n; $i++) {\n\t\t\tif ($n % $i == 0) {\n\t\t\t\t$prime = false;\n\t\t\t\
    \tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$prime = true;\n\t\t\t}\n\t\t}\n\t}\n\
    \telse {\n\t\t$prime = false;\n\t}\n\treturn $prime;\n}\necho is_prime(17) . \"\
    \\n\";\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  for ($i = 2; $i < $n; $i++) {\n  \
    \  if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012069
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n === 1) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i < $n; $i++) {\n\t\
    \tif ($n % $i === 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n == 2) {\n    return true;\n  } else if ($n < 2 || $n % 2 == 0) {\n \
    \   return false;\n  } else {\n    for ($i = 3; $i <= sqrt($n); $i += 2) {\n \
    \     if ($n % $i == 0) {\n        return false;\n      }\n    }\n    return true;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    for ($i = 2; $i <= $n -\
    \ 1; $i++) {\n        if ($n % $i == 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\necho is_prime(4);\necho is_prime(11);\necho is_prime(61);\n\
    echo is_prime(13441);\necho is_prime(6);\necho is_prime(1);\n\necho \"\\n\";\n\
    \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '111

    '
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n < 2) {\n\t\treturn false;\n\t}\n\tif ($n == 2) {\n\t\treturn true;\n\t\
    }\n\tif ($n % 2 == 0) {\n\t\treturn false;\n\t}\n\tfor ($i = 3; $i <= sqrt($n);\
    \ $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  //check if n is greater than 2\n  if ($n > 2) {\n    //check if n is an even\
    \ number\n    if ($n % 2 == 0) {\n      return false;\n    }\n    //if n is odd,\
    \ start looping from 3 to sqrt(n) and check for divisibility\n    for ($i = 3;\
    \ $i <= sqrt($n); $i += 2) {\n      if ($n % $i == 0) {\n        return false;\n\
    \      }\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t// Write your code here\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_boej3j7.php:26\n\
    Stack trace:\n#0 /tmp/tmp_boej3j7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_boej3j7.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t// this function returns the square root of a number\n\t$root = sqrt($n);\n\t\
    for ($i = 2; $i <= $root; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkp_xs9we.php:39\n\
    Stack trace:\n#0 /tmp/tmpkp_xs9we.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpkp_xs9we.php\
    \ on line 39\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n === 1) {\n        return false;\n    }\n    $i = 2;\n    while ($i\
    \ * $i <= $n) {\n        if ($n % $i === 0) {\n            return false;\n   \
    \     }\n        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if($n < 2) return false;\n    if($n == 2) return true;\n    if($n % 2 ==\
    \ 0) return false;\n    $sqrt = sqrt($n);\n    for($i = 3; $i <= $sqrt; $i+=2)\
    \ {\n        if($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  for ($i = 2; $i < sqrt($n); $i++)\
    \ {\n    if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1v_c2aoy.php:39\n\
    Stack trace:\n#0 /tmp/tmp1v_c2aoy.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp1v_c2aoy.php\
    \ on line 39\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpar9xi92b.php:37\n\
    Stack trace:\n#0 /tmp/tmpar9xi92b.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpar9xi92b.php\
    \ on line 37\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n <= 1) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpar9xi92b.php:37\n\
    Stack trace:\n#0 /tmp/tmpar9xi92b.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpar9xi92b.php\
    \ on line 37\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvl9xv6xc.php:28\n\
    Stack trace:\n#0 /tmp/tmpvl9xv6xc.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpvl9xv6xc.php\
    \ on line 28\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t// base case\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i < $n;\
    \ $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  // Fill in the details here\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchdqgx51.php:28\n\
    Stack trace:\n#0 /tmp/tmpchdqgx51.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpchdqgx51.php\
    \ on line 28\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if($n == 1) return false;\n  for($i = 2; $i < $n; $i++) {\n    if($n % $i ==\
    \ 0) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $prime = true;\n    if ($n == 2 || $n == 3) {\n        return $prime;\n \
    \   }\n    if ($n % 2 == 0 || $n % 3 == 0) {\n        $prime = false;\n    }\n\
    \    for ($i = 5; $i * $i <= $n; $i += 6) {\n        if ($n % $i == 0 || $n %\
    \ ($i + 2) == 0) {\n            $prime = false;\n        }\n    }\n    return\
    \ $prime;\n}\n\necho is_prime(61) . \"\\n\";\necho is_prime(2) . \"\\n\";\necho\
    \ is_prime(3) . \"\\n\";\necho is_prime(4) . \"\\n\";\necho is_prime(5) . \"\\\
    n\";\necho is_prime(6) . \"\\n\";\necho is_prime(7) . \"\\n\";\necho is_prime(8)\
    \ . \"\\n\";\necho is_prime(9) . \"\\n\";\necho is_prime(10) . \"\\n\";\necho\
    \ is_prime(11) . \"\\n\";\necho is_prime(12) . \"\\n\";\necho is_prime(13) . \"\
    \\n\";\necho is_prime(14) . \"\\n\";\necho is_prime(15) . \"\\n\";\necho is_prime(16)\
    \ . \"\\n\";\necho is_prime(17) . \"\\n\";\necho is_prime(18) . \"\\n\";\necho\
    \ is_prime(19) . \"\\n\";\necho is_prime(20) . \"\\n\";\necho is_prime(21) . \"\
    \\n\";\necho is_prime(22) . \"\\n\";\necho is_prime(23) . \"\\n\";\necho is_prime(24)\
    \ . \"\\n\";\necho is_prime(25) . \"\\n\";\necho is_prime(26) . \"\\n\";\necho\
    \ is_prime(27) . \"\\n\";\necho is_prime(28) . \"\\n\";\necho is_prime(29) . \"\
    \\n\";\necho is_prime(30) . \"\\n\";\necho is_prime(31) . \"\\n\";\necho is_prime(32)\
    \ . \"\\n\";\necho\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpy57w8ul9.php on line 66

    '
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n === 1) {\n        return false;\n    }\n    $divisor = 2;\n    while\
    \ ($divisor <= $n / 2) {\n        if ($n % $divisor === 0) {\n            return\
    \ false;\n        }\n        $divisor += 1;\n    }\n    return true;\n}\nvar_dump(is_prime(6));\n\
    var_dump(is_prime(101));\nvar_dump(is_prime(11));\nvar_dump(is_prime(13441));\n\
    var_dump(is_prime(61));\nvar_dump(is_prime(4));\nvar_dump(is_prime(1));\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(false)

    bool(true)

    bool(true)

    bool(true)

    bool(true)

    bool(false)

    bool(false)

    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\necho is_prime(13441);\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa4holp2b.php:38\n\
    Stack trace:\n#0 /tmp/tmpa4holp2b.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpa4holp2b.php\
    \ on line 38\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if($n === 1) {\n        return false;\n    }\n    for($i = 2; $i < $n; $i++)\
    \ {\n        if($n % $i === 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7i1e8gc5.php:36\n\
    Stack trace:\n#0 /tmp/tmp7i1e8gc5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7i1e8gc5.php\
    \ on line 36\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \treturn null;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpozxdpl0e.php:26\n\
    Stack trace:\n#0 /tmp/tmpozxdpl0e.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpozxdpl0e.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  if ($n == 2) {\n    return true;\n\
    \  }\n  if ($n % 2 == 0) {\n    return false;\n  }\n  $max = sqrt($n);\n  for\
    \ ($i = 3; $i <= $max; $i += 2) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n == 1) {\n    return false;\n  }\n\n  if ($n % 2 == 0 && $n != 2) {\n\
    \    return false;\n  }\n\n  for ($i = 3; $i < $n; $i++) {\n    if ($n % $i ==\
    \ 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = (int)$n;\n    if($n == 1) {\n        return false;\n    }\n    if($n\
    \ == 2) {\n        return true;\n    }\n    if($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $i = 3;\n    while($i <= ceil(sqrt($n))) {\n        if($n\
    \ % $i == 0) {\n            return false;\n        }\n        $i = $i + 2;\n \
    \   }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1) return false;\n    for ($i = 2; $i <= $n - 1; $i++) {\n    \
    \    if ($n % $i == 0) return false;\n    }\n    return true;\n}\necho is_prime(61)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if($n == 1) {\n        return false;\n    }\n    if($n == 2) {\n        return\
    \ true;\n    }\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n % $i ==\
    \ 0) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  // $i = 2;\n  // while ($i < $n) {\n  //   if ($n % $i == 0) {\n  //     return\
    \ false;\n  //   }\n  //   $i += 1;\n  // }\n  // return true;\n\n  for ($i =\
    \ 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\necho is_prime(4).\"\\n\";\necho is_prime(11).\"\\n\";\n\
    echo is_prime(6).\"\\n\";\necho is_prime(101).\"\\n\";\necho is_prime(1).\"\\\
    n\";\necho is_prime(13441).\"\\n\";\necho is_prime(61).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n1\n\n1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9hf65q6.php:52\n\
    Stack trace:\n#0 /tmp/tmpb9hf65q6.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpb9hf65q6.php\
    \ on line 52\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    // Write code here.\n    $flag = true;\n    if($n == 1) {\n        $flag\
    \ = false;\n    } else {\n        for($i = 2; $i < $n; $i++) {\n            if($n\
    \ % $i == 0) {\n                $flag = false;\n                break;\n     \
    \       }\n        }\n    }\n    return $flag;\n}\necho is_prime(4);\necho is_prime(101);\n\
    echo is_prime(1);\necho is_prime(2);\necho is_prime(6);\necho is_prime(5);\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '111'
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnr38mcif.php:26\n\
    Stack trace:\n#0 /tmp/tmpnr38mcif.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnr38mcif.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxtfof6g.php:37\n\
    Stack trace:\n#0 /tmp/tmptxtfof6g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptxtfof6g.php\
    \ on line 37\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    if ($n == 2) {\n      \
    \  return true;\n    }\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i\
    \ == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnr38mcif.php:26\n\
    Stack trace:\n#0 /tmp/tmpnr38mcif.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnr38mcif.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n == 1) {\n\t\treturn false;\n\t}\n\t$prime = true;\n\tfor ($i = 2; $i\
    \ < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t$prime = false;\n\t\t}\n\t}\n\t\
    return $prime;\n}\n\necho is_prime(12);\necho is_prime(5);\necho is_prime(1);\n\
    echo is_prime(11);\necho is_prime(13441);\necho is_prime(61);\necho is_prime(4);\n\
    echo is_prime(1);\necho is_prime(17);\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11111'
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if($n == 1){\n        return false;\n    }\n    for($i = 2; $i < $n; $i++){\n\
    \        if($n % $i == 0){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\necho is_prime(6) . \"\\n\";\necho is_prime(101) . \"\\n\";\necho is_prime(11)\
    \ . \"\\n\";\necho is_prime(13441) . \"\\n\";\necho is_prime(61) . \"\\n\";\n\
    echo is_prime(4) . \"\\n\";\necho is_prime(1) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    1

    1

    1

    1



    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t// Your code here!\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqt3uv7jj.php:26\n\
    Stack trace:\n#0 /tmp/tmpqt3uv7jj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqt3uv7jj.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n > 1) {\n        for ($i = 2; $i <= $n/2; $i++) {\n            if ($n\
    \ % $i == 0) {\n                return false;\n            }\n        }\n    \
    \    return true;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    // Your code here\n    // $n = 11;\n    $divisor = $n;\n    $flag = 0;\n\
    \    while($divisor >= 2) {\n        if($n % $divisor == 0 && $divisor != $n)\
    \ {\n            $flag = 1;\n            break;\n        }\n        $divisor =\
    \ $divisor - 1;\n    }\n    if($flag == 1) {\n        return false;\n    }\n \
    \   else {\n        return true;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpik8ezvfa.php:48\n\
    Stack trace:\n#0 /tmp/tmpik8ezvfa.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpik8ezvfa.php\
    \ on line 48\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpar9xi92b.php:37\n\
    Stack trace:\n#0 /tmp/tmpar9xi92b.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpar9xi92b.php\
    \ on line 37\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i <= $n /\
    \ 2; $i++) {\n        if ($n % $i == 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  if ($n == 2) {\n    return true;\n\
    \  }\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\necho \"6 is prime \" . (is_prime(6) ? \"true\"\
    \ : \"false\") . \"\\n\";\necho \"101 is prime \" . (is_prime(101) ? \"true\"\
    \ : \"false\") . \"\\n\";\necho \"11 is prime \" . (is_prime(11) ? \"true\" :\
    \ \"false\") . \"\\n\";\necho \"13441 is prime \" . (is_prime(13441) ? \"true\"\
    \ : \"false\") . \"\\n\";\necho \"61 is prime \" . (is_prime(61) ? \"true\" :\
    \ \"false\") . \"\\n\";\necho \"4 is prime \" . (is_prime(4) ? \"true\" : \"false\"\
    ) . \"\\n\";\necho \"1 is prime \" . (is_prime(1) ? \"true\" : \"false\") . \"\
    \\n\";\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6 is prime false\n101 is prime true\n11 is prime true\n13441 is prime true\n\
    61 is prime true\n4 is prime false\n1 is prime true\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpq9lyjzbq.php:43\nStack trace:\n#0 /tmp/tmpq9lyjzbq.php(52):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpq9lyjzbq.php on line 43\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  $sqrt = sqrt($n);\n  $i = 2;\n  while ($i <= $sqrt) {\n    if ($n % $i == 0)\
    \ {\n      return false;\n    }\n    $i++;\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsp1baz2t.php:40\n\
    Stack trace:\n#0 /tmp/tmpsp1baz2t.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpsp1baz2t.php\
    \ on line 40\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if($n === 1) return false;\n    if($n === 2) return true;\n    for($i = 2;\
    \ $i < $n; $i++) {\n        if($n % $i === 0) {\n            return false;\n \
    \       }\n    }\n    return true;\n}\necho is_prime(11).\"\\n\";\necho is_prime(6).\"\
    \\n\";\necho is_prime(101).\"\\n\";\necho is_prime(13441).\"\\n\";\necho is_prime(61).\"\
    \\n\";\necho is_prime(4).\"\\n\";\necho is_prime(1).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1

    1

    1



    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  for ($x = 2; $x < $n; $x++) {\n    if ($n % $x == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfzrmlhk3.php:37\n\
    Stack trace:\n#0 /tmp/tmpfzrmlhk3.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpfzrmlhk3.php\
    \ on line 37\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    // TODO: Fill in the code here\n    //return $prime;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6szcmmw.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6szcmmw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpn6szcmmw.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    // TODO: write code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahlhkokf.php:26\n\
    Stack trace:\n#0 /tmp/tmpahlhkokf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpahlhkokf.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $prime = true;\n    if ($n > 1){\n        for ($i = 2; $i < $n; $i++){\n\
    \            if ($n % $i == 0){\n                $prime = false;\n           \
    \ }\n        }\n    }\n    else {\n        $prime = false;\n    }\n    return\
    \ $prime;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n <= 1) {\n\t\treturn false;\n\t} else if ($n == 2) {\n\t\treturn true;\n\
    \t} else if ($n == 3) {\n\t\treturn true;\n\t} else if ($n % 2 == 0) {\n\t\treturn\
    \ false;\n\t} else if ($n % 3 == 0) {\n\t\treturn false;\n\t}\n\t$i = 5;\n\t$w\
    \ = 2;\n\twhile ($i * $i <= $n) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t\t$i += $w;\n\t\t$w = 6 - $w;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1) {\n        return false;\n    } else if ($n == 2) {\n      \
    \  return true;\n    } else {\n        $count = 0;\n        for ($i = 2; $i <\
    \ $n; $i++) {\n            if ($n % $i == 0) {\n                $count++;\n  \
    \          }\n        }\n        if ($count == 0) {\n            return true;\n\
    \        } else {\n            return false;\n        }\n    }\n}\necho is_prime(6).\"\
    \\n\";\necho is_prime(101).\"\\n\";\necho is_prime(11).\"\\n\";\necho is_prime(13441).\"\
    \\n\";\necho is_prime(61).\"\\n\";\necho is_prime(4).\"\\n\";\necho is_prime(1).\"\
    \\n\";\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    1

    1

    1

    1



    '
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t// Your code here\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5mdg0dd.php:25\n\
    Stack trace:\n#0 /tmp/tmpp5mdg0dd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpp5mdg0dd.php\
    \ on line 25\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n <= 1) {\n\t\treturn false;\n\t} else if ($n === 2) {\n\t\treturn true;\n\
    \t} else {\n\t\tfor ($i = 2; $i < $n; $i++) {\n\t\t\tif ($n % $i === 0) {\n\t\t\
    \t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n == 1) {\n    return false;\n  }\n  for ($i = 2; $i < $n; $i++) {\n \
    \   if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\
    echo \"is_prime(1) = \" . is_prime(1) . \"\\n\";\necho \"is_prime(2) = \" . is_prime(2)\
    \ . \"\\n\";\necho \"is_prime(3) = \" . is_prime(3) . \"\\n\";\necho \"is_prime(4)\
    \ = \" . is_prime(4) . \"\\n\";\necho \"is_prime(5) = \" . is_prime(5) . \"\\\
    n\";\necho \"is_prime(6) = \" . is_prime(6) . \"\\n\";\necho \"is_prime(7) = \"\
    \ . is_prime(7) . \"\\n\";\necho \"is_prime(8) = \" . is_prime(8) . \"\\n\";\n\
    echo \"is_prime(9) = \" . is_prime(9) . \"\\n\";\necho \"is_prime(101) = \" .\
    \ is_prime(101) . \"\\n\";\necho \"is_prime(11) = \" . is_prime(11) . \"\\n\"\
    ;\necho \"is_prime(13441) = \" . is_prime(13441) . \"\\n\";\necho \"is_prime(61)\
    \ = \" . is_prime(61) . \"\\n\";\necho \"is_prime(1) = \" . is_prime(1) . \"\\\
    n\";\necho \"is_prime(1) = \" . is_prime(1) . \"\\n\";\necho \"is_prime(1) = \"\
    \ . is_prime(1) . \"\\n\";\necho \"is_prime(1) = \" . is_prime(1) . \"\\n\";\n\
    echo \"is_prime(1) = \" . is_prime(1) . \"\\n\";\necho \"is_prime(1) = \" . is_prime(1)\
    \ . \"\\n\";\necho \"is_prime(1) = \" . is_prime(1) . \"\\n\";\necho \"is_\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Test", expecting "," or ";"
    in /tmp/tmprze27_hx.php on line 54

    '
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \t// check if $n is >=2\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\t// check if\
    \ $n is divisible by 2\n\tif ($n == 2) {\n\t\treturn true;\n\t}\n\t// if so, return\
    \ false\n\tif ($n % 2 == 0) {\n\t\treturn false;\n\t}\n\t// otherwise, check all\
    \ odd numbers 3, 5, 7, ... to sqrt($n)\n\t$sqrt_n = sqrt($n);\n\tfor ($i = 3;\
    \ $i <= $sqrt_n; $i += 2) {\n\t\t// if $n is divisible by any of them, return\
    \ false\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t// if we\
    \ did not return false, then $n is prime\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  for ($i = 2; $i <= $n / 2; $i++) {\n\
    \    if ($n % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\
    \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif($n == 1) {\n\t\treturn false;\n\t}\n\n\t$sqrtN = sqrt($n);\n\tfor($i = 2;\
    \ $i <= $sqrtN; $i++) {\n\t\tif($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t\
    }\n\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 2) {\n        return true;\n    } else if ($n % 2 == 0) {\n   \
    \     return false;\n    } else {\n        for ($i = 3; $i <= sqrt($n); $i +=\
    \ 2) {\n            if ($n % $i == 0) {\n                return false;\n     \
    \       }\n        }\n        return true;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvvqnmen3.php:42\n\
    Stack trace:\n#0 /tmp/tmpvvqnmen3.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpvvqnmen3.php\
    \ on line 42\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxtfof6g.php:37\n\
    Stack trace:\n#0 /tmp/tmptxtfof6g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptxtfof6g.php\
    \ on line 37\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n === 2) {\n      \
    \  return true;\n    }\n    if ($n % 2 === 0) {\n        return false;\n    }\n\
    \    for ($i = 3; $i <= ceil(sqrt($n)); $i++) {\n        if ($n % $i === 0) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nassert(is_prime(6)\
    \ === false);\nassert(is_prime(101) === true);\nassert(is_prime(11) === true);\n\
    assert(is_prime(13441) === true);\nassert(is_prime(61) === true);\nassert(is_prime(4)\
    \ === false);\nassert(is_prime(1) === false);\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if($n < 2) return false;\n    $j = 2;\n    while ($j < $n) {\n        if($n\
    \ % $j == 0) return false;\n        $j++;\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    for ($i = 2; $i < $n;\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n\t\n\tif($n <= 1) {\n\
    \t\treturn false;\n\t}\n\t\n\tif($n == 2) {\n\t\treturn true;\n\t}\n\t\n\tfor($i\
    \ = 2; $i < $n; $i++) {\n\t\tif($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t\
    }\n\t\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    // TODO: Implement this function\n}\nfunction candidate(...$args) {\n   \
    \ return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph02ld30k.php:25\n\
    Stack trace:\n#0 /tmp/tmph02ld30k.php(40): test()\n#1 {main}\n  thrown in /tmp/tmph02ld30k.php\
    \ on line 25\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    // NOTE: $i is the divisor, so you can check if $n is divisible by $i.\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnswfekrx.php:38\n\
    Stack trace:\n#0 /tmp/tmpnswfekrx.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpnswfekrx.php\
    \ on line 38\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\necho is_prime(11) . PHP_EOL;\n\
    \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps7pp7s5p.php:38\n\
    Stack trace:\n#0 /tmp/tmps7pp7s5p.php(47): test()\n#1 {main}\n  thrown in /tmp/tmps7pp7s5p.php\
    \ on line 38\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n == 2) {\n    return true;\n  } else if ($n % 2 == 0) {\n    return false;\n\
    \  }\n  for ($i = 3; $i <= sqrt($n); $i += 2) {\n    if ($n % $i == 0) {\n   \
    \   return false;\n    }\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0rvwvb_m.php:41\n\
    Stack trace:\n#0 /tmp/tmp0rvwvb_m.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp0rvwvb_m.php\
    \ on line 41\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  // Write your code here.\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvqwe1nk2.php:26\n\
    Stack trace:\n#0 /tmp/tmpvqwe1nk2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvqwe1nk2.php\
    \ on line 26\n"
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n <= 1) {\n\t\treturn false;\n\t} else if ($n <= 3) {\n\t\treturn true;\n\
    \t} else if ($n % 2 == 0 || $n % 3 == 0) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 5; $i*$i <= $n; $i = $i + 6) {\n\t\tif ($n % $i == 0 || $n % ($i + 2) == 0)\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n == 1) return false;\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i\
    \ == 0) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n == 1) return false;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  $isPrime = true;\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n\
    \      $isPrime = false;\n    }\n  }\n  return $isPrime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdpxef6dw.php:38\n\
    Stack trace:\n#0 /tmp/tmpdpxef6dw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpdpxef6dw.php\
    \ on line 38\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxtfof6g.php:37\n\
    Stack trace:\n#0 /tmp/tmptxtfof6g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptxtfof6g.php\
    \ on line 37\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n <= 1) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i <= $n/2; $i++) {\n\
    \t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i\
    \ == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxtfof6g.php:37\n\
    Stack trace:\n#0 /tmp/tmptxtfof6g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptxtfof6g.php\
    \ on line 37\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif($n <= 1) {\n\t\treturn false;\n\t}\n\telse {\n\t\tfor($i = 2; $i <= $n/2;\
    \ $i++) {\n\t\t\tif($n % $i == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\
    \treturn true;\n\t}\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if($n == 1){\n        return false;\n    }\n    for($i = 2; $i < $n; $i++){\n\
    \        if($n % $i == 0){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuc6046w5.php:37\n\
    Stack trace:\n#0 /tmp/tmpuc6046w5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpuc6046w5.php\
    \ on line 37\n"
  timestamp: 1660028086
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxtfof6g.php:37\n\
    Stack trace:\n#0 /tmp/tmptxtfof6g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptxtfof6g.php\
    \ on line 37\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  $i = 2;\n  if ($n == 1) {\n    return false;\n  }\n  while ($i < $n) {\n  \
    \  if ($n % $i == 0) {\n      return false;\n    }\n    $i++;\n  }\n  return true;\n\
    }\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    // http://stackoverflow.com/questions/16361213/prime-number-checking-in-php\n\
    \    if ($n <= 1) {\n        return false;\n    }\n    for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \tif ($n == 1) {\n\t\treturn false;\n\t}\n\tif ($n == 2) {\n\t\treturn true;\n\
    \t}\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028086

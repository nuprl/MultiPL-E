name: HumanEval_143_words_in_sentence
language: php
prompt: "<?php\n// You are given a string representing a sentence,\n// the sentence\
  \ contains some words separated by a space,\n// and you have to return a string\
  \ that contains the words from the original sentence,\n// whose lengths are prime\
  \ numbers,\n// the order of the words in the new string should be the same as the\
  \ original one.\n// Example 1:\n// >>> words_in_sentence(\"This is a test\")\n//\
  \ \"is\"\n// Example 2:\n// >>> words_in_sentence(\"lets go for swimming\")\n//\
  \ \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains\
  \ only letters\nfunction words_in_sentence($sentence) {\n"
tests: "function candidate(...$args) {\n    return words_in_sentence(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\")\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\"\
  ) !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  there is no place available here\") !== \"there is no place\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !==\
  \ \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $is_prime = function($n) {\n    for ($i = 2; $i < $n; $i++) {\n \
    \     if ($n % $i == 0) {\n        return false;\n      }\n    }\n    return true;\n\
    \  };\n  $words = explode(' ', $sentence);\n  $result = [];\n  foreach ($words\
    \ as $word) {\n    if ($is_prime(strlen($word))) {\n      $result[] = $word;\n\
    \    }\n  }\n  return implode(' ', $result);\n}", "  $split_sentence = explode(\"\
    \ \", $sentence);\n  $prime_word = [];\n  foreach ($split_sentence as $word) {\n\
    \    if (is_prime(strlen($word))) {\n      $prime_word[] = $word;\n    }\n  }\n\
    \  return implode(\" \", $prime_word);\n}\n", "\t$splitSentence = explode(\" \"\
    , $sentence);\n\t$returnString = \"\";\n\tforeach ($splitSentence as $word) {\n\
    \t\tif (isPrime(strlen($word))) {\n\t\t\t$returnString .= $word . \" \";\n\t\t\
    }\n\t}\n\treturn $returnString;\n}", "    // Your code here\n}", "\t$words = explode('\
    \ ', $sentence);\n\t$primes = primes_in_array($words);\n\t$filtered = array_filter($words,\
    \ function($word) use ($primes) {\n\t\t$length = strlen($word);\n\t\treturn in_array($length,\
    \ $primes);\n\t});\n\treturn implode(' ', $filtered);\n}\n", "  // your code here...\n\
    }", "\n}", "\t$sentence = explode(\" \", $sentence);\n\t$newSentence = array();\n\
    \tforeach ($sentence as $word) {\n\t\tif (isPrime(strlen($word))) {\n\t\t\tarray_push($newSentence,\
    \ $word);\n\t\t}\n\t}\n\treturn implode(\" \", $newSentence);\n}", "\t$sentence_arr\
    \ = explode(\" \", $sentence);\n\t$result = array();\n\tforeach ($sentence_arr\
    \ as $index => $word) {\n\t\t$word_length = strlen($word);\n\t\tif(prime_number($word_length))\
    \ {\n\t\t\tarray_push($result, $word);\n\t\t}\n\t}\n\treturn implode(\" \", $result);\n\
    }\n", "    $sentence = explode(' ', $sentence);\n    $result = [];\n    for ($i\
    \ = 0; $i < count($sentence); $i++) {\n        if (is_prime(strlen($sentence[$i])))\
    \ {\n            $result[] = $sentence[$i];\n        }\n    }\n    return implode('\
    \ ', $result);\n}\n", "  // Write your code here\n  // Good luck!\n}", "    $sentence\
    \ = explode(' ', $sentence);\n    foreach ($sentence as $key => $value) {\n  \
    \      if (is_prime($value)) {\n            $return .= $value . ' ';\n       \
    \ }\n    }\n    return $return;\n}", "    $sentence = trim($sentence);\n    $words\
    \ = explode(' ', $sentence);\n    $prime_words = array();\n    foreach ($words\
    \ as $word) {\n        if (is_prime(strlen($word))) {\n            $prime_words[]\
    \ = $word;\n        }\n    }\n    return implode(' ', $prime_words);\n}", "  $words\
    \ = explode(' ', $sentence);\n  $primes = get_primes(100);\n  $results = [];\n\
    \  foreach ($words as $word) {\n    if (in_array(strlen($word), $primes)) {\n\
    \      $results[] = $word;\n    }\n  }\n  return implode(' ', $results);\n}",
  "  $sentence = explode(' ', $sentence);\n  $prime_words = [];\n  foreach ($sentence\
    \ as $word) {\n    if (is_prime(strlen($word))) {\n      $prime_words[] = $word;\n\
    \    }\n  }\n  return implode(' ', $prime_words);\n}", "    $words = explode('\
    \ ', $sentence);\n    $result = [];\n    foreach ($words as $word) {\n       \
    \ if (is_prime(strlen($word))) {\n            $result[] = $word;\n        }\n\
    \    }\n    return implode(' ', $result);\n}\n", "  // your code here\n}", " \
    \   $sentence = explode(' ', $sentence);\n    foreach ($sentence as $word) {\n\
    \        if (strlen($word) == 2) {\n            continue;\n        }\n       \
    \ $is_prime = true;\n        for ($i = 2; $i < strlen($word); $i++) {\n      \
    \      if ((strlen($word) % $i) == 0) {\n                $is_prime = false;\n\
    \                break;\n            }\n        }\n        if ($is_prime) {\n\
    \            $new_sentence[] = $word;\n        }\n    }\n    return implode('\
    \ ', $new_sentence);\n}", "    $words = explode(' ', $sentence);\n    $prime_words\
    \ = array();\n    foreach ($words as $word) {\n        if (is_prime(strlen($word)))\
    \ {\n            $prime_words[] = $word;\n        }\n    }\n    return implode('\
    \ ', $prime_words);\n}\n", "    $split = explode(\" \", $sentence);\n    $newArray\
    \ = [];\n    foreach ($split as $words) {\n        $length = strlen($words);\n\
    \        if (isPrime($length)) {\n            array_push($newArray, $words);\n\
    \        }\n    }\n    return implode(\" \", $newArray);\n}", "    $result = \"\
    \";\n    $words = explode(\" \", $sentence);\n    foreach ($words as $word) {\n\
    \        if( is_prime(strlen($word)) ) {\n            $result .= $word . \" \"\
    ;\n        }\n    }\n    return $result;\n}", "    // your code here\n}\n", " \
    \ $answers = [];\n  $sentence_array = explode(\" \", $sentence);\n  foreach ($sentence_array\
    \ as $s_value) {\n    if (is_prime($s_value)) {\n      $answers[] = $s_value;\n\
    \    }\n  }\n  return implode(\" \", $answers);\n}", "    $words = explode(' ',\
    \ $sentence);\n    $words_in_sentence = array();\n    foreach ($words as $word)\
    \ {\n        if (is_prime(strlen($word))) {\n            $words_in_sentence[]\
    \ = $word;\n        }\n    }\n    return implode(' ', $words_in_sentence);\n}",
  "  $words = array_filter(explode(' ', $sentence), function($word) {\n    return\
    \ is_prime(strlen($word));\n  });\n  return implode(' ', $words);\n}\n", "\n}\n",
  "    $words = explode(' ', $sentence);\n    $words_result = [];\n    $result = '';\n\
    \    for ($i = 0; $i < count($words); $i++) {\n        if (is_prime(strlen($words[$i])))\
    \ {\n            $words_result[] = $words[$i];\n        }\n    }\n    for ($i\
    \ = 0; $i < count($words_result); $i++) {\n        $result .= $words_result[$i]\
    \ . ' ';\n    }\n    return $result;\n}", "  $words = explode(' ', $sentence);\n\
    \  $primes = [];\n  foreach ($words as $word) {\n    if (is_prime(strlen($word)))\
    \ {\n      $primes[] = $word;\n    }\n  }\n  return implode(' ', $primes);\n}\n",
  "    $prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    $words = explode(' ', $sentence);\n\
    \    $words_lengths = array_map('strlen', $words);\n    $words_prime_lengths =\
    \ array_intersect($words_lengths, $prime_numbers);\n    return implode(' ', array_intersect_key($words,\
    \ $words_prime_lengths));\n}", "    $words = explode(' ', $sentence);\n    $result\
    \ = [];\n    foreach ($words as $word) {\n        if (prime_word($word)) {\n \
    \           $result[] = $word;\n        }\n    }\n    return implode(' ', $result);\n\
    }\n", "    if (empty($sentence)) {\n        return \"\";\n    }\n    $sentence\
    \ = str_replace([' '], '', $sentence);\n    $length = strlen($sentence);\n   \
    \ if ($length == 1) {\n        return 'is';\n    }\n    $prime = [];\n    for\
    \ ($i = 2; $i <= $length; $i++) {\n        $isPrime = true;\n        for ($j =\
    \ 2; $j < $i; $j++) {\n            if ($i % $j == 0) {\n                $isPrime\
    \ = false;\n                break;\n            }\n        }\n        if ($isPrime)\
    \ {\n            $prime[] = $i;\n        }\n    }\n    $words = [];\n    $start\
    \ = 0;\n    foreach ($prime as $index) {\n        $words[] = substr($sentence,\
    \ $start, $index);\n        $start += $index;\n    }\n    return implode(' ',\
    \ $words);\n}\n\n$sentence = \"lets go for swimming\";\n$words = words_in_sentence($sentence);\n\
    echo $words;", "    // YOUR CODE GOES HERE\n}", "\t// $words = explode(' ', $sentence);\n\
    \t// $is_prime = function($number) {\n\t// \tif($number == 1) {\n\t// \t\treturn\
    \ false;\n\t// \t}\n\t// \tif($number == 2) {\n\t// \t\treturn true;\n\t// \t\
    }\n\t// \tif($number % 2 == 0) {\n\t// \t\treturn false;\n\t// \t}\n\t// \tfor($i\
    \ = 3; $i <= ceil(sqrt($number)); $i = $i + 2) {\n\t// \t\tif($number % $i ==\
    \ 0) {\n\t// \t\t\treturn false;\n\t// \t\t}\n\t// \t}\n\t// \treturn true;\n\t\
    // };\n\t// $prime_words = array_values(array_filter($words, function($word) use\
    \ ($is_prime) {\n\t// \treturn $is_prime(strlen($word));\n\t// }));\n\t// return\
    \ implode(' ', $prime_words);\n\t$sentence = preg_replace('/\\W+/', ' ', $sentence);\n\
    \t$words = explode(' ', $sentence);\n\t$prime_words = array_filter($words, function($word)\
    \ {\n\t\tif(strlen($word) == 1) {\n\t\t\treturn false;\n\t\t}\n\t\tif(strlen($word)\
    \ == 2) {\n\t\t\treturn true;\n\t\t}\n\t\tif(strlen($word) % 2 == 0) {\n\t\t\t\
    return false;\n\t\t}\n\t\tfor($i = 3; $i <= ceil(sqrt(strlen($word))); $i = $i\
    \ + 2) {\n\t\t\tif(strlen($word) % $i == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\
    \t\t}\n\t\treturn true;\n\t});\n\treturn implode(' ', $prime_words);\n}\n\necho\
    \ words_in_sentence(\"This is a test\") . \"\\n\";\necho words_in_sentence(\"\
    lets go for swimming\") . \"\\n\";", "    $words = explode(' ', $sentence);\n\
    \    $lengths = array_map('strlen', $words);\n    $prime_lengths = array_filter($lengths,\
    \ 'is_prime');\n    $prime_words = array_filter($words, function($w) use ($prime_lengths)\
    \ {\n        return in_array(strlen($w), $prime_lengths);\n    });\n    return\
    \ implode(' ', $prime_words);\n}\n", "  // BEGIN (write your solution here)\n\
    \  $res = \"\";\n  $ar_sentence = explode(\" \", $sentence);\n  foreach ($ar_sentence\
    \ as $key => $word) {\n    if (isPrime(strlen($word))) {\n      $res .= $word\
    \ . \" \";\n    }\n  }\n  return trim($res);\n  // END\n}\n", "  $words = explode('\
    \ ', $sentence);\n  $prime_words = array();\n  foreach ($words as $word) {\n \
    \   if (is_prime(strlen($word))) {\n      $prime_words[] = $word;\n    }\n  }\n\
    \  return implode(' ', $prime_words);\n}", "    $result = '';\n    $words = explode('\
    \ ', $sentence);\n    foreach ($words as $word) {\n        if (strlen($word) ==\
    \ 2 || strlen($word) == 3 || strlen($word) == 5 || strlen($word) == 7) {\n   \
    \         $result .= $word . ' ';\n        }\n    }\n    return trim($result);\n\
    }\n\nprint_r(words_in_sentence(\"This is a test\"));\nprint_r(words_in_sentence(\"\
    lets go for swimming\"));", "    // your code here\n}", "    $sentence = explode('\
    \ ', $sentence);\n    $result = '';\n    for ($i = 0; $i < count($sentence); $i++)\
    \ {\n        if (is_prime(strlen($sentence[$i]))) {\n            $result .= $sentence[$i]\
    \ . ' ';\n        }\n    }\n    return trim($result);\n}", "    $words = explode('\
    \ ', $sentence);\n    $prime_words = [];\n    foreach ($words as $word) {\n  \
    \      if (check_if_prime(strlen($word))) {\n            $prime_words[] = $word;\n\
    \        }\n    }\n    return implode(' ', $prime_words);\n}", "    $result =\
    \ '';\n    $sentence = explode(' ', $sentence);\n    $prime = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    foreach ($sentence as $word) {\n        if (in_array(strlen($word),\
    \ $prime)) {\n            $result .= $word.' ';\n        }\n    }\n    return\
    \ trim($result);\n}\n\necho words_in_sentence(\"This is a test\").\"\\n\";\necho\
    \ words_in_sentence(\"lets go for swimming\").\"\\n\";", "    $words = explode('\
    \ ', $sentence);\n    $primeWords = [];\n    foreach ($words as $word) {\n   \
    \     if (isPrime(strlen($word))) {\n            $primeWords[] = $word;\n    \
    \    }\n    }\n    return implode(' ', $primeWords);\n}\n", "    $words = explode('\
    \ ', $sentence);\n    $new_sentence = [];\n    foreach ($words as $word) {\n \
    \       if (is_prime(strlen($word))) {\n            $new_sentence[] = $word;\n\
    \        }\n    }\n    return implode(' ', $new_sentence);\n}\n", "\t$sentence\
    \ = preg_split('/\\s+/', $sentence);\n\t$result = array();\n\tforeach ($sentence\
    \ as $word) {\n\t\tif (is_prime(strlen($word))) {\n\t\t\t$result[] = $word;\n\t\
    \t}\n\t}\n\treturn implode(' ', $result);\n}\n", "    $sentence = explode(' ',\
    \ $sentence);\n    $result = '';\n    foreach ($sentence as $word) {\n       \
    \ if (is_prime(strlen($word))) {\n            $result .= $word.' ';\n        }\n\
    \    }\n    return trim($result);\n}", "    // The output variable\n    $output\
    \ = \"\";\n    // A variable to hold the current word\n    $current_word = \"\"\
    ;\n    // A variable to hold the next character to be read\n    $next_char = \"\
    \";\n    // A variable to hold the current character\n    $current_char = \"\"\
    ;\n    // A variable to hold the length of the current word\n    $current_length\
    \ = 0;\n    // Variables to hold the current position of the word in the sentence\n\
    \    $current_position = 0;\n    // A variable to hold the last word length\n\
    \    $last_word_length = 0;\n    // A variable to hold the last word\n    $last_word\
    \ = \"\";\n    // Our character array\n    $sentence_array = str_split($sentence);\n\
    \    // Our final word array\n    $word_array = array();\n    // Loop through\
    \ all the characters in the sentence\n    foreach ($sentence_array as $current_char)\
    \ {\n        // While the current character is not a space and the current position\
    \ is less than the sentence length\n        while ($current_char != \" \" && $current_position\
    \ < count($sentence_array)) {\n            // Add the current character to the\
    \ current word\n            $current_word .= $current_char;\n            // Increment\
    \ the position by 1\n            $current_position += 1;\n            // If the\
    \ current position is less than the sentence length\n            if ($current_position\
    \ < count($sentence_array)) {\n                // Get the next character\n   \
    \             $next_char = $sentence_array[$current_position];\n            }\n\
    \            // If the next character is a space\n            if ($next_char ==\
    \ \" \") {\n                // Append a space to the current word\n          \
    \      $current_word .= \" \";\n                // Increment the position by 1\n\
    \                $current_position += 1;\n            }\n            // Set the\
    \ current character to the next character\n            $current_char = $next_char;\n\
    \        }\n        // Check if the current word is a prime number\n        if\
    \ (is_prime($current_word)) {\n            // Append the current word to the output\n\
    \            $output .= $current_word;\n        }\n       ", "\t$split_sentence\
    \ = explode(\" \", $sentence);\n\t$new_sentence = [];\n\tforeach ($split_sentence\
    \ as $word) {\n\t\tif (primeNumber($word)) {\n\t\t\tarray_push($new_sentence,\
    \ $word);\n\t\t}\n\t}\n\treturn implode(' ', $new_sentence);\n}\n", "  $words\
    \ = explode(' ', $sentence);\n  $primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n  $prime_words\
    \ = [];\n  foreach ($words as $word) {\n    if (in_array(strlen($word), $primes))\
    \ {\n      $prime_words[] = $word;\n    }\n  }\n  return implode(' ', $prime_words);\n\
    }", "    $words = explode(' ', $sentence);\n    $res = '';\n    $primes = get_primes();\n\
    \    for ($i = 0; $i < count($words); $i++) {\n        if (array_search(strlen($words[$i]),\
    \ $primes) !== false) {\n            $res .= $words[$i] . ' ';\n        }\n  \
    \  }\n    return trim($res);\n}\n", "    $words = explode(' ', $sentence);\n \
    \   $prime_words = [];\n    $result = '';\n    foreach ($words as $word) {\n \
    \       if (is_prime(strlen($word))) {\n            $prime_words[] = $word;\n\
    \        }\n    }\n    foreach ($prime_words as $word) {\n        $result .= $word\
    \ . ' ';\n    }\n    $result = trim($result);\n    return $result;\n}\n", "  $words\
    \ = explode(' ', $sentence);\n  $result = [];\n  foreach ($words as $word) {\n\
    \    if(is_prime(strlen($word))) {\n      $result[] = $word;\n    }\n  }\n  return\
    \ implode(' ', $result);\n}\n", "    $s = preg_split('/\\s+/', $sentence);\n \
    \   $ret = [];\n    for ($i = 0; $i < count($s); $i++) {\n        if (is_prime(strlen($s[$i])))\
    \ {\n            $ret[] = $s[$i];\n        }\n    }\n    return implode(' ', $ret);\n\
    }", "  $string = explode(\" \", $sentence);\n  $primeNumbers = [];\n  foreach\
    \ ($string as $letter) {\n    $primeNumbers[] = strlen($letter);\n  }\n  $primes\
    \ = findPrimes($primeNumbers);\n  $newArray = [];\n  foreach ($primes as $prime)\
    \ {\n    foreach ($string as $word) {\n      if (strlen($word) == $prime) {\n\
    \        $newArray[] = $word;\n      }\n    }\n  }\n  return implode(\" \", $newArray);\n\
    }\n", "    $words = explode(' ', $sentence);\n    $primes = [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    $newSentence = [];\n    foreach ($words as $word) {\n        if (in_array(strlen($word),\
    \ $primes)) {\n            $newSentence[] = $word;\n        }\n    }\n    return\
    \ implode(' ', $newSentence);\n}", "    $words = explode(' ', $sentence);\n  \
    \  $result = '';\n    foreach ($words as $word) {\n        if (is_prime(strlen($word)))\
    \ {\n            $result .= $word . ' ';\n        }\n    }\n    return trim($result);\n\
    }", "    $sentence = explode(' ', $sentence);\n    $primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    $result = [];\n    foreach ($sentence as $word) {\n        if (in_array(strlen($word),\
    \ $primes)) {\n            $result[] = $word;\n        }\n    }\n    return implode('\
    \ ', $result);\n}\necho words_in_sentence(\"This is a test\");\necho \"\\n\";\n\
    echo words_in_sentence(\"lets go for swimming\");\necho \"\\n\";\necho words_in_sentence(\"\
    a b c\");\necho \"\\n\";\necho words_in_sentence(\"The quick brown fox jumps over\
    \ the lazy dog\");\necho \"\\n\";\necho words_in_sentence(\"this is an easy test\"\
    );\necho \"\\n\";\necho words_in_sentence(\"a test!\");\necho \"\\n\";\necho words_in_sentence(\"\
    a b c d e f g h i j k l m n o p q r s t u v w x y z\");\necho \"\\n\";", "   \
    \ // Write your code here...\n}", "    $words = explode(' ', $sentence);\n   \
    \ $result = [];\n    foreach ($words as $word) {\n        if (is_prime(strlen($word)))\
    \ {\n            $result[] = $word;\n        }\n    }\n    return implode(' ',\
    \ $result);\n}\n", "\n}\n", "\t$words = explode(' ', $sentence);\n\t$primes =\
    \ primes($words);\n\t$result = [];\n\tforeach ($words as $word) {\n\t\tif (in_array(strlen($word),\
    \ $primes)) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn implode(' ', $result);\n\
    }\n", "  $sentence_array = explode(\" \", $sentence);\n  $output = array();\n\
    \  foreach ($sentence_array as $word) {\n    if (is_prime($word)) {\n      array_push($output,\
    \ $word);\n    }\n  }\n  return implode(\" \", $output);\n}", "  // your code\
    \ here\n}", "    $wordArray = explode(\" \", $sentence);\n    $primeArray = [];\n\
    \    $result = \"\";\n    foreach ($wordArray as $i) {\n        if (isPrime($i))\
    \ {\n            array_push($primeArray, $i);\n        }\n    }\n    for ($i =\
    \ 0; $i < count($primeArray); $i++) {\n        $result .= $primeArray[$i];\n \
    \       if ($i < count($primeArray) - 1) {\n            $result .= \" \";\n  \
    \      }\n    }\n    return $result;\n}", "    $output = '';\n    $words = explode('\
    \ ', $sentence);\n    foreach ($words as $word) {\n        if (is_prime(strlen($word)))\
    \ {\n            $output .= $word . ' ';\n        }\n    }\n    return rtrim($output);\n\
    }\n", "    $words = explode(' ', $sentence);\n    $primes = [];\n    foreach ($words\
    \ as $word) {\n        if (is_prime(strlen($word))) {\n            $primes[] =\
    \ $word;\n        }\n    }\n    return implode(' ', $primes);\n}\n", "  $new_string\
    \ = '';\n  $split_sentence = explode(' ', $sentence);\n  foreach ($split_sentence\
    \ as $split_word) {\n    $count = 0;\n    $length = strlen($split_word);\n   \
    \ for ($i = 1; $i <= $length; $i++) {\n      if ($length % $i == 0) {\n      \
    \  $count++;\n      }\n    }\n    if ($count == 2) {\n      $new_string .= $split_word\
    \ . ' ';\n    }\n  }\n  return $new_string;\n}\necho words_in_sentence(\"This\
    \ is a test\") . \"\\n\";\necho words_in_sentence(\"lets go for swimming\") .\
    \ \"\\n\";", "\t//TODO\n}", "  $arr = explode(\" \", $sentence);\n  $prime_number\
    \ = [];\n  foreach ($arr as $key => $value) {\n    if (is_prime(strlen($value)))\
    \ {\n      $prime_number[] = $value;\n    }\n  }\n  return implode(\" \", $prime_number);\n\
    }\n", "    $prime_words = array();\n    $prime_numbers = [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    $sentence_array = explode(\" \", $sentence);\n    foreach ($sentence_array\
    \ as $key => $value) {\n        if (in_array(strlen($value), $prime_numbers))\
    \ {\n            array_push($prime_words, $value);\n        }\n    }\n    return\
    \ implode(\" \", $prime_words);\n}\necho(words_in_sentence(\"This is a test\"\
    )).\"\\n\";\necho(words_in_sentence(\"lets go for swimming\")).\"\\n\";", "  \
    \  $arr_sentence = explode(\" \", $sentence);\n    $result = \"\";\n    for ($i\
    \ = 0; $i < count($arr_sentence); $i++) {\n        if (is_prime(strlen($arr_sentence[$i])))\
    \ {\n            $result .= $arr_sentence[$i] . \" \";\n        }\n    }\n   \
    \ echo trim($result);\n}\n", "    $words = explode(' ', $sentence);\n    $prime_words\
    \ = array();\n    foreach ($words as $word) {\n        if (is_prime(strlen($word)))\
    \ {\n            $prime_words[] = $word;\n        }\n    }\n    return implode('\
    \ ', $prime_words);\n}\n", "    $prime_numbers = array(2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n \
    \   $result = '';\n    $words = explode(' ', $sentence);\n    foreach ($words\
    \ as $word) {\n        if (in_array(strlen($word), $prime_numbers)) {\n      \
    \      $result .= $word . ' ';\n        }\n    }\n    return $result;\n}", " \
    \ $result = [];\n  $sentence = explode(' ', $sentence);\n  foreach ($sentence\
    \ as $word) {\n    if (is_prime(strlen($word))) {\n      $result[] = $word;\n\
    \    }\n  }\n  return implode(' ', $result);\n}\n", "    $words = explode(' ',\
    \ $sentence);\n    $prime_words = array();\n    foreach ($words as $word) {\n\
    \        if (is_prime(strlen($word))) {\n            $prime_words[] = $word;\n\
    \        }\n    }\n    return implode(' ', $prime_words);\n}\n", "    $words =\
    \ explode(' ', $sentence);\n    $primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    $result =\
    \ '';\n    foreach ($words as $word) {\n        if (in_array(strlen($word), $primes))\
    \ {\n            $result .= $word.' ';\n        }\n    }\n    return trim($result);\n\
    }\necho words_in_sentence(\"This is a test\");", "\n}", "\n}", "  $words = explode('\
    \ ', $sentence);\n  $prime_words = array();\n  foreach ($words as $word) {\n \
    \   if (is_prime(strlen($word))) {\n      $prime_words[] = $word;\n    }\n  }\n\
    \  return implode(' ', $prime_words);\n}", "\n}", "    // TODO: code goes here\n\
    }", "    $sentence = explode(' ',$sentence);\n    $prime = get_primes(100);\n\
    \    $return = [];\n    foreach($sentence as $value){\n        if(in_array(strlen($value),$prime)){\n\
    \            $return[] = $value;\n        }\n    }\n    return implode(' ',$return);\n\
    }\n", "  $words = explode(' ', $sentence);\n  $sentence = '';\n  foreach ($words\
    \ as $word) {\n    if (strlen($word) == 2) {\n      $sentence .= $word . ' ';\n\
    \    } elseif (strlen($word) == 3) {\n      if (in_array($word[0], array(2, 3,\
    \ 5, 7))) {\n        $sentence .= $word . ' ';\n      }\n    } elseif (strlen($word)\
    \ == 5) {\n      if (in_array($word[0], array(2, 3, 5, 7))) {\n        $sentence\
    \ .= $word . ' ';\n      }\n    }\n  }\n  return $sentence;\n}\n$sentence = 'This\
    \ is a test';\necho words_in_sentence($sentence);", "    $primeNumbers = ['1',\
    \ '2', '3', '5', '7'];\n    $result = [];\n    $sentence = explode(' ', $sentence);\n\
    \    foreach ($sentence as $word) {\n        if (in_array(strlen($word), $primeNumbers))\
    \ {\n            $result[] = $word;\n        }\n    }\n    return implode(' ',\
    \ $result);\n}\necho words_in_sentence(\"This is a test\");\necho PHP_EOL;\necho\
    \ words_in_sentence(\"lets go for swimming\");\necho PHP_EOL;", "  $res = [];\n\
    \  $arr = explode(' ', $sentence);\n  foreach ($arr as $word) {\n    if (is_prime(strlen($word)))\
    \ {\n      $res[] = $word;\n    }\n  }\n  return implode(' ', $res);\n}\n", " \
    \   $words = explode(' ', $sentence);\n    $words_prime = [];\n    foreach ($words\
    \ as $word) {\n        if (is_prime(strlen($word))) {\n            $words_prime[]\
    \ = $word;\n        }\n    }\n    return implode(' ', $words_prime);\n}\n", " \
    \ $words = explode(' ', $sentence);\n  $prime_words = [];\n  $primes = [1, 2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n  foreach ($words as $key => $word) {\n    if (in_array(strlen($word),\
    \ $primes)) {\n      $prime_words[] = $word;\n    }\n  }\n  return implode(' ',\
    \ $prime_words);\n}\n", "    $sentence = explode(' ', $sentence);\n    foreach\
    \ ($sentence as $word) {\n        if (is_prime(strlen($word))) {\n           \
    \ $new_sentence[] = $word;\n        }\n    }\n    return implode(' ', $new_sentence);\n\
    }", "\t$words = preg_split('/ /', $sentence);\n\t$primes = primeNumbers(100);\n\
    \t$result = [];\n\tforeach ($words as $word) {\n\t\tif (in_array(strlen($word),\
    \ $primes)) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn implode(' ', $result);\n\
    }\n", "    $primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    $result = [];\n    $sentence =\
    \ explode(' ', $sentence);\n    foreach ($sentence as $word) {\n        if (in_array(strlen($word),\
    \ $primes)) {\n            $result[] = $word;\n        }\n    }\n    return implode('\
    \ ', $result);\n}\n", "    $words = explode(' ', $sentence);\n    $prime = [];\n\
    \    foreach ($words as $key => $value) {\n        if (is_prime(strlen($value)))\
    \ {\n            $prime[] = $value;\n        }\n    }\n    return implode(' ',\
    \ $prime);\n}", "  $sentence = explode(' ', $sentence);\n  $result = [];\n  foreach\
    \ ($sentence as $word) {\n    if (is_prime(strlen($word))) {\n      $result[]\
    \ = $word;\n    }\n  }\n  return implode(' ', $result);\n}\n", "    $result =\
    \ '';\n    $sentence = preg_split('/ /', $sentence);\n    foreach ($sentence as\
    \ $value) {\n        if (is_prime(strlen($value))) {\n            $result .= '\
    \ ' . $value;\n        }\n    }\n    return trim($result);\n}\n", "\t$words =\
    \ explode(' ', $sentence);\n\tforeach ($words as $key => $word) {\n\t\tif (!is_prime(strlen($word)))\
    \ {\n\t\t\tunset($words[$key]);\n\t\t}\n\t}\n\treturn implode(' ', $words);\n\
    }\n", "  $sentence = explode(' ', $sentence);\n  $isPrimeWord = array_filter($sentence,\
    \ function($word) {\n    return isPrime(strlen($word));\n  });\n  return implode('\
    \ ', $isPrimeWord);\n}", "  $words = explode(' ', $sentence);\n  $primes = getPrimes($words);\n\
    \  $newSentence = [];\n  foreach ($words as $word) {\n    if (in_array(strlen($word),\
    \ $primes)) {\n      $newSentence[] = $word;\n    }\n  }\n  return implode(' ',\
    \ $newSentence);\n}\n", "\n}\n", "  $words = explode(' ', $sentence);\n  $primes\
    \ = get_primes(100);\n  $primes_words = [];\n  foreach ($words as $word) {\n \
    \   if (in_array(strlen($word), $primes)) {\n      $primes_words[] = $word;\n\
    \    }\n  }\n  return implode(' ', $primes_words);\n}\n", "    //TODO\n}", " \
    \   $words = explode(' ', $sentence);\n    $primes = array();\n    $words_count\
    \ = count($words);\n    for ($i = 0; $i < $words_count; $i++) {\n        $length\
    \ = strlen($words[$i]);\n        $is_prime = TRUE;\n        for ($j = 2; $j <\
    \ $length; $j++) {\n            if ($length % $j == 0) {\n                $is_prime\
    \ = FALSE;\n                break;\n            }\n        }\n        if ($is_prime)\
    \ {\n            $primes[] = $words[$i];\n        }\n    }\n    return implode('\
    \ ', $primes);\n}\n", "    $prime_numbers = array_filter(range(1, strlen($sentence)),\
    \ function($n) {\n        if ($n < 2) {\n            return false;\n        }\n\
    \        for ($i = 2; $i <= sqrt($n); $i++) {\n            if ($n % $i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    });\n    return implode(' ', array_filter(explode(' ', $sentence), function($word)\
    \ use ($prime_numbers) {\n        return in_array(strlen($word), $prime_numbers);\n\
    \    }));\n}\n\necho words_in_sentence(\"This is a test\") . PHP_EOL;\necho words_in_sentence(\"\
    lets go for swimming\") . PHP_EOL;", "    $sentence = explode(' ', $sentence);\n\
    \    $filtered = [];\n    foreach ($sentence as $word) {\n        if (is_prime(strlen($word)))\
    \ {\n            $filtered[] = $word;\n        }\n    }\n    return implode('\
    \ ', $filtered);\n}\n", "  $result = '';\n  $words = explode(' ', $sentence);\n\
    \  foreach ($words as $word) {\n    if (is_prime(strlen($word))) {\n      $result\
    \ .= $word . ' ';\n    }\n  }\n  return trim($result);\n}\n", "  $words = explode('\
    \ ', $sentence);\n  $primes = get_primes(0, max(array_map('strlen', $words)));\n\
    \  $prime_words = array_filter($words, function($word) use ($primes) {\n    return\
    \ in_array(strlen($word), $primes);\n  });\n  return implode(' ', $prime_words);\n\
    }\n", "    $words = explode(' ', $sentence);\n    $prime_words = [];\n    foreach\
    \ ($words as $word) {\n        if (is_prime_number(strlen($word))) {\n       \
    \     $prime_words[] = $word;\n        }\n    }\n    return implode(' ', $prime_words);\n\
    }", "  $sentence = explode(' ', $sentence);\n  $temp = [];\n  $result = '';\n\
    \  foreach ($sentence as $word) {\n    if(check_if_prime(strlen($word))) {\n \
    \     $temp[] = $word;\n    }\n  }\n  foreach ($temp as $word) {\n    $result\
    \ .= $word . ' ';\n  }\n  return trim($result);\n}", "\t$result = '';\n\t$is_separator\
    \ = false;\n\t$length = strlen($sentence);\n\tfor ($i = 0; $i < $length; $i++)\
    \ {\n\t\tif ($sentence[$i] == ' ') {\n\t\t\t$is_separator = true;\n\t\t\tcontinue;\n\
    \t\t}\n\t\tif ($is_separator) {\n\t\t\t$is_separator = false;\n\t\t\tif (is_prime($i))\
    \ {\n\t\t\t\t$result .= $sentence[$i];\n\t\t\t}\n\t\t} else {\n\t\t\tif (is_prime($i))\
    \ {\n\t\t\t\t$result .= $sentence[$i];\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n\
    }", "    $prime_numbers = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n    $new_sentence = array();\n\
    \    $sentence = explode(\" \", $sentence);\n    foreach ($sentence as $word)\
    \ {\n        if (in_array(strlen($word), $prime_numbers)) {\n            $new_sentence[]\
    \ = $word;\n        }\n    }\n    return implode(\" \", $new_sentence);\n}", " \
    \ $words = explode(' ', $sentence);\n  $result = [];\n  foreach ($words as $word)\
    \ {\n    if (is_prime(strlen($word))) {\n      $result[] = $word;\n    }\n  }\n\
    \  return implode(' ', $result);\n}", "\treturn implode(' ', array_filter(explode('\
    \ ', $sentence), function($word) {\n\t\tif (in_array(strlen($word), [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97])) {\n\t\t\treturn $word;\n\t\t}\n\t}));\n}\nprint_r(words_in_sentence(\"\
    This is a test\") . PHP_EOL);\nprint_r(words_in_sentence(\"lets go for swimming\"\
    ) . PHP_EOL);", "\t$prime_words = array();\n\t$all_words = explode(\" \", $sentence);\n\
    \tforeach ($all_words as $word) {\n\t\tif (is_prime(strlen($word))) {\n\t\t\t\
    array_push($prime_words, $word);\n\t\t}\n\t}\n\treturn implode(\" \", $prime_words);\n\
    }", "  $sentence = explode(' ', $sentence);\n  $result = [];\n  foreach ($sentence\
    \ as $word) {\n    if (is_prime(strlen($word))) {\n      $result[] = $word;\n\
    \    }\n  }\n  return join(' ', $result);\n}\n", "    $excluded = array(1,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97);\n\
    \    $res = \"\";\n    $words = explode(\" \", $sentence);\n    foreach ($words\
    \ as $word) {\n        if (in_array(strlen($word), $excluded)) {\n           \
    \ $res .= $word . \" \";\n        }\n    }\n    return trim($res);\n}\n\nprint_r(words_in_sentence(\"\
    This is a test\"));\nprint_r(words_in_sentence(\"lets go for swimming\"));", " \
    \ $words = explode(' ', $sentence);\n  $prime_words = [];\n  $prime_words_str\
    \ = '';\n  foreach ($words as $word) {\n    if (is_prime(strlen($word))) {\n \
    \     $prime_words[] = $word;\n    }\n  }\n  if (count($prime_words) >= 1) {\n\
    \    $prime_words_str = implode(' ', $prime_words);\n  }\n  return $prime_words_str;\n\
    }", "\t$sentence = explode(\" \", $sentence);\n\t$prime = [];\n\tforeach ($sentence\
    \ as $key => $value) {\n\t\t$prime[$key] = is_prime(strlen($value));\n\t}\n\t\
    return implode(\" \", array_filter($sentence, function($value, $key) use($prime)\
    \ {\n\t\treturn $prime[$key];\n\t}, ARRAY_FILTER_USE_BOTH));\n}", "    // ...\n\
    }\n", "    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example: print \"Hello world!\";\n    $words = explode(\"\
    \ \", $sentence);\n    $primes = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n    $prime_words =\
    \ array();\n    foreach ($words as $word) {\n        if (in_array(strlen($word),\
    \ $primes)) {\n            $prime_words[] = $word;\n        }\n    }\n    echo\
    \ implode(\" \", $prime_words);\n}\n\nwords_in_sentence(\"This is a test\");\n\
    echo \"\\n\";\nwords_in_sentence(\"lets go for swimming\");\necho \"\\n\";\nwords_in_sentence(\"\
    coding is an art\");\necho \"\\n\";\nwords_in_sentence(\"1\");\necho \"\\n\";\n\
    words_in_sentence(\"This is a test\");\necho \"\\n\";\nwords_in_sentence(\"This\
    \ is a test\");\necho \"\\n\";\nwords_in_sentence(\"let's go for swimming\");\n\
    echo \"\\n\";\nwords_in_sentence(\"This is a test\");\necho \"\\n\";\nwords_in_sentence(\"\
    This is a test\");\necho \"\\n\";\nwords_in_sentence(\"This is a test\");\necho\
    \ \"\\n\";\nwords_in_sentence(\"This is a test\");\necho \"\\n\";\nwords_in_sentence(\"\
    This is a test\");\necho \"\\n\";\nwords_in_sentence(\"This is a test\");\necho\
    \ \"\\n\";\nwords_in_sentence(\"This is a test\");\necho \"\\n\";\nwords_in_sentence(\"\
    This is a test\");\necho \"\\n\";\nwords_in_sentence(\"This is a test\");\necho\
    \ \"\\n\";\nwords_in_sentence(\"This is a test\");\necho \"\\n\";\nwords_in_sentence(\"\
    This is a test\");\necho \"\\n\";\nwords_in_sentence(\"This is a test\");\necho\
    \ \"\\n", "  return array_reduce(explode(' ', $sentence), function($carry, $word)\
    \ {\n    return strlen($word) % 2 == 1 && strlen($word) > 2 ?\n      $carry .\
    \ ' ' . $word :\n      $carry;\n  }, '');\n}\n", "    $string = \"\";\n    $answer\
    \ = \"\";\n    $array = array();\n    $primes = array();\n    $array = explode(\"\
    \ \", $sentence);\n    foreach ($array as $key => $value) {\n        $primes[]\
    \ = strlen($value);\n    }\n    foreach ($primes as $key => $value) {\n      \
    \  $counter = 0;\n        for ($i = 1; $i <= $value; $i++) {\n            if ($value\
    \ % $i == 0) {\n                $counter++;\n            }\n        }\n      \
    \  if ($counter == 2) {\n            $string .= $array[$key] . \" \";\n      \
    \  }\n    }\n    return $string;\n}\necho words_in_sentence(\"This is a test\"\
    );\necho \"\\n\";\necho words_in_sentence(\"lets go for swimming\");\necho \"\\\
    n\";", "\n}\n", "    $is_prime = function($num) {\n        if ($num < 2) return\
    \ false;\n        for ($i = 2; $i <= sqrt($num); $i++) {\n            if ($num\
    \ % $i == 0) return false;\n        }\n        return true;\n    };\n    $words\
    \ = explode(' ', $sentence);\n    $result = [];\n    foreach ($words as $word)\
    \ {\n        if ($is_prime(strlen($word))) $result[] = $word;\n    }\n    return\
    \ implode(' ', $result);\n}", "    // Your code here\n    $words = explode(\"\
    \ \", $sentence);\n    $result = [];\n    foreach ($words as $word) {\n      \
    \  if (is_prime(strlen($word))) {\n            $result[] = $word;\n        }\n\
    \    }\n    return implode(\" \", $result);\n}\n", "  $words = explode(' ', $sentence);\n\
    \  $prime_words = array();\n  foreach ($words as $word) {\n    if (is_prime(strlen($word)))\
    \ {\n      $prime_words[] = $word;\n    }\n  }\n  return implode(' ', $prime_words);\n\
    }\n", "\t$words = explode(' ', $sentence);\n\t$prime_words = [];\n\tforeach ($words\
    \ as $key => $word) {\n\t\tif (is_prime(strlen($word))) {\n\t\t\t$prime_words[]\
    \ = $word;\n\t\t}\n\t}\n\treturn implode(' ', $prime_words);\n}\n", "    $arr\
    \ = explode(\" \", $sentence);\n    $result = [];\n    foreach ($arr as $item)\
    \ {\n        if (is_prime($item)) {\n            $result[] = $item;\n        }\n\
    \    }\n    return implode(\" \", $result);\n}\n", "  $words = explode(' ', $sentence);\n\
    \  $sentence = array();\n  foreach ($words as $word) {\n    if (is_prime(strlen($word)))\
    \ {\n      $sentence[] = $word;\n    }\n  }\n  return implode(' ', $sentence);\n\
    }\n", "    $result = '';\n    $words = explode(' ', $sentence);\n    foreach ($words\
    \ as $word) {\n        if (is_prime(strlen($word))) {\n            $result .=\
    \ $word . ' ';\n        }\n    }\n    return trim($result);\n}\n", "\t$words =\
    \ explode(' ', $sentence);\n\t$primes = primes(count($words));\n\tforeach ($words\
    \ as $key => $word) {\n\t\tif (!in_array(strlen($word), $primes)) {\n\t\t\tunset($words[$key]);\n\
    \t\t}\n\t}\n\treturn implode(' ', $words);\n}\n", "    $return = '';\n    $strArr\
    \ = explode(' ', $sentence);\n    foreach ($strArr as $str) {\n        if (is_prime(strlen($str)))\
    \ {\n            $return .= ' ' . $str;\n        }\n    }\n    return $return;\n\
    }\n", "    $sentence_array = explode(\" \", $sentence);\n    $sentence_array_length\
    \ = count($sentence_array);\n    $output = [];\n    for ($i = 0; $i < $sentence_array_length;\
    \ $i++) {\n        $output[] = $sentence_array[$i];\n    }\n    return implode(\"\
    \ \", $output);\n}", "  $words = explode(' ', $sentence);\n  $result = [];\n \
    \ foreach ($words as $word) {\n    if (is_prime(strlen($word))) {\n      $result[]\
    \ = $word;\n    }\n  }\n  return implode(' ', $result);\n}\n", "    // Write your\
    \ code here\n    // To print results to the standard output you can use print\n\
    \    // Example: print \"Hello world!\";\n    $words = explode(\" \", $sentence);\n\
    \    $primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    $result = \"\";\n    foreach ($words as\
    \ $word) {\n        if (in_array(strlen($word), $primes)) {\n            $result\
    \ .= $word . \" \";\n        }\n    }\n    return $result;\n}", "  $words = explode('\
    \ ', $sentence);\n  $primes = primes($words);\n  return implode(' ', $primes);\n\
    }", "  $words = explode(' ', $sentence);\n  $result = [];\n  foreach ($words as\
    \ $word) {\n    if (is_prime(strlen($word))) {\n      $result[] = $word;\n   \
    \ }\n  }\n  return implode(' ', $result);\n}", "    // TODO\n}\n", "  $words =\
    \ explode(' ', $sentence);\n  $wordsLengths = array_map('strlen', $words);\n \
    \ $primes = implode(' ', get_primes($wordsLengths));\n  return str_replace($wordsLengths,\
    \ $primes, $sentence);\n}", "  $result = [];\n  $words = explode(' ', $sentence);\n\
    \  foreach ($words as $word) {\n    if (is_prime(strlen($word))) {\n      $result[]\
    \ = $word;\n    }\n  }\n  return implode(' ', $result);\n}\n", "  $prime_numbers\
    \ = ['2', '3', '5', '7'];\n  $words = explode(' ', $sentence);\n  $output = [];\n\
    \  foreach ($words as $word) {\n    if (in_array(strlen($word), $prime_numbers))\
    \ {\n      $output[] = $word;\n    }\n  }\n  return implode(' ', $output);\n}\n\
    \n$sentence = \"This is a test\";\necho words_in_sentence($sentence);\necho \"\
    \\n\";\n$sentence = \"lets go for swimming\";\necho words_in_sentence($sentence);\n\
    echo \"\\n\";\n$sentence = \"I was born in 1994\";\necho words_in_sentence($sentence);\n\
    echo \"\\n\";\n$sentence = \"I dont like music\";\necho words_in_sentence($sentence);\n\
    echo \"\\n\";\n$sentence = \"you are beautiful\";\necho words_in_sentence($sentence);\n\
    echo \"\\n\";\n$sentence = \"I have a dream\";\necho words_in_sentence($sentence);\n\
    echo \"\\n\";\n$sentence = \"I dont have money\";\necho words_in_sentence($sentence);\n\
    echo \"\\n\";\n$sentence = \"dont worry be happy\";\necho words_in_sentence($sentence);\n\
    echo \"\\n\";\n$sentence = \"i was born in 1999\";\necho words_in_sentence($sentence);\n\
    echo \"\\n\";\n$sentence = \"i dont like people\";\necho words_in_sentence($sentence);\n\
    echo \"\\n\";\n$sentence = \"god is good\";\necho words_in_sentence($sentence);\n\
    echo \"\\n\";\n$sentence = \"i believe in god\";\necho words_in_sentence($sentence);\n\
    echo \"\\n\";\n$sentence = \"i dont like dogs\";\necho words_in_sentence($sentence);\n\
    echo \"\\n\";\n$sentence = \"my name is simon\";\necho words_in_sentence($sentence);\n\
    echo \"\\n\";\n$sentence = \"you are good\";\necho words_in_sentence($sent", " \
    \   $words = explode(' ', $sentence);\n    $result = [];\n    $primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    foreach ($words as $word) {\n        if (in_array(strlen($word),\
    \ $primes)) {\n            $result[] = $word;\n        }\n    }\n    return implode('\
    \ ', $result);\n}\n\nprint_r(words_in_sentence(\"This is a test\"));\nprint_r(words_in_sentence(\"\
    lets go for swimming\"));", "    $words = explode(' ', $sentence);\n    $prime_words\
    \ = [];\n    foreach ($words as $word) {\n        if (is_prime(strlen($word)))\
    \ {\n            $prime_words[] = $word;\n        }\n    }\n    return implode('\
    \ ', $prime_words);\n}\n", "  $sentence = str_replace(' ', '', $sentence);\n \
    \ $sentence = str_split($sentence);\n  $result = '';\n  foreach ($sentence as\
    \ $char) {\n    if (is_prime($char)) {\n      $result .= $char;\n    }\n  }\n\
    \  return $result;\n}\n", "    // BEGIN (write your solution here)\n    $sentence\
    \ = explode(' ', $sentence);\n    $str = '';\n    foreach ($sentence as $value)\
    \ {\n        if (isPrime(strlen($value))) {\n            $str .= $value . ' ';\n\
    \        }\n    }\n    $str = trim($str);\n    return $str;\n    // END\n}\n",
  "    $words = explode(' ', $sentence);\n    $prime_words = [];\n    foreach ($words\
    \ as $word) {\n        if (is_prime(strlen($word))) {\n            $prime_words[]\
    \ = $word;\n        }\n    }\n    return implode(' ', $prime_words);\n}\n", " \
    \   $words = explode(' ', $sentence);\n    $res = array();\n    foreach ($words\
    \ as $word) {\n        if (is_prime(strlen($word))) {\n            $res[] = $word;\n\
    \        }\n    }\n    return implode(' ', $res);\n}", "    $result = '';\n  \
    \  $words = explode(' ', $sentence);\n    foreach ($words as $word) {\n      \
    \  if (is_prime(strlen($word))) {\n            $result .= $word . ' ';\n     \
    \   }\n    }\n    return rtrim($result);\n}", "    $words = explode(' ', $sentence);\n\
    \    $new_sentence = [];\n    foreach ($words as $word) {\n        if(is_prime(strlen($word)))\
    \ {\n            $new_sentence[] = $word;\n        }\n    }\n    return implode('\
    \ ', $new_sentence);\n}\n", "  $primeLength = [];\n  $word = explode(' ', $sentence);\n\
    \  $length = count($word);\n  for ($i = 0; $i < $length; $i++) {\n    $prime =\
    \ true;\n    for ($j = 2; $j < strlen($word[$i]); $j++) {\n      if (strlen($word[$i])\
    \ % $j == 0) {\n        $prime = false;\n        break;\n      }\n    }\n    if\
    \ ($prime) {\n      $primeLength[] = $word[$i];\n    }\n  }\n  if (count($primeLength)\
    \ == 0) {\n    return ' ';\n  }\n  return implode(' ', $primeLength);\n}\necho\
    \ words_in_sentence(\"lets go for swimming\");\necho words_in_sentence(\"This\
    \ is a test\");", "  $primeNumbersArray = array(2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n  $wordsArray\
    \ = explode(\" \", $sentence);\n  $primeNumbersWordsArray = array();\n  foreach\
    \ ($wordsArray as $word) {\n    if (in_array(strlen($word), $primeNumbersArray))\
    \ {\n      array_push($primeNumbersWordsArray, $word);\n    }\n  }\n  $primeNumbersWordsString\
    \ = implode(\" \", $primeNumbersWordsArray);\n  return $primeNumbersWordsString;\n\
    }", "  $prime_words = array();\n  $words = explode(\" \", $sentence);\n  foreach\
    \ ($words as $word) {\n    if (is_prime(strlen($word))) {\n      array_push($prime_words,\
    \ $word);\n    }\n  }\n  return implode(\" \", $prime_words);\n}\n", "  $word_lens\
    \ = [];\n  $words = explode(' ', $sentence);\n  foreach ($words as $word) {\n\
    \    $word_lens[] = strlen($word);\n  }\n  $prime_lens = select_prime_numbers($word_lens);\n\
    \  $prime_words = [];\n  foreach ($prime_lens as $key => $prime_len) {\n    $prime_words[]\
    \ = $words[$key];\n  }\n  return implode(' ', $prime_words);\n}\n", "  $words\
    \ = explode(' ', $sentence);\n  $lengths = array_map('strlen', $words);\n  $primes\
    \ = array_filter($lengths, 'is_prime');\n  return implode(' ', array_intersect_key($words,\
    \ $primes));\n}\n", "    $words = explode(' ', $sentence);\n    $res = [];\n \
    \   foreach ($words as $word) {\n        if (is_prime(strlen($word))) $res[] =\
    \ $word;\n    }\n    return implode(' ', $res);\n}", "    $words = explode(' ',\
    \ $sentence);\n    $prime_words = array();\n    foreach ($words as $word) {\n\
    \        if (is_prime(strlen($word))) {\n            $prime_words[] = $word;\n\
    \        }\n    }\n    return implode(' ', $prime_words);\n}\n", "    $words =\
    \ explode(' ', $sentence);\n    $output = [];\n    foreach ($words as $word) {\n\
    \        if (is_prime(strlen($word))) {\n            $output[] = $word;\n    \
    \    }\n    }\n    return implode(' ', $output);\n}\n", "    $words = explode('\
    \ ', $sentence);\n    $prime_words = array();\n    $final_words = array();\n \
    \   foreach ($words as $value) {\n        if (is_prime($value)) {\n          \
    \  $prime_words[] = $value;\n        }\n    }\n    return implode(' ', $prime_words);\n\
    }\n", "    $words = explode(' ', $sentence);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if(is_prime(strlen($word))) {\n            $result[] =\
    \ $word;\n        }\n    }\n    return implode(' ', $result);\n}\n", "    $words\
    \ = explode(' ', $sentence);\n    $result = [];\n    foreach ($words as $word)\
    \ {\n        if (is_prime(strlen($word))) {\n            $result[] = $word;\n\
    \        }\n    }\n    return implode(' ', $result);\n}", "  $words = explode('\
    \ ', $sentence);\n  $res = [];\n  foreach ($words as $word) {\n    if (is_prime(strlen($word)))\
    \ {\n      $res[] = $word;\n    }\n  }\n  return implode(' ', $res);\n}", "  $words\
    \ = explode(' ', $sentence);\n  $result = [];\n  foreach ($words as $word) {\n\
    \    if (is_prime(strlen($word))) {\n      $result[] = $word;\n    }\n  }\n  return\
    \ implode(' ', $result);\n}\n", "  $words = explode(' ', $sentence);\n  $primes\
    \ = [];\n  $ret = [];\n  $counter = 0;\n  for ($i = 2; $i < count($words); $i++)\
    \ {\n    $flag = true;\n    for ($j = 2; $j <= ($i / 2); $j++) {\n      if ($i\
    \ % $j == 0) {\n        $flag = false;\n        break;\n      }\n    }\n    if\
    \ ($flag) {\n      $primes[$counter] = $i;\n      $counter++;\n    }\n  }\n  $counter\
    \ = 0;\n  for ($i = 0; $i < count($words); $i++) {\n    if (in_array(strlen($words[$i]),\
    \ $primes)) {\n      $ret[$counter] = $words[$i];\n      $counter++;\n    }\n\
    \  }\n  return implode(' ', $ret);\n}", "    $arrayOfWords = explode(\" \", $sentence);\n\
    \    $primes = array();\n    $response = \"\";\n    foreach ($arrayOfWords as\
    \ $word) {\n        if (preg_match(\"/[^A-Za-z0-9 ]/\", $word)) {\n          \
    \  throw new Exception(\"Invalid sentence!\");\n        }\n        if (isPrime(strlen($word)))\
    \ {\n            $primes[] = $word;\n        }\n    }\n    if (count($primes)\
    \ > 0) {\n        $response = implode(\" \", $primes);\n    }\n    return $response;\n\
    }", "    $array_sentence = explode(\" \", $sentence);\n    $prime_words = \"\"\
    ;\n    foreach ($array_sentence as $word) {\n        if (is_prime(strlen($word)))\
    \ {\n            $prime_words .= $word . \" \";\n        }\n    }\n    return\
    \ trim($prime_words);\n}\n", "    $words = explode(' ', $sentence);\n    $prime_words\
    \ = [];\n    foreach ($words as $word) {\n        if (is_prime(strlen($word)))\
    \ {\n            $prime_words[] = $word;\n        }\n    }\n    return implode('\
    \ ', $prime_words);\n}", "\treturn;\n}\n", "    $primes = array(2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97);\n    $lengths = array_map('strlen', explode(' ', $sentence));\n    $wis\
    \ = array();\n    foreach ($lengths as $key => $length) {\n        if (in_array($length,\
    \ $primes)) {\n            $wis[] = $lengths[$key];\n        }\n    }\n    return\
    \ implode(' ', $wis);\n}\n", "  $words = explode(' ', $sentence);\n  $prime_words\
    \ = [];\n  foreach ($words as $word) {\n    if (is_prime(strlen($word))) {\n \
    \     $prime_words[] = $word;\n    }\n  }\n  return implode(' ', $prime_words);\n\
    }\n", "\t$new_str = \"\";\n\t$arr = explode(\" \", $sentence);\n\tforeach ($arr\
    \ as $v) {\n\t\tif (is_prime($v)) {\n\t\t\t$new_str .= $v.\" \";\n\t\t}\n\t}\n\
    \treturn trim($new_str);\n}", "  $primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n  $result = [];\n\
    \  $words = explode(' ', $sentence);\n  foreach ($words as $word) {\n    if (in_array(strlen($word),\
    \ $primes)) {\n      $result[] = $word;\n    }\n  }\n  return implode(' ', $result);\n\
    }", "    $arr = explode(\" \", $sentence);\n    $prime_words = \"\";\n    foreach\
    \ ($arr as $word) {\n        if (is_prime(strlen($word))) {\n            $prime_words\
    \ .= $word.\" \";\n        }\n    }\n    return $prime_words;\n}\n", "  //\n}",
  "    $sentence_array = explode(\" \", $sentence);\n    foreach ($sentence_array\
    \ as $key => $value) {\n        if (!is_prime(strlen($value))) {\n           \
    \ unset($sentence_array[$key]);\n        }\n    }\n    return implode(\" \", $sentence_array);\n\
    }\n", "    $sentence = explode(' ', $sentence);\n    $new_sentence = [];\n   \
    \ foreach ($sentence as $word) {\n        if (check_prime(strlen($word))) {\n\
    \            $new_sentence[] = $word;\n        }\n    }\n    return implode('\
    \ ', $new_sentence);\n}\n", "\t$words = explode(' ', $sentence);\n\t$is_prime\
    \ = function($a) {\n\t\t$max = $a;\n\t\tif ($a < 2) {\n\t\t\treturn false;\n\t\
    \t}\n\t\tfor ($i = 2; $i < $max; $i++) {\n\t\t\tif ($a % $i == 0) {\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\t$new_words = array_filter($words,\
    \ function($item) use ($is_prime) {\n\t\treturn $is_prime(strlen($item));\n\t\
    });\n\treturn implode(' ', $new_words);\n}\n\n$sentence = 'lets go for swimming';\n\
    echo words_in_sentence($sentence);", "    $result = [];\n    $words = explode('\
    \ ', $sentence);\n    foreach ($words as $word) {\n        if (is_prime(strlen($word)))\
    \ {\n            $result[] = $word;\n        }\n    }\n    return implode(' ',\
    \ $result);\n}\n", "    $sentence = explode(' ', $sentence);\n    $new = [];\n\
    \    foreach ($sentence as $word) {\n        if (is_prime(strlen($word))) {\n\
    \            $new[] = $word;\n        }\n    }\n    return implode(' ', $new);\n\
    }\n", "  $prime_words = [];\n  $words = explode(' ', $sentence);\n  foreach ($words\
    \ as $word) {\n    if (is_prime(strlen($word))) {\n      $prime_words[] = $word;\n\
    \    }\n  }\n  return implode(' ', $prime_words);\n}\n", "    // your code here\n\
    \    $words = explode(\" \", $sentence);\n    $valid_words = [];\n    foreach\
    \ ($words as $word) {\n        if (is_prime_number(strlen($word))) {\n       \
    \     $valid_words[] = $word;\n        }\n    }\n    return implode(\" \", $valid_words);\n\
    }\n", "    $result = [];\n    $words = explode(' ', $sentence);\n    foreach ($words\
    \ as $word) {\n        if (is_prime(strlen($word))) {\n            $result[] =\
    \ $word;\n        }\n    }\n    return implode(' ', $result);\n}", "  $words =\
    \ explode(' ', $sentence);\n  $result = [];\n  foreach ($words as $word) {\n \
    \   if (check_prime(strlen($word))) {\n      $result[] = $word;\n    }\n  }\n\
    \  return implode(' ', $result);\n}\n", '}', "  $prime_words = '';\n  $sentence_arr\
    \ = explode(' ', $sentence);\n  foreach ($sentence_arr as $word) {\n    if (is_prime(strlen($word)))\
    \ {\n      $prime_words .= $word . ' ';\n    }\n  }\n  return trim($prime_words);\n\
    }", "  $words = array_filter(\n    explode(' ', $sentence),\n    function($word)\
    \ {\n      return is_prime(strlen($word));\n    }\n  );\n  return implode(' ',\
    \ $words);\n}\n", "\t$sentence = explode(\" \", $sentence);\n\t$result = \"\"\
    ;\n\tforeach ($sentence as $word) {\n\t\t$is_prime = true;\n\t\t$length = strlen($word);\n\
    \t\tfor ($i = 2; $i < $length; $i++) {\n\t\t\tif ($length % $i == 0) {\n\t\t\t\
    \t$is_prime = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($is_prime) {\n\t\
    \t\t$result .= $word . \" \";\n\t\t}\n\t}\n\techo trim($result);\n}\nwords_in_sentence(\"\
    This is a test\");", "    $result = [];\n    $words = explode(' ', $sentence);\n\
    \    $is_prime = function($number) {\n        if ($number <= 1) {\n          \
    \  return false;\n        }\n        if ($number <= 3) {\n            return true;\n\
    \        }\n        if ($number % 2 == 0 || $number % 3 == 0) {\n            return\
    \ false;\n        }\n        for ($i = 5; $i * $i <= $number; $i = $i + 6) {\n\
    \            if ($number % $i == 0 || $number % ($i + 2) == 0) {\n           \
    \     return false;\n            }\n        }\n        return true;\n    };\n\
    \    foreach ($words as $word) {\n        if ($is_prime(strlen($word))) {\n  \
    \          $result[] = $word;\n        }\n    }\n    return implode(' ', $result);\n\
    }\n$sentence = 'This is a test';\n$result = words_in_sentence($sentence);\nprint_r($result);",
  "    $primes = array_fill(0, strlen($sentence), false);\n    $primes[0] = true;\n\
    \    $primes[1] = true;\n    for ($i = 2; $i < strlen($sentence); $i++) {\n  \
    \      if (!$primes[$i]) {\n            for ($j = $i * 2; $j < strlen($sentence);\
    \ $j += $i) {\n                $primes[$j] = true;\n            }\n        }\n\
    \    }\n    $words = array_map(function($word) {\n        return trim($word);\n\
    \    }, explode(' ', $sentence));\n    $ret = [];\n    foreach ($words as $word)\
    \ {\n        if (!$primes[strlen($word)]) {\n            $ret[] = $word;\n   \
    \     }\n    }\n    return implode(' ', $ret);\n}\n$sentence = \"This is a test\"\
    ;\n$test = words_in_sentence($sentence);\necho $test;", "    $sentence = explode('\
    \ ', $sentence);\n    $ret = [];\n    foreach ($sentence as $word) {\n       \
    \ if (is_prime(strlen($word))) {\n            $ret[] = $word;\n        }\n   \
    \ }\n    return implode(' ', $ret);\n}", "    $prime_numbers = array(2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97);\n    $words = explode(\" \", $sentence);\n    $prime_words = array();\n\
    \    foreach ($words as $word) {\n        if (in_array(strlen($word), $prime_numbers))\
    \ {\n            $prime_words[] = $word;\n        }\n    }\n    return implode(\"\
    \ \", $prime_words);\n}\necho words_in_sentence(\"lets go for swimming\");", " \
    \   $result = \"\";\n    $words = explode(\" \", $sentence);\n    foreach ($words\
    \ as $word) {\n        if (is_prime(strlen($word))) {\n            $result .=\
    \ $word.\" \";\n        }\n    }\n    return trim($result);\n}", "\n}\n", "  \
    \  $result = \"\";\n    $words = explode(\" \", $sentence);\n    foreach ($words\
    \ as $word) {\n        if (is_prime(strlen($word))) {\n            $result .=\
    \ $word . \" \";\n        }\n    }\n    return $result;\n}", "    // Your code\
    \ goes here\n    $sentence = explode(\" \", $sentence);\n    $newSentence = \"\
    \";\n    foreach ($sentence as $key => $value) {\n        if(isPrime($value))\
    \ {\n            $newSentence = $newSentence . \" \" . $value;\n        }\n  \
    \  }\n    $newSentence = trim($newSentence);\n    return $newSentence;\n}\n",
  "  $sentence_array = explode(\" \", $sentence);\n  $new_sentence = \"\";\n  foreach\
    \ ($sentence_array as $word) {\n    if (is_prime(strlen($word))) {\n      $new_sentence\
    \ .= $word . \" \";\n    }\n  }\n  return rtrim($new_sentence);\n}\n", "    $arr\
    \ = explode(\" \", $sentence);\n    $isPrime = function($x) {\n        if ($x\
    \ <= 1) {\n            return false;\n        }\n        if ($x <= 3) {\n    \
    \        return true;\n        }\n        if ($x % 2 == 0 || $x % 3 == 0) {\n\
    \            return false;\n        }\n        for ($i = 5; $i * $i <= $x; $i\
    \ = $i + 6) {\n            if ($x % $i == 0 || $x % ($i + 2) == 0) {\n       \
    \         return false;\n            }\n        }\n        return true;\n    };\n\
    \    $arr = array_filter($arr, function($x) use ($isPrime) {\n        return $isPrime(strlen($x));\n\
    \    });\n    return implode(\" \", $arr);\n}\necho words_in_sentence(\"This is\
    \ a test\") . \"\\n\";\necho words_in_sentence(\"lets go for swimming\") . \"\\\
    n\";", "    $str = \"\";\n    foreach (explode(\" \", $sentence) as $word) {\n\
    \        if (is_prime(strlen($word))) {\n            $str .= $word . \" \";\n\
    \        }\n    }\n    return trim($str);\n}\n", "    $words = explode(' ', $sentence);\n\
    \    $primeWords = [];\n    foreach ($words as $word) {\n        if (isPrime($word))\
    \ {\n            $primeWords[] = $word;\n        }\n    }\n    return implode('\
    \ ', $primeWords);\n}\n", "    $words = explode(' ', $sentence);\n    $primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    $output = [];\n    foreach ($words as $word) {\n \
    \       if (in_array(strlen($word), $primes)) {\n            $output[] = $word;\n\
    \        }\n    }\n    return implode(' ', $output);\n}\necho words_in_sentence(\"\
    This is a test\") . \"\\n\";\necho words_in_sentence(\"lets go for swimming\"\
    ) . \"\\n\";", "  $words = explode(' ', $sentence);\n  $res = '';\n  foreach ($words\
    \ as $word) {\n    if (is_prime($word)) {\n      $res .= $word . ' ';\n    }\n\
    \  }\n  return trim($res);\n}\n", "  $words = explode(' ', $sentence);\n  $output\
    \ = [];\n  foreach ($words as $word) {\n    if (prime_length($word)) {\n     \
    \ $output[] = $word;\n    }\n  }\n  return implode(' ', $output);\n}\n", "  $result_array\
    \ = [];\n  $words = explode(\" \", $sentence);\n  for ($i = 0; $i < count($words);\
    \ $i++) {\n    if (is_prime(strlen($words[$i]))) {\n      array_push($result_array,\
    \ $words[$i]);\n    }\n  }\n  return implode(\" \", $result_array);\n}\n", " \
    \ // YOUR CODE GOES HERE\n}", "    $words = explode(' ', $sentence);\n    $prime_words\
    \ = [];\n    foreach ($words as $word) {\n        if (is_prime(strlen($word)))\
    \ {\n            $prime_words[] = $word;\n        }\n    }\n    return implode('\
    \ ', $prime_words);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

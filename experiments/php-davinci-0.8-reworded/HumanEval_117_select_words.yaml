name: HumanEval_117_select_words
language: php
prompt: "<?php\n// Given a string s and a natural number n, you have been tasked to\
  \ implement \n// a function that returns an array of all words from string s that\
  \ contain exactly \n// n consonants, in order these words appear in the string s.\n\
  // If the string s is empty then the function should return an empty array.\n//\
  \ Note: you may assume the input string contains only letters and spaces.\n// Examples:\n\
  // >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\")\n// >>>\
  \ select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\")\n//\
  \ >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
  Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
  // array(\"Uncle\")\nfunction select_words($s, $n) {\n"
tests: "function candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
  little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
  \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4)\
  \ !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"\
  )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $s_array = preg_split('/ /', $s);\n    $consonants = array('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z');\n    $result = array();\n    foreach ($s_array as $key\
    \ => $value) {\n        $count = 0;\n        $value_array = str_split($value);\n\
    \        foreach ($value_array as $value_array_key => $value_array_value) {\n\
    \            if (in_array($value_array_value, $consonants)) {\n              \
    \  $count++;\n            }\n        }\n        if ($count == $n) {\n        \
    \    array_push($result, $value);\n        }\n    }\n    return $result;\n}\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "  $words = explode(' ', $s);\n  $result = [];\n  foreach ($words as\
    \ $word) {\n    if (number_of_consonants($word) == $n) {\n      $result[] = $word;\n\
    \    }\n  }\n  return $result;\n}\n", "    if (empty($s)) return array();\n  \
    \  $words = explode(' ', $s);\n    $result = array();\n    foreach ($words as\
    \ $word) {\n        if (count_consonants($word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n", "    $regex = \"/[bcdfghjklmnpqrstvwxyz]/\"\
    ;\n    $words = explode(\" \", $s);\n    $result = [];\n    foreach ($words as\
    \ $w) {\n        if (strlen($w) == $n) {\n            if (preg_match_all($regex,\
    \ $w, $matches)) {\n                $result[] = $w;\n            }\n        }\n\
    \    }\n    return $result;\n}", "  $words = array();\n  $s = str_replace(' ',\
    \ '&', $s);\n  $s = explode('&', $s);\n  foreach ($s as $word) {\n    $c = count_consonants($word);\n\
    \    if ($c == $n) {\n      $words[] = $word;\n    }\n  }\n  return $words;\n\
    }\n", "\t$words = array();\n\t$arr = preg_split('/ /', $s);\n\tforeach ($arr as\
    \ $word) {\n\t\tif (has_n_consonants($word, $n)) {\n\t\t\t$words[] = $word;\n\t\
    \t}\n\t}\n\treturn $words;\n}\n", "  $output = [];\n  $s = explode(' ', $s);\n\
    \  foreach ($s as $word) {\n    if (strlen($word) > 0) {\n      $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n      $count = 0;\n      for ($i = 0; $i < strlen($word);\
    \ $i++) {\n        if (!in_array($word[$i], $vowels)) {\n          $count++;\n\
    \        }\n      }\n      if ($count == $n) {\n        $output[] = $word;\n \
    \     }\n    }\n  }\n  return $output;\n}", "    $arr = explode(\" \", $s);\n\
    \    $len = count($arr);\n    $result = [];\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $consonants = 0;\n        $array = str_split($arr[$i]);\n       \
    \ $len_array = count($array);\n        for ($j = 0; $j < $len_array; $j++) {\n\
    \            if ($array[$j] == \"b\" || $array[$j] == \"c\" || $array[$j] == \"\
    d\" ||\n                $array[$j] == \"f\" || $array[$j] == \"g\" || $array[$j]\
    \ == \"h\" ||\n                $array[$j] == \"j\" || $array[$j] == \"k\" || $array[$j]\
    \ == \"l\" ||\n                $array[$j] == \"m\" || $array[$j] == \"n\" || $array[$j]\
    \ == \"p\" ||\n                $array[$j] == \"q\" || $array[$j] == \"r\" || $array[$j]\
    \ == \"s\" ||\n                $array[$j] == \"t\" || $array[$j] == \"v\" || $array[$j]\
    \ == \"w\" ||\n                $array[$j] == \"x\" || $array[$j] == \"z\") {\n\
    \                $consonants++;\n            }\n        }\n        if ($consonants\
    \ == $n) {\n            array_push($result, $arr[$i]);\n        }\n    }\n   \
    \ return $result;\n}", "    $result = [];\n    $words = explode(' ', $s);\n  \
    \  foreach ($words as $word) {\n        if ($n === get_constant_number($word))\
    \ {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n",
  "    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $words = explode(' ', $s);\n\
    \    $result = [];\n    foreach ($words as $word) {\n        $counter = 0;\n \
    \       for ($i = 0; $i < strlen($word); $i++) {\n            if (in_array(strtolower($word[$i]),\
    \ $consonants)) {\n                $counter++;\n            }\n        }\n   \
    \     if ($counter == $n) {\n            $result[] = $word;\n        }\n    }\n\
    \    return $result;\n}\n\n$string = 'Mary had a little lamb';\n$n = 4;\n\nprint_r(select_words($string,\
    \ $n));", "    $arr = explode(\" \", $s);\n    $result = [];\n    for ($i = 0;\
    \ $i < count($arr); $i++) {\n        $count = 0;\n        for ($j = 0; $j < strlen($arr[$i]);\
    \ $j++) {\n            if (preg_match(\"/[bcdfghjklmnpqrstvwxyz]/\", $arr[$i][$j]))\
    \ {\n                $count++;\n            }\n        }\n        if ($count ==\
    \ $n) {\n            array_push($result, $arr[$i]);\n        }\n    }\n    return\
    \ $result;\n}\n", "\t$s = preg_replace('/[^a-zA-Z ]/', '', $s); // asumiendo que\
    \ tiene solo letras y espacios\n\t$words = explode(' ', $s);\n\t$response = [];\n\
    \tforeach ($words as $word) {\n\t\tif (count_consonants($word) == $n) {\n\t\t\t\
    $response[] = $word;\n\t\t}\n\t}\n\treturn $response;\n}\n", "    $result = [];\n\
    \    $words = explode(' ', $s);\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n", "  $arr = explode(\" \", $s);\n  $result = [];\n  foreach ($arr as $key\
    \ => $value) {\n    if (substr_count($value, \"a\") +\n        substr_count($value,\
    \ \"e\") +\n        substr_count($value, \"i\") +\n        substr_count($value,\
    \ \"o\") +\n        substr_count($value, \"u\") +\n        substr_count($value,\
    \ \"y\") +\n        substr_count($value, \"A\") +\n        substr_count($value,\
    \ \"E\") +\n        substr_count($value, \"I\") +\n        substr_count($value,\
    \ \"O\") +\n        substr_count($value, \"U\") +\n        substr_count($value,\
    \ \"Y\") == $n) {\n      array_push($result, $value);\n    }\n  }\n  return $result;\n\
    }\n$s = \"Uncle sam\";\n$n = 3;\nprint_r(select_words($s, $n));", "    if(!$s)\
    \ return [];\n    $words = explode(' ', $s);\n    $words = array_filter($words,\
    \ function($word) use ($n) {\n        preg_match_all('/[^aeiou]/i', $word, $matches);\n\
    \        return count($matches[0]) === $n;\n    });\n    return $words;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));", "    $words = explode(' ', $s);\n    $res = [];\n\
    \    foreach ($words as $word) {\n        if (consonantsCount($word) == $n) {\n\
    \            $res[] = $word;\n        }\n    }\n    return $res;\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $letters = str_split(strtolower($s));\n    $words = explode(' ', $s);\n \
    \   $results = [];\n    foreach ($words as $key => $word) {\n        $count =\
    \ 0;\n        $letters = str_split(strtolower($word));\n        foreach ($letters\
    \ as $letter) {\n            if (in_array($letter, $consonants)) {\n         \
    \       $count++;\n            }\n        }\n        if ($count == $n) {\n   \
    \         $results[] = $word;\n        }\n    }\n    return $results;\n}", " \
    \ //Your code here\n}\n", "\n}\n", "    $s = preg_replace('/[^a-z ]/i', '', $s);\n\
    \    $words = explode(' ', $s);\n    $res = [];\n    foreach ($words as $word)\
    \ {\n        $word = strtolower($word);\n        $c = preg_replace('/[^bcdfghjklmnpqrstvwxyz]/i',\
    \ '', $word);\n        if (strlen($c) == $n) {\n            $res[] = $word;\n\
    \        }\n    }\n    return $res;\n}\n", "    // write your code here\n}\n\n\
    print_r(select_words(\"Mary had a little lamb\", 4));", "  $results = [];\n  $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n  $words = explode(' ', $s);\n  foreach ($words\
    \ as $word) {\n    $count = 0;\n    for ($i = 0; $i < strlen($word); $i++) {\n\
    \      if (!in_array($word[$i], $vowels)) {\n        $count++;\n      }\n    }\n\
    \    if ($count === $n) {\n      $results[] = $word;\n    }\n  }\n  return $results;\n\
    }\n$s = 'Mary had a little lamb';\necho implode(select_words($s, 4));\necho PHP_EOL;\n\
    echo implode(select_words($s, 3));\necho PHP_EOL;\n$s = 'simple white space';\n\
    echo implode(select_words($s, 2));\necho PHP_EOL;\n$s = 'Hello world';\necho implode(select_words($s,\
    \ 4));\necho PHP_EOL;\n$s = 'Uncle sam';\necho implode(select_words($s, 3));\n\
    echo PHP_EOL;", "    if (empty($s)) {\n        return array();\n    }\n    $split\
    \ = explode(' ', $s);\n    $r = array();\n    foreach ($split as $w) {\n     \
    \   if (substr_count($w, 'a') + substr_count($w, 'e') + substr_count($w, 'i')\
    \ + substr_count($w, 'o') + substr_count($w, 'u') == $n) {\n            $r[] =\
    \ $w;\n        }\n    }\n    return $r;\n}\n\n$a = select_words(\"Mary had a little\
    \ lamb\", 4);\nprint_r($a);\necho '<br/>';\n$a = select_words(\"Mary had a little\
    \ lamb\", 3);\nprint_r($a);\necho '<br/>';\n$a = select_words(\"simple white space\"\
    , 2);\nprint_r($a);\necho '<br/>';\n$a = select_words(\"Hello world\", 4);\nprint_r($a);\n\
    echo '<br/>';\n$a = select_words(\"Uncle sam\", 3);\nprint_r($a);\necho '<br/>';",
  "\t$arr = array();\n\t$s = str_replace('  ', ' ', $s);\n\t$s = explode(' ', $s);\n\
    \tforeach ($s as $word) {\n\t\t$sum = 0;\n\t\t$letters = str_split($word);\n\t\
    \tforeach ($letters as $letter) {\n\t\t\tif (!(preg_match('/^[aeiou]$/i', $letter)))\
    \ {\n\t\t\t\t$sum++;\n\t\t\t}\n\t\t}\n\t\tif ($sum == $n) {\n\t\t\tarray_push($arr,\
    \ $word);\n\t\t}\n\t}\n\treturn $arr;\n}", "  $retArray = array();\n  $allWords\
    \ = explode(\" \", $s);\n  foreach ($allWords as $word) {\n    if (countConsonants($word)\
    \ == $n) {\n      array_push($retArray, $word);\n    }\n  }\n  return $retArray;\n\
    }", "    $words = explode(' ', $s);\n    $len = count($words);\n    $result =\
    \ [];\n    for ($i = 0; $i < $len; $i++) {\n        $word = $words[$i];\n    \
    \    $count = 0;\n        for ($j = 0; $j < strlen($word); $j++) {\n         \
    \   if (!preg_match('/[AEIOUaeiou]/', $word[$j])) {\n                $count++;\n\
    \            }\n        }\n        if ($count == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\n$test_cases = array(\n\
    \    \"Mary had a little lamb\" => array(\n        array(\"little\", 4),\n   \
    \     array(\"Mary\", 3),\n        array(array(), 2),\n        array(\"world\"\
    , 4),\n        array(\"Uncle\", 3)\n    )\n);\n\nforeach ($test_cases as $string\
    \ => $test_data) {\n    foreach ($test_data as $test_case) {\n        echo select_words($string,\
    \ $test_case[1]) == $test_case[0]\n            ? \"All good\"\n            : \"\
    Failed \" . $string . \" \" . $test_case[1] . \"\\n\";\n    }\n}", "  $result\
    \ = [];\n  $words = preg_split('/[\\s]+/', $s);\n  foreach ($words as $word) {\n\
    \    if (preg_match_all('/[bcdfghjklmnpqrstvwxyz]/i', $word, $matches) && count($matches[0])\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $s = str_replace('\
    \ ', '', $s);\n    $len = strlen($s);\n    $res = [];\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        if (!isVowel($s[$i])) {\n            if (isset($res[$i])) {\n\
    \                $res[$i]++;\n            } else {\n                $res[$i] =\
    \ 1;\n            }\n        }\n    }\n    $res = array_filter($res, function($value)\
    \ use ($n) {\n        return $value == $n;\n    });\n    return array_keys($res);\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $words = explode(' ', $s);\n\
    \    $result = [];\n    foreach ($words as $w) {\n        $count = 0;\n      \
    \  for ($i = 0; $i < strlen($w); $i++) {\n            if (!in_array($w[$i], $vowels))\
    \ {\n                $count++;\n            }\n        }\n        if ($count ==\
    \ $n) {\n            $result[] = $w;\n        }\n    }\n    return $result;\n}",
  "  $arr = preg_split('/[\\s]+/', $s);\n  $regex = \"/[^aeiou]{{$n}}/\";\n  $result\
    \ = [];\n  foreach ($arr as $i => $v) {\n    if (preg_match($regex, $v)) {\n \
    \     $result[] = $v;\n    }\n  }\n  return $result;\n}\n", "    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n", "\t$arr = explode(\" \", $s);\n\t$lst = array();\n\tforeach ($arr as $i\
    \ => $word) {\n\t\t$c = 0;\n\t\tfor ($j = 0; $j < strlen($word); $j++) {\n\t\t\
    \t$c += (preg_match(\"/[aeiou]/i\", $word[$j])) ? 0 : 1;\n\t\t}\n\t\tif ($c ==\
    \ $n) {\n\t\t\tarray_push($lst, $word);\n\t\t}\n\t}\n\treturn $lst;\n}\n$lst =\
    \ select_words(\"Mary had a little lamb\", 4);\necho \"[\";\nforeach ($lst as\
    \ $i => $word) {\n\techo \"\\\"\" . $word . \"\\\"\";\n\tif ($i != count($lst)\
    \ - 1) {\n\t\techo \", \";\n\t}\n}\necho \"]\";", "    $arr = explode(\" \", $s);\n\
    \    $result = [];\n    foreach ($arr as $value) {\n        if (countConsonants($value)\
    \ == $n) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "\t$s = preg_replace('/[^a-z\\s]+/i', '', $s);\n\tif (!$s) return array();\n\
    \t$arr = explode(' ', $s);\n\t$consonants = ['B', 'C', 'D', 'F', 'G', 'H', 'J',\
    \ 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z'];\n\t$newArr\
    \ = [];\n\tforeach ($arr as $word) {\n\t\t$consCount = 0;\n\t\tfor ($i = 0; $i\
    \ < strlen($word); $i++) {\n\t\t\tif (in_array(strtoupper($word[$i]), $consonants))\
    \ $consCount++;\n\t\t}\n\t\tif ($consCount == $n) array_push($newArr, $word);\n\
    \t}\n\treturn $newArr;\n}\n", "    if(empty($s)) {\n        return array();\n\
    \    }\n    $words = explode(' ', $s);\n    $result = array();\n    foreach($words\
    \ as $word) {\n        if(is_numeric($word) || count(consonants($word)) == $n)\
    \ {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}",
  "  $return = array();\n  $vowels = array('a', 'e', 'i', 'o', 'u');\n  $s = explode('\
    \ ', $s);\n  foreach ($s as $key => $word) {\n    $numConsonants = 0;\n    for\
    \ ($i = 0; $i < strlen($word); $i++) {\n      if (!in_array($word[$i], $vowels))\
    \ {\n        $numConsonants++;\n      }\n    }\n    if ($numConsonants == $n)\
    \ {\n      $return[] = $word;\n    }\n  }\n  return $return;\n}\n", "    $words\
    \ = array();\n    $words_with_n_consonants = array();\n    $index = 0;\n    $w\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strstr(\"bcdfghjklmnpqrstvwxyz\"\
    , strtolower($s[$i]))) {\n            $w .= $s[$i];\n        } else {\n      \
    \      if ($w != '') {\n                $words[$index] = $w;\n               \
    \ $index++;\n                $w = '';\n            }\n        }\n    }\n    if\
    \ ($w != '') {\n        $words[$index] = $w;\n    }\n    for ($i = 0; $i < count($words);\
    \ $i++) {\n        if (get_n_consonants($words[$i]) == $n) {\n            $words_with_n_consonants[]\
    \ = $words[$i];\n        }\n    }\n    return $words_with_n_consonants;\n}\n",
  "  $words = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n\
    \    if (count_consonants($word) === $n) {\n      $result[] = $word;\n    }\n\
    \  }\n  return $result;\n}\n", "    $arr = explode(\" \", $s);\n    $ret_arr =\
    \ [];\n    foreach ($arr as $word) {\n        if (count_consonants($word) == $n)\
    \ {\n            $ret_arr[] = $word;\n        }\n    }\n    return $ret_arr;\n\
    }", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words as\
    \ $word) {\n        if (count_consonants($word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n", "  $r = [];\n  $w = preg_split('/[^a-zA-Z]+/',\
    \ $s);\n  foreach ($w as $word) {\n    $word = strtolower($word);\n    $l = strlen($word);\n\
    \    $c = 0;\n    for ($i = 0; $i < $l; $i++) {\n      $letter = $word[$i];\n\
    \      if (preg_match('/[^aeiou]/', $letter)) {\n        $c++;\n      }\n    }\n\
    \    if ($c == $n) {\n      $r[] = $word;\n    }\n  }\n  return $r;\n}\necho implode(select_words(\"\
    Mary had a little lamb\", 4), ',') . \"\\n\";\necho implode(select_words(\"Mary\
    \ had a little lamb\", 3), ',') . \"\\n\";\necho implode(select_words(\"simple\
    \ white space\", 2), ',') . \"\\n\";\necho implode(select_words(\"Hello world\"\
    , 4), ',') . \"\\n\";\necho implode(select_words(\"Uncle sam\", 3), ',') . \"\\\
    n\";", "    if ($s == null) return array();\n    $consonants = array('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z');\n    $a = explode(\" \", $s);\n    $res = array();\n    foreach\
    \ ($a as $k => $v) {\n        $nCon = 0;\n        $v = strtolower($v);\n     \
    \   for ($i = 0; $i < strlen($v); $i++) {\n            if (in_array($v[$i], $consonants))\
    \ $nCon++;\n        }\n        if ($nCon == $n) $res[] = $v;\n    }\n    return\
    \ $res;\n}", "    $result = [];\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $words = explode(' ', $s);\n    foreach ($words as $word) {\n        $wordVowels\
    \ = array_intersect(str_split($word), $vowels);\n        $wordLetters = str_split($word);\n\
    \        $wordConsonants = array_diff($wordLetters, $wordVowels);\n        if\
    \ (count($wordConsonants) == $n) {\n            $result[] = $word;\n        }\n\
    \    }\n    return $result;\n}\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (preg_match_all('/[^aeiou]/i', $word) == $n) {\n   \
    \         $result[] = $word;\n        }\n    }\n    return $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", '}', "    $result\
    \ = [];\n    $array = preg_split('/ /', $s);\n    foreach ($array as $word) {\n\
    \        if (preg_match_all('/[bcdfghjklmnpqrstvwxyz]/i', $word, $matches) ===\
    \ $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }", "\t$words = explode(\" \", $s);\n\t$result = [];\n\tforeach ($words as $word)\
    \ {\n\t\tif (substr_count($word, \"a\") + substr_count($word, \"e\") + substr_count($word,\
    \ \"i\") + substr_count($word, \"o\") + substr_count($word, \"u\") == $n) {\n\t\
    \t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));", "    $arr_s = explode(\" \", $s);\n    $arr_s_consonants\
    \ = [];\n    foreach ($arr_s as $index => $value) {\n        $vowels = preg_match_all('/[aeiou]/i',\
    \ $value, $matches);\n        $consonants = strlen($value) - $vowels;\n      \
    \  if ($consonants == $n) {\n            $arr_s_consonants[] = $value;\n     \
    \   }\n    }\n    return $arr_s_consonants;\n}\n\necho \"<pre>\";\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(select_words(\"\
    simple white space\", 2));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(select_words(\"\
    Hello world\", 4));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(select_words(\"\
    Uncle sam\", 3));\necho \"</pre>\";", "    $s = explode(' ', $s);\n    foreach\
    \ ($s as $word) {\n        $consonants = 0;\n        $chars = str_split($word);\n\
    \        foreach ($chars as $char) {\n            if (!in_array($char, ['a', 'e',\
    \ 'i', 'o', 'u'])) {\n                $consonants++;\n            }\n        }\n\
    \        if ($consonants == $n) {\n            $selected[] = $word;\n        }\n\
    \    }\n    return $selected ?? [];\n}\n\n$array1 = select_words(\"Mary had a\
    \ little lamb\", 4);\nvar_dump($array1);\n$array2 = select_words(\"Mary had a\
    \ little lamb\", 3);\nvar_dump($array2);\n$array3 = select_words(\"simple white\
    \ space\", 2);\nvar_dump($array3);\n$array4 = select_words(\"Hello world\", 4);\n\
    var_dump($array4);\n$array5 = select_words(\"Uncle sam\", 3);\nvar_dump($array5);",
  "    // write your code here\n    $arr = [];\n    $vowels = \"aeiou\";\n    $strArr\
    \ = preg_split(\"/[\\s]+/\", $s);\n    $strArr = array_filter($strArr);\n    $strArr\
    \ = array_values($strArr);\n    foreach ($strArr as $word) {\n        $wordArr\
    \ = str_split($word);\n        $nConsec = 0;\n        foreach ($wordArr as $char)\
    \ {\n            if (!stristr($vowels, $char)) {\n                $nConsec++;\n\
    \            }\n        }\n        if ($nConsec == $n) {\n            $arr[] =\
    \ $word;\n        }\n    }\n    return $arr;\n}\n\n$arr = select_words(\"Mary\
    \ had a little lamb\", 4);\nprint_r($arr);\necho \"\\n\";\n\n$arr = select_words(\"\
    Mary had a little lamb\", 3);\nprint_r($arr);\necho \"\\n\";\n\n$arr = select_words(\"\
    simple white space\", 2);\nprint_r($arr);\necho \"\\n\";\n\n$arr = select_words(\"\
    Hello world\", 4);\nprint_r($arr);\necho \"\\n\";\n\n$arr = select_words(\"Uncle\
    \ sam\", 3);\nprint_r($arr);\necho \"\\n\";\n", "  // your code here\n}\n", "\t\
    // your code\n}", "    $s1 = array_filter(explode(' ', $s));\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $result = [];\n    foreach ($s1 as $item)\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($item); $i++) {\n \
    \           if (in_array($item[$i], $consonants)) {\n                $count++;\n\
    \            }\n        }\n        if ($count == $n) {\n            $result[]\
    \ = $item;\n        }\n    }\n    return $result;\n}\n\n$s = 'Mary had a little\
    \ lamb';\n$n = 4;\nprint_r(select_words($s, $n));", "  $words = preg_split('/\\\
    s+/', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (strlen($word)\
    \ - get_vowel_count($word) == $n) {\n      $result[] = $word;\n    }\n  }\n  return\
    \ $result;\n}\n", "  $vowels = array('a', 'e', 'i', 'o', 'u');\n  $result = array();\n\
    \  $sArr = explode(' ', $s);\n  foreach ($sArr as $word) {\n    $cons = str_split($word);\n\
    \    $count = 0;\n    foreach ($cons as $v) {\n      if (!in_array($v, $vowels))\
    \ {\n        $count++;\n      }\n    }\n    if ($count == $n) {\n      $result[]\
    \ = $word;\n    }\n  }\n  return $result;\n}\n", "    $arr = explode(\" \", $s);\n\
    \    $ret = [];\n    foreach ($arr as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $ret[] = $word;\n        }\n    }\n    return $ret;\n}",
  "    $words = [];\n    $a = explode(' ', $s);\n    foreach ($a as $word) {\n   \
    \     $consonants = preg_replace('/[aeiou]/', '', $word);\n        if (strlen($consonants)\
    \ == $n) {\n            $words[] = $word;\n        }\n    }\n    return $words;\n\
    }\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    // Your code here\n}\n", "\t$consonants = array(\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$words = explode(\"\
    \ \", $s);\n\t$results = array();\n\tforeach ($words as $word) {\n\t\t$count =\
    \ 0;\n\t\tforeach (str_split($word) as $letter) {\n\t\t\tif (in_array($letter,\
    \ $consonants)) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\tif ($count == $n) {\n\
    \t\t\tarray_push($results, $word);\n\t\t}\n\t}\n\treturn $results;\n}", "    $s\
    \ = str_split($s);\n    $r = [];\n    $v = false;\n    foreach ($s as $c) {\n\
    \        if ($c == ' ') {\n            if ($v) {\n                $v = false;\n\
    \                $r[] = $w;\n            }\n            $p = 0;\n            $w\
    \ = '';\n        } else {\n            $w .= $c;\n            if (in_array($c,\
    \ ['a', 'e', 'i', 'o', 'u'])) {\n                $p++;\n            }\n      \
    \      if ($p == $n) {\n                $v = true;\n            }\n        }\n\
    \    }\n    if ($v) {\n        $r[] = $w;\n    }\n    return $r;\n}\n", "\t\n\t\
    $array = explode(\" \", $s);\n\t$output = array();\n\t$consonants = array('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z');\n\t\n\tforeach($array as $word) {\n\t\t$i = 0;\n\t\tforeach($consonants\
    \ as $letter) {\n\t\t\tif(strrpos($word, $letter) != 0) {\n\t\t\t\t$i++;\n\t\t\
    \t}\n\t\t}\n\t\tif($i == $n) {\n\t\t\tarray_push($output, $word);\n\t\t}\n\t}\n\
    \t\n\tprint_r($output);\n}\n\nselect_words(\"Mary had a little lamb\", 4);\nselect_words(\"\
    Mary had a little lamb\", 3);\nselect_words(\"simple white space\", 2);\nselect_words(\"\
    Hello world\", 4);\nselect_words(\"Uncle sam\", 3);", "    $arr = explode(\" \"\
    , $s);\n    $array = [];\n    foreach ($arr as $value) {\n        $val = preg_replace(\"\
    /[^a-zA-Z]/\", \"\", $value);\n        if (substr_count($val, \"a\") + substr_count($val,\
    \ \"e\") + substr_count($val, \"i\") +\n            substr_count($val, \"o\")\
    \ + substr_count($val, \"u\") == $n) {\n            $array[] = $value;\n     \
    \   }\n    }\n    return $array;\n}\n$input1 = \"Mary had a little lamb\";\n$input2\
    \ = \"simple white space\";\n$input3 = \"Hello world\";\n$input4 = \"Uncle sam\"\
    ;\n$n1 = 4;\n$n2 = 3;\n$n3 = 4;\n$n4 = 3;\nprint_r(select_words($input1, $n1));\n\
    print_r(select_words($input2, $n2));\nprint_r(select_words($input3, $n3));\nprint_r(select_words($input4,\
    \ $n4));", "    $s = explode(' ', $s);\n    $out = [];\n    foreach ($s as $word)\
    \ {\n        $vowels = ['a', 'e', 'i', 'o', 'u'];\n        $vowelsCount = 0;\n\
    \        for ($i = 0; $i < strlen($word); $i++) {\n            if (in_array($word[$i],\
    \ $vowels)) {\n                $vowelsCount++;\n            }\n        }\n   \
    \     if (strlen($word) - $vowelsCount == $n) {\n            $out[] = $word;\n\
    \        }\n    }\n    return $out;\n}\necho implode(', ', select_words(\"Mary\
    \ had a little lamb\", 4)) . PHP_EOL;\necho implode(', ', select_words(\"Mary\
    \ had a little lamb\", 3)) . PHP_EOL;\necho implode(', ', select_words(\"simple\
    \ white space\", 2)) . PHP_EOL;\necho implode(', ', select_words(\"Hello world\"\
    , 4)) . PHP_EOL;\necho implode(', ', select_words(\"Uncle sam\", 3)) . PHP_EOL;",
  "  $words = explode(' ', $s);\n  $vowels = array('a', 'e', 'i', 'o', 'u');\n  $result\
    \ = array();\n  foreach ($words as $word) {\n    $count = 0;\n    $word = strtolower($word);\n\
    \    for ($i = 0; $i < strlen($word); $i++) {\n      if (!in_array($word[$i],\
    \ $vowels)) {\n        $count++;\n      }\n    }\n    if ($count == $n) {\n  \
    \    $result[] = $word;\n    }\n  }\n  return $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\necho \"\\n\";\nprint_r(select_words(\"Mary had\
    \ a little lamb\", 3));\necho \"\\n\";\nprint_r(select_words(\"simple white space\"\
    , 2));\necho \"\\n\";\nprint_r(select_words(\"Hello world\", 4));\necho \"\\n\"\
    ;\nprint_r(select_words(\"Uncle sam\", 3));\necho \"\\n\";\n", "  if (preg_match_all('/[aeiou]/i',\
    \ $s, $m) === false) return [];\n  $s = str_replace(' ', '', $s);\n  return preg_grep(\"\
    /^[^aeiou]{$n}$/i\", str_split($s));\n}", "    $words = explode(' ', $s);\n  \
    \  $results = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $results[] = $word;\n\
    \        }\n    }\n    return $results;\n}\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $result = [];\n\
    \    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $words = explode(' ', $s);\n  \
    \  foreach ($words as $word) {\n        $count = 0;\n        for ($i = 0; $i <\
    \ strlen($word); $i++) {\n            if (!in_array($word[$i], $vowels)) {\n \
    \               $count++;\n            }\n        }\n        if ($count == $n)\
    \ {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\
    \nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "  $words = explode(' ', $s);\n  $result = [];\n  foreach ($words as\
    \ $word) {\n    if (preg_match('/[aeiou]/i', $word)) {\n      $consonants = substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u');\n      if ($consonants == $n) {\n        $result[]\
    \ = $word;\n      }\n    }\n  }\n  return $result;\n}\n", "\t$res = [];\n\t$arr\
    \ = explode(' ', $s);\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\tif (substr_count($arr[$i],\
    \ 'a') == 0 \n\t\t\t&& substr_count($arr[$i], 'e') == 0 \n\t\t\t&& substr_count($arr[$i],\
    \ 'i') == 0 \n\t\t\t&& substr_count($arr[$i], 'o') == 0 \n\t\t\t&& substr_count($arr[$i],\
    \ 'u') == 0) {\n\t\t\tif (strlen($arr[$i]) == $n) {\n\t\t\t\tarray_push($res,\
    \ $arr[$i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn $res;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "  $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n  $result = array();\n  $words = explode(' ', $s);\n \
    \ foreach ($words as $word) {\n    $consonants = 0;\n    $len = strlen($word);\n\
    \    for ($i = 0; $i < $len; $i++) {\n      if (!in_array($word[$i], $vowels))\
    \ {\n        $consonants++;\n      }\n    }\n    if ($consonants == $n) {\n  \
    \    $result[] = $word;\n    }\n  }\n  return $result;\n}\necho implode(', ',\
    \ select_words(\"Mary had a little lamb\", 4));", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $words = explode(' ', $s);\n    $selected_words = [];\n    foreach\
    \ ($words as $word) {\n        $consonants = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonants++;\n\
    \            }\n        }\n        if ($consonants == $n) {\n            $selected_words[]\
    \ = $word;\n        }\n    }\n    return $selected_words;\n}\n", "  // your code\
    \ goes here\n  $arr = explode(\" \", $s);\n  $words = [];\n  $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n  foreach ($arr as $word) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($word); $i++) {\n      if (!in_array($word[$i], $vowels)) {\n\
    \        $count++;\n      }\n    }\n    if ($count == $n) {\n      $words[] =\
    \ $word;\n    }\n  }\n  return $words;\n}\nvar_dump(select_words(\"Mary had a\
    \ little lamb\", 4));\nvar_dump(select_words(\"Mary had a little lamb\", 3));\n\
    var_dump(select_words(\"simple white space\", 2));\nvar_dump(select_words(\"Hello\
    \ world\", 4));\nvar_dump(select_words(\"Uncle sam\", 3));", "    $consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n    $consonants_array = str_split($consonants);\n\
    \    $s_array = explode(\" \", $s);\n    $return_array = [];\n    for ($i = 0;\
    \ $i < count($s_array); $i++) {\n        $count = 0;\n        for ($j = 0; $j\
    \ < strlen($s_array[$i]); $j++) {\n            if (in_array($s_array[$i][$j],\
    \ $consonants_array)) {\n                $count++;\n            }\n        }\n\
    \        if ($count == $n) {\n            array_push($return_array, $s_array[$i]);\n\
    \        }\n    }\n    return $return_array;\n}\nprint_r(select_words(\"Mary had\
    \ a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "\t\n}\n", "  $a =\
    \ [];\n  $words = explode(' ', $s);\n  $len = count($words);\n  for ($i = 0; $i\
    \ < $len; $i++) {\n    $word = $words[$i];\n    $num = 0;\n    $word_len = strlen($word);\n\
    \    for ($j = 0; $j < $word_len; $j++) {\n      if (!is_vowel($word[$j])) $num++;\n\
    \    }\n    if ($num == $n) array_push($a, $word);\n  }\n  return $a;\n}", "\t\
    $arr = [];\n\t$s = explode(' ', $s);\n\tforeach ($s as $word) {\n\t\tif (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n\t\t\t$arr[] = $word;\n\t\t}\n\t}\n\
    \treturn $arr;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));", "\t\
    $s = preg_replace('/[^a-zA-Z ]/', '', $s);\n\t$words = explode(' ', $s);\n\t$count\
    \ = 0;\n\t$final_arr = [];\n\tfor ($i = 0; $i < count($words); $i++) {\n\t\t$cur_word\
    \ = $words[$i];\n\t\t$cur_word = strtolower($cur_word);\n\t\t$count = 0;\n\t\t\
    for ($j = 0; $j < strlen($cur_word); $j++) {\n\t\t\tif ($cur_word[$j] !== 'a'\
    \ && $cur_word[$j] !== 'e' && $cur_word[$j] !== 'i' && $cur_word[$j] !== 'o' &&\
    \ $cur_word[$j] !== 'u') {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\tif ($count\
    \ === $n) {\n\t\t\tarray_push($final_arr, $words[$i]);\n\t\t}\n\t}\n\treturn $final_arr;\n\
    }\n", "  $result = [];\n  $words = explode(' ', $s);\n  foreach ($words as $word)\
    \ {\n    if (consonants_count($word) == $n) {\n      $result[] = $word;\n    }\n\
    \  }\n  return $result;\n}\n", "\t$result = array();\n\t$s = explode(\" \", $s);\n\
    \t\n\tfor ($i = 0; $i < count($s); $i++) {\n\t\tif (consonants($s[$i]) == $n)\
    \ {\n\t\t\tarray_push($result, $s[$i]);\n\t\t}\n\t}\n\t\n\treturn $result;\n}\n",
  "    $s = str_replace(' ', '', $s);\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $arr = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (!in_array($s[$i],\
    \ $vowels)) {\n            $arr[] = $s[$i];\n        }\n    }\n    return array_count_values($arr);\n\
    }\nprint_r(select_words(\"Mary had a little lamb\", 4));\necho \"<br>\";\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\necho \"<br>\";\nprint_r(select_words(\"simple\
    \ white space\", 2));\necho \"<br>\";\nprint_r(select_words(\"Hello world\", 4));\n\
    echo \"<br>\";\nprint_r(select_words(\"Uncle sam\", 3));\necho \"<br>\";", "\t\
    $res = array();\n\t$arr = preg_split('/\\s+/', $s);\n\tforeach ($arr as $i =>\
    \ $word) {\n\t\tif (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n\t\t\t\
    $res[] = $word;\n\t\t}\n\t}\n\treturn $res;\n}\necho '<pre>';\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\necho '</pre>';",
  "  $words = explode(' ', $s);\n  $matches = [];\n  foreach ($words as $word) {\n\
    \    if (is_consonant($word, $n)) {\n      $matches[] = $word;\n    }\n  }\n \
    \ return $matches;\n}\n", "    $arr = explode(\" \", $s);\n    $result = [];\n\
    \    foreach ($arr as $word) {\n        if (check_consonants($word, $n)) {\n \
    \           $result[] = $word;\n        }\n    }\n    return $result;\n}\n", " \
    \   // write your code here\n}", "\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"];\n\t$consonants = [];\n\t$array = explode(\" \", $s);\n\tforeach ($array\
    \ as $word) {\n\t\t$count = 0;\n\t\tfor ($i = 0; $i < strlen($word); $i++) {\n\
    \t\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\
    \t\tif ($count == $n) {\n\t\t\tarray_push($consonants, $word);\n\t\t}\n\t}\n\t\
    return $consonants;\n}", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$result\
    \ = array();\n\t$words = explode(' ', $s);\n\tforeach ($words as $word) {\n\t\t\
    $count = 0;\n\t\tfor ($i = 0; $i < strlen($word); $i++) {\n\t\t\tif (!in_array($word[$i],\
    \ $vowels)) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\tif ($count == $n) {\n\t\t\
    \t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\necho \"<pre>\";\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(select_words(\"\
    simple white space\", 2));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(select_words(\"\
    Hello world\", 4));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(select_words(\"\
    Uncle sam\", 3));\necho \"</pre>\";", "    $s = str_replace(\" \", \"\", $s);\n\
    \    $vowels = \"aeiou\";\n    $arr = [];\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (strpos($vowels, $s[$i]) === false) {\n            $arr[] = $s[$i];\n\
    \        }\n    }\n    if (count($arr) === $n) {\n        return [$s];\n    }\n\
    \    return [];\n}", "    $result = [];\n    $words = explode(' ', $s);\n    foreach\
    \ ($words as $word) {\n        if (consonants_count($word) == $n) {\n        \
    \    $result[] = $word;\n        }\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $words = explode(' ', $s);\n    foreach ($words as $word) {\n   \
    \     if (countConsonants($word) == $n) {\n            $result[] = $word;\n  \
    \      }\n    }\n    return $result;\n}\n", "  // TODO: Implement me!\n}\n", "\t\
    // TODO - write your code below\n\t$res = [];\n\t$letters = str_split($s);\n\t\
    $count = 0;\n\t$current = \"\";\n\t$isWord = false;\n\tforeach ($letters as $l)\
    \ {\n\t\tif (in_array($l, [' ', ',', '.', ';', '?', '!', ')', ':', '-'])) {\n\t\
    \t\tif (strlen($current) > 0) {\n\t\t\t\tif ($count == $n) {\n\t\t\t\t\t$res[]\
    \ = $current;\n\t\t\t\t}\n\t\t\t\t$count = 0;\n\t\t\t\t$current = \"\";\n\t\t\t\
    }\n\t\t} else {\n\t\t\t$current .= $l;\n\t\t\tif (!in_array($l, ['a', 'e', 'i',\
    \ 'o', 'u', 'y'])) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\tif (strlen($current)\
    \ > 0) {\n\t\tif ($count == $n) {\n\t\t\t$res[] = $current;\n\t\t}\n\t}\n\treturn\
    \ $res;\n}\n$test = \"Mary had a little lamb\";\n$n = 4;\nvar_dump(select_words($test,\
    \ $n));", "  $arr = [];\n  if (strlen($s) == 0) return $arr;\n  $strs = explode(\"\
    \ \", $s);\n  foreach ($strs as $str) {\n    if (hasXConsonants($str, $n)) $arr[]\
    \ = $str;\n  }\n  return $arr;\n}\n", "    $a = explode(\" \", $s);\n    $consonants\
    \ = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n    $result = array();\n    foreach ($a as $word) {\n        $j = 0;\n   \
    \     for ($i = 0; $i < strlen($word); $i++) {\n            if (in_array($word[$i],\
    \ $consonants)) {\n                $j++;\n            }\n        }\n        if\
    \ ($j == $n) {\n            array_push($result, $word);\n        }\n    }\n  \
    \  return $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\n\
    print_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "\t$s = preg_replace('/\\s+/', ' ', $s);\n\t$s = preg_replace('/\\\
    s+$/', '', $s);\n\t$words = explode(' ', $s);\n\t$result = array();\n\tforeach\
    \ ($words as $word) {\n\t\tif (preg_match_all('/[^aeiou]/i', $word, $matches)\
    \ == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}", "\t$arr\
    \ = explode(\" \", $s);\n\t$res = [];\n\tforeach ($arr as $key => $value) {\n\t\
    \tif (count_consonants($value) == $n) {\n\t\t\t$res[] = $value;\n\t\t}\n\t}\n\t\
    return $res;\n}", "    //split the string\n    $words = preg_split('/[\\s]+/',\
    \ $s);\n    $consonants = array();\n    //loop through each word\n    foreach($words\
    \ as $word) {\n        //split each word again\n        $characters = str_split($word);\n\
    \        $count = 0;\n        //loop through each character of each word\n   \
    \     foreach($characters as $character) {\n            //count the consonants\n\
    \            if(isConsonant($character)) {\n                $count++;\n      \
    \      }\n        }\n        //if the count is equal to $n, push the word to the\
    \ consonants array\n        if($count == $n) {\n            array_push($consonants,\
    \ $word);\n        }\n    }\n    return $consonants;\n}\n", "    $result = [];\n\
    \    $words = explode(' ', $s);\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}", "    $words = explode(' ', $s);\n \
    \   $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words = explode('\
    \ ', $s);\n    $new_words = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $new_words[] = $word;\n\
    \        }\n    }\n    return $new_words;\n}\n\nprint_r(select_words(\"Mary had\
    \ a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "  $words = explode('\
    \ ', $s);\n  $selected_words = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ === $n) {\n      $selected_words[] = $word;\n    }\n  }\n  return $selected_words;\n\
    }\n", "\t$s = explode(' ', $s);\n\t$c = 0;\n\t$output = [];\n\tforeach ($s as\
    \ $word) {\n\t\t$c = 0;\n\t\tforeach (str_split($word) as $char) {\n\t\t\t$c +=\
    \ (preg_match('/[aeiou]/i', $char)) ? 0 : 1;\n\t\t}\n\t\tif ($c == $n) {\n\t\t\
    \t$output[] = $word;\n\t\t}\n\t}\n\treturn $output;\n}", "    $words = array();\n\
    \    $s = explode(\" \", $s);\n    foreach ($s as $word) {\n        if (consonants($word)\
    \ == $n)\n            $words[] = $word;\n    }\n    return $words;\n}\n", "  $s\
    \ = explode(' ', $s);\n  $n_array = [];\n  $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \  foreach ($s as $word) {\n    $consonants = 0;\n    for ($i = 0; $i < strlen($word);\
    \ $i++) {\n      if (!in_array($word[$i], $vowels)) {\n        $consonants++;\n\
    \      }\n    }\n    if ($consonants == $n) {\n      $n_array[] = $word;\n   \
    \ }\n  }\n  return $n_array;\n}\n$result = select_words(\"Mary had a little lamb\"\
    , 4);\nprint_r($result);", "\t$split_string = explode(\" \", $s);\n\t$matching_array\
    \ = array();\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$consonants\
    \ = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n\tfor ($i = 0; $i < count($split_string); $i++) {\n\t\t$counter = 0;\n\t\t\
    for ($j = 0; $j < strlen($split_string[$i]); $j++) {\n\t\t\tif (in_array($split_string[$i][$j],\
    \ $consonants)) {\n\t\t\t\t$counter++;\n\t\t\t}\n\t\t}\n\t\tif ($counter == $n)\
    \ {\n\t\t\tarray_push($matching_array, $split_string[$i]);\n\t\t}\n\t}\n\treturn\
    \ $matching_array;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));",
  "  $s = explode(' ', $s);\n  $result = [];\n  foreach ($s as $word) {\n    $count\
    \ = 0;\n    foreach (str_split($word) as $letter) {\n      $count += !in_array($letter,\
    \ ['a', 'e', 'i', 'o', 'u', 'y']);\n    }\n    if ($count === $n) {\n      $result[]\
    \ = $word;\n    }\n  }\n  return $result;\n}\n\nprint_r(select_words(\"Mary had\
    \ a little lamb\", 4));\necho '<br />';\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 3));\necho '<br />';\nprint_r(select_words(\"simple white space\", 2));\n\
    echo '<br />';\nprint_r(select_words(\"Hello world\", 4));\necho '<br />';\nprint_r(select_words(\"\
    Uncle sam\", 3));\necho '<br />';", "    if (empty($s)) return array();\n    $s\
    \ = strtolower($s);\n    $s = preg_replace('#[^a-z]#', ' ', $s);\n    $words =\
    \ preg_split('#\\s+#', $s);\n    $n = (int)$n;\n    if ($n == 0) return array();\n\
    \    $matches = array();\n    foreach ($words as $word) {\n        $vowels = preg_match_all('#[aeiou]#',\
    \ $word, $out);\n        $consonants = strlen($word) - $vowels;\n        if ($consonants\
    \ == $n) $matches[] = $word;\n    }\n    return $matches;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "  $words = explode('\
    \ ', $s);\n  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $result = [];\n  foreach\
    \ ($words as $word) {\n    $consonants = 0;\n    for ($i = 0; $i < strlen($word);\
    \ $i++) {\n      if (!in_array($word[$i], $vowels)) {\n        $consonants++;\n\
    \      }\n    }\n    if ($consonants == $n) {\n      $result[] = $word;\n    }\n\
    \  }\n  return $result;\n}\n", "  $result = [];\n  $words = explode(' ', $s);\n\
    \  foreach ($words as $word) {\n    if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}",
  "    $array = explode(\" \", $s);\n    $result = [];\n    foreach ($array as $item)\
    \ {\n        if (substr_count($item, \"a\") + substr_count($item, \"e\") + substr_count($item,\
    \ \"i\") +\n            substr_count($item, \"o\") + substr_count($item, \"u\"\
    ) == $n) {\n            array_push($result, $item);\n        }\n    }\n    return\
    \ $result;\n}\n", "  $sArr = explode(\" \", $s);\n  $rArr = [];\n  $matchCount\
    \ = 0;\n  $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  for ($i = 0; $i <\
    \ count($sArr); $i++) {\n    for ($j = 0; $j < strlen($sArr[$i]); $j++) {\n  \
    \    if (!in_array($sArr[$i][$j], $vowels)) {\n        $matchCount++;\n      }\n\
    \    }\n    if ($matchCount == $n) {\n      array_push($rArr, $sArr[$i]);\n  \
    \  }\n    $matchCount = 0;\n  }\n  return $rArr;\n}", "    $arr = explode(\" \"\
    , $s);\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $result =\
    \ array();\n    foreach ($arr as $key => $val) {\n        $count = 0;\n      \
    \  for ($i = 0; $i < strlen($val); $i++) {\n            if (!in_array($val[$i],\
    \ $vowels)) {\n                $count++;\n            }\n        }\n        if\
    \ ($count == $n) {\n            array_push($result, $val);\n        }\n    }\n\
    \    return $result;\n}", "    $s = preg_replace('/[^a-zA-Z ]/', '', $s);\n  \
    \  $words = explode(' ', $s);\n    $filtered_words = array();\n    foreach ($words\
    \ as $word) {\n        $num_of_consonants = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (!in_array(strtolower($word[$i]), ['a', 'e', 'i', 'o',\
    \ 'u'])) {\n                $num_of_consonants++;\n            }\n        }\n\
    \        if ($num_of_consonants == $n) {\n            $filtered_words[] = $word;\n\
    \        }\n    }\n    return $filtered_words;\n}", "\t$s = trim($s);\n\t$arr1\
    \ = explode(\" \", $s);\n\t$count = 0;\n\t$result = array();\n\tforeach ($arr1\
    \ as $key => $value) {\n\t\t$count = 0;\n\t\tfor ($i=0; $i < strlen($value); $i++)\
    \ { \n\t\t\tif ($value[$i] == 'a' || $value[$i] == 'e' || $value[$i] == 'i' ||\
    \ $value[$i] == 'o' || $value[$i] == 'u') {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t\
    }\n\t\tif ($count == $n) {\n\t\t\tarray_push($result, $value);\n\t\t}\n\t}\n\t\
    return $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));", " \
    \   $s = str_replace(' ', '', $s);\n    $res = [];\n    $len = strlen($s);\n \
    \   $p1 = 0;\n    $p2 = $len - 1;\n    for ($i = 0; $i < $len; $i++) {\n     \
    \   if (preg_match('/^[^aeiou]/', $s[$i])) {\n            $p1++;\n        }\n\
    \        if (preg_match('/^[^aeiou]/', $s[$len - $i - 1])) {\n            $p2--;\n\
    \        }\n        if ($p1 == $n) {\n            $res[] = substr($s, 0, $i +\
    \ 1);\n        }\n        if ($p2 == $len - $n - 1) {\n            $res[] = substr($s,\
    \ $len - $i - 1, $i + 1);\n        }\n    }\n    return $res;\n}\n\n$s = 'Mary\
    \ had a little lamb';\n$n = 4;\nprint_r(select_words($s, $n));", "\t$vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$words = explode(\" \", $s);\n\t$result\
    \ = [];\n\tforeach ($words as $word) {\n\t\t$vowel_count = 0;\n\t\t$consonant_count\
    \ = 0;\n\t\tfor ($i = 0; $i < strlen($word); $i++) {\n\t\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\t\t$vowel_count++;\n\t\t\t} else {\n\t\t\t\t$consonant_count++;\n\
    \t\t\t}\n\t\t}\n\t\tif ($consonant_count == $n) {\n\t\t\tarray_push($result, $word);\n\
    \t\t}\n\t}\n\treturn $result;\n}\n\necho implode(\", \", select_words(\"Mary had\
    \ a little lamb\", 4));\necho \"\\n\";\necho implode(\", \", select_words(\"Mary\
    \ had a little lamb\", 3));\necho \"\\n\";\necho implode(\", \", select_words(\"\
    simple white space\", 2));\necho \"\\n\";\necho implode(\", \", select_words(\"\
    Hello world\", 4));\necho \"\\n\";\necho implode(\", \", select_words(\"Uncle\
    \ sam\", 3));\necho \"\\n\";", "\t$arr=explode(\" \",$s);\n\t$i=0;\n\t$new_arr=[];\n\
    \twhile($i<count($arr)) {\n\t\tif(preg_match_all('/[^aeiou]/i', $arr[$i], $matches)==$n)\n\
    \t\t\t$new_arr[]=$arr[$i];\n\t\t$i++;\n\t}\n\treturn $new_arr;\n}\n$s=\"Panda\
    \ eats shoots and leaves.\";\n$n=4;\nprint_r(select_words($s, $n));", "  $arr\
    \ = explode(\" \", $s);\n  $result = [];\n  foreach ($arr as $v) {\n    $c = preg_replace(\"\
    /[aeiou]/\", \"\", $v);\n    if (strlen($c) == $n)\n      $result[] = $v;\n  }\n\
    \  return $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\n\
    print_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));\n", "  $words = explode(' ', $s);\n  $r = [];\n  foreach ($words\
    \ as $word) {\n    if (preg_match_all('/[^aeiou]/i', $word) == $n) {\n      $r[]\
    \ = $word;\n    }\n  }\n  return $r;\n}\necho '<pre>';\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\necho '</pre>';",
  "    $conso = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'z'];\n    $res = [];\n    $s = explode(' ', $s);\n\
    \    foreach ($s as $word) {\n        $consonants = 0;\n        for ($i = 0; $i\
    \ < strlen($word); $i++) {\n            if (in_array($word[$i], $conso)) $consonants++;\n\
    \        }\n        if ($consonants == $n) $res[] = $word;\n    }\n    return\
    \ $res;\n}\n\n$s = \"simple white space\";\n$n = 2;\nvar_dump(select_words($s,\
    \ $n));", "  $words = explode(' ', $s);\n  $consonants = 'bcdfghjklmnpqrstvwxyz';\n\
    \  $consonants = str_split($consonants);\n  $consonants = array_fill_keys($consonants,\
    \ 0);\n  $words = array_filter($words, function($word) use ($n, $consonants) {\n\
    \    $consonantsFound = 0;\n    $word = str_split($word);\n    foreach ($word\
    \ as $letter) {\n      if (isset($consonants[$letter])) {\n        $consonantsFound++;\n\
    \      }\n    }\n    return $consonantsFound === $n;\n  });\n  return $words;\n\
    }\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "  $s = str_replace(\" \",\"\", $s);\n  $s = str_split($s);\n  $c = 0;\n\
    \  $p = 0;\n  foreach ($s as $value) {\n    if(in_array($value, [\"a\",\"e\",\"\
    i\",\"o\",\"u\"])) {\n      $c++;\n    }\n  }\n  if($c == $n) {\n    $p = 1;\n\
    \  }\n  return $p;\n}\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $strings = explode(\" \", $s);\n    $arr = [];\n    foreach\
    \ ($strings as $word) {\n        if (preg_match_all('/[^aeiou]/i', $word, $matches)\
    \ === $n) {\n            $arr[] = $word;\n        }\n    }\n    return $arr;\n\
    }\necho '<pre>';\nvar_dump(select_words(\"Mary had a little lamb\", 4));\necho\
    \ '</pre>';", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $s = explode(' ', $s);\n\
    \  return array_filter($s, function($e) use ($vowels, $n) {\n    return count(array_intersect(str_split(strtolower($e)),\
    \ $vowels)) === $n;\n  });\n}", "    $s_arr = explode(\" \", $s);\n    $output\
    \ = [];\n    foreach ($s_arr as $word) {\n        $word_arr = str_split($word);\n\
    \        $consonants = 0;\n        foreach ($word_arr as $letter) {\n        \
    \    if (!in_array($letter, [\"a\", \"e\", \"i\", \"o\", \"u\"])) {\n        \
    \        $consonants++;\n            }\n        }\n        if ($consonants ==\
    \ $n) {\n            $output[] = $word;\n        }\n    }\n    return $output;\n\
    }", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words as\
    \ $word) {\n        if (get_count_consonants($word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n", "    if ($s == \"\")\
    \ {\n        return array();\n    }\n    $words = explode(\" \", $s);\n    $counts\
    \ = [];\n    foreach ($words as $word) {\n        $count = 0;\n        for ($i\
    \ = 0; $i < strlen($word); $i++) {\n            $char = $word[$i];\n         \
    \   if ($char != \"a\" && $char != \"e\" && $char != \"i\" && $char != \"o\" &&\
    \ $char != \"u\") {\n                $count++;\n            }\n        }\n   \
    \     if ($count == $n) {\n            array_push($counts, $word);\n        }\n\
    \    }\n    return $counts;\n}\n", "    $words = explode(' ', $s);\n    $result\
    \ = [];\n    foreach ($words as $word) {\n        if (substr_count($word, 'a')\
    \ + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n", "    $words = array();\n    $s =\
    \ explode(\" \", $s);\n    foreach ($s as $word) {\n        if (consonants($word)\
    \ == $n) {\n            $words[] = $word;\n        }\n    }\n    return $words;\n\
    }", "    $new_array = [];\n    $array = explode(\" \", $s);\n    $vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    foreach ($array as $word) {\n        $word_array\
    \ = str_split($word);\n        $counter = 0;\n        foreach ($word_array as\
    \ $letter) {\n            if (!in_array($letter, $vowels)) {\n               \
    \ $counter++;\n            }\n        }\n        if ($counter == $n) {\n     \
    \       array_push($new_array, $word);\n        }\n    }\n    return $new_array;\n\
    }", "    $words = explode(' ', $s);\n    $results = [];\n    foreach ($words as\
    \ $word) {\n        if (strlen($word) == $n) {\n            array_push($results,\
    \ $word);\n        }\n    }\n    return $results;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));", "  $words = explode(' ', $s);\n  $result = [];\n\
    \  foreach ($words as $word) {\n    if (strlen($word) - numVowels($word) == $n)\
    \ {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n", "    $arr\
    \ = explode(\" \", $s);\n    $new_arr = [];\n    $consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    foreach ($arr as $v) {\n        $c = 0;\n        for ($i = 0; $i < strlen($v);\
    \ $i++) {\n            if (strpos($consonants, $v[$i]) !== false) {\n        \
    \        $c++;\n            }\n        }\n        if ($c == $n) {\n          \
    \  $new_arr[] = $v;\n        }\n    }\n    return $new_arr;\n}", "  $vowels =\
    \ ['a', 'e', 'i', 'o', 'u'];\n  $words = explode(' ', $s);\n  $result = [];\n\
    \  foreach ($words as $word) {\n    $consonants = 0;\n    $chars = str_split($word);\n\
    \    foreach ($chars as $char) {\n      if (!in_array($char, $vowels)) {\n   \
    \     $consonants++;\n      }\n    }\n    if ($consonants == $n) {\n      $result[]\
    \ = $word;\n    }\n  }\n  return $result;\n}\n", "\t\n}\n", "\t$s = strtolower($s);\n\
    \t$s = str_replace([' ', ','], '', $s);\n\t$arr = str_split($s);\n\t$newarr =\
    \ [];\n\tforeach ($arr as $key => $value) {\n\t\tif (str_word_count($value) ==\
    \ $n) {\n\t\t\t$newarr[] = $value;\n\t\t}\n\t}\n\treturn $newarr;\n}\n\n$s = 'Mary\
    \ had a little lamb';\n$n = 4;\nvar_dump(select_words($s, $n));\n", "    $result\
    \ = [];\n    $words = explode(' ', $s);\n    foreach ($words as $word) {\n   \
    \     if (getConsonants($word) == $n) {\n            $result[] = $word;\n    \
    \    }\n    }\n    return $result;\n}\n", "    $a = array();\n    $s = preg_replace('/[^a-zA-Z\\\
    s]/', '', $s);\n    $arr = explode(\" \", $s);\n    $vowels = array(\"a\", \"\
    e\", \"i\", \"o\", \"u\", \"y\");\n    for ($i = 0; $i < count($arr); $i++) {\n\
    \        $count = 0;\n        for ($j = 0; $j < strlen($arr[$i]); $j++) {\n  \
    \          if (!in_array(strtolower($arr[$i][$j]), $vowels)) {\n             \
    \   $count++;\n            }\n        }\n        if ($count == $n) {\n       \
    \     array_push($a, $arr[$i]);\n        }\n    }\n    return $a;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));", "\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"];\n\t$result = [];\n\t$words = explode(\" \", $s);\n\tfor ($i = 0; $i < count($words);\
    \ $i++) {\n\t\t$word = $words[$i];\n\t\t$consonants_counter = 0;\n\t\tfor ($j\
    \ = 0; $j < strlen($word); $j++) {\n\t\t\tif (!in_array($word[$j], $vowels)) {\n\
    \t\t\t\t$consonants_counter++;\n\t\t\t}\n\t\t}\n\t\tif ($consonants_counter ==\
    \ $n) {\n\t\t\tarray_push($result, $word);\n\t\t}\n\t}\n\treturn $result;\n}\n\
    \n$s = \"Mary had a little lamb\";\n$n = 4;\nprint_r(select_words($s, $n));\n\n\
    $s = \"Mary had a little lamb\";\n$n = 3;\nprint_r(select_words($s, $n));\n\n\
    $s = \"simple white space\";\n$n = 2;\nprint_r(select_words($s, $n));\n\n$s =\
    \ \"Hello world\";\n$n = 4;\nprint_r(select_words($s, $n));\n\n$s = \"Uncle sam\"\
    ;\n$n = 3;\nprint_r(select_words($s, $n));", "    $s = trim($s);\n    $words =\
    \ preg_split('/\\s+/', $s);\n    $result = [];\n    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    foreach ($words as $word) {\n        $counter = 0;\n       \
    \ for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i],\
    \ $vowels)) {\n                $counter++;\n            }\n        }\n       \
    \ if ($counter == $n) {\n            $result[] = $word;\n        }\n    }\n  \
    \  return $result;\n}", "    $matches = [];\n    $matches = preg_match_all(\"\
    /\\b[a-zA-Z]*[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]{$n}[a-zA-Z]*\\b/\",\
    \ $s, $matches);\n    return $matches[0];\n}\nprint_r(select_words(\"Mary had\
    \ a little lamb\", 4));", "  $words = explode(' ', $s);\n  $count = array();\n\
    \  foreach ($words as $word) {\n    $count[$word] = preg_match_all('/[^aeiou]/i',\
    \ $word);\n  }\n  $selected_words = array();\n  foreach ($count as $word => $consonants)\
    \ {\n    if ($consonants == $n) {\n      $selected_words[] = $word;\n    }\n \
    \ }\n  return $selected_words;\n}\n", "    if (!$s) return [];\n    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $w) {\n        if (strlen($w)\
    \ - count(str_split(preg_replace('/[aeiouy]/i', '', $w))) == $n) $result[] = $w;\n\
    \    }\n    return $result;\n}", "}\n", "  $words = explode(' ', $s);\n  $re =\
    \ '/[^aeiou]/';\n  $n_consonants = array();\n  foreach ($words as $key => $word)\
    \ {\n    preg_match_all($re, $word, $letters);\n    if(count($letters[0]) == $n)\
    \ {\n      $n_consonants[] = $word;\n    }\n  }\n  return $n_consonants;\n}",
  "  $s = preg_replace('/[^a-zA-Z\\s]/', '', $s);\n  $words = explode(' ', $s);\n\
    \  $arr = [];\n  $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n  foreach ($words as\
    \ $word) {\n    $wordLen = strlen($word);\n    $count = 0;\n    for ($i = 0; $i\
    \ < $wordLen; $i++) {\n      if (in_array(strtolower($word[$i]), $consonants))\
    \ {\n        $count++;\n      }\n    }\n    if ($count === $n) {\n      $arr[]\
    \ = $word;\n    }\n  }\n  return $arr;\n}", "    $words = explode(' ', $s);\n\
    \    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') + substr_count($word, 'y') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));", "\tif(empty($s)) return array();\n\t$words =\
    \ explode(' ', $s);\n\t$result = array();\n\tforeach($words as $word) {\n\t\t\
    if(substr_count($word, 'aeiou') == $n)\n\t\t\t$result[] = $word;\n\t}\n\treturn\
    \ $result;\n}\n\n$s = \"Mary had a little lamb\";\n$n = 4;\nprint_r(select_words($s,\
    \ $n));\n\necho \"\\n\";\n\n$s = \"Mary had a little lamb\";\n$n = 3;\nprint_r(select_words($s,\
    \ $n));\n\necho \"\\n\";\n\n$s = \"simple white space\";\n$n = 2;\nprint_r(select_words($s,\
    \ $n));\n\necho \"\\n\";\n\n$s = \"Hello world\";\n$n = 4;\nprint_r(select_words($s,\
    \ $n));\n\necho \"\\n\";\n\n$s = \"Uncle sam\";\n$n = 3;\nprint_r(select_words($s,\
    \ $n));\n\necho \"\\n\";\n\n$s = \"\";\n$n = 3;\nprint_r(select_words($s, $n));\n\
    \necho \"\\n\";\n", "    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        if (preg_match_all('/[bcdfghjklmnpqrstvwxyz]/i',\
    \ $word, $matches) == $n) {\n            $result[] = $word;\n        }\n    }\n\
    \    return $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\n\
    print_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $split = explode(\" \", $s);\n    $result = array();\n    foreach ($split\
    \ as $key => $word) {\n        $consonants = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonants++;\n\
    \            }\n        }\n        if ($consonants == $n) {\n            array_push($result,\
    \ $word);\n        }\n    }\n    return $result;\n}", "  $s = str_replace(' ',\
    \ '', $s);\n  $s = str_split($s);\n  $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \  $consonantsCount = 0;\n  $consonantsArray = [];\n  $consonantsWord = '';\n\
    \  $consonantsWords = [];\n  for ($i = 0; $i < count($s); $i++) {\n    for ($j\
    \ = 0; $j < count($consonants); $j++) {\n      if ($s[$i] === $consonants[$j])\
    \ {\n        $consonantsCount++;\n        $consonantsArray[] = $s[$i];\n     \
    \ }\n    }\n    if ($consonantsCount === $n) {\n      $consonantsWord = implode('',\
    \ $consonantsArray);\n      $consonantsWords[] = $consonantsWord;\n      $consonantsArray\
    \ = [];\n      $consonantsCount = 0;\n    } else {\n      $consonantsArray = [];\n\
    \      $consonantsCount = 0;\n    }\n  }\n  return $consonantsWords;\n}\necho\
    \ '<pre>';\nprint_r(select_words(\"Mary had a little lamb\", 4));\necho '</pre>';\n\
    echo '<pre>';\nprint_r(select_words(\"Mary had a little lamb\", 3));\necho '</pre>';\n\
    echo '<pre>';\nprint_r(select_words(\"simple white space\", 2));\necho '</pre>';\n\
    echo '<pre>';\nprint_r(select_words(\"Hello world\", 4));\necho '</pre>';\necho\
    \ '<pre>';\nprint_r(select_words(\"Uncle sam\", 3));\necho '</pre>';", "    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (count_consonants($word) == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}", "    // your code here\n}\n", "  \
    \  $r = array();\n    $s = str_replace(' ', '', $s);\n    $l = strlen($s);\n \
    \   $vowels = array('a', 'e', 'i', 'o', 'u');\n    $j = 0;\n    for ($i = 0; $i\
    \ < $l; $i++) {\n        if (in_array($s[$i], $vowels)) {\n            $j++;\n\
    \        }\n    }\n    $n_ = $l - $j;\n    if ($n_ == $n) {\n        $r[] = $s;\n\
    \    }\n    return $r;\n}", "  $words = explode(' ', $s);\n  $result = [];\n \
    \ foreach ($words as $word) {\n    if (preg_match_all('/[bcdfghjklmnpqrstvwxyz]/i',\
    \ $word, $match) == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n\
    }\n", "    $result = [];\n    $words = explode(' ', $s);\n    foreach ($words\
    \ as $word) {\n        if (is_consonant($word, $n)) {\n            $result[] =\
    \ $word;\n        }\n    }\n    return $result;\n}\n", "    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n", "  $words = explode(' ', $s);\n  $consonants = 0;\n  $result = [];\n  for\
    \ ($i = 0; $i < count($words); $i++) {\n    $consonants = getConsonants($words[$i]);\n\
    \    if ($consonants == $n) {\n      array_push($result, $words[$i]);\n    }\n\
    \  }\n  return $result;\n}\n", "    $result = [];\n    $words = explode(' ', $s);\n\
    \    foreach ($words as $word) {\n        if (count_consonants($word) == $n) {\n\
    \            $result[] = $word;\n        }\n    }\n    return $result;\n}\n",
  "    $consonants = \"bcdfghjklmnpqrstvwxyz\";\n    $res = array();\n    $words =\
    \ explode(\" \", $s);\n    foreach ($words as $w) {\n        $consonant_count\
    \ = 0;\n        for ($i = 0; $i < strlen($w); $i++) {\n            if (strstr($consonants,\
    \ $w[$i])) {\n                $consonant_count++;\n            }\n        }\n\
    \        if ($consonant_count == $n) {\n            $res[] = $w;\n        }\n\
    \    }\n    return $res;\n}\n$s = \"Mary had a little lamb\";\n$n = 4;\n$arr =\
    \ select_words($s, $n);\nprint_r($arr);", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $s = strtolower($s);\n    $s_array = explode(' ', $s);\n    $result\
    \ = [];\n    foreach ($s_array as $word) {\n        $consonants = 0;\n       \
    \ for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i],\
    \ $vowels)) {\n                $consonants++;\n            }\n        }\n    \
    \    if ($consonants == $n) {\n            $result[] = $word;\n        }\n   \
    \ }\n    return $result;\n}\nprint_r(select_words(\"Mary had a little lamb\",\
    \ 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "  $result = [];\n  $arr = preg_split('/ /', $s);\n  foreach\
    \ ($arr as $word) {\n    if (strlen($word) == $n + substr_count($word, 'a') +\
    \ substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word, 'o')\
    \ + substr_count($word, 'u')) {\n      array_push($result, $word);\n    }\n  }\n\
    \  return $result;\n}\n", "  $vowels = array('a', 'e', 'i', 'o', 'u');\n  $result\
    \ = array();\n  $words = explode(' ', $s);\n  foreach ($words as $word) {\n  \
    \  $matching_chars = 0;\n    for ($i = 0; $i < strlen($word); $i++) {\n      if\
    \ (!in_array($word[$i], $vowels)) {\n        $matching_chars++;\n      }\n   \
    \ }\n    if ($matching_chars == $n) {\n      $result[] = $word;\n    }\n  }\n\
    \  return $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\n\
    echo \"\\n\";\nprint_r(select_words(\"Mary had a little lamb\", 3));\necho \"\\\
    n\";\nprint_r(select_words(\"simple white space\", 2));\necho \"\\n\";\nprint_r(select_words(\"\
    Hello world\", 4));\necho \"\\n\";\nprint_r(select_words(\"Uncle sam\", 3));\n\
    echo \"\\n\";", "    $arr = preg_split('/\\s+/', $s);\n    $result = [];\n   \
    \ foreach ($arr as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}", '}', "  $words = explode(' ', $s);\n  $results = [];\n  foreach\
    \ ($words as $word) {\n    if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n      $results[] = $word;\n    }\n  }\n  return $results;\n}\n",
  "  $results = [];\n  if (strlen($s) === 0) {\n    return $results;\n  }\n  $split\
    \ = preg_split('/\\s+/', $s);\n  $count = count($split);\n  for ($i = 0; $i <\
    \ $count; $i++) {\n    $countVowels = substr_count($split[$i], 'a') + substr_count($split[$i],\
    \ 'e') + substr_count($split[$i], 'i') + substr_count($split[$i], 'o') + substr_count($split[$i],\
    \ 'u');\n    if (strlen($split[$i]) - $countVowels === $n) {\n      array_push($results,\
    \ $split[$i]);\n    }\n  }\n  return $results;\n}\n", "    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n", "\t$s = strtolower($s);\n\t$s = preg_replace('/[^a-z\\s]/', '', $s);\n\t\
    $s = explode(' ', $s);\n\t$words = [];\n\tforeach ($s as $k => $v) {\n\t\tif (strlen($v)\
    \ === $n) {\n\t\t\t$words[] = $v;\n\t\t}\n\t}\n\treturn $words;\n}\n$s = \"Mary\
    \ had a little lamb\";\n$n = 4;\n$words = select_words($s, $n);\nvar_dump($words);",
  "\t$s = trim($s);\n\t$result = [];\n\tif (empty($s)) {\n\t\treturn $result;\n\t\
    }\n\t$array = explode(' ', $s);\n\tforeach ($array as $v) {\n\t\t$len = mb_strlen($v);\n\
    \t\t$count = 0;\n\t\tfor ($i = 0; $i < $len; $i++) {\n\t\t\t$char = mb_substr($v,\
    \ $i, 1);\n\t\t\tif (!preg_match('/[aeiouy]/i', $char)) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t\tif ($count == $n) {\n\t\t\t$result[] = $v;\n\t\t}\n\t}\n\t\
    return $result;\n}\necho '<pre>';\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\necho '</pre>';", "    $words = array();\n    $s = str_replace('  ', '\
    \ ', $s);\n    $s = explode(' ', $s);\n    foreach ($s as $string) {\n       \
    \ $consonants = 0;\n        for ($i = 0; $i < strlen($string); $i++) {\n     \
    \       if ($string[$i] == 'a' || $string[$i] == 'e' || $string[$i] == 'i' ||\
    \ $string[$i] == 'o' || $string[$i] == 'u') {\n                continue;\n   \
    \         } else {\n                $consonants++;\n            }\n        }\n\
    \        if ($consonants == $n) {\n            $words[] = $string;\n        }\n\
    \    }\n    return $words;\n}", "\tif(strlen($s) == 0) {\n\t\treturn array();\n\
    \t}\n\t$arr = explode(\" \", $s);\n\t$result = array();\n\tforeach($arr as $s)\
    \ {\n\t\tif(preg_match_all('/[^aeiou]/i', $s, $match) == $n) {\n\t\t\tarray_push($result,\
    \ $s);\n\t\t}\n\t}\n\treturn $result;\n}\n\necho implode(\", \", select_words(\"\
    Hello world\", 4));", "    $words = explode(' ', $s);\n    $selected = [];\n \
    \   $const = 'bcdfghjklmnpqrstvwxyz';\n    foreach ($words as $word) {\n     \
    \   $count = 0;\n        foreach (str_split($word) as $char) {\n            if\
    \ (strpos($const, $char) !== false) {\n                $count++;\n           \
    \ }\n        }\n        if ($count === $n) {\n            $selected[] = $word;\n\
    \        }\n    }\n    return $selected;\n}\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\necho '<br/>';\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 3));\necho '<br/>';\nprint_r(select_words(\"simple white space\", 2));\n\
    echo '<br/>';\nprint_r(select_words(\"Hello world\", 4));\necho '<br/>';\nprint_r(select_words(\"\
    Uncle sam\", 3));\necho '<br/>';", "  $words = explode(' ', $s);\n  $result =\
    \ [];\n  foreach ($words as $word) {\n    if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n\
    print_r(select_words(\"Mary had a little lamb\", 4));", "\t$result = array();\n\
    \t$sArr = explode(\" \", $s);\n\tforeach ($sArr as $key => $value) {\n\t\t$value\
    \ = trim($value);\n\t\tif ($value === \"\") continue;\n\t\t$count = 0;\n\t\tfor\
    \ ($i = 0; $i < strlen($value); $i++) {\n\t\t\tif (!in_array($value[$i], array(\"\
    a\", \"e\", \"i\", \"o\", \"u\"))) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\t\
    if ($count === $n) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n\
    }\nprint_r(select_words(\"Mary had a little lamb\", 4));\necho \"\\n\";\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\necho \"\\n\";\nprint_r(select_words(\"simple white\
    \ space\", 2));\necho \"\\n\";\nprint_r(select_words(\"Hello world\", 4));\necho\
    \ \"\\n\";\nprint_r(select_words(\"Uncle sam\", 3));\necho \"\\n\";", "    $s\
    \ = preg_replace('/\\s+/', ' ', $s);\n    $words = explode(' ', $s);\n    $result\
    \ = [];\n    foreach ($words as $word) {\n        $matches = [];\n        preg_match_all('/[^aeiou]/',\
    \ $word, $matches);\n        if (count($matches[0]) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\necho var_export(select_words(\"\
    Mary had a little lamb\", 4), true), \"\\n\";\necho var_export(select_words(\"\
    Mary had a little lamb\", 3), true), \"\\n\";\necho var_export(select_words(\"\
    simple white space\", 2), true), \"\\n\";\necho var_export(select_words(\"Hello\
    \ world\", 4), true), \"\\n\";\necho var_export(select_words(\"Uncle sam\", 3),\
    \ true), \"\\n\";", "    $s = explode(' ', $s);\n    $res = [];\n    foreach ($s\
    \ as $v) {\n        $s = str_split($v);\n        $c = 0;\n        foreach ($s\
    \ as $v) {\n            if (!in_array($v, ['a', 'e', 'i', 'o', 'u'])) {\n    \
    \            $c++;\n            }\n        }\n        if ($c == $n) {\n      \
    \      $res[] = $v;\n        }\n    }\n    return $res;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "\tif ($s == \"\
    \") {\n\t\treturn array();\n\t}\n\t$words = explode(\" \", $s);\n\t$result = array();\n\
    \tforeach ($words as $word) {\n\t\tif (preg_match_all('/[aeiou]/i', $word, $matches)\
    \ == $n) {\n\t\t\tarray_push($result, $word);\n\t\t}\n\t}\n\treturn $result;\n\
    }\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $consonants = 'bcdfghjklmnpqrstvwxyz';\n\
    \    $result = [];\n    foreach ($words as $word) {\n        $num_consonants =\
    \ strlen(str_replace(str_split($consonants), '', $word));\n        if ($num_consonants\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n", "  $words = explode(' ', $s);\n  $words_consonants = [];\n  foreach ($words\
    \ as $word) {\n    $count = preg_match_all('/[^aeiou]/i', $word);\n    if ($count\
    \ == $n) {\n      $words_consonants[] = $word;\n    }\n  }\n  return $words_consonants;\n\
    }\n\nprint_r(select_words(\"Mary had a little lamb\", 4));", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $words = explode(\" \", $s);\n    $conso\
    \ = 0;\n    $consoWords = array();\n    foreach ($words as $word) {\n        $conso\
    \ = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i],\
    \ $vowels)) {\n                $conso++;\n            }\n        }\n        if\
    \ ($conso == $n) {\n            array_push($consoWords, $word);\n        }\n \
    \   }\n    return $consoWords;\n}\n", "    $a = array();\n    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $s = strtolower($s);\n    $s = explode(' ', $s);\n\
    \    foreach ($s as $word) {\n        $consonants = 0;\n        $letters = str_split($word);\n\
    \        foreach ($letters as $letter) {\n            if (!in_array($letter, $vowels))\
    \ {\n                $consonants++;\n            }\n        }\n        if ($consonants\
    \ == $n) {\n            $a[] = $word;\n        }\n    }\n    return $a;\n}\n",
  "  $words = explode(' ', $s);\n  $consonants = 0;\n  $selected = [];\n  for ($i\
    \ = 0; $i < count($words); $i++) {\n    for ($j = 0; $j < strlen($words[$i]);\
    \ $j++) {\n      if (\n        $words[$i][$j] != 'a' && $words[$i][$j] != 'e'\
    \ && $words[$i][$j] != 'i' && $words[$i][$j] != 'o' && $words[$i][$j] != 'u' &&\
    \ $words[$i][$j] != 'y'\n      ) {\n        $consonants++;\n      }\n    }\n \
    \   if ($consonants == $n) {\n      array_push($selected, $words[$i]);\n    }\n\
    \    $consonants = 0;\n  }\n  return $selected;\n}", "    $consonants = ['b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z'];\n    $words = explode(' ', $s);\n    foreach ($words as\
    \ $key => $word) {\n        $counter = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (in_array(strtolower($word[$i]), $consonants)) {\n \
    \               $counter++;\n            }\n        }\n        if ($counter !=\
    \ $n) {\n            unset($words[$key]);\n        }\n    }\n    return $words;\n\
    }\n", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ +\n            substr_count($word, 'i') + substr_count($word, 'o') + \n    \
    \        substr_count($word, 'u') + substr_count($word, 'y') + \n            substr_count($word,\
    \ 'A') + substr_count($word, 'E') + \n            substr_count($word, 'I') + substr_count($word,\
    \ 'O') + \n            substr_count($word, 'U') + substr_count($word, 'Y') ==\
    \ $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(select_words(\"Mary had a little lamb\", 4));", "  $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n  $words = explode(' ', $s);\n  $results = array();\n\
    \  foreach ($words as $word) {\n    $word = strtolower($word);\n    $vowelCount\
    \ = 0;\n    $wordCount = 0;\n    for ($i = 0; $i < strlen($word); $i++) {\n  \
    \    if (in_array($word[$i], $vowels)) {\n        $vowelCount++;\n      } else\
    \ {\n        $wordCount++;\n      }\n    }\n    if ($wordCount == $n) {\n    \
    \  $results[] = $word;\n    }\n  }\n  return $results;\n}\n\necho \"tests:\\n\"\
    ;\nvar_dump(select_words(\"Mary had a little lamb\", 4) == array(\"little\"));\n\
    var_dump(select_words(\"Mary had a little lamb\", 3) == array(\"Mary\", \"lamb\"\
    ));\nvar_dump(select_words(\"simple white space\", 2) == array());\nvar_dump(select_words(\"\
    Hello world\", 4) == array(\"world\"));\nvar_dump(select_words(\"Uncle sam\",\
    \ 3) == array(\"Uncle\"));", "\t$answer = [];\n\t$words = explode(\" \", $s);\n\
    \tforeach ($words as $word) {\n\t\tif (num_consonants($word) == $n) {\n\t\t\t\
    $answer[] = $word;\n\t\t}\n\t}\n\treturn $answer;\n}", "  $noVowels = str_replace([\"\
    a\", \"e\", \"i\", \"o\", \"u\"], \"\", $s);\n  $noVowelsArray = explode(\" \"\
    , $noVowels);\n  $noVowelsString = implode(\"\", $noVowelsArray);\n  $vowels =\
    \ array_diff(str_split($s), str_split($noVowelsString));\n  $vowelsString = implode(\"\
    \", $vowels);\n  $vowelsArray = explode(\" \", $vowelsString);\n  $stringArray\
    \ = explode(\" \", $s);\n  $nVowels = count($vowelsArray);\n  $nConsonants = $nVowels\
    \ - $n;\n  $output = [];\n  for ($i = 0; $i < count($stringArray); $i++) {\n \
    \   $word = $stringArray[$i];\n    $wordArray = str_split($word);\n    $wordString\
    \ = implode(\"\", $wordArray);\n    $wordNoVowels = str_replace([\"a\", \"e\"\
    , \"i\", \"o\", \"u\"], \"\", $wordString);\n    $wordNoVowelsArray = str_split($wordNoVowels);\n\
    \    $wordNoVowelsString = implode(\"\", $wordNoVowelsArray);\n    $wordVowels\
    \ = array_diff(str_split($wordString), str_split($wordNoVowelsString));\n    $wordVowelsString\
    \ = implode(\"\", $wordVowels);\n    $wordVowelsArray = explode(\" \", $wordVowelsString);\n\
    \    $wordNVowels = count($wordVowelsArray);\n    $wordNConsonants = $wordNVowels\
    \ - $n;\n    if ($wordNConsonants === 0) {\n      array_push($output, $word);\n\
    \    }\n  }\n  return $output;\n}\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello", "  $words = preg_split('/\\\
    s+/', $s);\n  foreach ($words as $key => $word) {\n    if (strlen(preg_replace('/[^a-z]/i',\
    \ '', $word)) - strlen(preg_replace('/[^aeiou]/i', '', $word)) != $n) {\n    \
    \  unset($words[$key]);\n    }\n  }\n  return $words;\n}\n", "  $words = explode('\
    \ ', $s);\n  foreach ($words as $key => $word) {\n    if (strlen(str_replace(array('a',\
    \ 'e', 'i', 'o', 'u'), '', $word)) !== $n) {\n      unset($words[$key]);\n   \
    \ }\n  }\n  return $words;\n}\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));\n", "    $array = explode(\" \", $s);\n    $result = [];\n \
    \   foreach ($array as $value) {\n        if (strlen($value) == $n) {\n      \
    \      $result[] = $value;\n        }\n    }\n    return $result;\n}\necho \"\
    <pre>\";\nvar_dump(select_words(\"Mary had a little lamb\", 4));\necho \"</pre>\"\
    ;", "\t$a_result = array();\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$a_words\
    \ = explode(' ', $s);\n\tforeach ($a_words as $word) {\n\t\t$vowel_count = 0;\n\
    \t\t$consonant_count = 0;\n\t\tfor ($i = 0; $i < strlen($word); $i++) {\n\t\t\t\
    if (in_array($word[$i], $vowels)) {\n\t\t\t\t$vowel_count++;\n\t\t\t} else {\n\
    \t\t\t\t$consonant_count++;\n\t\t\t}\n\t\t}\n\t\tif ($n == $consonant_count) {\n\
    \t\t\t$a_result[] = $word;\n\t\t}\n\t}\n\treturn $a_result;\n}\necho '<pre>';\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\necho '</pre>';", "  $arr\
    \ = explode(\" \", $s);\n  $results = [];\n  foreach ($arr as $key => $word) {\n\
    \    if (consonants($word) == $n) {\n      $results[] = $word;\n    }\n  }\n \
    \ return $results;\n}\n", "    if (empty($s)) return array();\n    $arr = explode('\
    \ ', $s);\n    $r = array();\n    foreach ($arr as $k => $v) {\n        if (consonants($v)\
    \ == $n) {\n            $r[] = $v;\n        }\n    }\n    return $r;\n}\n", " \
    \ if (empty($s)) {\n    return array();\n  }\n  $result = array();\n  $words =\
    \ explode(' ', $s);\n  foreach ($words as $word) {\n    $word_len = strlen($word);\n\
    \    $matches = array();\n    preg_match_all('/[^aeiou]/', $word, $matches);\n\
    \    if ($word_len - count($matches[0]) == $n) {\n      $result[] = $word;\n \
    \   }\n  }\n  return $result;\n}", "  $a = str_word_count($s, 1);\n  $l = count($a);\n\
    \  $result = array();\n  $current = 0;\n  for ($i = 0; $i < $l; $i++) {\n    $current\
    \ = 0;\n    $current = count_consonants($a[$i]);\n    if ($current == $n) {\n\
    \      array_push($result, $a[$i]);\n    }\n  }\n  return $result;\n}\n", "  \
    \  $s = trim($s);\n    $arr = explode(\" \", $s);\n    $result = [];\n    foreach\
    \ ($arr as $word) {\n        if (substr_count($word, \"a\") + substr_count($word,\
    \ \"e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") + substr_count($word, \"y\") == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = [];\n    if(empty($s))\
    \ return $result;\n    $words = explode(' ', $s);\n    $vowels = [ 'a', 'e', 'i',\
    \ 'o', 'u' ];\n    foreach($words as $word) {\n        $count = 0;\n        for($i\
    \ = 0; $i < strlen($word); $i++) {\n            if(in_array($word[$i], $vowels))\
    \ {\n                $count++;\n            }\n        }\n        if(strlen($word)\
    \ - $count == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\necho '<pre>';\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 3));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"simple white\
    \ space\", 2));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"Hello world\"\
    , 4));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"Uncle sam\", 3));\n\
    echo '</pre>';", '}', "    $words = explode(' ', $s);\n    $result = [];\n   \
    \ foreach ($words as $word) {\n        if (count(removeVowels($word)) == $n) {\n\
    \            $result[] = $word;\n        }\n    }\n    return $result;\n}\n",
  "\t$words = explode(\" \", $s);\n\t$result = [];\n\tforeach ($words as $word) {\n\
    \t\t$consonants = 0;\n\t\t$vowels = 0;\n\t\tfor ($i = 0; $i < strlen($word); $i++)\
    \ {\n\t\t\tif (strpos(\"aeiouAEIOU\", $word[$i]) !== false) {\n\t\t\t\t$vowels++;\n\
    \t\t\t} else {\n\t\t\t\t$consonants++;\n\t\t\t}\n\t\t}\n\t\tif ($consonants ==\
    \ $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

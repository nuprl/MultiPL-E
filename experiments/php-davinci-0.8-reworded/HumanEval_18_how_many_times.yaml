name: HumanEval_18_how_many_times
language: php
prompt: "<?php\n// Find how many times a given substring can be found in the original\
  \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n//\
  \ >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\"\
  )\n// 3\nfunction how_many_times($string, $substring) {\n"
tests: "function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
  \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["\tif ($substring == \"\") {\n\t\treturn 0;\n\t}\n\t$cnt = 0;\n\t$len\
    \ = strlen($substring);\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif\
    \ (substr($string, $i, $len) == $substring) {\n\t\t\t$cnt++;\n\t\t}\n\t}\n\treturn\
    \ $cnt;\n}\n", "\n}\n", "  return (substr_count($string, $substring));\n}\n\n\
    print(how_many_times(\"\", \"a\"));\nprint(how_many_times(\"aaa\", \"a\"));\n\
    print(how_many_times(\"aaaa\", \"aa\"));", "  $count = 0;\n  for ($i = 0; $i <\
    \ strlen($string); $i++) {\n    if (strlen($string) - $i < strlen($substring))\
    \ {\n      return $count;\n    }\n    if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n      $count++;\n    }\n  }\n  return $count;\n}\n", "   \
    \ if ($substring === \"\") {\n        return 0;\n    }\n    $count = 0;\n    $length\
    \ = strlen($string);\n    $sub_length = strlen($substring);\n    for ($i = 0;\
    \ $i < $length; $i++) {\n        if (substr($string, $i, $sub_length) === $substring)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n", "    $count\
    \ = 0;\n    while ($pos = strpos($string, $substring)) {\n        $count++;\n\
    \        $string = substr($string, $pos + 1);\n    }\n    return $count;\n}\n",
  "    $counter = 0;\n    $start = 0;\n    while (($pos = strpos($string, $substring,\
    \ $start)) !== false) {\n        $counter++;\n        $start = $pos + 1;\n   \
    \ }\n    return $counter;\n}\n", "    $count = 0;\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        if (substr($string, $i, strlen($substring)) == $substring)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nprint(how_many_times(\"\
    \", \"a\"));", "    // Your code here\n}", "    if (strlen($substring) == 0) return\
    \ 0;\n    if (strlen($string) == 0) return 0;\n    if (strlen($string) < strlen($substring))\
    \ return 0;\n    $count = 0;\n    $temp = $string;\n    while (strlen($temp) >=\
    \ strlen($substring)) {\n        if (substr($temp, 0, strlen($substring)) == $substring)\
    \ {\n            $count++;\n            $temp = substr($temp, strlen($substring));\n\
    \        } else {\n            $temp = substr($temp, 1);\n        }\n    }\n \
    \   return $count;\n}", "  // Add your code here\n}", "    $time = 0;\n    for\
    \ ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $time++;\n            $j = 1;\n            while ($j < strlen($substring)\
    \ && $string[$i + $j] == $substring[$j]) {\n                $j++;\n          \
    \  }\n            if ($j == strlen($substring)) {\n                $i += $j -\
    \ 1;\n            } else {\n                $time--;\n            }\n        }\n\
    \    }\n    return $time;\n}\n", "    $count = 0;\n    $i = 0;\n    while (($i\
    \ = strpos($string, $substring, $i)) !== false) {\n        $count++;\n       \
    \ $i++;\n    }\n    return $count;\n}\n", "    $count = 0;\n    for ($i = 0; $i\
    \ < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n", "    $count = 0;\n    $pos = 0;\n    while (($pos = strpos($string, $substring,\
    \ $pos)) !== false) {\n        $count++;\n        $pos++;\n    }\n    return $count;\n\
    }\n\necho how_many_times(\"\", \"a\");\necho \"\\n\";\necho how_many_times(\"\
    aaa\", \"a\");\necho \"\\n\";\necho how_many_times(\"aaaa\", \"aa\");\necho \"\
    \\n\";", "    $result = 0;\n    $length = strlen($substring);\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        if ($substring == substr($string, $i,\
    \ $length)) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }", "\t$len = strlen($substring);\n\t$count = 0;\n\t$start = 0;\n\twhile ($start\
    \ = strpos($string, $substring, $start)) {\n\t\t$count++;\n\t\t$start += $len;\n\
    \t}\n\treturn $count;\n}\n\necho how_many_times(\"aa\", \"a\") . \"\\n\";\necho\
    \ how_many_times(\"aaaa\", \"aa\") . \"\\n\";\necho how_many_times(\"\", \"a\"\
    ) . \"\\n\";\n", "    if ($substring === '') {\n        return 0;\n    }\n   \
    \ $count = 0;\n    $offset = 0;\n    while (strpos($string, $substring, $offset)\
    \ !== false) {\n        $count++;\n        $offset = strpos($string, $substring,\
    \ $offset) + 1;\n    }\n    return $count;\n}\n", "    $pos = 0;\n    $i = 0;\n\
    \    while ($pos !== false) {\n        $pos = strpos($string, $substring, $pos);\n\
    \        if ($pos !== false) {\n            $i++;\n            $pos++;\n     \
    \   }\n    }\n    return $i;\n}\n", "  $pos = 0;\n  $times = 0;\n  while (strpos($string,\
    \ $substring, $pos) !== false) {\n    $pos = strpos($string, $substring, $pos)\
    \ + 1;\n    $times++;\n  }\n  return $times;\n}\n\n$test_string = \"Test test\
    \ hello test test\";\n$test_substring = \"test\";\necho how_many_times($test_string,\
    \ $test_substring);\n", "    $count = 0;\n    $position = 0;\n    while ($position\
    \ < strlen($string)) {\n        $pos = strpos($string, $substring, $position);\n\
    \        if ($pos == false) {\n            break;\n        }\n        $count++;\n\
    \        $position = $pos + 1;\n    }\n    return $count;\n}\n", "  $num = 0;\n\
    \  $pos = 0;\n  while (1) {\n    $new_pos = strpos($string, $substring, $pos);\n\
    \    if ($new_pos === false) {\n      break;\n    }\n    $num += 1;\n    $pos\
    \ = $new_pos + 1;\n  }\n  return $num;\n}\n", "    $string_length = strlen($string);\n\
    \    $substring_length = strlen($substring);\n    $matches = 0;\n    for ($i =\
    \ 0; $i < $string_length; $i++) {\n        if ($string[$i] == $substring[0]) {\n\
    \            $k = $i;\n            $found = true;\n            for ($j = 0; $j\
    \ < $substring_length; $j++) {\n                if ($string[$k] != $substring[$j])\
    \ {\n                    $found = false;\n                    break;\n       \
    \         }\n                $k++;\n            }\n            if ($found) {\n\
    \                $matches++;\n            }\n        }\n    }\n    return $matches;\n\
    }\n", "\t$count = 0;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string,\
    \ $i, strlen($substring)) == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\necho how_many_times(\"\", \"a\");\necho how_many_times(\"aaa\"\
    , \"a\");\necho how_many_times(\"aaaa\", \"aa\");", "    $position = 0;\n    $count\
    \ = 0;\n    while (($position = strpos($string, $substring, $position)) !== false)\
    \ {\n        $count++;\n        $position++;\n    }\n    return $count;\n}\n\n\
    echo how_many_times(\"\", \"a\");\necho \"<br />\";\necho how_many_times(\"aaa\"\
    , \"a\");\necho \"<br />\";\necho how_many_times(\"aaaa\", \"aa\");\necho \"<br\
    \ />\";\necho how_many_times(\"\", \"a\");\necho \"<br />\";\necho how_many_times(\"\
    aaaa\", \"aa\");\necho \"<br />\";\necho how_many_times(\"aaaa\", \"aa\");\necho\
    \ \"<br />\";\necho how_many_times(\"\", \"a\");\necho \"<br />\";\necho how_many_times(\"\
    aaa\", \"a\");\necho \"<br />\";\necho how_many_times(\"aaaa\", \"aa\");\necho\
    \ \"<br />\";\necho how_many_times(\"\", \"a\");\necho \"<br />\";\necho how_many_times(\"\
    aaaa\", \"aa\");\necho \"<br />\";\necho how_many_times(\"aaaa\", \"aa\");\necho\
    \ \"<br />\";\necho how_many_times(\"\", \"a\");\necho \"<br />\";\necho how_many_times(\"\
    aaa\", \"a\");\necho \"<br />\";\necho how_many_times(\"aaaa\", \"aa\");\necho\
    \ \"<br />\";\necho how_many_times(\"\", \"a\");\necho \"<br />\";\necho how_many_times(\"\
    aaaa\", \"aa\");\necho \"<br />\";\necho how_many_times(\"aaaa\", \"aa\");\necho\
    \ \"<br />\";\necho how_many_times(\"\", \"a\");\necho \"<br />\";\necho how_many_times(\"\
    aaa\", \"a\");\necho \"<br />\";\necho how_many_times(\"aaaa\", \"aa\");\necho\
    \ \"<br />\";\necho how_many_times(\"\", \"a\");\necho \"<br />\";\necho how_many_times(\"\
    aaaa\", \"aa\");\necho \"<br />\";\necho how_many_times(\"aaaa\", \"aa\");\necho\
    \ \"<br />\";\necho how_", "  if ($substring == \"\") {\n    return 0;\n  }\n\
    \  $count = 0;\n  $start = 0;\n  while (strpos($string, $substring, $start) !==\
    \ false) {\n    $count += 1;\n    $start = strpos($string, $substring, $start)\
    \ + 1;\n  }\n  return $count;\n}\n", "\t$first_position = stripos($string, $substring);\n\
    \tif ($first_position === false) {\n\t\treturn 0;\n\t}\n\t$string = substr($string,\
    \ $first_position + strlen($substring));\n\t$other_occurrences = how_many_times($string,\
    \ $substring);\n\treturn 1 + $other_occurrences;\n}\n", "    $i = 0;\n    $count\
    \ = 0;\n    $len = strlen($string);\n    $sub_len = strlen($substring);\n    while\
    \ ($i <= $len - $sub_len) {\n        if ($string[$i] == $substring[0]) {\n   \
    \         $j = 1;\n            while ($j < $sub_len && $string[$i + $j] == $substring[$j])\
    \ {\n                $j++;\n            }\n            if ($j == $sub_len) {\n\
    \                $count++;\n            }\n        }\n        $i++;\n    }\n \
    \   return $count;\n}\n", "  $i = 0;\n  $count = 0;\n  while (($i = strpos($string,\
    \ $substring, $i)) !== false) {\n    $i++;\n    $count++;\n  }\n  return $count;\n\
    }\necho \"Case 1: \" . how_many_times(\"\", \"a\") . \"<br>\";\necho \"Case 2:\
    \ \" . how_many_times(\"aaa\", \"a\") . \"<br>\";\necho \"Case 3: \" . how_many_times(\"\
    aaaa\", \"aa\") . \"<br>\";\necho \"Case 4: \" . how_many_times(\"aaa\", \"aaa\"\
    ) . \"<br>\";\necho \"Case 5: \" . how_many_times(\"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc",
  "    // your code\n}\n", "    $count = 0;\n    $str_length = strlen($string);\n\
    \    $substr_length = strlen($substring);\n    for ($i = 0; $i < $str_length;\
    \ $i++) {\n        if ($substring === substr($string, $i, $substr_length)) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "\t$count =\
    \ 0;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif ($string[$i] == $substring[0])\
    \ {\n\t\t\tif (substr($string, $i, strlen($substring)) == $substring) {\n\t\t\t\
    \t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\necho how_many_times(\"\"\
    , \"a\") . \"<br>\";\necho how_many_times(\"aaa\", \"a\") . \"<br>\";\necho how_many_times(\"\
    aaaa\", \"aa\") . \"<br>\";\n", "    $count = 0;\n    while (($pos = strpos($string,\
    \ $substring)) !== false) {\n        $count++;\n        $string = substr($string,\
    \ $pos + 1);\n    }\n    return $count;\n}", "\tif ($substring === \"\") {\n\t\
    \treturn 0;\n\t}\n\t$offset = 0;\n\t$i = 0;\n\twhile (($offset = strpos($string,\
    \ $substring, $offset)) !== false) {\n\t\t$i++;\n\t\t$offset += strlen($substring);\n\
    \t}\n\treturn $i;\n}\n", "\t$count = 0;\n\t$pos = 0;\n\twhile ($pos = strpos($string,\
    \ $substring, $pos + 1)) {\n\t\t$count++;\n\t}\n\treturn $count;\n}", "  if ($substring\
    \ === '') {\n    return 0;\n  }\n  $count = 0;\n  $pos = 0;\n  while (($pos =\
    \ strpos($string, $substring, $pos)) !== false) {\n    $count++;\n    $pos +=\
    \ strlen($substring);\n  }\n  return $count;\n}\n\necho \"a can be found in aaa\
    \ for \".how_many_times(\"aaa\", \"a\").\" times\".PHP_EOL;\necho \"aa can be\
    \ found in aaaa for \".how_many_times(\"aaaa\", \"aa\").\" times\".PHP_EOL;\n\
    echo \"a can be found in 1a2a3a4a5a for \".how_many_times(\"1a2a3a4a5a\", \"a\"\
    ).\" times\".PHP_EOL;\necho \"aa can be found in aaaa for \".how_many_times(\"\
    aaaa\", \"aa\").\" times\".PHP_EOL;\necho \"a can be found in 1a2a3a4a5a for \"\
    .how_many_times(\"1a2a3a4a5a\", \"a\").\" times\".PHP_EOL;\necho \"aa can be found\
    \ in aaaa for \".how_many_times(\"aaaa\", \"aa\").\" times\".PHP_EOL;\n", "  \
    \  $count = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        $word_count\
    \ = substr_count($string, $substring, $i, strlen($substring));\n        if ($word_count)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\necho how_many_times(\"\
    \", \"a\");\necho \"<br>\";\necho how_many_times(\"aaa\", \"a\");\necho \"<br>\"\
    ;\necho how_many_times(\"aaaa\", \"aa\");\necho \"<br>\";", "    $length = strlen($string);\n\
    \    $sublength = strlen($substring);\n    $count = 0;\n    for ($i = 0; $i <\
    \ $length; $i++) {\n        if (substr($string, $i, $sublength) == $substring)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho how_many_times(\"\
    \", \"a\");\necho \"<br>\";\necho how_many_times(\"aaa\", \"a\");\necho \"<br>\"\
    ;\necho how_many_times(\"aaaa\", \"aa\");\necho \"<br>\";\necho how_many_times(\"\
    aabbaa\", \"aa\");\necho \"<br>\";\necho how_many_times(\"aaabaaabaaabaaabaa\"\
    , \"aa\");\necho \"<br>\";\necho how_many_times(\"aabbaa\", \"bb\");\necho \"\
    <br>\";\necho how_many_times(\"aabbaa\", \"ba\");\necho \"<br>\";\necho how_many_times(\"\
    aabbaa\", \"aaa\");\necho \"<br>\";\necho how_many_times(\"aabbaaa\", \"aa\");\n\
    echo \"<br>\";\necho how_many_times(\"aabbaaa\", \"aaa\");\necho \"<br>\";\necho\
    \ how_many_times(\"aabbaaaa\", \"aaa\");\necho \"<br>\";\necho how_many_times(\"\
    aabbaaaa\", \"aaaa\");\necho \"<br>\";\necho how_many_times(\"aabbaa\", \"b\"\
    );\necho \"<br>\";\necho how_many_times(\"aabbaa\", \"bbb\");\necho \"<br>\";\n\
    echo how_many_times(\"aabbaa\", \"bbbb\");\necho \"<br>\";\necho how_many_times(\"\
    aabbaaaaaaaa\", \"aaa\");\necho \"<br>\";\necho how_many_times(\"aabbaaaaaaaa\"\
    , \"aaaa\");\necho \"<br>\";\necho how_many_times(\"aabbaaaaaaaa\", \"aaaaa\"\
    );\necho \"<br>\";\necho how_many_times(\"aabbaaaaaaaaa\", \"aaaa\");\necho \"\
    <br>\";\necho how_many_times(\"aabbaaaaaaaaa\", \"aaaaa", "\tif (strlen($substring)\
    \ == 0) return 0;\n\t$count = 0;\n\t$locations = [];\n\t$start = 0;\n\twhile (($start\
    \ = strpos($string, $substring, $start)) !== false) {\n\t\t$count++;\n\t\t$locations[]\
    \ = $start;\n\t\t$start++;\n\t}\n\treturn $count;\n}\n", "\t$stringlength = strlen($string);\n\
    \t$substringlength = strlen($substring);\n\tif ($substringlength === 0) {\n\t\t\
    return 0;\n\t}\n\tif ($substringlength > $stringlength) {\n\t\treturn 0;\n\t}\n\
    \t$count = 0;\n\tfor ($i = 0; $i < $stringlength; $i++) {\n\t\t$teststring = substr($string,\
    \ $i, $substringlength);\n\t\tif ($teststring === $substring) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n", "    if ($substring == '') return 0;\n   \
    \ $times = 0;\n    $substrLen = strlen($substring);\n    $strLen = strlen($string);\n\
    \    for ($i = 0; $i < $strLen; $i++) {\n        $substrEnd = $i + $substrLen;\n\
    \        if ($substrEnd <= $strLen) {\n            $substr = substr($string, $i,\
    \ $substrLen);\n            if ($substr == $substring) {\n                $times++;\n\
    \            }\n        }\n    }\n    return $times;\n}\necho 'count for abc:\
    \ '.how_many_times('abc', 'a').'<br>';\necho 'count for aaaaa: '.how_many_times('aaaaa',\
    \ 'aa').'<br>';\necho 'count for ababababab: '.how_many_times('ababababab', 'ab').'<br>';\n\
    echo 'count for pagename: '.how_many_times('pagename.com', 'page').'<br>';\necho\
    \ 'count for pagename: '.how_many_times('pagename.com', 'name').'<br>';\necho\
    \ 'count for pagename: '.how_many_times('pagename.com', 'com').'<br>';\necho 'count\
    \ for pagename: '.how_many_times('pagename.com', 'comphp').'<br>';", "    $count\
    \ = 0;\n    $substring_length = strlen($substring);\n    $substring_array = str_split($substring);\n\
    \    $string_array = str_split($string);\n    for ($i = 0; $i < count($string_array);\
    \ $i++) {\n        if ($string_array[$i] == $substring_array[0]) {\n         \
    \   for ($j = 0; $j < $substring_length; $j++) {\n                if ($string_array[$i\
    \ + $j] == $substring_array[$j]) {\n                    $count++;\n          \
    \      }\n            }\n        }\n    }\n    echo $count / $substring_length;\n\
    }\nhow_many_times(\"aaaa\", \"aa\");", "    $pos = 0;\n    $count = 0;\n    while\
    \ (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}", "\t$len = strlen($substring);\n\
    \t$count = 0;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string,\
    \ $i, $len) == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\n", "    $count = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n     \
    \   if (strpos($string, $substring, $i) == $i) {\n            $count++;\n    \
    \    }\n    }\n    return $count;\n}\n\necho how_many_times(\"aaa\", \"a\");\n\
    echo \"<br>\";\necho how_many_times(\"aaaa\", \"aa\");\necho \"<br>\";\necho how_many_times(\"\
    \", \"a\");\necho \"<br>\";", "    $count = 0;\n    $j = 0;\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        if ($string[$i] == $substring[$j]) {\n\
    \            $j++;\n            if ($j == strlen($substring)) {\n            \
    \    $count++;\n                $j = 0;\n            }\n        } else {\n   \
    \         $j = 0;\n        }\n    }\n    return $count;\n}\n\necho how_many_times(\"\
    \", \"a\");\necho how_many_times(\"aaa\", \"a\");\necho how_many_times(\"aaaa\"\
    , \"aa\");", "\t$counter = 0;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\
    \tif (substr($string, $i, strlen($substring)) == $substring) {\n\t\t\t$counter++;\n\
    \t\t}\n\t}\n\treturn $counter;\n}\n\necho how_many_times(\"\", \"a\");\necho \"\
    \\n\";\necho how_many_times(\"aaa\", \"a\");\necho \"\\n\";\necho how_many_times(\"\
    aaaa\", \"aa\");\necho \"\\n\";", "  $times = 0;\n  for ($i = 0; $i < strlen($string);\
    \ $i++) {\n    $substring_match = true;\n    for ($j = 0; $j < strlen($substring);\
    \ $j++) {\n      if ($substring[$j] != $string[$i + $j]) {\n        $substring_match\
    \ = false;\n        break;\n      }\n    }\n    if ($substring_match) {\n    \
    \  $times++;\n    }\n  }\n  return $times;\n}\n", "\t// Write your code here.\n\
    }", "\t$count = 0;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (strpos($string,\
    \ $substring, $i) == $i) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\
    \necho how_many_times(\"aaa\", \"a\") . \"\\n\";\necho how_many_times(\"\", \"\
    a\") . \"\\n\";\necho how_many_times(\"aaaa\", \"aa\") . \"\\n\";", "\t$count\
    \ = 0;\n\t$string_len = strlen($string);\n\t$substring_len = strlen($substring);\n\
    \tfor ($i = 0; $i < $string_len; $i += 1) {\n\t\tif ($string[$i] == $substring[0])\
    \ {\n\t\t\t$found = true;\n\t\t\tfor ($j = 1; $j < $substring_len; $j += 1) {\n\
    \t\t\t\tif ($string[$i + $j] != $substring[$j]) {\n\t\t\t\t\t$found = false;\n\
    \t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($found) {\n\t\t\t\t$count += 1;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n", "\t$count = 0;\n\t$pointer = 0;\n\
    \t\n\twhile ( ( $pointer = strpos($string, $substring, $pointer) ) !== false )\
    \ {\n\t\t$count++;\n\t\t$pointer++;\n\t}\n\t\n\treturn $count;\n}\n\necho how_many_times(\"\
    \", \"a\") . \"\\n\";\necho how_many_times(\"aaa\", \"a\") . \"\\n\";\necho how_many_times(\"\
    aaaa\", \"aa\") . \"\\n\";", "    $count = 0;\n    $pos = strpos($string, $substring);\n\
    \    while ($pos !== false) {\n        $count++;\n        $pos = strpos($string,\
    \ $substring, $pos + 1);\n    }\n    return $count;\n}\necho how_many_times(\"\
    aaaa\", \"aa\");", "  $matches = [];\n  preg_match_all(\"/($substring)/\", $string,\
    \ $matches);\n  if (count($matches) === 0) {\n    return 0;\n  }\n  $count = 0;\n\
    \  for ($i = 0; $i < count($matches[0]); $i++) {\n    $count += strlen($matches[0][$i]);\n\
    \  }\n  return $count;\n}\n", "    $count = 0;\n    $pos = strpos($string, $substring);\n\
    \    while ($pos !== false) {\n        $count++;\n        $pos = strpos($string,\
    \ $substring, $pos + 1);\n    }\n    return $count;\n}\n", "    $times = 0;\n\
    \    $i = 0;\n    while (($i = strpos($string, $substring, $i)) !== false) {\n\
    \        $times++;\n        $i += strlen($substring);\n    }\n    return $times;\n\
    }\n", "\t$string_array = str_split($string);\n\t$substring_array = str_split($substring);\n\
    \t$count = 0;\n\tfor ($i = 0; $i < sizeof($string_array); $i++) {\n\t\tif ($string_array[$i]\
    \ == $substring_array[0]) {\n\t\t\t$flag = true;\n\t\t\tfor ($j = 1; $j < sizeof($substring_array);\
    \ $j++) {\n\t\t\t\tif ($string_array[$i + $j] != $substring_array[$j]) {\n\t\t\
    \t\t\t$flag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($flag) {\n\
    \t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n", "    $count =\
    \ 0;\n    $pos = 0;\n    while (($pos = strpos($string, $substring, $pos)) !==\
    \ false) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n$string = 'haha';\n$substring = 'ha';\necho how_many_times($string,\
    \ $substring);", "    $i = 0;\n    $count = 0;\n    while (($i = strpos($string,\
    \ $substring, $i)) !== false) {\n        $i++;\n        $count++;\n    }\n   \
    \ return $count;\n}", "  $times = 0;\n  while(1) {\n    $tmp = strpos($string,\
    \ $substring);\n    if($tmp === false) {\n      break;\n    }\n    $times++;\n\
    \    $string = substr($string, $tmp + 1);\n  }\n  return $times;\n}\n", "\tif(strlen($substring)\
    \ > strlen($string)) {\n\t\treturn 0;\n\t}\n\n\tif(strlen($substring) == strlen($string))\
    \ {\n\t\tif($substring == $string) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn\
    \ 0;\n\t\t}\n\t}\n\n\t$times = 0;\n\t$i = 0;\n\twhile($i <= strlen($string) -\
    \ strlen($substring)) {\n\t\tif(substr($string, $i, strlen($substring)) == $substring)\
    \ {\n\t\t\t$times++;\n\t\t\t$i += strlen($substring);\n\t\t} else {\n\t\t\t$i++;\n\
    \t\t}\n\t}\n\n\treturn $times;\n}\n", "    $result = 0;\n    for ($i = 0; $i <\
    \ strlen($string); $i++) {\n        if ($string[$i] == $substring[0]) {\n    \
    \        $test = substr($string, $i, strlen($substring));\n            if ($test\
    \ == $substring) {\n                $result++;\n            }\n        }\n   \
    \ }\n    return $result;\n}\n", "    $count = 0;\n    $length = strlen($substring);\n\
    \    $pos = 0;\n    while (true) {\n        $pos = strpos($string, $substring,\
    \ $pos);\n        if ($pos === false) {\n            break;\n        }\n     \
    \   $count++;\n        $pos += $length;\n    }\n    return $count;\n}", "\t$count\
    \ = 0;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string,\
    \ $i, strlen($substring)) == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n", "\tif (strlen($substring) == 0) {\n\t\treturn 0;\n\t}\n\n\t$result\
    \ = 0;\n\t$i = 0;\n\twhile ($i < strlen($string)) {\n\t\t$i = strpos($string,\
    \ $substring, $i);\n\t\tif ($i === false) {\n\t\t\tbreak;\n\t\t}\n\t\t$result++;\n\
    \t\t$i++;\n\t}\n\treturn $result;\n}\n", "  $count = 0;\n  while (strpos($string,\
    \ $substring) !== false) {\n    $count++;\n    $string = substr($string, strpos($string,\
    \ $substring) + 1);\n  }\n  return $count;\n}\n\n$string = \"aaaa\";\n$substring\
    \ = \"aa\";\necho how_many_times($string, $substring) . \"\\n\";", "    if ($substring\
    \ == '') return 0;\n    $count = 0;\n    $sub_len = strlen($substring);\n    for\
    \ ($i = 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, $sub_len)\
    \ == $substring) $count++;\n    }\n    return $count;\n}\n", "    $occurances\
    \ = 0;\n    $s = str_split($string);\n    $len = strlen($substring);\n    foreach\
    \ ($s as $i => $char) {\n        if ($char == $substring[0]) {\n            if\
    \ (array_slice($s, $i, $len) == str_split($substring)) {\n                $occurances++;\n\
    \            }\n        }\n    }\n    return $occurances;\n}", "\tif ($substring\
    \ == \"\") {\n\t\treturn 0;\n\t}\n\t\n\t$occurences = 0;\n\t\n\t$len_substring\
    \ = strlen($substring);\n\t$len_string = strlen($string);\n\t\n\tfor ($i = 0;\
    \ $i < $len_string; $i++) {\n\t\t$end = $i + $len_substring;\n\t\tif ($string[$i]\
    \ == $substring[0] && $end <= $len_string) {\n\t\t\tif (substr($string, $i, $len_substring)\
    \ == $substring) {\n\t\t\t\t$occurences++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn\
    \ $occurences;\n}\n\necho how_many_times(\"\", \"a\");\necho \"<br>\";\necho how_many_times(\"\
    aaa\", \"a\");\necho \"<br>\";\necho how_many_times(\"aaaa\", \"aa\");", "   \
    \ $count = 0;\n    $pos = 0;\n    while (($pos = strpos($string, $substring, $pos))\
    \ !== false) {\n        $count++;\n        $pos += strlen($substring);\n    }\n\
    \    return $count;\n}\n\necho how_many_times(\"\", \"a\").\"\\n\";\necho how_many_times(\"\
    aaa\", \"a\").\"\\n\";\necho how_many_times(\"aaaa\", \"aa\").\"\\n\";", "   \
    \ $i = 0;\n    $count = 0;\n    while (($i = strpos($string, $substring, $i))\
    \ !== false) {\n        $i++;\n        $count++;\n    }\n    return $count;\n\
    }\n\necho(how_many_times(\"aaa\", \"a\"));\necho(how_many_times(\"aaa\", \"b\"\
    ));\necho(how_many_times(\"aa\", \"aa\"));\necho(how_many_times(\"aaaa\", \"aa\"\
    ));\necho(how_many_times(\"this is a string\", \"s\"));\necho(how_many_times(\"\
    this is a string\", \"is\"));\necho(how_many_times(\"this is a string\", \"str\"\
    ));", "    $count = 0;\n    $starting_point = 0;\n    while(($starting_point =\
    \ strpos($string, $substring, $starting_point)) !== false) {\n        $count++;\n\
    \        $starting_point++;\n    }\n    return $count;\n}\n", "    $len = strlen($substring);\n\
    \    $num = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i]\
    \ == $substring[0]) {\n            if (substr($string, $i, $len) == $substring)\n\
    \                $num++;\n        }\n    }\n    return $num;\n}\necho \"How many\
    \ times a given substring can be found in the original string<br>\";\necho \"\
    Found \" . how_many_times(\"\", \"a\") . \" times<br>\";\necho \"Found \" . how_many_times(\"\
    aaa\", \"a\") . \" times<br>\";\necho \"Found \" . how_many_times(\"aaaa\", \"\
    aa\") . \" times<br>\";\n", "  return $string == \"\" ? 0 : substr_count($string,\
    \ $substring);\n}\n", "\t$result = 0;\n\t$stringLength = strlen($string);\n\t\
    $substringLength = strlen($substring);\n\t$find = -1;\n\t$pos = 0;\n\twhile($pos\
    \ < $stringLength) {\n\t\t$find = strpos($string, $substring, $pos);\n\t\tif($find\
    \ !== false) {\n\t\t\t$result++;\n\t\t\t$pos = $find + $substringLength;\n\t\t\
    } else {\n\t\t\t$pos = $stringLength;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho\
    \ '<h2>How many times a given substring can be found in the original string. Count\
    \ overlaping cases.</h2>';\necho how_many_times(\"\", \"a\");\necho '<br>';\n\
    echo how_many_times(\"aaa\", \"a\");\necho '<br>';\necho how_many_times(\"aaaa\"\
    , \"aa\");\n", "    $n = 0;\n    $length = strlen($string);\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < $length; $i += 1) {\n        $j\
    \ = 0;\n        while ($j < $substring_length && $i + $j < $length && $string[$i\
    \ + $j] == $substring[$j]) {\n            $j += 1;\n        }\n        if ($j\
    \ == $substring_length) {\n            $n += 1;\n        }\n    }\n    return\
    \ $n;\n}\n\necho how_many_times(\"\", \"a\") . \"<br>\";\necho how_many_times(\"\
    aaa\", \"a\") . \"<br>\";\necho how_many_times(\"aaaa\", \"aa\") . \"<br>\";",
  "  // your code here\n}", "    return (strlen($string) - strlen(str_replace($substring,\
    \ '', $string))) / strlen($substring);\n}\n", "\t$times = 0;\n\tif ($substring\
    \ === \"\") {\n\t\treturn $times;\n\t}\n\t$sublength = strlen($substring);\n\t\
    $arr = str_split($string);\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\tif ($substring\
    \ === substr($string, $i, $sublength)) {\n\t\t\t$times++;\n\t\t}\n\t}\n\treturn\
    \ $times;\n}\n", "    $count = 0;\n    $offset = 0;\n    while ($offset < strlen($string))\
    \ {\n        $pos = strpos($string, $substring, $offset);\n        if ($pos ===\
    \ false) {\n            break;\n        }\n        $count++;\n        $offset\
    \ = $pos + 1;\n    }\n    return $count;\n}\n", "    $count = 0;\n    for ($i\
    \ = 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\necho how_many_times(\"\", \"a\") . \"\\n\";\necho how_many_times(\"aaa\", \"\
    a\") . \"\\n\";\necho how_many_times(\"aaaa\", \"aa\") . \"\\n\";", "    $times\
    \ = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i]\
    \ == $substring[0]) {\n            $match = 1;\n            for ($j = 1; $j <\
    \ strlen($substring); $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    $match = 0;\n                    break;\n           \
    \     }\n            }\n            if ($match) {\n                $times++;\n\
    \            }\n        }\n    }\n    return $times;\n}\necho how_many_times(\"\
    \", \"a\") . \"\\n\";\necho how_many_times(\"aaa\", \"a\") . \"\\n\";\necho how_many_times(\"\
    aaaa\", \"aa\") . \"\\n\";", "  $found = 0;\n  $substring_len = strlen($substring);\n\
    \  $string_len = strlen($string);\n  for ($i = 0; $i < $string_len; $i++) {\n\
    \    $match = true;\n    for ($j = 0; $j < $substring_len; $j++) {\n      if ($substring[$j]\
    \ != $string[$i + $j]) {\n        $match = false;\n        break;\n      }\n \
    \   }\n    if ($match) {\n      $found++;\n    }\n  }\n  return $found;\n}\n$string\
    \ = \"\";\n$substring = \"a\";\necho how_many_times($string, $substring) . \"\\\
    n\";\n$string = \"aaa\";\n$substring = \"a\";\necho how_many_times($string, $substring)\
    \ . \"\\n\";\n$string = \"aaaa\";\n$substring = \"aa\";\necho how_many_times($string,\
    \ $substring) . \"\\n\";", "\t$length = strlen($string);\n\t$sublength = strlen($substring);\n\
    \t$i = 0;\n\t$result = 0;\n\twhile ($i < $length) {\n\t\tif (substr($string, $i,\
    \ $sublength) == $substring) {\n\t\t\t$result = $result + 1;\n\t\t\t$i = $i +\
    \ $sublength;\n\t\t} else {\n\t\t\t$i = $i + 1;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "\t$string_len = strlen($string);\n\t$substring_len = strlen($substring);\n\
    \t$count = 0;\n\tfor ($i = 0; $i < $string_len; $i++) {\n\t\tif (substr($string,\
    \ $i, $substring_len) == $substring)\n\t\t\t$count++;\n\t}\n\treturn $count;\n\
    }\n", "    $count = 0;\n    $pos = 0;\n    while (($pos = strpos($string, $substring,\
    \ $pos)) !== false) {\n        $count++;\n        $pos += strlen($substring);\n\
    \    }\n    return $count;\n}\n", "\t$count = 0;\n\t$substring_length = strlen($substring);\n\
    \tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string, $i, $substring_length)\
    \ == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", "   \
    \ if (strlen($substring) == 0) {\n        return 0;\n    }\n\n    $count = 0;\n\
    \    $startIndex = 0;\n    $length = strlen($string);\n    while ($startIndex\
    \ < $length) {\n        $substr_start = strpos($string, $substring, $startIndex);\n\
    \        if ($substr_start === false) {\n            break;\n        }\n\n   \
    \     $count++;\n        $startIndex = $substr_start + 1;\n    }\n\n    return\
    \ $count;\n}\n\necho how_many_times(\"a\", \"\") . \"\\n\";\necho how_many_times(\"\
    aaa\", \"a\") . \"\\n\";\necho how_many_times(\"aaaa\", \"aa\") . \"\\n\";\necho\
    \ how_many_times(\"aaaa\", \"a\") . \"\\n\";\necho how_many_times(\"aaaaa\", \"\
    a\") . \"\\n\";\necho how_many_times(\"aaaaaa\", \"a\") . \"\\n\";\necho how_many_times(\"\
    aaaaaaa\", \"a\") . \"\\n\";\necho how_many_times(\"aaaaaaaa\", \"a\") . \"\\\
    n\";\necho how_many_times(\"aaaaaaaaa\", \"a\") . \"\\n\";\necho how_many_times(\"\
    aaaaaaaaaa\", \"a\") . \"\\n\";\n", "    if (is_string($string) && is_string($substring))\
    \ {\n        $number_of_substrings = substr_count($string, $substring);\n    \
    \    return $number_of_substrings;\n    } else {\n        return null;\n    }\n\
    }", "    return preg_match_all('/'.$substring.'/', $string, $matches);\n}\n",
  "    $count = 0;\n    $offset = 0;\n    while(($position = strpos($string, $substring,\
    \ $offset)) !== false) {\n        $count++;\n        $offset = $position + 1;\n\
    \    }\n    return $count;\n}\n", "\tif (empty($string) || empty($substring))\
    \ {\n\t\treturn 0;\n\t}\n\t$chunks = explode($substring, $string);\n\treturn count($chunks)\
    \ - 1;\n}", "    $array = explode($substring, $string);\n    return count($array)\
    \ - 1;\n}\n", "\t$count = 0;\n\t$sublen = strlen($substring);\n\t$strlen = strlen($string);\n\
    \tfor ($i = 0; $i < $strlen; $i++) {\n\t\tif (substr($string, $i, $sublen) ==\
    \ $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho how_many_times(\"\
    \", \"a\");\necho \"<br>\";\necho how_many_times(\"aaa\", \"a\");\necho \"<br>\"\
    ;\necho how_many_times(\"aaaa\", \"aa\");\necho \"<br>\";\necho how_many_times(\"\
    aaaa\", \"aaa\");\necho \"<br>\";\necho how_many_times(\"aaaaaa\", \"aaa\");\n\
    echo \"<br>\";\necho how_many_times(\"aaaaaab\", \"aaa\");\necho \"<br>\";\necho\
    \ how_many_times(\"aaaaaab\", \"aa\");\necho \"<br>\";", "\t$length = strlen($string);\n\
    \t$sublength = strlen($substring);\n\tif ($length == 0 || $sublength == 0) {\n\
    \t\treturn 0;\n\t}\n\telse {\n\t\t$count = 0;\n\t\tfor ($i = 0; $i < $length;\
    \ $i++) {\n\t\t\tif ($string[$i] == $substring[0]) {\n\t\t\t\t$test = 1;\n\t\t\
    \t\tfor ($j = 1; $j < $sublength; $j++) {\n\t\t\t\t\tif ($string[$i + $j] != $substring[$j])\
    \ {\n\t\t\t\t\t\t$test = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\
    \tif ($test == 1) {\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn\
    \ $count;\n\t}\n}\necho how_many_times(\"\", \"a\");\necho how_many_times(\"aaa\"\
    , \"a\");\necho how_many_times(\"aaaa\", \"aa\");\n", "\tif($string == \"\") {\n\
    \t\treturn 0;\n\t} else {\n\t\t$count = 0;\n\t\tfor($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t\t$sub_string = substr($string, $i, strlen($substring));\n\t\t\t\
    if($sub_string == $substring) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\treturn\
    \ $count;\n\t}\n}\necho how_many_times(\"\", \"a\") . \"<br>\";\necho how_many_times(\"\
    aaa\", \"a\") . \"<br>\";\necho how_many_times(\"aaaa\", \"aa\") . \"<br>\";",
  "  // your code here\n}\n", "    $count = 0;\n    $i = 0;\n    while ($i <= strlen($string)\
    \ - strlen($substring)) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n            $i += strlen($substring);\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $count;\n}\n\
    \necho how_many_times(\"\", \"a\");\necho how_many_times(\"aaa\", \"a\");\necho\
    \ how_many_times(\"aaaa\", \"aa\");", "    if($string == \"\" || $substring ==\
    \ \"\") {\n        return 0;\n    }\n    $str_length = strlen($string);\n    $substr_length\
    \ = strlen($substring);\n    $count = 0;\n    for($i = 0; $i < $str_length; $i++)\
    \ {\n        if(substr($string, $i, $substr_length) == $substring) {\n       \
    \     $count += 1;\n        }\n    }\n    return $count;\n}\n\necho how_many_times(\"\
    aaaa\", \"aa\") . \"\\n\";\n", "    $count = 0;\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $pos = strpos($string, $substring, $i);\n        if ($pos ===\
    \ false) {\n            break;\n        }\n        $count++;\n        $i = $pos;\n\
    \    }\n    return $count;\n}", "    $how_many_times = 0;\n    for ($i = 0; $i\
    \ < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $how_many_times++;\n        }\n    }\n    return\
    \ $how_many_times;\n}\n", "\t$count = 0;\n\t$length = strlen($substring);\n\t\
    for ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string, $i, $length)\
    \ == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho how_many_times(\"\
    aaas\", \"aa\");\necho \"<br>\";\necho how_many_times(\"ababa\", \"aba\");\necho\
    \ \"<br>\";\necho how_many_times(\"aa\", \"a\");\necho \"<br>\";\necho how_many_times(\"\
    abbabbabb\", \"abb\");", "    $count = 0;\n    $start = 0;\n    while(strpos($string,\
    \ $substring, $start) !== false) {\n        $count++;\n        $start = strpos($string,\
    \ $substring, $start) + 1;\n    }\n    return $count;\n}\n\n$string = \"I think\
    \ PHP is a great language. I love PHP!\";\n$substring = \"PHP\";\necho $string\
    \ . \"\\n\";\necho \"String '\" . $substring . \"' appears \" . how_many_times($string,\
    \ $substring) . \" times.\";", "\n}\n", "    $count = 0;\n    $pos = strpos($string,\
    \ $substring);\n    if ($pos !== false) {\n        $count = 1;\n        $length\
    \ = strlen($substring);\n        $new_pos = $pos + $length;\n        $test_string\
    \ = substr($string, $new_pos);\n        $test_substring = substr($substring, 0,\
    \ -1);\n        $check = how_many_times($test_string, $test_substring);\n    \
    \    $count += $check;\n    }\n    return $count;\n}\n\n$string = \"aaaa\";\n\
    $substring = \"aa\";\necho how_many_times($string, $substring) . PHP_EOL;", " \
    \   if (empty($string) || empty($substring)) {\n        return 0;\n    }\n\n \
    \   $times = 0;\n    $stringLen = strlen($string);\n    $substringLen = strlen($substring);\n\
    \n    for ($i = 0; $i < $stringLen; $i++) {\n        if (substr($string, $i, $substringLen)\
    \ == $substring) {\n            $times++;\n        }\n    }\n\n    return $times;\n\
    }", "    $count = 0;\n    $str_len = strlen($string);\n    $sub_len = strlen($substring);\n\
    \    for ($i = 0; $i < $str_len; $i++) {\n        $j = 0;\n        while ($j <\
    \ $sub_len && $i + $j < $str_len && $string[$i + $j] == $substring[$j]) {\n  \
    \          $j++;\n        }\n        if ($j == $sub_len) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n", "\t// This is a placeholder. Implement\
    \ your solution here.\n}", "    return substr_count($string, $substring);\n}\n",
  "    $how_many_times = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    $tmp_string = substr($string, $i);\n        if (strpos($tmp_string, $substring)\
    \ === 0) {\n            $how_many_times++;\n        }\n    }\n    return $how_many_times;\n\
    }\n", "  $result = 0;\n  $offset = 0;\n  while (($offset = strpos($string, $substring,\
    \ $offset)) !== false) {\n    $result++;\n    $offset++;\n  }\n  return $result;\n\
    }\n", "    $substring_length = strlen($substring);\n    $total_length = strlen($string);\n\
    \    $found_substrings = 0;\n    for ($i = 0; $i < $total_length; $i++) {\n  \
    \      if ($substring_length <= $total_length - $i) {\n            if (substr($string,\
    \ $i, $substring_length) == $substring) {\n                $found_substrings++;\n\
    \            }\n        }\n    }\n    return $found_substrings;\n}\n", "    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (strncmp($string,\
    \ $substring, strlen($substring)) == 0) {\n            $count++;\n        }\n\
    \        $string = substr($string, 1);\n    }\n    return $count;\n}\necho how_many_times(\"\
    aaa\", \"a\");\necho how_many_times(\"aaaa\", \"aa\");", "  $count = 0;\n  for\
    \ ($i = 0; $i < strlen($string); $i++) {\n    if ($string[$i] == $substring[0])\
    \ {\n      $string_length = strlen($string);\n      $substring_length = strlen($substring);\n\
    \      if (substr($string, $i, $substring_length) == $substring) {\n        $count++;\n\
    \      }\n    }\n  }\n  return $count;\n}", "    $count = 0;\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        $current_substr = substr($string, $i,\
    \ strlen($substring));\n        if ($current_substr == $substring) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}\n\necho how_many_times(\"\
    aaa\", \"a\");\necho how_many_times(\"aaaa\", \"aa\");\necho how_many_times(\"\
    \", \"a\");", "\n}", "    if ($substring === '') {\n        return 0;\n    }\n\
    \n    $count = 0;\n    $start_pos = 0;\n    while (true) {\n        $pos = strpos($string,\
    \ $substring, $start_pos);\n        if ($pos === false) {\n            break;\n\
    \        }\n        $count++;\n        $start_pos = $pos + 1;\n    }\n    return\
    \ $count;\n}\n", "    if (strlen($substring) == 0) {\n        return 0;\n    }\n\
    \    return substr_count($string, $substring);\n}", "  \n}\n", "    // your code\
    \ goes here\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < $string_length; $i++) {\n     \
    \   if ($string[$i] == $substring[0]) {\n            $tmp = $i;\n            for\
    \ ($j = 0; $j < $substring_length; $j++) {\n                if ($string[$tmp]\
    \ == $substring[$j]) {\n                    $tmp++;\n                } else {\n\
    \                    break;\n                }\n            }\n            if\
    \ ($j == $substring_length) {\n                $count++;\n            }\n    \
    \    }\n    }\n    return $count;\n}\n", "  $count = 0;\n  for ($i = 0; $i < strlen($string);\
    \ $i++) {\n    if (substr($string, $i, strlen($substring)) == $substring) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\necho how_many_times(\"\"\
    , \"a\") . \"<br>\";\necho how_many_times(\"aaa\", \"a\") . \"<br>\";\necho how_many_times(\"\
    aaaa\", \"aa\") . \"<br>\";\necho how_many_times(\"aaaa\", \"bb\") . \"<br>\"\
    ;\necho how_many_times(\"bababa\", \"aba\") . \"<br>\";", "    $count = 0;\n \
    \   $position = 0;\n    $length = strlen($substring);\n    while (($position =\
    \ strpos($string, $substring, $position)) !== false) {\n        $count++;\n  \
    \      $position += $length;\n    }\n    return $count;\n}\necho how_many_times(\"\
    aabbabaabbaababaabaababbaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabbabaabaabaaabaabaababaababaabaabb",
  "    $times = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i]\
    \ == $substring[0]) {\n            $found = true;\n            for ($j = 1; $j\
    \ < strlen($substring); $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    $found = false;\n                    break;\n       \
    \         }\n            }\n            if ($found) {\n                $times++;\n\
    \            }\n        }\n    }\n    return $times;\n}", "\t$count = 0;\n\tfor\
    \ ($i = 0; $i < strlen($string); $i++) {\n\t\tif ($string[$i] == $substring[0])\
    \ {\n\t\t\t$offset = $i;\n\t\t\t$j = 0;\n\t\t\twhile ($offset < strlen($string)\
    \ && $j < strlen($substring) && $string[$offset] == $substring[$j]) {\n\t\t\t\t\
    $offset++;\n\t\t\t\t$j++;\n\t\t\t}\n\t\t\tif ($j == strlen($substring)) {\n\t\t\
    \t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n", "  $count = 0;\n \
    \ $chars = str_split($string);\n  for ($i = 0; $i < count($chars); $i++) {\n \
    \   $substring_chars = str_split($substring);\n    $substring_count = 0;\n   \
    \ for ($j = 0; $j < count($substring_chars); $j++) {\n      if ($substring_chars[$j]\
    \ != $chars[$i + $j]) {\n        break;\n      }\n      $substring_count++;\n\
    \    }\n    if ($substring_count == count($substring_chars)) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n", "    $length = strlen($string);\n    $count\
    \ = 0;\n    for ($i = 0; $i < $length; $i++) {\n        $count += substr_count($string,\
    \ $substring, $i, strlen($substring));\n    }\n    return $count;\n}\n", "   \
    \ $count = 0;\n    $start = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n\
    \        if ($string[$i] == $substring[0]) {\n            if (substr($string,\
    \ $i, strlen($substring)) == $substring) {\n                $count++;\n      \
    \          $i += strlen($substring) - 1;\n            }\n        }\n    }\n  \
    \  return $count;\n}\n", "    $count = 0;\n    $sub_len = strlen($substring);\n\
    \    $string_len = strlen($string);\n    for ($i = 0; $i < $string_len; $i++)\
    \ {\n        if (substr($string, $i, $sub_len) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nprint(how_many_times(\"\", \"a\"));\n\
    print(how_many_times(\"aaa\", \"a\"));\nprint(how_many_times(\"aaaa\", \"aa\"\
    ));", "    $count = 0;\n    $index = 0;\n    while (strpos($string, $substring,\
    \ $index) !== false) {\n        $index = strpos($string, $substring, $index) +\
    \ 1;\n        $count++;\n    }\n    return $count;\n}\n", "\tif(strlen($substring)\
    \ == 0) {\n\t\treturn 0;\n\t}\n\telse {\n\t\t$i = 0;\n\t\t$counter = 0;\n\t\t\
    while($i < strlen($string)) {\n\t\t\tif(substr($string, $i, strlen($substring))\
    \ == $substring) {\n\t\t\t\t$counter++;\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\telse {\n\
    \t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t\treturn $counter;\n\t}\n}\necho how_many_times(\"\
    \", \"a\");\necho \"\\n\";\necho how_many_times(\"aaa\", \"a\");\necho \"\\n\"\
    ;\necho how_many_times(\"aaaa\", \"aa\");\necho \"\\n\";\necho how_many_times(\"\
    aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba",
  "  $times = 0;\n  $string_length = strlen($string);\n  $substring_length = strlen($substring);\n\
    \  for ($i = 0; $i < $string_length; $i++) {\n    $pos = strpos($string, $substring,\
    \ $i);\n    if ($pos === false) {\n      break;\n    }\n    $times++;\n    $i\
    \ = $pos + $substring_length - 1;\n  }\n  return $times;\n}\n", "    $count =\
    \ 0;\n    $start_pos = 0;\n    $end_pos = 0;\n    while( $start_pos != false )\
    \ {\n        $start_pos = strpos($string, $substring, $end_pos);\n        if ($start_pos\
    \ != false) {\n            $end_pos = $start_pos + strlen($substring);\n     \
    \       $count++;\n        }\n    }\n    return $count;\n}\n", "  $counter = 0;\n\
    \  $length = strlen($substring);\n  for ($i = 0; $i < strlen($string); $i++) {\n\
    \    if (substr($string, $i, $length) == $substring) {\n      $counter++;\n  \
    \  }\n  }\n  return $counter;\n}\n$string = \"aaaa\";\n$substring = \"aa\";\n\
    echo how_many_times($string, $substring);", "    $count = 0;\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    if (strlen($substring) == 0) {\n        return 0;\n    }\n    $first\
    \ = strpos($string, $substring);\n    if ($first === false) {\n        return\
    \ 0;\n    }\n    return 1 + how_many_times(substr($string, $first + 1), $substring);\n\
    }\nvar_dump(how_many_times(\"\", \"a\"));\nvar_dump(how_many_times(\"aaa\", \"\
    a\"));\nvar_dump(how_many_times(\"aaaa\", \"aa\"));", "    $string_length = strlen($string);\n\
    \    $substring_length = strlen($substring);\n    $count = 0;\n    for ($i = 0;\
    \ $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\necho how_many_times(\"\", \"a\");", "    $found = 0;\n    $offset = 0;\n  \
    \  while(($pos = strpos($string, $substring, $offset)) !== false) {\n        $found++;\n\
    \        $offset = $pos + 1;\n    }\n    return $found;\n}", "  $count = 0;\n\
    \  for ($i = 0; $i < strlen($string); $i++) {\n    $pos = strpos($string, $substring,\
    \ $i);\n    if ($pos !== false) {\n      $count++;\n      $i = $pos;\n    }\n\
    \  }\n  return $count;\n}\n", "\t$chars = str_split($string);\n\t$matches = 0;\n\
    \tfor ($i = 0; $i < count($chars); $i++) {\n\t\tif ($chars[$i] == $substring[0])\
    \ {\n\t\t\tif (isset($chars[$i + 1]) && isset($substring[1]) && $chars[$i + 1]\
    \ == $substring[1]) {\n\t\t\t\t$matches++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $matches;\n\
    }\n\necho how_many_times(\"\", \"a\");\necho PHP_EOL;\necho how_many_times(\"\
    aaa\", \"a\");\necho PHP_EOL;\necho how_many_times(\"aaaa\", \"aa\");\necho PHP_EOL;",
  "    $times = 0;\n    $substring_length = strlen($substring);\n    for ($i = 0;\
    \ $i < strlen($string); $i++) {\n        if (substr($string, $i, $substring_length)\
    \ == $substring) {\n            $times++;\n        }\n    }\n    return $times;\n\
    }", "\t// your code goes here\n}\n", "    if (strlen($substring) > strlen($string))\
    \ {\n        return 0;\n    }\n    $substring_position = -1;\n    $count = 0;\n\
    \    while (($substring_position = strpos($string, $substring, $substring_position\
    \ + 1)) !== false) {\n        $count++;\n    }\n    return $count;\n}\n", "  \
    \  $offset = 0;\n    $count = 0;\n    while ($offset = strpos($string, $substring,\
    \ $offset)) {\n        $count++;\n        $offset++;\n    }\n    return $count;\n\
    }\n", "    $count = 0;\n    while(strpos($string, $substring) !== false) {\n \
    \       $count++;\n        $string = substr($string, strpos($string, $substring)\
    \ + 1);\n    }\n    return $count;\n}", "    $offset = 0;\n    $count = 0;\n \
    \   while (strpos($string, $substring, $offset) !== false) {\n        $offset\
    \ = strpos($string, $substring, $offset) + 1;\n        $count++;\n    }\n    return\
    \ $count;\n}\n", "    $str = substr_count($string, $substring);\n    if ($str\
    \ == '') {\n        return '0';\n    } else {\n        return $str;\n    }\n}\n",
  "    $counter = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (substr($string,\
    \ $i, strlen($substring)) == $substring) {\n            $counter++;\n        }\n\
    \    }\n    return $counter;\n}\n\necho how_many_times(\"\", \"a\");\necho \"\
    <br />\";\necho how_many_times(\"aaa\", \"a\");\necho \"<br />\";\necho how_many_times(\"\
    aaaa\", \"aa\");\necho \"<br />\";\n", "  $count = 0;\n  for ($i = 0; $i < strlen($string);\
    \ $i++) {\n    if (substr($string, $i, strlen($substring)) == $substring) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n", "    $parts = explode($substring,\
    \ $string);\n    $num_parts = count($parts);\n    $result = $num_parts - 1;\n\
    \    return $result;\n}\n\nprint how_many_times(\"\", \"a\") . \"\\n\";\nprint\
    \ how_many_times(\"aaa\", \"a\") . \"\\n\";\nprint how_many_times(\"aaaa\", \"\
    aa\") . \"\\n\";\n", "    $index = 0;\n    $count = 0;\n    while (($index = strpos($string,\
    \ $substring, $index)) !== false) {\n        $index++;\n        $count++;\n  \
    \  }\n    return $count;\n}\necho how_many_times(\"\", \"a\");\necho how_many_times(\"\
    aaa\", \"a\");\necho how_many_times(\"aaaa\", \"aa\");", "    $arr = str_split($string);\n\
    \    $counter = 0;\n    $end = strlen($substring) - 1;\n    $temp = '';\n    for\
    \ ($i = 0; $i < strlen($string); $i++) {\n        $temp .= $arr[$i];\n       \
    \ if ($temp == $substring) {\n            $counter++;\n            $temp = '';\n\
    \        }\n        if ($i == strlen($string) - 1 && $end != strlen($substring)\
    \ - 1) {\n            $temp = '';\n            $end--;\n            $i = -1;\n\
    \        }\n    }\n    return $counter;\n}\n\necho how_many_times(\"\", \"a\"\
    );\necho how_many_times(\"aaa\", \"a\");\necho how_many_times(\"aaaa\", \"aa\"\
    );", "\t$times = 0;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (strpos($string,\
    \ $substring, $i) == $i) {\n\t\t\t$times++;\n\t\t}\n\t}\n\treturn $times;\n}\n",
  "    return substr_count($string, $substring);\n}\n", "\t$pattern = \"/$substring/\"\
    ;\n\tpreg_match_all($pattern, $string, $match);\n\treturn count($match[0]);\n\
    }\n", "    $i = 0;\n    $count = 0;\n    while ($i < strlen($string)) {\n    \
    \    if (substr($string, $i, strlen($substring)) == $substring) {\n          \
    \  $count += 1;\n            $i += strlen($substring);\n        } else {\n   \
    \         $i += 1;\n        }\n    }\n    return $count;\n}\n", "    $count =\
    \ 0;\n    $sub_length = strlen($substring);\n    $string_length = strlen($string);\n\
    \    for ($i = 0; $i < $string_length; $i++) {\n        if ($substring == substr($string,\
    \ $i, $sub_length)) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nprint_r(how_many_times(\"\", \"a\"));\nprint_r(how_many_times(\"aaa\", \"\
    a\"));\nprint_r(how_many_times(\"aaaa\", \"aa\"));\n", "\t$count = 0;\n\tif (strlen($substring)\
    \ > 0) {\n\t\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\t\tif (substr($string,\
    \ $i, strlen($substring)) == $substring) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn $count;\n}\n", "    if ($substring == \"\") {\n        return 0;\n\
    \    }\n    $count = 0;\n    $length = strlen($string);\n    $sub_length = strlen($substring);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $sub = substr($string, $i, $sub_length);\n\
    \        if ($sub == $substring) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $times = 0;\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        if (substr($string, $i, strlen($substring)) == $substring)\
    \ {\n            $times++;\n        }\n    }\n    return $times;\n}", "\t$cnt\
    \ = 0;\n\t$len = strlen($substring);\n\tfor ($i = 0; $i < strlen($string); $i++)\
    \ {\n\t\tif (substr($string, $i, $len) == $substring) {\n\t\t\t$cnt++;\n\t\t}\n\
    \t}\n\treturn $cnt;\n}", "    $pos = 0;\n    $count = 0;\n    while (strpos($string,\
    \ $substring, $pos) !== false) {\n        $pos = strpos($string, $substring, $pos)\
    \ + 1;\n        $count++;\n    }\n    return $count;\n}\necho how_many_times(\"\
    aaaa\", \"aa\");", "    $count = 0;\n    $position = 0;\n    while (is_int($position\
    \ = strpos($string, $substring, $position))) {\n        $count++;\n        $position\
    \ += strlen($substring);\n    }\n    return $count;\n}\n", "\treturn 0;\n}\n\n\
    $result = how_many_times(\"\", \"a\");\nif ($result == 0)\n\techo \"Test 1 passed\\\
    n\";\nelse\n\techo \"Test 1 failed\\n\";\n\n$result = how_many_times(\"aaa\",\
    \ \"a\");\nif ($result == 3)\n\techo \"Test 2 passed\\n\";\nelse\n\techo \"Test\
    \ 2 failed\\n\";\n\n$result = how_many_times(\"aaaa\", \"aa\");\nif ($result ==\
    \ 3)\n\techo \"Test 3 passed\\n\";\nelse\n\techo \"Test 3 failed\\n\";\n\n$result\
    \ = how_many_times(\"aa\", \"aaa\");\nif ($result == 0)\n\techo \"Test 4 passed\\\
    n\";\nelse\n\techo \"Test 4 failed\\n\";\n\n$result = how_many_times(\"ababa\"\
    , \"aba\");\nif ($result == 2)\n\techo \"Test 5 passed\\n\";\nelse\n\techo \"\
    Test 5 failed\\n\";\n\n$result = how_many_times(\"abcabcabcabc\", \"abc\");\n\
    if ($result == 4)\n\techo \"Test 6 passed\\n\";\nelse\n\techo \"Test 6 failed\\\
    n\";\n\n$result = how_many_times(\"cccc\", \"cccc\");\nif ($result == 1)\n\techo\
    \ \"Test 7 passed\\n\";\nelse\n\techo \"Test 7 failed\\n\";\n\n$result = how_many_times(\"\
    cababa\", \"aba\");\nif ($result == 2)\n\techo \"Test 8 passed\\n\";\nelse\n\t\
    echo \"Test 8 failed\\n\";\n\n$result = how_many_times(\"c\", \"aaa\");\nif ($result\
    \ == 0)\n\techo \"Test 9 passed\\n\";\nelse\n\techo \"Test 9 failed\\n\";\n\n\
    $result = how_many_times(\"\", \"aaa\");\nif ($result == 0)\n\techo \"Test 10\
    \ passed\\n\";\nelse\n\techo \"Test 10 failed\\n\";\n\n$result = how_many_times(\"\
    cccccababa\", \"aba\");\nif ($result == 2)\n\techo \"Test 11 passed\\n\";\nelse\n\
    \techo \"Test 11 failed\\n\";", "\tif (empty($string) || empty($substring)) return\
    \ 0;\n\t$substring_len = strlen($substring);\n\t$string_len = strlen($string);\n\
    \tif ($substring_len == 1) {\n\t\t$count = 0;\n\t\tfor ($i = 0; $i < $string_len;\
    \ $i++) {\n\t\t\tif ($string[$i] == $substring) $count++;\n\t\t}\n\t\treturn $count;\n\
    \t} else {\n\t\t$count = 0;\n\t\tfor ($i = 0; $i < $string_len; $i++) {\n\t\t\t\
    $is_match = true;\n\t\t\tfor ($j = 0; $j < $substring_len; $j++) {\n\t\t\t\tif\
    \ ($string[$i + $j] != $substring[$j]) {\n\t\t\t\t\t$is_match = false;\n\t\t\t\
    \t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($is_match) $count++;\n\t\t}\n\t\treturn\
    \ $count;\n\t}\n}\n", "\treturn substr_count($string, $substring);\n}\n", "\t\
    $search = 0;\n\t$last_found = false;\n\t$starts = [0];\n\t$c_found = 0;\n\t$len\
    \ = strlen($string);\n\t$sub_len = strlen($substring);\n\twhile ( $search < $len\
    \ && $found ) {\n\t\t$found = strpos($string, $substring, $search);\n\t\tif (\
    \ $found === false ) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\t$c_found++;\n\t\
    \t\tif ( $last_found ) {\n\t\t\t\t$last_found = $found;\n\t\t\t}\n\t\t\t$search\
    \ = $found + $sub_len;\n\t\t}\n\t}\n\treturn $c_found;\n}", "  $count = 0;\n \
    \ $start = 0;\n  $len = strlen($substring);\n  while ($start + $len <= strlen($string))\
    \ {\n    if (substr($string, $start, $len) == $substring) {\n      $count++;\n\
    \    }\n    $start++;\n  }\n  return $count;\n}\n\n$string = \"\";\n$substring\
    \ = \"a\";\necho how_many_times($string, $substring).\"\\n\";\n$string = \"aaa\"\
    ;\n$substring = \"a\";\necho how_many_times($string, $substring).\"\\n\";\n$string\
    \ = \"aaaa\";\n$substring = \"aa\";\necho how_many_times($string, $substring).\"\
    \\n\";", "  $length = strlen($string);\n  $count = 0;\n  for ($i = 0; $i < $length;\
    \ $i++) {\n    if (substr($string, $i, strlen($substring)) == $substring) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\necho how_many_times(\"\"\
    , \"a\");\necho \"<br>\";\necho how_many_times(\"aaa\", \"a\");\necho \"<br>\"\
    ;\necho how_many_times(\"aaaa\", \"aa\");\necho \"<br>\";\n", "    $count = 0;\n\
    \    $substring_len = strlen($substring);\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        if ($string[$i] == $substring[0]) {\n            if (substr($string,\
    \ $i, $substring_len) == $substring) {\n                $count++;\n          \
    \  }\n        }\n    }\n    return $count;\n}\n$string = 'Hello, how are you ?';\n\
    $substring = 'Hello';\necho how_many_times($string, $substring);\necho '<br>';\n",
  "    $str = $string;\n    $times = 0;\n    while(strpos($str, $substring) !== false)\
    \ {\n        $str = substr($str, strpos($str, $substring) + 1);\n        $times++;\n\
    \    }\n    return $times;\n}\n", "    $count = 0;\n    $i = 0;\n    while ($i\
    \ < strlen($string)) {\n        if (substr($string, $i, strlen($substring)) ==\
    \ $substring) {\n            $count++;\n            $i += strlen($substring);\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $count;\n}\n\
    print_r(how_many_times(\"\", \"a\"));\nprint_r(how_many_times(\"aaa\", \"a\"));\n\
    print_r(how_many_times(\"aaaa\", \"aa\"));", "  $match_num = 0;\n  $sub_length\
    \ = strlen($substring);\n  for ($i = 0; $i < strlen($string); $i++) {\n    if\
    \ (substr($string, $i, $sub_length) == $substring) {\n      $match_num++;\n  \
    \  }\n  }\n  return $match_num;\n}\n", "    return substr_count($string, $substring);\n\
    }\n", "    $matches = [];\n    preg_match_all('/' . $substring . '/', $string,\
    \ $matches);\n    return count($matches[0]);\n}\n", "\t$len = strlen($substring);\n\
    \t$times = 0;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string,\
    \ $i, $len) == $substring) {\n\t\t\t$times++;\n\t\t}\n\t}\n\treturn $times;\n\
    }\n", "    $how_many_times = 0;\n    $substring_index = 0;\n    $string_len =\
    \ strlen($string);\n    $substring_len = strlen($substring);\n    for ($i = 0;\
    \ $i < $string_len; $i++) {\n        if ($string[$i] == $substring[$substring_index])\
    \ {\n            $substring_index++;\n            if ($substring_index == $substring_len)\
    \ {\n                $how_many_times++;\n                $substring_index = 0;\n\
    \            }\n        } else {\n            $substring_index = 0;\n        }\n\
    \    }\n    return $how_many_times;\n}\n\necho how_many_times(\"\", \"a\") . \"\
    \\n\";\necho how_many_times(\"aaa\", \"a\") . \"\\n\";\necho how_many_times(\"\
    aaaa\", \"aa\") . \"\\n\";", "    $times = 0;\n    $size = strlen($substring);\n\
    \    if ($size == 0) return 0;\n    $size2 = strlen($string);\n    for ($i = 0;\
    \ $i < $size2; $i++) {\n        if (substr($string, $i, $size) == $substring)\
    \ $times++;\n    }\n    return $times;\n}\n", "\t$count = 0;\n\t$how_many_times\
    \ = strlen($string) - strlen($substring) + 1;\n\tfor ($i = 0; $i < $how_many_times;\
    \ $i++) {\n\t\tif (substr($string, $i, strlen($substring)) == $substring) {\n\t\
    \t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", "    $str_len = strlen($string);\n\
    \    $substr_len = strlen($substring);\n    $found = 0;\n    for ($i = 0; $i <\
    \ $str_len; $i++) {\n        if (substr($string, $i, $substr_len) == $substring)\
    \ {\n            $found++;\n        }\n    }\n    return $found;\n}\n", "    $count\
    \ = 0;\n    $pos = strpos($string, $substring);\n    while ($pos !== false) {\n\
    \        $count++;\n        $pos = strpos($string, $substring, $pos + 1);\n  \
    \  }\n    return $count;\n}\n", "  $times = 0;\n  $pos = 0;\n  do {\n    $pos\
    \ = strpos($string, $substring, $pos);\n    if ($pos !== false) {\n      $times++;\n\
    \      $pos++;\n    }\n  } while ($pos !== false);\n  return $times;\n}\n", " \
    \ $string = str_split($string);\n  $substring = str_split($substring);\n  $out\
    \ = [];\n  $in = [];\n  $count = 0;\n  $i = 0;\n  $x = 0;\n  foreach ($string\
    \ as $letter) {\n    $out[$i] = $letter;\n    $i++;\n  }\n  foreach ($substring\
    \ as $letter) {\n    $in[$x] = $letter;\n    $x++;\n  }\n  for ($a = 0; $a < count($out);\
    \ $a++) {\n    if ($out[$a] == $in[0]) {\n      $result = true;\n      $b = 0;\n\
    \      while ($result) {\n        if ($out[$a + $b] == $in[$b]) {\n          $result\
    \ = true;\n          $b++;\n        } else {\n          $result = false;\n   \
    \     }\n        if ($b == count($in)) {\n          $count++;\n          $result\
    \ = false;\n        }\n      }\n    }\n  }\n  return $count;\n}\n", "  if(strlen($substring)\
    \ == 0) {\n    return 0;\n  }\n\n  $count = 0;\n  $string_length = strlen($string);\n\
    \  $substring_length = strlen($substring);\n\n  for($i = 0; $i < $string_length;\
    \ $i++) {\n    $char = $string[$i];\n    $substring_char = $substring[0];\n\n\
    \    if($char == $substring_char) {\n      if(substr($string, $i, $substring_length)\
    \ == $substring) {\n        $count += 1;\n      }\n    }\n  }\n\n  return $count;\n\
    }\n\nassert(how_many_times(\"\", \"a\") == 0);\nassert(how_many_times(\"aaa\"\
    , \"a\") == 3);\nassert(how_many_times(\"aaaa\", \"aa\") == 3);\n", "\t$str_len\
    \ = strlen($string);\n\t$substr_len = strlen($substring);\n\t$counter = 0;\n\t\
    for ($i = 0; $i < $str_len; $i++) {\n\t\tif (substr($string, $i, $substr_len)\
    \ == $substring) {\n\t\t\t$counter++;\n\t\t}\n\t}\n\treturn $counter;\n}\n", " \
    \   $times = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (substr($string,\
    \ $i, strlen($substring)) == $substring) {\n            $times++;\n        }\n\
    \    }\n    return $times;\n}\n", "    $matches = [];\n    $matches_number = preg_match_all(\"\
    /\".$substring.\"/\", $string, $matches);\n    $newMatches = [];\n    foreach\
    \ ($matches as $match) {\n        foreach ($match as $subMatch) {\n          \
    \  if (!in_array($subMatch, $newMatches)) {\n                $newMatches[] = $subMatch;\n\
    \            }\n        }\n    }\n    return count($newMatches);\n}", "\t$pattern\
    \ = '/' . $substring . '/';\n\t$matches = [];\n\t$r = preg_match_all($pattern,\
    \ $string, $matches);\n\tvar_dump($matches);\n\treturn count($matches[0]);\n}\n\
    \nhow_many_times(\"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc",
  "    $pos = 0;\n    $count = 0;\n    while ($pos = strpos($string, $substring, $pos\
    \ + 1)) {\n        $count++;\n    }\n    return $count;\n}\n\necho how_many_times(\"\
    \", \"a\");\necho \"\\n\";\necho how_many_times(\"aaa\", \"a\");\necho \"\\n\"\
    ;\necho how_many_times(\"aaaa\", \"aa\");\necho \"\\n\";", "\t$count = 0;\n\t\
    $i = 0;\n\twhile ($i < strlen($string)) {\n\t\tif (substr($string, $i, strlen($substring))\
    \ == $substring) {\n\t\t\t$count += 1;\n\t\t\t$i += strlen($substring);\n\t\t\
    } else {\n\t\t\t$i += 1;\n\t\t}\n\t}\n\treturn $count;\n}\n", "    $offset = 0;\n\
    \    $count = 0;\n    $length = strlen($substring);\n    while (($offset = strpos($string,\
    \ $substring, $offset)) !== false) {\n        $offset += $length;\n        $count++;\n\
    \    }\n    return $count;\n}\n\necho how_many_times(\"\", \"a\");\necho \"<br>\"\
    ;\necho how_many_times(\"aaa\", \"a\");\necho \"<br>\";\necho how_many_times(\"\
    aaaa\", \"aa\");", "\t$position = 0;\n\t$count = 0;\n\t$string_len = strlen($string);\n\
    \t$substring_len = strlen($substring);\n\twhile ($position <= $string_len) {\n\
    \t\t$position = strpos($string, $substring, $position);\n\t\tif ($position !==\
    \ false) {\n\t\t\t$count++;\n\t\t\t$position += $substring_len;\n\t\t} else {\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn $count;\n}\n", "\t$length_string = strlen($string);\n\
    \t$length_substring = strlen($substring);\n\tif($length_substring == 0) {\n\t\t\
    return 0;\n\t} else {\n\t\t$count = 0;\n\t\tfor($i = 0; $i < $length_string; $i++)\
    \ {\n\t\t\tif(substr($string, $i, $length_substring) == $substring) {\n\t\t\t\t\
    $count++;\n\t\t\t}\n\t\t}\n\t\treturn $count;\n\t}\n}\n\necho how_many_times(\"\
    \", \"a\") . \"<br>\";\necho how_many_times(\"aaa\", \"a\") . \"<br>\";\necho\
    \ how_many_times(\"aaaa\", \"aa\") . \"<br>\";", "  $count = 0;\n  $index = 0;\n\
    \  $substring_length = strlen($substring);\n  $string_length = strlen($string);\n\
    \  while ($index < $string_length) {\n    $substring_index = strpos($string, $substring,\
    \ $index);\n    if ($substring_index !== false) {\n      $count++;\n      $index\
    \ = $substring_index + $substring_length;\n    } else {\n      break;\n    }\n\
    \  }\n  return $count;\n}\n", "    $i = 0;\n    $j = 0;\n    $count = 0;\n   \
    \ $length_string = strlen($string);\n    $length_substring = strlen($substring);\n\
    \    while ($i < $length_string) {\n        if ($string[$i] == $substring[$j])\
    \ {\n            $j++;\n            if ($j == $length_substring) {\n         \
    \       $count++;\n                $j = 0;\n            }\n        } else {\n\
    \            $j = 0;\n        }\n        $i++;\n    }\n    return $count;\n}",
  "  $count = 0;\n  for ($i = 0; $i < strlen($string); $i++) {\n    if (substr($string,\
    \ $i, strlen($substring)) == $substring) {\n      $count += 1;\n    }\n  }\n \
    \ return $count;\n}\n", "\t$i = 0;\n\t$result = 0;\n\twhile ($i < strlen($string))\
    \ {\n\t\tif (strlen($string) - $i < strlen($substring))\n\t\t\tbreak;\n\t\tif\
    \ (substr($string, $i, strlen($substring)) == $substring) {\n\t\t\t$result++;\n\
    \t\t\t$i += strlen($substring);\n\t\t} else {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\n", "    if (strlen($substring) == 0) {\n        return 0;\n   \
    \ }\n    return preg_match_all(\"/$substring/\", $string, $matches);\n}\n\necho\
    \ how_many_times(\"aaaa\", \"aa\");", "  $count = 0;\n  $str_len = strlen($string);\n\
    \  $sub_len = strlen($substring);\n  for ($i = 0; $i < $str_len; $i++) {\n   \
    \ if ($string[$i] == $substring[0]) {\n      $is_equal = true;\n      for ($j\
    \ = 1; $j < $sub_len; $j++) {\n        if ($string[$i + $j] != $substring[$j])\
    \ {\n          $is_equal = false;\n          break;\n        }\n      }\n    \
    \  if ($is_equal) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n\
    }\n$cases = array(\n  \"abcdabcd\",\n  \"abcdabcd\",\n  \"a\",\n  \"\",\n  \"\
    aaaa\",\n  \"aa\",\n  \"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc",
  "\tif (strlen($substring) == 0) {\n\t\treturn 0;\n\t}\n\t$counter = 0;\n\t$i = 0;\n\
    \t$last_position = strlen($string) - strlen($substring);\n\twhile ($i <= $last_position)\
    \ {\n\t\tif (substr($string, $i, strlen($substring)) == $substring) {\n\t\t\t\
    $counter++;\n\t\t\t$i += strlen($substring);\n\t\t} else {\n\t\t\t$i++;\n\t\t\
    }\n\t}\n\treturn $counter;\n}\n\nvar_dump(how_many_times(\"\", \"a\"));\nvar_dump(how_many_times(\"\
    aaa\", \"a\"));\nvar_dump(how_many_times(\"aaaa\", \"aa\"));", "    $string_length\
    \ = strlen($string);\n    $substring_length = strlen($substring);\n    if ($substring_length\
    \ === 0) {\n        return 0;\n    }\n    $count = 0;\n    for ($i = 0; $i < $string_length;\
    \ $i++) {\n        if (substr($string, $i, $substring_length) === $substring)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

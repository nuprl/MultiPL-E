name: HumanEval_27_flip_case
language: php
prompt: "<?php\n// For a given string, flip lowercase characters to uppercase and\
  \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case($string)\
  \ {\n"
tests: "function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
  ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
  \ failed!\"); }\n}\n\ntest();"
completions: ["    $new_string = \"\";\n    for ($i = 0; $i < strlen($string); $i++)\
    \ {\n        $char = $string[$i];\n        if (ctype_lower($char)) {\n       \
    \     $new_string .= strtoupper($char);\n        } else {\n            $new_string\
    \ .= strtolower($char);\n        }\n    }\n    return $new_string;\n}\n\necho\
    \ flip_case(\"Hello\") . \"\\n\";\necho flip_case(\"bye\") . \"\\n\";\necho flip_case(\"\
    Yay\") . \"\\n\";\necho flip_case(\"YAY\") . \"\\n\";\necho flip_case(\"yay\"\
    ) . \"\\n\";\necho flip_case(\"Hello, World!\") . \"\\n\";\necho flip_case(\"\
    12345\") . \"\\n\";\necho flip_case(\"\") . \"\\n\";\n", "\t$result = \"\";\n\t\
    for ($i = 0; $i < strlen($string); $i++) {\n\t\t$letter = $string[$i];\n\t\tif\
    \ (is_upper($letter)) {\n\t\t\t$result .= strtolower($letter);\n\t\t} else {\n\
    \t\t\t$result .= strtoupper($letter);\n\t\t}\n\t}\n\treturn $result;\n}\n", "\n\
    }\n", "    $lower = \"abcdefghijklmnopqrstuvwxyz\";\n    $upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $output = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n     \
    \   if (strpos($lower, $string[$i]) !== false) {\n            $output .= strtoupper($string[$i]);\n\
    \        } else if (strpos($upper, $string[$i]) !== false) {\n            $output\
    \ .= strtolower($string[$i]);\n        } else {\n            $output .= $string[$i];\n\
    \        }\n    }\n    return $output;\n}\n\necho flip_case(\"Hello\");\n", "\t\
    $chars = str_split($string);\n\t$new_string = '';\n\tforeach ($chars as $char)\
    \ {\n\t\tif ($char === strtoupper($char)) {\n\t\t\t$new_string .= strtolower($char);\n\
    \t\t} else {\n\t\t\t$new_string .= strtoupper($char);\n\t\t}\n\t}\n\treturn $new_string;\n\
    }\n", "  $flipped = '';\n  for ($i = 0; $i < strlen($string); $i++) {\n    $char\
    \ = $string[$i];\n    if (ctype_lower($char)) {\n      $flipped .= strtoupper($char);\n\
    \    } else {\n      $flipped .= strtolower($char);\n    }\n  }\n  return $flipped;\n\
    }\n", "    $length = strlen($string);\n    $newString = \"\";\n    for ($i = 0;\
    \ $i < $length; $i++) {\n        $c = substr($string, $i, 1);\n        if (ctype_upper($c))\
    \ {\n            $newString .= strtolower($c);\n        } else {\n           \
    \ $newString .= strtoupper($c);\n        }\n    }\n    return $newString;\n}\n\
    echo flip_case(\"Hello\") . \"\\n\";", "    // your code here\n}\n", "\treturn\
    \ $string;\n}\n", "  $flipped = \"\";\n  for ($i = 0; $i < strlen($string); $i++)\
    \ {\n    $character = $string[$i];\n    if (ctype_upper($character)) {\n     \
    \ $flipped .= strtolower($character);\n    } else {\n      $flipped .= strtoupper($character);\n\
    \    }\n  }\n  return $flipped;\n}\n", "\t$flipped_str = '';\n\t$str_arr = str_split($string);\n\
    \tforeach ($str_arr as $key => $chr) {\n\t\t$flipped_str .= ctype_upper($chr)\
    \ ? strtolower($chr) : strtoupper($chr);\n\t}\n\treturn $flipped_str;\n}\n", " \
    \   $str_length = strlen($string);\n    $output = \"\";\n    for ($i = 0; $i <\
    \ $str_length; $i++) {\n        $char = $string[$i];\n        if ($char === strtoupper($char))\
    \ {\n            $output .= strtolower($char);\n        } else if ($char === strtolower($char))\
    \ {\n            $output .= strtoupper($char);\n        } else {\n           \
    \ $output .= $char;\n        }\n    }\n    return $output;\n}\necho \"Hello ->\
    \ \" . flip_case(\"Hello\") . \"\\n\";\necho \"hELLO -> \" . flip_case(\"hELLO\"\
    ) . \"\\n\";\necho \"HeLlO -> \" . flip_case(\"HeLlO\") . \"\\n\";\necho \"HeLlO,,\
    \ -> \" . flip_case(\"HeLlO,,,\") . \"\\n\";\necho \" -> \" . flip_case(\"\")\
    \ . \"\\n\";", "\treturn strtolower($string);\n}\n", "    $flipped = '';\n   \
    \ for ($i = 0; $i < strlen($string); $i++) {\n        $char = $string[$i];\n \
    \       if (ctype_upper($char)) {\n            $flipped .= strtolower($char);\n\
    \        } elseif (ctype_lower($char)) {\n            $flipped .= strtoupper($char);\n\
    \        } else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "\t$new_str = '';\n\tfor ($i = 0; $i < strlen($string); $i++)\
    \ {\n\t\tif (ctype_upper($string[$i])) {\n\t\t\t$new_str .= strtolower($string[$i]);\n\
    \t\t} else {\n\t\t\t$new_str .= strtoupper($string[$i]);\n\t\t}\n\t}\n\treturn\
    \ $new_str;\n}\n", "\t// TODO -\n\t// test if the passed variable is a string\n\
    \tif(is_string($string)) {\n\t\t// convert the string to an array of characters\n\
    \t\t$stringArray = str_split($string);\n\t\t// iterate through the string's array\n\
    \t\tfor($i = 0; $i < count($stringArray); $i++) {\n\t\t\t// if character is uppercase,\
    \ switch to lowercase\n\t\t\tif(ctype_upper($stringArray[$i])) {\n\t\t\t\t$stringArray[$i]\
    \ = strtolower($stringArray[$i]);\n\t\t\t}\n\t\t\t// if character is lowercase,\
    \ switch to uppercase\n\t\t\telse if(ctype_lower($stringArray[$i])) {\n\t\t\t\t\
    $stringArray[$i] = strtoupper($stringArray[$i]);\n\t\t\t}\n\t\t}\n\t\t// return\
    \ the newly updated string\n\t\treturn implode(\"\", $stringArray);\n\t}\n\t//\
    \ return false if variable is not a string\n\telse {\n\t\treturn false;\n\t}\n\
    }", "\t\n\t$new_string = '';\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\
    \tif (ctype_lower($string[$i])) {\n\t\t\t$new_string .= strtoupper($string[$i]);\n\
    \t\t} elseif (ctype_upper($string[$i])) {\n\t\t\t$new_string .= strtolower($string[$i]);\n\
    \t\t} else {\n\t\t\t$new_string .= $string[$i];\n\t\t}\n\t}\n\t\n\treturn $new_string;\n\
    }\necho flip_case(\"Hello\");\necho \"\\n\";", "  $flipped_string = '';\n  for\
    \ ($i = 0; $i < strlen($string); $i++) {\n    $char = $string[$i];\n    if (strtolower($char)\
    \ == $char) {\n      $flipped_string .= strtoupper($char);\n    } else {\n   \
    \   $flipped_string .= strtolower($char);\n    }\n  }\n  return $flipped_string;\n\
    }\necho flip_case(\"Hello\") . PHP_EOL;\necho flip_case(\"world\") . PHP_EOL;\n\
    echo flip_case(\"wOrlD\") . PHP_EOL;", "    // BEGIN SOLUTION\n    $lower = range('a',\
    \ 'z');\n    $upper = range('A', 'Z');\n    $string = str_split($string);\n  \
    \  foreach ($string as $k => $s) {\n        if (in_array($s, $lower)) {\n    \
    \        $string[$k] = strtoupper($s);\n        } elseif (in_array($s, $upper))\
    \ {\n            $string[$k] = strtolower($s);\n        }\n    }\n    return implode($string);\n\
    \    // END SOLUTION\n}", "    return strtolower($string) ^ strtoupper($string)\
    \ ^ $string;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

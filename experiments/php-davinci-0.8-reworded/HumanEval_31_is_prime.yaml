name: HumanEval_31_is_prime
language: php
prompt: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
  // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
  // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>> is_prime(4)\n\
  // false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n"
tests: "function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(61) !== true) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(4) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
  \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
  \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false) { throw\
  \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    if($n == 1) {\n        return false;\n    }\n    for($i = 2; $i\
    \ < $n; $i++) {\n        if($n % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n", "  if ($n < 2) {\n    return false;\n  }\n\
    \n  $i = 2;\n  while ($i < $n) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n    $i++;\n  }\n  return true;\n}\n", "    if ($n < 2) {\n        return\
    \ false;\n    }\n    if ($n === 2) {\n        return true;\n    }\n    if ($n\
    \ % 2 === 0) {\n        return false;\n    }\n    for ($i = 3; $i < $n; $i +=\
    \ 2) {\n        if ($n % $i === 0) {\n            return false;\n        }\n \
    \   }\n    return true;\n}\n", "    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\necho is_prime(6) . \"\\n\";\necho is_prime(101) . \"\\n\";\necho is_prime(11)\
    \ . \"\\n\";\necho is_prime(13441) . \"\\n\";\necho is_prime(61) . \"\\n\";\n\
    echo is_prime(4) . \"\\n\";\necho is_prime(1) . \"\\n\";", "\tfor ($i = 2; $i\
    \ < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\
    return true;\n}", "    if ($n <= 1) {\n        return false;\n    }\n    $i =\
    \ 2;\n    while ($i < $n) {\n        if ($n % $i == 0) {\n            return false;\n\
    \        }\n        $i++;\n    }\n    return true;\n}\n", "    for ($x = 2; $x\
    \ < $n; $x++) {\n        if ($n % $x == 0) {\n            return false;\n    \
    \    }\n    }\n    return true;\n}", "    if ($n == 1) {\n        return false;\n\
    \    }\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}", "    // A variable\
    \ to tell us whether it's prime\n    $is_prime = True;\n    // A variable to iterate\
    \ through\n    $i = 2;\n    while ($i < $n) {\n        if ($n % $i == 0) {\n \
    \           $is_prime = False;\n        }\n        $i++;\n    }\n    return $is_prime;\n\
    }\n", "\tif ($n < 2) {\n\t\treturn false;\n\t}\n\tfor ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n", "  if ($n < 2) {\n    return false;\n  }\n\n  for ($i = 2; $i <=\
    \ sqrt($n); $i++) {\n    if ($n % $i == 0) {\n      return false;\n    }\n  }\n\
    \n  return true;\n}\n", "    if($n == 1) {\n        return false;\n    }\n   \
    \ if($n == 2) {\n        return true;\n    }\n    if($n % 2 == 0) {\n        return\
    \ false;\n    }\n    for($i = 3; $i <= ceil(sqrt($n)); $i++) {\n        if($n\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n", "\tif ($n == 1)\
    \ {\n\t\treturn false;\n\t}\n\t$max = sqrt($n);\n\tfor ($i = 2; $i <= $max; $i++)\
    \ {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n", "    if ($n < 2) {\n        return false;\n    }\n    for ($i = 2; $i <\
    \ $n; $i++) {\n        if ($n % $i == 0) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n", "    if($n == 1) {\n        return false;\n\
    \    }\n    if($n == 2) {\n        return true;\n    }\n    if($n%2 == 0) {\n\
    \        return false;\n    }\n    for($i = 3; $i <= floor(sqrt($n)); $i+=2) {\n\
    \        if($n%$i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}", "    if ($n < 2) {\n        return false;\n    }\n    $i = 2;\n \
    \   while ($i < $n) {\n        if ($n % $i == 0) {\n            return false;\n\
    \        }\n        $i++;\n    }\n    return true;\n}\n", "    if ($n < 2) {\n\
    \        return false;\n    }\n    for ($i = 2; $i < $n; $i++) {\n        if ($n\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }", "    if ($n == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $n;\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i\
    \ == 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

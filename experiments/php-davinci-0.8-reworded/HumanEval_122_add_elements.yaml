name: HumanEval_122_add_elements
language: php
prompt: "<?php\n// Given a non-empty array of integers arr and an integer k, return\n\
  // the sum of the elements with at most two digits from the first k elements of\
  \ arr.\n// Example:\n// >>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
  \ 4)\n// 24\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
  function add_elements($arr, $k) {\n"
tests: "function candidate(...$args) {\n    return add_elements(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88,\
  \ 99), 3) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111,\
  \ 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)\
  \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1),\
  \ 1) !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n", "\t$sum = 0;\n\tfor ($i = 0; $i < $k; $i++) {\n\t\tif ($arr[$i] < 100) {\n\
    \t\t\t$sum += $arr[$i];\n\t\t}\n\t}\n\treturn $sum;\n}\n\n$arr = array(111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\nprint(add_elements($arr, $k));", "  $result\
    \ = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i]) <= 2) {\n  \
    \    $result += $arr[$i];\n    }\n  }\n  return $result;\n}\n", "    $counter\
    \ = 0;\n    $sum = 0;\n    foreach ($arr as $num) {\n        if ($counter >= $k)\
    \ {\n            break;\n        }\n\n        $num = (string) $num;\n        if\
    \ (strlen($num) <= 2) {\n            $sum += $num;\n        }\n\n        $counter++;\n\
    \    }\n\n    return $sum;\n}\n\necho add_elements(array(111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9), 4);", "    // Your code here.\n\n    return $sum;\n}\n\n$a = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\nprint add_elements($a, 4) . \"\\n\";", "    $sum\
    \ = 0;\n    foreach ($arr as $element) {\n        if ($k == 0) {\n           \
    \ break;\n        } elseif ($element < 100) {\n            $sum += $element;\n\
    \            $k--;\n        } else {\n            $k--;\n        }\n    }\n  \
    \  return $sum;\n}\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\n\
    echo add_elements($arr, $k);", "    $result = 0;\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        if (is_small($arr[$i])) {\n            $result += $arr[$i];\n   \
    \     }\n    }\n    return $result;\n}\n", "  // declare a new array and sort\
    \ it\n  $new_arr = $arr;\n  sort($new_arr);\n  // declare two variables to track\
    \ the sum and the number of elements\n  $sum = 0;\n  $elements = 0;\n  // iterate\
    \ over the sorted array\n  foreach ($new_arr as $element) {\n    // convert the\
    \ element to a string\n    $element = strval($element);\n    // if the number\
    \ of elements is less than k\n    if ($elements < $k) {\n      // add the element\
    \ to the sum\n      $sum += $element;\n      // increment the number of elements\n\
    \      $elements++;\n    }\n  }\n  // return the sum\n  return $sum;\n}\n", " \
    \   // TODO\n}", "  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n", "    $sum\
    \ = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 100) {\n  \
    \          $sum += 99;\n        } else if ($arr[$i] < 10) {\n            $sum\
    \ += $arr[$i];\n        } else {\n            $sum += 9;\n        }\n    }\n \
    \   return $sum;\n}\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4) . PHP_EOL;", "  $sum = 0;\n  $i = 0;\n  while ($i < $k) {\n    if ($arr[$i]\
    \ < 100) {\n      $sum += $arr[$i];\n    }\n    $i++;\n  }\n  return $sum;\n}\n",
  "  $result = 0;\n  $count = 0;\n  foreach ($arr as $item) {\n    if (strlen($item)\
    \ <= 2) {\n      $result += $item;\n      $count++;\n    }\n    if ($count ==\
    \ $k) {\n      break;\n    }\n  }\n  return $result;\n}", "  $result = 0;\n  $end_index\
    \ = $k > count($arr) ? count($arr) : $k;\n  for ($i = 0; $i < $end_index; $i++)\
    \ {\n    if (strlen($arr[$i]) <= 2) {\n      $result += $arr[$i];\n    }\n  }\n\
    \  return $result;\n}", "\t$sum = 0;\n\tfor ($i = 0; $i < $k; $i++) {\n\t\tif\
    \ ($arr[$i] < 100) {\n\t\t\t$sum += $arr[$i];\n\t\t}\n\t}\n\treturn $sum;\n}",
  "    $sum = 0;\n    foreach($arr as $i => $v) {\n        if($i == $k) break;\n \
    \       if($v < 100) {\n            $sum += $v;\n        }\n    }\n    return\
    \ $sum;\n}\n", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i])\
    \ <= 2) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ >= 10 && $arr[$i] < 100) {\n            $sum += $arr[$i];\n        }\n    }\n\
    \    return $sum;\n}\n", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n \
    \       if (strlen($arr[$i]) > 2) {\n            continue;\n        }\n      \
    \  $sum += $arr[$i];\n    }\n    return $sum;\n}", "    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] < 100) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n", "    $result\
    \ = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n   \
    \         $result += $arr[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $total = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] > 9 &&\
    \ $arr[$i] < 100) {\n            $total += $arr[$i];\n        }\n    }\n    return\
    \ $total;\n}\n\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4);",
  "    $total = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100)\
    \ {\n            $total += $arr[$i];\n        }\n    }\n    return $total;\n}\n\
    echo(add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) . PHP_EOL);", " \
    \   $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100)\
    \ {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n",
  "    $res = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n\
    \            $res += $arr[$i];\n        }\n    }\n    return $res;\n}", "    $sum\
    \ = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }", "  $count = 0;\n  $sum = 0;\n  foreach ($arr as $num) {\n    if (strlen($num)\
    \ > 2) continue;\n    $sum += $num;\n    $count++;\n    if ($count == $k) break;\n\
    \  }\n  return $sum;\n}", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n\
    \        if (strlen($arr[$i]) > 2) {\n            $sum += 0;\n        } else {\n\
    \            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\nprint_r(add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4));", "\n}\n", "    $currentSum = 0;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        if (abs($arr[$i]) < 100) {\n            $currentSum\
    \ += $arr[$i];\n        }\n    }\n    return $currentSum;\n}\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\nprint(add_elements($arr, $k) . \"\\n\"\
    );", "  $sum = 0;\n  foreach ($arr as $key => $value) {\n    if ($key === $k)\
    \ {\n      break;\n    }\n    if (strlen($value) <= 2) {\n      $sum += $value;\n\
    \    }\n  }\n  return $sum;\n}\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n\
    $k = 4;\necho add_elements($arr, $k);", "    $sum = 0;\n    for ($i = 0; $i <\
    \ $k; $i++) {\n        if ($arr[$i] > 99) {\n            continue;\n        }\n\
    \        $sum += $arr[$i];\n    }\n    return $sum;\n}\n$arr = array(111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\n$result = add_elements($arr, $k);\necho $result;",
  "    $sum = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $k; $i++) {\n     \
    \   if ($arr[$i] >= 10 && $arr[$i] < 100) {\n            $sum += $arr[$i];\n \
    \       }\n    }\n    return $sum;\n}\n\nprint add_elements(array(111, 21, 3,\
    \ 4000, 5, 6, 7, 8, 9), 4) . \"\\n\";", "\t// Create an empty array to store values\n\
    \t$numArr = [];\n\t// for every element in the array\n\tfor ($i = 0; $i < $k;\
    \ $i++) {\n\t\t// get the first character of the element\n\t\t$first = $arr[$i][0];\n\
    \t\t// if the element has only one character\n\t\tif (count($arr[$i]) == 1) {\n\
    \t\t\t// push that element to the numArr\n\t\t\tarray_push($numArr, $arr[$i]);\n\
    \t\t}\n\t\t// if the element has 2 or more characters\n\t\telse {\n\t\t\t// Get\
    \ the second character\n\t\t\t$second = $arr[$i][1];\n\t\t\t// if the first and\
    \ second characters are both less than 2\n\t\t\tif ($first < 2 && $second < 2)\
    \ {\n\t\t\t\t// push that element to the numArr\n\t\t\t\tarray_push($numArr, $arr[$i]);\n\
    \t\t\t}\n\t\t}\n\t}\n\t// sum up all the elements in the numArr\n\treturn array_sum($numArr);\n\
    }\n", "  $result = 0;\n  foreach (array_slice($arr, 0, $k) as $element) {\n  \
    \  $result += ($element > 9 && $element < 100) ? $element : 0;\n  }\n  return\
    \ $result;\n}\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) .\
    \ PHP_EOL;", "  $sum = 0;\n  $i = 0;\n  while ($i < $k) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n    $i++;\n  }\n  return $sum;\n}",
  "    $sum = 0;\n    $limit = min($k, count($arr));\n    for ($i = 0; $i < $limit;\
    \ $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n    \
    \    }\n    }\n    return $sum;\n}\nadd_elements(array(111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9), 4);", "    $i = 0;\n    $sum = 0;\n    $n = count($arr);\n    while\
    \ ($i < $n && $k > 0) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \            $k--;\n        }\n        $i++;\n    }\n    return $sum;\n}\n", " \
    \   $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100)\
    \ {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}", " \
    \   $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100)\
    \ {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n\
    echo add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4);", "    if (empty($arr))\
    \ {\n        return 0;\n    }\n    $i = 0;\n    $sum = 0;\n    while ($i < $k)\
    \ {\n        if ($arr[$i] < 10) {\n            $sum += $arr[$i];\n        } else\
    \ if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n        }\n        $i++;\n\
    \    }\n    return $sum;\n}\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n\
    echo add_elements($arr, 4) . \"\\n\";", "    $first_k_elems = array_slice($arr,\
    \ 0, $k);\n    $answer = 0;\n    foreach ($first_k_elems as $elem) {\n       \
    \ if ($elem >= 10 && $elem < 100) {\n            $answer += $elem;\n        }\n\
    \    }\n    return $answer;\n}\n", "  $output = 0;\n  for ($i = 0; $i < $k; $i++)\
    \ {\n    if ($arr[$i] < 100) {\n      $output += $arr[$i];\n    }\n  }\n  return\
    \ $output;\n}\n", "    $i = 0;\n    $sum = 0;\n    while ($i < $k) {\n       \
    \ if (strlen($arr[$i]) <= 2) {\n            $sum += $arr[$i];\n        }\n   \
    \     $i++;\n    }\n    return $sum;\n}", "    $sum = 0;\n    $ctr = 0;\n    for\
    \ ($i = 0; $i < count($arr); $i++) {\n        if (strlen((string)$arr[$i]) < 3)\
    \ {\n            $sum += $arr[$i];\n            $ctr++;\n        }\n        if\
    \ ($ctr >= $k) {\n            break;\n        }\n    }\n    return $sum;\n}\n\
    echo \"Test #1: \".add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4).\"\\\
    n\";\necho \"Test #2: \".add_elements(array(123456, 789, 23, 45, 67890, 1234567,\
    \ 5500, 7890, 12345), 2).\"\\n\";", "    $total = 0;\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        if ($arr[$i] > 9 && $arr[$i] < 100) {\n            $total +=\
    \ $arr[$i];\n        }\n    }\n    return $total;\n}\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);", "    // sum of elements in arr less than\
    \ 10\n    $sum = 0;\n    // iterate through $arr\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        // if element is less than 10, add it to sum\n        if ($arr[$i]\
    \ < 10) {\n            $sum += $arr[$i];\n        }\n        // if element is\
    \ between 10 and 99, add it to sum\n        else if ($arr[$i] >= 10 && $arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n        // stop loop if\
    \ we are at $k\n        if ($i === $k - 1) {\n            break;\n        }\n\
    \    }\n    return $sum;\n}", "    $num_sum = 0;\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        if ($arr[$i] < 100) {\n            $num_sum += $arr[$i];\n      \
    \  }\n    }\n    return $num_sum;\n}\n", "    $total = 0;\n    for ($i = 0; $i\
    \ < $k; $i++) {\n        if (strlen($arr[$i]) < 3) {\n            $total += $arr[$i];\n\
    \        }\n    }\n    return $total;\n}\n", "  $sum = 0;\n  for ($i = 0; $i <\
    \ $k; $i++) {\n    if (strlen($arr[$i]) > 2) {\n      $sum += substr($arr[$i],\
    \ 0, 2);\n    } else {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n\
    }\n", "  $count = 0;\n  $sum = 0;\n  foreach ($arr as $element) {\n    if ($count\
    \ >= $k) {\n      break;\n    }\n    if ($element >= 10 && $element < 100) {\n\
    \      $sum += $element;\n      $count++;\n    }\n  }\n  return $sum;\n}\necho\
    \ add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) . PHP_EOL;", "    $total\
    \ = 0;\n    $i = 0;\n    while ($i < $k) {\n        if (count(str_split($arr[$i]))\
    \ <= 2) {\n            $total += $arr[$i];\n        }\n        $i++;\n    }\n\
    \    return $total;\n}", "    $sum = 0;\n    $len = count($arr);\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] > 99) {\n            continue;\n\
    \        }\n        $sum += $arr[$i];\n    }\n    return $sum;\n}\n", "    $sum\
    \ = 0;\n    $i = 0;\n    while ($i < $k) {\n        if ($arr[$i] < 10 || $arr[$i]\
    \ > 99) {\n            $sum += $arr[$i];\n        }\n        $i++;\n    }\n  \
    \  return $sum;\n}\n", "    if ($k > count($arr))\n        $k = count($arr);\n\
    \    $sum = 0;\n    $max_k = $k;\n    for ($i = 0; $i < $max_k; $i++) {\n    \
    \    if ($arr[$i] > 99) {\n            $max_k++;\n            continue;\n    \
    \    }\n        $sum += $arr[$i];\n    }\n    return $sum;\n}\n\nif (empty($argv[1]))\n\
    \    exit(\"First arg: arr. Second arg: k\\n\");\n\n$arr = array_map('intval',\
    \ explode(',', $argv[1]));\n$k = intval($argv[2]);\necho add_elements($arr, $k)\
    \ . \"\\n\";", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > 9 && $arr[$i] < 100) {\n            $sum += $arr[$i];\n        }\n    }\n\
    \    return $sum;\n}\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4);", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i])\
    \ < 3) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\nprint(add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4));", "    //\
    \ Your code here.\n}\n", "    $sum = 0;\n    $i = 0;\n    $n = count($arr);\n\
    \    while ($i < $n && $i < $k) {\n        if ($arr[$i] >= 10 && $arr[$i] < 100)\
    \ {\n            $sum += $arr[$i];\n        }\n        $i++;\n    }\n    return\
    \ $sum;\n}\n", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > 99 || $arr[$i] < -99) {\n            $sum += 0;\n        } else {\n      \
    \      $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n", "    $sum\
    \ = 0;\n    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if\
    \ ($count < $k) {\n            if ($arr[$i] > 9 && $arr[$i] < 100) {\n       \
    \         $sum += $arr[$i];\n                $count++;\n            }\n      \
    \  }\n    }\n    return $sum;\n}", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n        }\n\
    \    }\n    return $sum;\n}\n", "    // Your code here\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\nadd_elements($arr, $k);", "    $total\
    \ = 0;\n    $i = 0;\n    while ($i < $k) {\n        if ($arr[$i] < 100) {\n  \
    \          $total += $arr[$i];\n        }\n        $i++;\n    }\n    return $total;\n\
    }\n", "  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100) {\n\
    \      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n", "\n}", "  $sum = 0;\n\
    \  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] >= 100) {\n      $sum += $arr[$i];\n\
    \    }\n  }\n  return $sum;\n}", "  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n\
    \    if ($arr[$i] < 100) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n\
    }\n", "    $result = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ >= 10 && $arr[$i] < 100) {\n            $result += $arr[$i];\n        }\n  \
    \  }\n    return $result;\n}\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n\
    $k = 4;\necho add_elements($arr, $k);\n", "    $total = 0;\n    for ($i = 0; $i\
    \ < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $total += $arr[$i];\n\
    \        }\n    }\n    return $total;\n}\n", "    $total = 0;\n    $count = 0;\n\
    \    foreach ($arr as $value) {\n        if ($count >= $k) {\n            break;\n\
    \        }\n        if ($value < 10) {\n            $total += $value;\n      \
    \  } else if ($value < 100) {\n            $total += $value;\n        }\n    \
    \    $count++;\n    }\n    return $total;\n}\n\necho add_elements(array(111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9), 4) . PHP_EOL;\n", "    $sum = 0;\n    foreach ($arr\
    \ as $key => $value) {\n        if ($key >= $k) {\n            break;\n      \
    \  }\n        if (strlen($value) <= 2) {\n            $sum += $value;\n      \
    \  }\n    }\n    return $sum;\n}\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8,\
    \ 9);\n$k = 4;\n$result = add_elements($arr, $k);\necho $result;", "\n}", "  \
    \  // return $arr;\n    $result = 0;\n    for ($i = 0; $i < $k; $i++) {\n    \
    \    $result += $arr[$i];\n    }\n    return $result;\n}\n", "    $sum = 0;\n\
    \    foreach ($arr as $key => $val) {\n        if ($key < $k) {\n            if\
    \ ($val < 10) {\n                $sum += $val;\n            } elseif ($val < 100)\
    \ {\n                $sum += $val;\n            }\n        }\n    }\n    return\
    \ $sum;\n}\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\n\necho\
    \ add_elements($arr, $k);", "  if (count($arr) > 100 || $k > count($arr)) {\n\
    \    return null;\n  }\n  $sum = 0;\n  $zero = 0;\n  $first_digit = array();\n\
    \  $second_digit = array();\n  foreach ($arr as $key => $value) {\n    if ($value\
    \ < 100) {\n      $sum += $value;\n    } else {\n      $zero++;\n      $first_digit[]\
    \ = intval($value / 10);\n      $second_digit[] = $value % 10;\n    }\n  }\n \
    \ $first_sum = array_sum($first_digit);\n  $second_sum = array_sum($second_digit);\n\
    \  $sum += intval($first_sum / (10 - $zero));\n  $sum += intval($second_sum /\
    \ (10 - $zero));\n  return $sum;\n}\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7,\
    \ 8, 9);\nprint add_elements($arr, 4);", "  // Write your code here.\n}\n", " \
    \   $total = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10\
    \ && $arr[$i] < 100) {\n            $total += $arr[$i];\n        }\n    }\n  \
    \  return $total;\n}\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\n\
    \n$result = add_elements($arr, $k);\nprint(\"\\n\");\nprint(\"Total: \" . $result);\n\
    print(\"\\n\");", "\n}", "    $result = 0;\n    $i = 0;\n    while ($i < $k) {\n\
    \        if (strlen($arr[$i]) <= 2) {\n            $result += $arr[$i];\n    \
    \    }\n        $i++;\n    }\n    return $result;\n}", "  $sum = 0;\n  foreach($arr\
    \ as $key => $number) {\n    if($key <= $k) {\n      $numberString = (string)\
    \ $number;\n      if(strlen($numberString) <= 2) {\n        $sum += $number;\n\
    \      }\n    }\n  }\n  return $sum;\n}\n\n$inputs = [\n  ['arr' => [111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9], 'k' => 4],\n  ['arr' => [1, 2, 3, 4, 5, 6, 7, 8, 9],\
    \ 'k' => 4],\n  ['arr' => [1, 2, 3, 4, 5, 6, 7, 8, 9], 'k' => 9],\n  ['arr' =>\
    \ [111, 21, 3, 4000, 5, 6, 7, 8, 9], 'k' => 3],\n  ['arr' => [1111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 'k' => 2],\n  ['arr' => [1111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 'k' => 5],\n  ['arr' => [1111, 21, 333, 4000, 5, 6, 7, 8, 9], 'k' => 5],\n \
    \ ['arr' => [1, 1, 1, 1, 1, 1, 1, 1, 1], 'k' => 9],\n  ['arr' => [12, 11, 11,\
    \ 111, 111, 111, 1, 1, 1], 'k' => 9],\n  ['arr' => [111, 21, 3, 4000, 5, 6, 7,\
    \ 8, 9], 'k' => 9],\n  ['arr' => [1, 2, 3, 4, 5, 6, 7, 8, 9], 'k' => 1],\n  ['arr'\
    \ => [1, 2, 3, 4, 5, 6, 7, 8, 9], 'k' => 0],\n  ['arr' => [100, 1000, 100, 1000,\
    \ 100, 1000, 100, 1000, 100], 'k' => 1],\n  ['arr' => [100, 1000, 100, 1000, 100,\
    \ 1000, 100", "  $sum = 0;\n  $i = 0;\n  while ($i < $k) {\n    if ($arr[$i] <\
    \ 100) {\n      $sum += $arr[$i];\n    }\n    $i++;\n  }\n  return $sum;\n}\n",
  "  $acc = 0;\n  $pos = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $acc += $arr[$i];\n    } else {\n      $pos = $i + 1;\n    }\n\
    \  }\n  return $acc + array_sum(array_slice($arr, $pos, $k - $pos));\n}", "  $total\
    \ = 0;\n  $count = 0;\n  foreach ($arr as $value) {\n    if ($count == $k) {\n\
    \      break;\n    }\n    if ($value < 100) {\n      $total += $value;\n    }\n\
    \    $count++;\n  }\n  return $total;\n}", "  $sum = 0;\n  for ($i = 0; $i < $k;\
    \ $i++) {\n    if (strlen($arr[$i]) <= 2) {\n      $sum += $arr[$i];\n    }\n\
    \  }\n  return $sum;\n}\n\n$_fp = fopen(\"php://stdin\", \"r\");\n$arr = array();\n\
    $k = 0;\nfscanf($_fp, \"%d\", $k);\nfor ($i = 0; $i < $k; $i++) {\n  fscanf($_fp,\
    \ \"%d\", $arr[$i]);\n}\n\necho add_elements($arr, $k);\nfclose($_fp);", "   \
    \ $sum = 0;\n    foreach ($arr as $key => $value) {\n        if ($key < $k) {\n\
    \            if ($value < 100) {\n                $sum += $value;\n          \
    \  }\n        }\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    for ($i =\
    \ 0; $i < $k; $i++) {\n        if ($arr[$i] >= 100) {\n            continue;\n\
    \        }\n        $sum += $arr[$i];\n    }\n    return $sum;\n}", "    $sum\
    \ = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] > 99) {\n    \
    \        $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}", "  $result\
    \ = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100) {\n      $result\
    \ += $arr[$i];\n    }\n  }\n  return $result;\n}\n\n$array = array(111, 21, 3,\
    \ 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($array, $k);\n ?>", "    //\
    \ initialize result\n    $sum = 0;\n    // loop through elements in array\n  \
    \  for ($i = 0; $i < $k; $i++) {\n        // get the current element\n       \
    \ $num = $arr[$i];\n        // if current element has 2 digits add it to sum\n\
    \        if (strlen($num) == 2) {\n            $sum += $num;\n        }\n    }\n\
    \    // return the sum\n    return $sum;\n}\n", "    $res = 0;\n    for ($i =\
    \ 0; $i < $k; $i++) {\n        if ($arr[$i] > 99) {\n            $res += (int)\
    \ substr($arr[$i], 0, 2);\n        } else {\n            $res += $arr[$i];\n \
    \       }\n    }\n    return $res;\n}\necho add_elements(array(111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9), 4);", "    //\n}", "    $first_k_elements = array_slice($arr,\
    \ 0, $k);\n    $two_digit_elements = array_filter($first_k_elements, 'is_two_digit');\n\
    \    return array_sum($two_digit_elements);\n}\n", "  $elements = [];\n  $sum\
    \ = 0;\n  foreach ($arr as $element) {\n    $is_one_digit = $element >= 0 && $element\
    \ < 10;\n    $is_two_digit = $element >= 10 && $element < 100;\n    if ($is_one_digit\
    \ || $is_two_digit) {\n      array_push($elements, $element);\n    }\n    if (count($elements)\
    \ === $k) {\n      break;\n    }\n  }\n  foreach ($elements as $element) {\n \
    \   $sum += $element;\n  }\n  return $sum;\n}\n\n$array = array(111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9);\n$num = 4;\necho add_elements($array, $num);\n", "    $sum =\
    \ 0;\n    $count = 0;\n    foreach ($arr as $i) {\n        if (strlen($i) <= 2)\
    \ {\n            $sum += $i;\n            $count++;\n        }\n        if ($count\
    \ >= $k) {\n            break;\n        }\n    }\n    return $sum;\n}\n", "  \
    \  $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n\
    \            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}", "    $sum\
    \ = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2)\
    \ {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}", " \
    \   $counter = 0;\n    $sum = 0;\n    foreach ($arr as $value) {\n        if ($counter\
    \ == $k) {\n            break;\n        }\n        if (strlen($value) > 2) {\n\
    \            continue;\n        }\n        $sum += $value;\n        $counter++;\n\
    \    }\n    return $sum;\n}\n", "  $res = 0;\n  foreach($arr as $item) {\n   \
    \ if (strlen($item) <= 2) {\n      $res += $item;\n      $k--;\n    }\n    if\
    \ ($k === 0) {\n      break;\n    }\n  }\n  return $res;\n}\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) . PHP_EOL;", "    $sum = 0;\n    $n = count($arr);\n\
    \    $index = 0;\n    while ($index < $n && $k-- > 0) {\n        $sum += $arr[$index];\n\
    \        $index++;\n    }\n    return $sum;\n}\n", "    $result = 0;\n    $counter\
    \ = 0;\n    foreach ($arr as $number) {\n        if ($counter >= $k) {\n     \
    \       break;\n        }\n        if ($number < 100) {\n            $result +=\
    \ $number;\n        }\n        $counter++;\n    }\n    return $result;\n}\n\n\
    echo add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4);\n", "\n}\n", " \
    \   $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100)\
    \ {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}", " \
    \   $sum = 0;\n    foreach ($arr as $key => $num) {\n        if ($key < $k) {\n\
    \            if (strlen($num) > 2) {\n                continue;\n            }\n\
    \            $sum += $num;\n        }\n    }\n    return $sum;\n}\n\n$sum = add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);\necho $sum;", "    $sum = 0;\n    foreach ($arr\
    \ as $k => $v) {\n        if ($k < $k) {\n            if ($v < 100) {\n      \
    \          $sum += $v;\n            }\n        }\n    }\n    return $sum;\n}",
  "    $result = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] > 99)\
    \ {\n            $result += $arr[$i];\n        }\n    }\n    return $result;\n\
    }\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\nprint(add_elements($arr,\
    \ $k));", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ < 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k) . \"\\n\";", "  $sum = 0;\n  foreach($arr as $key => $value) {\n    if ($key\
    \ >= $k) {\n      break;\n    } elseif (strlen($value) <= 2) {\n      $sum +=\
    \ $value;\n    }\n  }\n  return $sum;\n}\n$cases = array(\n  array(\n    \"input\"\
    \ => array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\n    \"k\" => 4,\n    \"output\"\
    \ => 24\n  ),\n  array(\n    \"input\" => array(111, 21, 3, 4000, 5, 6, 7, 8,\
    \ 9),\n    \"k\" => 100,\n    \"output\" => 23\n  ),\n  array(\n    \"input\"\
    \ => array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\n    \"k\" => -5,\n    \"output\"\
    \ => 0\n  ),\n  array(\n    \"input\" => array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\n\
    \    \"k\" => 1,\n    \"output\" => 21\n  ),\n  array(\n    \"input\" => array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9),\n    \"k\" => 9,\n    \"output\" => 24\n  ),\n\
    \  array(\n    \"input\" => array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\n    \"k\"\
    \ => 10,\n    \"output\" => 24\n  ),\n  array(\n    \"input\" => array(111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9),\n    \"k\" => 0,\n    \"output\" => 0\n  ),\n  array(\n\
    \    \"input\" => array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\n    \"k\" => 101,\n\
    \    \"output\" => 0\n  ),\n  array(\n    \"input\" => array(111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9),\n    \"k\" => \"5\",\n    \"output\" => 24\n  ),", "    $sum\
    \ = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n", "    $result\
    \ = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n   \
    \         $result += $arr[$i];\n        }\n    }\n    return $result;\n}\n\nclass\
    \ AddElementsTest extends TestCase {\n    public function test_given_example()\
    \ {\n        $this->assertEquals(24, add_elements(array(111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9), 4));\n    }\n\n    public function test_other_examples() {\n     \
    \   $this->assertEquals(0, add_elements(array(1, 2, 3, 4, 5, 6, 7, 8, 9), 0));\n\
    \        $this->assertEquals(45, add_elements(array(1, 2, 3, 4, 5, 6, 7, 8, 9),\
    \ 9));\n        $this->assertEquals(16, add_elements(array(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9), 5));\n        $this->assertEquals(8, add_elements(array(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9), 4));\n        $this->assertEquals(5, add_elements(array(1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9), 3));\n        $this->assertEquals(3, add_elements(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9), 2));\n        $this->assertEquals(2, add_elements(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9), 1));\n    }\n}", "  $sum = 0;\n  for ($i = 0; $i <\
    \ $k; $i++) {\n    if (strlen($arr[$i]) <= 2) {\n      $sum += $arr[$i];\n   \
    \ }\n  }\n  return $sum;\n}\n\necho \"Expected: 24\\n\";\necho \"Actual: \" .\
    \ add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) . \"\\n\";\n", "  $sum\
    \ = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100) {\n      $sum\
    \ += $arr[$i];\n    }\n  }\n  return $sum;\n}\n", "    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}\n\n$arr = array(111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9);\n$k = 4;\n$result = add_elements($arr, $k);\nprint($result);\n", " \
    \   $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i])\
    \ <= 2) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4);", "    $sum =\
    \ 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 10 || $arr[$i]\
    \ > 99) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4);", "  $total =\
    \ 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] > 99) {\n      $total\
    \ += $arr[$i];\n    }\n  }\n  return $total;\n}", "    $ans = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $ans += $arr[$i];\n\
    \        }\n    }\n    return $ans;\n}", "    $result = 0;\n    for ($i = 0; $i\
    \ < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $result += $arr[$i];\n\
    \        }\n    }\n    return $result;\n}", "  $sum = 0;\n  for ($i = 0; $i <\
    \ $k; $i++) {\n    if (strlen($arr[$i]) <= 2) {\n      $sum += $arr[$i];\n   \
    \ }\n  }\n  return $sum;\n}\n", "  $sum = 0;\n  foreach($arr as $i => $val) {\n\
    \    if ($i >= $k) {\n      break;\n    }\n    if (strlen($val) <= 2) {\n    \
    \  $sum += $val;\n    }\n  }\n  return $sum;\n}\n", "    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n\
    \        }\n    }\n    return $sum;\n}", "  if (count($arr) > 100) {\n    die(\"\
    Array must have at most 100 elements.\");\n  }\n  if ($k > count($arr)) {\n  \
    \  die(\"k must be no larger than the number of elements in the array.\");\n \
    \ }\n  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 10) {\n\
    \      $sum += $arr[$i];\n    } else if ($arr[$i] < 100) {\n      $sum += $arr[$i];\n\
    \    }\n  }\n  return $sum;\n}\n\nif ($argc != 3) {\n  die(\"Usage: add_elements.php\
    \ [INT] [INT]\\n\");\n}\n\n$arr = explode(\",\", $argv[1]);\n$k = intval($argv[2]);\n\
    print_r(add_elements($arr, $k));\n", "    $sum = 0;\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n    \
    \    }\n    }\n    return $sum;\n}", "    $total = 0;\n    $arrSize = count($arr);\n\
    \    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] < 100)\
    \ {\n            $total += $arr[$i];\n        }\n    }\n    return $total;\n}",
  "  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i]) <= 2) {\n\
    \      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);", "    $newArr = [];\n    $output = 0;\n  \
    \  $counter = 0;\n    // loop through array and get numbers with 2 or less digits\n\
    \    foreach ($arr as $value) {\n        if (strlen($value) <= 2) {\n        \
    \    $newArr[] = $value;\n        }\n    }\n    // loop through arr and add $k\
    \ elements to $output\n    foreach ($newArr as $value) {\n        if ($counter\
    \ == $k) {\n            break;\n        }\n        $output += $value;\n      \
    \  $counter++;\n    }\n    return $output;\n}\n", "    $sum = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] >= 10 && $arr[$i] < 100) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\n$sum = add_elements($arr, $k);\necho\
    \ $sum . \"\\n\";", "\n}\n", "\t// $k = min($k, count($arr));\n\t$sum = 0;\n\t\
    for ($i = 0; $i < $k; $i++) {\n\t\t$val = $arr[$i];\n\t\t$digits = strlen($val);\n\
    \t\tif ($digits <= 2) {\n\t\t\t$sum += $val;\n\t\t}\n\t}\n\treturn $sum;\n}\n",
  "    // your code here\n}\n\n$array = [111, 21, 3, 4000, 5, 6, 7, 8, 9];\n$k = 4;\n\
    echo add_elements($array, $k);", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        if (strlen($arr[$i]) <= 2) {\n            $sum += $arr[$i];\n   \
    \     }\n    }\n    return $sum;\n}\n", "  $sum = 0;\n  for ($i = 0; $i < $k;\
    \ $i++) {\n    if ($arr[$i] >= 100) {\n      break;\n    }\n    $sum += $arr[$i];\n\
    \  }\n  return $sum;\n}\n\nassert(add_elements(array(111, 21, 3, 4000, 5, 6, 7,\
    \ 8, 9), 4) == 24);\nassert(add_elements(array(111, 21, 3000, 4000, 5, 6, 7, 8,\
    \ 9), 4) == 12);\nassert(add_elements(array(111, 21, 3000, 4000, 5, 6, 7, 8, 9),\
    \ 9) == 53);\nassert(add_elements(array(111, 2, 3000, 4000, 5, 6, 7, 8, 9), 2)\
    \ == 3);\nassert(add_elements(array(111, 2, 3000, 4000, 5, 6, 7, 8, 9), 0) ==\
    \ 0);\nassert(add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 1) == 0);",
  "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (sizeof(strval($arr[$i]))\
    \ > 2) {\n            continue;\n        }\n        $sum += $arr[$i];\n    }\n\
    \    return $sum;\n}", "  $count = 0;\n  $sum = 0;\n  foreach ($arr as $num) {\n\
    \    if ($count >= $k) break;\n    if ($num > 0 && $num < 10) {\n      $sum +=\
    \ $num;\n      $count++;\n    } else if ($num > 9 && $num < 100) {\n      $sum\
    \ += $num;\n      $count++;\n    }\n  }\n  return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\nprint add_elements($arr, $k);", "  $sum\
    \ = 0;\n  $arr_len = count($arr);\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i]\
    \ > 9 && $arr[$i] < 100) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n\
    }\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k);", "    $sum = 0;\n    $i = 0;\n    while($i < $k) {\n        if(strlen($arr[$i])\
    \ <= 2) {\n            $sum += $arr[$i];\n        }\n        $i++;\n    }\n  \
    \  return $sum;\n}\n", "\t// your code here\n}\necho add_elements(array(111, 21,\
    \ 3, 4000, 5, 6, 7, 8, 9), 4);", "  $result = 0;\n  $count = 0;\n  foreach ($arr\
    \ as $num) {\n    if ($count >= $k) {\n      break;\n    }\n\n    $count++;\n\
    \    if ($num < 100) {\n      $result += $num;\n    }\n  }\n\n  return $result;\n\
    }\n", "  return array_reduce(array_slice($arr, 0, $k), function($acc, $num) {\n\
    \    if ($num > 99) return $acc;\n    return $acc + $num;\n  }, 0);\n}\n", "\t\
    $sum = 0;\n\tfor ($i = 0; $i < $k; $i++) {\n\t\tif ($arr[$i] < 100) {\n\t\t\t\
    $sum += $arr[$i];\n\t\t}\n\t}\n\treturn $sum;\n}\n\n$arr = array(111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr, $k);", "  $i = 0;\n  $sum\
    \ = 0;\n  while ($i < $k) {\n    if ($arr[$i] >= 10 && $arr[$i] < 100) {\n   \
    \   $sum += $arr[$i];\n    }\n    $i++;\n  }\n  return $sum;\n}\n\n$test_case\
    \ = array(\n  \"input\" => array(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4),\n\
    \  \"output\" => 24\n);\n\necho \"Input: \";\necho json_encode($test_case[\"input\"\
    ]);\necho \"\\n\";\necho \"Output: \" . (add_elements($test_case[\"input\"][0],\
    \ $test_case[\"input\"][1]) === $test_case[\"output\"] ? \"PASS\" : \"FAIL\");\n\
    echo \"\\n\";", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if\
    \ (strlen($arr[$i]) <= 2) {\n            $sum += $arr[$i];\n        }\n    }\n\
    \    return $sum;\n}", "    $sum = 0;\n    foreach ($arr as $k => $v) {\n    \
    \    if (is_numeric($v) && strlen($v) <= 2) {\n            $sum += $v;\n     \
    \   }\n        if ($k == $k - 1) {\n            break;\n        }\n    }\n   \
    \ return $sum;\n}\n", "    $elements = array_slice($arr, 0, $k);\n    $elements_sum\
    \ = 0;\n    foreach ($elements as $element) {\n        if (strlen($element) <=\
    \ 2) {\n            $elements_sum += $element;\n        }\n    }\n    return $elements_sum;\n\
    }", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] <\
    \ 100) $sum += $arr[$i];\n    }\n    return $sum;\n}\n", "\tif(is_array($arr)\
    \ && count($arr) > 0 && is_int($k) && $k <= count($arr)) {\n\t\tfor($i = 0; $i\
    \ < $k; $i++) {\n\t\t\t$arr[$i] = strlen($arr[$i]) <= 2 ? $arr[$i] : 0;\n\t\t\
    }\n\t\treturn array_sum($arr);\n\t}\n\treturn \"Wrong input\";\n}", "  $arr =\
    \ array_slice($arr, 0, $k);\n  $result = 0;\n  foreach ($arr as $num) {\n    if\
    \ ($num < 100) {\n      $result += $num;\n    }\n  }\n  return $result;\n}", " \
    \ $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100) {\n    \
    \  $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\nadd_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4);", "\tif(!is_array($arr) || !is_int($k)) {\n\
    \t\tthrow new Exception('Parameters must be an array and an integer.');\n\t}\n\
    \n\tif($k > count($arr)) {\n\t\tthrow new Exception('K should be less than or\
    \ equal to the size of the array.');\n\t}\n\n\t$sum = 0;\n\tfor($i = 0; $i < $k;\
    \ $i++) {\n\t\tif($arr[$i] > 99) {\n\t\t\t$arr[$i] = 99;\n\t\t}\n\t\t$sum += $arr[$i];\n\
    \t}\n\n\treturn $sum;\n}\n", "    $sum = 0;\n    $j = 0;\n    while ($j < $k)\
    \ {\n        if (count(str_split($arr[$j])) < 3) {\n            $sum += $arr[$j];\n\
    \        }\n        $j++;\n    }\n    return $sum;\n}", "    $sum = 0;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        if (count(str_split($arr[$i])) <= 2) {\n\
    \            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}", "    $counter\
    \ = 0;\n    $total = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if\
    \ ($counter >= $k) {\n            break;\n        }\n        if ($arr[$i] < 100)\
    \ {\n            $total += $arr[$i];\n            $counter++;\n        }\n   \
    \ }\n    return $total;\n}\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7,\
    \ 8, 9), 4) . \"\\n\";", "  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if\
    \ ($arr[$i] < 10) {\n      $sum += $arr[$i];\n    } else if ($arr[$i] < 100) {\n\
    \      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) . PHP_EOL;", "  $sum = 0;\n  for ($i = 0; $i\
    \ < $k; $i++) {\n    if ($arr[$i] > 99) {\n      $sum += $arr[$i];\n    }\n  }\n\
    \  return $sum;\n}\n\n$test_cases = [\n  ['input' => [[111, 21, 3, 4000, 5, 6,\
    \ 7, 8, 9], 4], 'expected' => 24],\n  ['input' => [[111, 111, 111, 111, 111, 111,\
    \ 111, 111, 111], 4], 'expected' => 444],\n  ['input' => [[111, 1, 0, 444, 5,\
    \ 6, 7, 8, 9], 4], 'expected' => 45],\n  ['input' => [[111, 0, 1, 444, 5, 6, 7,\
    \ 8, 9], 4], 'expected' => 45],\n  ['input' => [[111, 1, 0, 444, 5, 6, 7, 8, 9],\
    \ 3], 'expected' => 5],\n  ['input' => [[111, 0, 1, 444, 5, 6, 7, 8, 9], 3], 'expected'\
    \ => 5],\n  ['input' => [[111, 1, 0, 444, 5, 6, 7, 8, 9], 2], 'expected' => 2],\n\
    \  ['input' => [[111, 0, 1, 444, 5, 6, 7, 8, 9], 2], 'expected' => 2],\n  ['input'\
    \ => [[1, 2, 3, 4, 5, 6, 7, 8, 9], 9], 'expected' => 15],\n  ['input' => [[1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9], 8], 'expected' => 15],\n  ['input' => [[1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9], 7], 'expected' => 14],\n  ['input' => [[1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9], 6], 'expected' => 13],\n  ['input' => [[1, 2, 3, 4, 5, 6, 7, 8, 9], 5],\
    \ 'expected' => 12],\n  ['input' => [[1, 2, 3", "    $sum = 0;\n    for ($i =\
    \ 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n            $sum\
    \ += $arr[$i];\n        }\n    }\n    return $sum;\n}", "    $sum = 0;\n    foreach\
    \ ($arr as $key => $value) {\n        if ($key < $k) {\n            if (strlen($value)\
    \ <= 2) {\n                $sum += $value;\n            }\n        }\n    }\n\
    \    return $sum;\n}", "  $result = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if\
    \ ($arr[$i] < 10) {\n      $result += $arr[$i];\n    } else if ($arr[$i] < 100)\
    \ {\n      $result += $arr[$i];\n    }\n  }\n  return $result;\n}\n", "    $sum\
    \ = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n", "    $sum\
    \ = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] < 100) {\n   \
    \         $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}\n\n$arr = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\necho add_elements($arr, 4) . \"\\n\";", "    $sum\
    \ = 0;\n    $i = 0;\n    while ($i < $k) {\n        if (strlen($arr[$i]) > 2)\
    \ {\n            break;\n        }\n        $sum += $arr[$i];\n        $i++;\n\
    \    }\n    return $sum;\n}\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n\
    $k = 4;\n$sum = add_elements($arr, $k);\necho $sum;", "\t$sum = 0;\n\tfor ($i\
    \ = 0; $i < $k; $i++) {\n\t\tif (strlen($arr[$i]) <= 2) {\n\t\t\t$sum += $arr[$i];\n\
    \t\t}\n\t}\n\treturn $sum;\n}", "  // Implement your solution here\n}", "    $sum\
    \ = 0;\n    $count = 0;\n    for ($i = 0; $i < sizeof($arr); $i++) {\n       \
    \ if (strlen($arr[$i]) <= 2) {\n            $sum += $arr[$i];\n            $count++;\n\
    \        }\n        if ($count >= $k) {\n            break;\n        }\n    }\n\
    \    return $sum;\n}\n", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n \
    \       if (strlen($arr[$i]) < 3) {\n            $sum += $arr[$i];\n        }\n\
    \    }\n    return $sum;\n}\n", "  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n\
    \    if (floor($arr[$i] / 10) == 0) {\n      $sum += $arr[$i];\n    }\n  }\n \
    \ return $sum;\n}\n\necho add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9),\
    \ 4);", "  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100)\
    \ {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n", "    if (!empty($arr)\
    \ && is_int($k)) {\n        $sum = 0;\n        $new_arr = array_slice($arr, 0,\
    \ $k);\n        foreach ($new_arr as $num) {\n            if ($num < 10) {\n \
    \               $sum += $num;\n            } elseif ($num < 100) {\n         \
    \       $sum += $num;\n            }\n        }\n        return $sum;\n    }\n\
    }", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] <\
    \ 100) {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n\
    }\n\n$arr = array(111, 21, 3, 4000, 5, 6, 7, 8, 9);\n$k = 4;\necho add_elements($arr,\
    \ $k);\necho \"\\n\";\n", "    $max_num_digits = 2;\n    $total = 0;\n    foreach($arr\
    \ as $i => $num) {\n        if($i >= $k) {\n            break;\n        }\n  \
    \      if(strlen((string)$num) <= $max_num_digits) {\n            $total += $num;\n\
    \        }\n    }\n    return $total;\n}\n", "  $sum = 0;\n  for ($i = 0; $i <\
    \ $k; $i++) {\n    if ($arr[$i] < 100) {\n      $sum += $arr[$i];\n    }\n  }\n\
    \  return $sum;\n}\n", "  $sum = 0;\n  $count = 0;\n  foreach ($arr as $key =>\
    \ $value) {\n    if (strlen($value) < 3) {\n      $sum += $value;\n      $count++;\n\
    \    }\n    if ($count === $k) {\n      break;\n    }\n  }\n  return $sum;\n}",
  "  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if ($arr[$i] >= 10 && $arr[$i]\
    \ < 100) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}", "    // use\
    \ array_slice to get the first k elements\n    $elements = array_slice($arr, 0,\
    \ $k);\n    // use filter to remove elements with more than 2 digits\n    $smaller_elements\
    \ = array_filter($elements, function($element) {\n        return strlen($element)\
    \ <= 2;\n    });\n    // reduce the array down to a sum\n    return array_reduce($smaller_elements,\
    \ function($a, $b) {\n        return $a + $b;\n    });\n}\n\nprint_r(add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4));\n", "  $sum = 0;\n  for ($i = 0; $i < $k;\
    \ $i++) {\n    if ($arr[$i] >= 10 && $arr[$i] < 100) {\n      $sum += $arr[$i];\n\
    \    }\n  }\n  return $sum;\n}\n", "  $sum = 0;\n  for ($i = 0; $i < $k; $i++)\
    \ {\n    if (strlen($arr[$i]) > 2) {\n      continue;\n    }\n    $sum += $arr[$i];\n\
    \  }\n  return $sum;\n}\n", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n\
    \        if (abs($arr[$i]) < 100) {\n            $sum += $arr[$i];\n        }\n\
    \    }\n    return $sum;\n}\n", "  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n\
    \    if ($arr[$i] > 99) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n\
    }\n\nclass AddElementsTest extends PHPUnit_Framework_TestCase {\n  public function\
    \ testAddElementsTest() {\n    $this->assertEquals(24, add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4));\n  }\n}\nAddElementsTest::main();", "    $sum\
    \ = 0;\n    $elements = 0;\n    foreach ($arr as $a) {\n        if ($elements\
    \ < $k) {\n            if ($a < 10) {\n                $sum += $a;\n         \
    \       $elements++;\n            } else if ($a < 100) {\n                $sum\
    \ += $a;\n                $elements++;\n            }\n        }\n    }\n    return\
    \ $sum;\n}\n", "\n}", "    $count = 0;\n    $sum = 0;\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n    \
    \        $count++;\n        }\n    }\n    return $sum;\n}\n", "\t$sum = 0;\n\t\
    for ($i = 0; $i < $k; $i++) {\n\t\tif (is_numeric($arr[$i]) && strlen($arr[$i])\
    \ <= 2) {\n\t\t\t$sum += $arr[$i];\n\t\t}\n\t}\n\treturn $sum;\n}\n", "    $sum\
    \ = 0;\n    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2)\
    \ {\n            $sum += $arr[$i];\n        }\n    }\n    return $sum;\n}", "\n\
    }\n\n$cases = [\n  [[], 4],\n  [[111, 21, 3, 4000, 5, 6, 7, 8, 9], 4],\n  [[111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], -4],\n  [[111, 21, 3, 4000, 5, 6, 7, 8, 9], 9],\n\
    \  [[1112, 2121, 3121, 40000, 5121, 6121, 7121, 8121, 9121], 4],\n  [[1112, 2121,\
    \ 3121, 40000, 5121, 6121, 7121, 8121, 9121], -4],\n  [[1112, 2121, 3121, 40000,\
    \ 5121, 6121, 7121, 8121, 9121], 9],\n];\n\nforeach ($cases as $case) {\n  $input\
    \ = $case[0];\n  $k = $case[1];\n  $output = add_elements($input, $k);\n  echo\
    \ \"input: \" . json_encode($input) . \"\\n\";\n  echo \"output: \" . $output\
    \ . \"\\n\";\n}", "  $sum = 0;\n  for ($i = 0; $i < $k; $i++) {\n    if (strlen($arr[$i])\
    \ <= 2) {\n      $sum += $arr[$i];\n    }\n  }\n  return $sum;\n}\n\n$arr1 = array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9);\necho \">>> add_elements(array(111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9), 4)\\n\";\necho add_elements($arr1, 4);", "    $elements = [];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        if (strlen($arr[$i]) <= 2) {\n   \
    \         $elements[] = $arr[$i];\n        }\n    }\n    return array_sum($elements);\n\
    }\n", "  // your code here\n}", "  $sum = 0;\n  $two_digits = [];\n  $one_digit\
    \ = [];\n  foreach ($arr as $i => $value) {\n    if ($i >= $k) break;\n    if\
    \ (strlen($value) === 1) {\n      $one_digit[] = $value;\n    } else if (strlen($value)\
    \ === 2) {\n      $two_digits[] = $value;\n    }\n  }\n  foreach ($one_digit as\
    \ $value) {\n    $sum += $value;\n  }\n  foreach ($two_digits as $value) {\n \
    \   $sum += $value;\n  }\n  return $sum;\n}", "  $sum = 0;\n  for ($i = 0; $i\
    \ < $k; $i++) {\n    if ($arr[$i] < 100) {\n      $sum += $arr[$i];\n    }\n \
    \ }\n  return $sum;\n}", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n \
    \       if ($arr[$i] < 100) {\n            $sum += $arr[$i];\n        }\n    }\n\
    \    return $sum;\n}\n", "  $result = 0;\n  for ($i = 0; $i < $k; $i++) {\n  \
    \  if (strlen($arr[$i]) < 3) {\n      $result += $arr[$i];\n    }\n  }\n  return\
    \ $result;\n}\n", "    $new_arr = [];\n    for ($i = 0; $i < $k; $i++) {\n   \
    \     $str = strval($arr[$i]);\n        if (strlen($str) == 1 || strlen($str)\
    \ == 2) {\n            $new_arr[] = $arr[$i];\n        }\n    }\n    return array_sum($new_arr);\n\
    }\n$arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9];\n$k = 4;\necho add_elements($arr,\
    \ $k);", "  $sum = 0;\n  $count = 1;\n  while ($count <= $k) {\n    if ($arr[$count\
    \ - 1] < 100) {\n      $sum += $arr[$count - 1];\n    }\n    $count++;\n  }\n\
    \  return $sum;\n}", "  // your code here\n}\n\n$tests = [\n  [\n    'input' =>\
    \ [\n      'arr' => [111, 21, 3, 4000, 5, 6, 7, 8, 9],\n      'k' => 4\n    ],\n\
    \    'expected' => 24\n  ],\n  [\n    'input' => [\n      'arr' => [100, 20, 3,\
    \ 40, 5, 6, 7, 8, 9],\n      'k' => 4\n    ],\n    'expected' => 86\n  ],\n  [\n\
    \    'input' => [\n      'arr' => [10000, 2000, 300, 40, 50, 6, 7, 8, 900],\n\
    \      'k' => 4\n    ],\n    'expected' => 2346\n  ],\n  [\n    'input' => [\n\
    \      'arr' => [111, 21, 3, 4000, 5, 6, 7, 8, 9],\n      'k' => 3\n    ],\n \
    \   'expected' => 14\n  ],\n  [\n    'input' => [\n      'arr' => [111, 21, 3,\
    \ 4000, 5, 6, 7, 8, 9],\n      'k' => 8\n    ],\n    'expected' => 1115\n  ],\n\
    \  [\n    'input' => [\n      'arr' => [100, 20, 3, 40, 5, 6, 7, 8, 900],\n  \
    \    'k' => 1\n    ],\n    'expected' => 100\n  ],\n  [\n    'input' => [\n  \
    \    'arr' => [100, 20, 3, 40, 5, 6, 7, 8, 900],\n      'k' => 9\n    ],\n   \
    \ 'expected' => 995\n  ],\n  [\n    'input' => [\n      'arr' => [100, 20, 3,\
    \ 40, 5, 6, 7, 8, 900],\n      'k' => 0\n    ],\n    'expected' => 0\n  ],\n \
    \ [\n    'input' => [\n      'arr' => [100, 20, 3, 40, 5, 6, 7, 8, 900],\n   \
    \   'k' => 100\n    ],\n    'expected' => 995\n ", "  $result = 0;\n  for ($i\
    \ = 0; $i < $k; $i++) {\n    if ($arr[$i] < 100) {\n      $result += $arr[$i];\n\
    \    }\n  }\n  return $result;\n}\n", "\n}\n", "\t$sum = 0;\n\tfor ($i = 0; $i\
    \ < $k; $i++) {\n\t\tif ($arr[$i] >= 10 && $arr[$i] < 100) {\n\t\t\t$sum += $arr[$i];\n\
    \t\t}\n\t}\n\treturn $sum;\n}\n\n$input = <<<EOD\n[111, 21, 3, 4000, 5, 6, 7,\
    \ 8, 9]\n4\nEOD;\n", "    $sum = 0;\n    foreach($arr as $i => $v) {\n       \
    \ if($i >= $k) {\n            break;\n        }\n        if($v < 100) {\n    \
    \        $sum += $v;\n        }\n    }\n    return $sum;\n}\n", "  // TODO: Fill\
    \ in the code\n}", "    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n       \
    \ if ($arr[$i] < 100) $sum += $arr[$i];\n    }\n    return $sum;\n}", "    $result\
    \ = 0;\n    foreach ($arr as $num) {\n        if (strlen((string)$num) <= 2) {\n\
    \            $result += $num;\n        }\n        if ($k === 0) {\n          \
    \  break;\n        }\n        $k--;\n    }\n    return $result;\n}\n\necho add_elements(array(111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9), 4) . PHP_EOL;\necho add_elements(array(111, 21,\
    \ 3, 4001, 5, 6, 7, 8, 9), 4) . PHP_EOL;\necho add_elements(array(111, 21, 3,\
    \ 4001, 5005, 6, 7, 8, 9), 4) . PHP_EOL;\necho add_elements(array(111, 21, 3,\
    \ 4001, 5005, 6, 7, 8, 9), 9) . PHP_EOL;\necho add_elements(array(111, 21, 3,\
    \ 4001, 5005, 6, 7, 8, 9), 0) . PHP_EOL;"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

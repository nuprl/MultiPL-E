{
  "name": "HumanEval_55_fib",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "results": [
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-alt 10)\n;; 55\n;; >>> (fib-alt 1)\n;; 1\n;; >>> (fib-alt 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-alt 10)\n;; 55\n;; >>> (fib-alt 1)\n;; 1\n;; >>> (fib-alt 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; [55, 34, 13, 8, 5, 3, 2, 1, 1, 1]\n;; >>> (fib-seq 1)\n;; [1]\n;; >>> (fib-seq 8)\n;; [21, 13, 8, 5, 3, 2, 1, 1]\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpubzday09.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpubzday09.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpubzday09.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpubzday09.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    ((= n 0) 0)\n    ((< n 1) 1)\n    ((= n 2) 1)\n    ((>= n 3)\n      (+ (fib (- n 2)) (fib (- n 1))))\n    (else\n      (+ (fib (- n 3)) (fib (- n 2)) (fib (- n 1))))\n  )\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpvb91s03x.rkt:34:4\nactual:     76\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpvb91s03x.rkt:35:4\nactual:     2\nexpected:   1\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpvb91s03x.rkt:36:4\nactual:     29\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpvb91s03x.rkt:37:4\nactual:     123\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpvb91s03x.rkt:38:4\nactual:     199\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    [(zero? n) 0]\n    [(zero? (minus n 1)) 1]\n    [else (fib (minus n 1)) (fib (minus n 2))]\n  )\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "/tmp/tmplo8ky074.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmplo8ky074.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    [(zero? n) 0]\n    [(zero? (minus n 1)) 1]\n    [else (fib (minus n 1)) (fib (minus n 2))]))\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293412,
      "stdout": "",
      "stderr": "/tmp/tmp06fyiy4d.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmp06fyiy4d.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-alt 10)\n;; 55\n;; >>> (fib-alt 1)\n;; 1\n;; >>> (fib-alt 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    [(zero? n) 0]\n    [(zero? (minus n 1)) 1]\n    [else (fib (minus n 2)) (fib (minus n 1))]\n  )\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "/tmp/tmpte39__a9.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmpte39__a9.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-alt 10)\n;; 55\n;; >>> (fib-alt 1)\n;; 1\n;; >>> (fib-alt 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; (55 55)\n;; >>> (fib-seq 1)\n;; (1 1)\n;; >>> (fib-seq 8)\n;; (21 21)\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaz9aqkf7.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaz9aqkf7.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaz9aqkf7.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaz9aqkf7.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    [(zero? n) 0]\n    [(zero? (minus n 1)) 1]\n    [else (fib (minus n 1)) (fib (minus n 2))]\n  )\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "/tmp/tmplo8ky074.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmplo8ky074.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-alt 10)\n;; 55\n;; >>> (fib-alt 1)\n;; 1\n;; >>> (fib-alt 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    [(zero? n) 0]\n    [(zero? (minus n 1)) 1]\n    [else (fib (minus n 1)) (fib (minus n 2))]))\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293412,
      "stdout": "",
      "stderr": "/tmp/tmp57mok917.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmp57mok917.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-alt 10)\n;; 55\n;; >>> (fib-alt 1)\n;; 1\n;; >>> (fib-alt 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; (55 1 21)\n;; >>> (fib-seq 1)\n;; (1)\n;; >>> (fib-seq 8)\n;; (21)\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6rqv33i1.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6rqv33i1.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6rqv33i1.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6rqv33i1.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; (55 1 21)\n;; >>> (fib-seq 1)\n;; (1)\n;; >>> (fib-seq 8)\n;; (21 1 55)\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpoc7qulh2.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpoc7qulh2.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpoc7qulh2.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpoc7qulh2.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    [(zero? n) 0]\n    [(zero? (minus n 1)) 1]\n    [else (fib (minus n 1)) (fib (minus n 2))]\n  )\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "/tmp/tmplo8ky074.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmplo8ky074.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    ((zero? n) 0)\n    ((zero? (minus n 1)) 1)\n    (else\n      (+ (fib (minus n 1)) (fib (minus n 2))))))\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293412,
      "stdout": "",
      "stderr": "/tmp/tmp6p085ytb.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmp6p085ytb.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (zero? n)\n    1\n    (+ (fib (- n 1))\n       (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293425,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; [55, 34, 13, 8, 5, 3, 2, 1, 1, 1]\n;; >>> (fib-seq 1)\n;; [1]\n;; >>> (fib-seq 8)\n;; [21, 13, 8, 5, 3, 2, 1, 1]\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpubzday09.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpubzday09.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpubzday09.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpubzday09.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; (55 1 21)\n;; >>> (fib-seq 1)\n;; (1)\n;; >>> (fib-seq 8)\n;; (21)\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6rqv33i1.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6rqv33i1.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6rqv33i1.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp6rqv33i1.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    ((zero? n) 0)\n    ((zero? (minus n 1)) 1)\n    (else (+ (fib (minus n 1)) (fib (minus n 2))))))\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293412,
      "stdout": "",
      "stderr": "/tmp/tmp9mkw97b4.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmp9mkw97b4.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-alt 10)\n;; 55\n;; >>> (fib-alt 1)\n;; 1\n;; >>> (fib-alt 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    [(zero? n)]\n    [(zero? (minus n 1))]\n    [(zero? (minus (fib (minus n 1)) 1))]\n    [(+ (fib (minus n 1)) (fib (minus n 2)))])\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293412,
      "stdout": "",
      "stderr": "/tmp/tmpxgdtq5nv.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmpxgdtq5nv.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    ((= n 0) 0)\n    ((< n 1) 1)\n    ((= n 1) 1)\n    ((< n 2) (fib (- n 1)))\n    (else (fib (- n 2)))))\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3o_jfn6c.rkt:30:4\nactual:     0\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3o_jfn6c.rkt:32:4\nactual:     0\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3o_jfn6c.rkt:33:4\nactual:     1\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp3o_jfn6c.rkt:34:4\nactual:     0\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    [(zero? n) 0]\n    [(zero? (minus n 1)) 1]\n    [else (fib (minus n 1)) (fib (minus n 2))]\n  )\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "/tmp/tmplo8ky074.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmplo8ky074.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-alt 10)\n;; 55\n;; >>> (fib-alt 1)\n;; 1\n;; >>> (fib-alt 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    [(zero? n) 0]\n    [(zero? (minus n 1)) 1]\n    [else (fib (minus n 1)) (fib (minus n 2))]\n  )\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "/tmp/tmplo8ky074.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmplo8ky074.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    [(zero? n) 0]\n    [(zero? (minus n 1)) 1]\n    [else (fib (minus n 1)) (fib (minus n 2))]\n  )\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "/tmp/tmplo8ky074.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmplo8ky074.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-alt 10)\n;; 55\n;; >>> (fib-alt 1)\n;; 1\n;; >>> (fib-alt 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    [(zero? n) 0]\n    [(zero? (minus n 1)) 1]\n    [else (fib (minus n 1)) (fib (minus n 2))]\n  )\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "/tmp/tmplo8ky074.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmplo8ky074.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    [(zero? n) 0]\n    [(zero? (minus n 1)) 1]\n    [else (fib (minus n 1)) (fib (minus n 2))]\n  ))\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "/tmp/tmpb8_v2_5m.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmpb8_v2_5m.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (cond\n    [(zero? n) 0]\n    [(zero? (minus n 1)) 1]\n    [else (fib (minus n 1)) (fib (minus n 2))]\n  )\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "/tmp/tmplo8ky074.rkt:13:13: minus: unbound identifier\n  in: minus\n  location...:\n   /tmp/tmplo8ky074.rkt:13:13\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-alt 10)\n;; 55\n;; >>> (fib-alt 1)\n;; 1\n;; >>> (fib-alt 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpuwrk3ohv.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-iter 10)\n;; 55\n;; >>> (fib-iter 1)\n;; 1\n;; >>> (fib-iter 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpiuekr228.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib-seq 10)\n;; 55\n;; >>> (fib-seq 1)\n;; 1\n;; >>> (fib-seq 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmp2ant1gvk.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "#lang racket\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(define (fib n)\n  (if (< n 2)\n    1\n    (+ (fib (- n 1)) (fib (- n 2))))\n)\n\n;; Return n-th Fibonacci number.\n;; >>> (fib 10)\n;; 55\n;; >>> (fib 1)\n;; 1\n;; >>> (fib 8)\n;; 21\n(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate fib))\n    (check-equal? (candidate 10) 55)\n    (check-equal? (candidate 1) 1)\n    (check-equal? (candidate 8) 21)\n    (check-equal? (candidate 11) 89)\n    (check-equal? (candidate 12) 144)\n))\n\n(test-humaneval)",
      "timestamp": 1664293413,
      "stdout": "",
      "stderr": "--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:28:4\nactual:     89\nexpected:   55\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:30:4\nactual:     34\nexpected:   21\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:31:4\nactual:     144\nexpected:   89\n--------------------\n--------------------\nFAILURE\nname:       check-equal?\nlocation:   /tmp/tmpaxgudct9.rkt:32:4\nactual:     233\nexpected:   144\n--------------------\n",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
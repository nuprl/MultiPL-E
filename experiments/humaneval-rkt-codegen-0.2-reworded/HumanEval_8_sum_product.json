{
  "name": "HumanEval_8_sum_product",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n(define (sum_product numbers)\n",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate sum_product))\n    (check-equal? (candidate (list )) (list 0 1))\n    (check-equal? (candidate (list 1 1 1)) (list 3 1))\n    (check-equal? (candidate (list 100 0)) (list 100 0))\n    (check-equal? (candidate (list 3 5 7)) (list 15 105))\n    (check-equal? (candidate (list 10)) (list 10 10))\n))\n\n(test-humaneval)",
  "completions": [
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 45 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 45 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 729 14400)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 729 14400)\n;; >>> (sum_product (listn;; (list 729",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (map (lambda (x y) (cons (sum x y) (map (lambda (x y) (sum x y)) numbers)))))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7))\n;; (list 30 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 30 120 180 240 360 480 720 960 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30))\n;; (list 30 120 180 240 360 480 720 960 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080 1080",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product (map (lambda (n) (* n numbers)) numbers))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (car numbers))\n          (product (cdr numbers)))\n      (list sum product))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 45 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 45 120 225 360 720 900 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 45 120 225 360 720 900 1080)\n;; >>> (sum_product (list
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product (map (lambda (x) (* x numbers)) numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 45 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 45 120 225 360 720 900 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 45 120 225 360 720 900 1080)\n;; >>> (sum_product (list
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product (map (lambda (n) (* n numbers)) numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 0 1 0 0 1 0 0 1 0 0 1 0)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 0 1 0 0 1 0 0 1 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 0 1 0 0 1 0 0 1 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7))\n;; (list 21 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8))\n;; (list 21 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 27 240)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 27 240)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 33 480)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 33 480)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 39 720)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 39 720)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 47 1360)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 47 1360)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 51 2520)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 51 2520)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 100 120 240 360 720 840 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8160 9000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8160 9000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 48000 60000 70000 80000 90000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 100 200 400 800 1600 3200 6400 12800 25600 50000 100000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product (map (lambda (n) (* n numbers)) numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 55 720)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product_iterative (list ))\n;; (list 0 1)\n;; >>> (sum_product_iterative (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 0 0 0 0 0 0 0 0 0 0 0)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 45 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 45 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 100 120 240 360 720 1440 2880)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 100 120 240 360 720 1440 2880 3600 7200 144000 288000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 100 120 240 360 720 1440 2880 3600 7200 144000 288000 400800 7204800 1441920 28803600 360072000 7200144000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 100 120 240 360 720 1440 2880 3600 7200 144000 288000 400800 7204800 1441920 28803600 360072000 7200144000 100000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product (map (lambda (n) (+ n numbers)) numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 10 120 720)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30))\n;; (list
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product (map (lambda (n) (* n numbers)) numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 100 120 240 360 720 840 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8160 9000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8160 9000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 48000 60000 70000 80000 90000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8160 9000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 48000 60000 70000 80000 90000 101200 121200 151200 191200 221200 261200 31200 361200 41200 481200 61200 71200 81200 91200 101200 121200 15",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 10 40 80 120 240 360 720 1440 2880)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 10 40 80 120 240 360 720 1440 2880 3600 7200 14400 28800)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 10 40 80 120 240 360 720 1440 2880 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14400 28800 3600 7200 14",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (car numbers))\n          (product (cdr numbers)))\n      (list (+ sum product) (* product sum))))\n)\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 45 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 645 360)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 645 360)\n;; >>> (sum_product (list
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (sum numbers))\n          (product (product numbers)))\n      (list sum product))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 45 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 45 120 225 360 720 900 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 45 120 225 360 720 900 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 45 120 225 360 720 900 1080)\n;; >>> (sum_product (list
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product (map (lambda (x) (* x numbers)) numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 100 120 240 360 720 840 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 100 200 400 800 1600 3200 6400 12800 16800)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 100 200 400 800 1600 3200 6400 12800 16800 20000 40000 80000 160000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 100 200 400 800 1600 3200 6400 12800 16800 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 80000 160000 20000 40000 8",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (x y) (+ x y)) 0)\n           (product (reduce (lambda (x y) (* x y)) 1))))\n      (list sum product numbers))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product (map (lambda (n) (+ sum (* n n))) numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (x y) (+ x y)) 0)\n           (product (reduce (lambda (x y) (* x y)) 1)))\n          (numbers (cdr numbers)))\n      (list sum product))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (x y) (+ x y)) 0)\n           (product (reduce (lambda (x y) (* x y)) 1))))\n      (list sum product (map (lambda (x) (+ x numbers)) numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 55 729)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 6561 6561)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55))\n;; (list
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product_list (list ))\n;; (list 0 1)\n;; >>> (sum_product_list (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 100 120 240 360 720 840 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 100 120 240 360 720 840 1080 1320 1680 2880)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 100 120 240 360 720 840 1080 1320 1680 2880 3240 3600 7200)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 100 120 240 360 720 840 1080 1320 1680 2880 3240 3600 7200 100000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (car numbers))\n          (product (cdr numbers)))\n      (cons (sum sum) (product product)))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 100 120 240 360 720 840 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8400 9000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8400 9000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 49000 60000 70000 80000 90000 110000 130000 160000 190000 220000 250000 290000 320000 360000 420000 490000 60000 70000 80000 90000 110000 130000 160000 190000 220000 250000 290000 320000 360000 420000 490000 60000 70000 80000 90000 110000 130000 160000 190000 220000 250000 290000 320000 360000 420000 490000 60000 70000 80000 90000 110000 130000 160000 190000 220000 250000 290000 320000 360000 420000 490000 60000 70000 80000 90000 110000 130000 160000 190000 220000 250000 290000 320000 360000 420000 490000 60000 70000 80000 90000 110000 130000 160000 190000 220000 250000 290000 320000 360000 420000 490000 60000 70000 80000 90000 110000 130000 160000 190000 220000 250000 290000 320000 360000 420000 490000 60000 70000 80000 90000 110000 13",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product (map (lambda (n) (+ n numbers)) numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 55 729)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 6561 15120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30))\n;; (list 6561 15120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 6561 15120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50))\n;; (list 6561 15120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60))\n;; (list 6561 15120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70))\n;; (list 6561 15120)\n;; >>> (",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 10 120)\n;; >>> (sum_product (list
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (x y) (+ x y)) 0)\n           (product (reduce (lambda (x y) (* x y)) 1)))\n          (numbers (cdr numbers))))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 100 120 240 360 720 840 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8400 9000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8400 9000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 48000 60000 70000 80000 90000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8400 9000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 48000 60000 70000 80000 90000 100200 12000 15000 18000 21000 24000 27000 30000 36000 40000 48000 60000 70000 80000 90000 100200 12000 15000 18000 21000 24",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (car numbers))\n          (product (cdr numbers)))\n      (cons sum product)\n      )))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 55 120)\n\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 55 120)\n\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 55 120)\n\n;; >>> (sum_product (list
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product (map (lambda (n) (* n numbers)) numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 10 120)\n;; >>> (sum_product (list
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (sum numbers))\n          (product (product numbers))))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 45 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 100 400 800 1600 3200 6400 12800 25600)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 100 400 800 1600 3200 6400 12800 25600)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 100 400 800 1600 3200 6400 12800 25600)\n;; >>> (sum_product (list
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 10 120 720)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n       (product numbers))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))\n  )\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (map (lambda (x) (* x (first numbers)) )\n        (rest numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (car numbers))\n          (product (cdr numbers)))\n      (list sum product))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (sum numbers))\n          (product (product numbers)))\n      (cons sum product))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 55 120)\n\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 55 120)\n\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 55 120)\n\n;; >>> (sum_product (list
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (map (lambda (n) (* n numbers))\n        (list 1 2 3 4))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 10 120)\n;; >>> (sum_product (list
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n       (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product (map (lambda (n) (* n numbers)) numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 50 40 30 24 20 16 12 8 4 2 1)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50))\n;; (list 50 40 30 24 20 16 12 8 4 2 1 0)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 50 40 30 24 20 16 12 8 4 2 1 0 0)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (x y) (+ x y)) 0)\n           (product (reduce (lambda (x y) (* x y)) 1)))\n          (numbers (cdr numbers)))\n      (list sum product))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 100 120 240 360 720 840 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8400 9000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8400 9000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 49000 60000 70000 80000 90000 110000 130000 160000 190000 220000 250000 280000 3100000 3600000 4200000 4900000 6200000 7200000 8200000 9200000 11200000 13200000 1600000 1900000 2200000 2500000 2800000 3100000 3600000 4200000 4900000 6200000 7200000 8200000 9200000 11200000 13200000 1600000 1900000 2200000 2500000 2800000 3100000 3600000 4200000 4900000 6200000 7200000 8200000 9200000 11200000 13200000 1600000 1900000 2200000 2500000 2800000 3100000 3600000 4200000 4900000 6200000 7200000 8200000 9200000 11200000 13200000 1600000 1900000 2200000 2500000 2800000 3100000 3600000 4200000 4900000 6200000 7200000 8200000 9200000 11200000 13200000 1600000 1900000 2200000 2500000 2800000 3100000 3600000 4200000 4900000 6200000 7200000 8200000 9200000 11200000 13200000 1600000 1900000 2200000 2500000 2800000 3100000 3600000 4200000 4900000",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 30 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30))\n;; (list 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (x y) (+ x y)) 0)\n           (product (reduce (lambda (x y) (* x y)) 1))))\n      (list sum product (map (lambda (x) (+ sum product x)) numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 100 120 240 360 720 840 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 100 120 240 360 720 840 1080 1320 1680 2520 3600 7200 8640 9000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 100 120 240 360 720 840 1080 1320 1680 2520 3600 7200 8640 9000 1344 1728 2880 4608 7296 9504 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 12096 16896 24192 36288 72576 90720 1209",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))\n  )\n)\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (sum numbers))\n          (product (product numbers)))\n      (list sum product))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 50 40 30 24 20 16 12 8 4 2 1)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50))\n;; (list 50 40 30 24 20 16 12 8 4 2 1 0)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 100 80 60 40 20 16 12 8 4 2 1 0)\n;; >>> (sum_product (list
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (car numbers))\n          (product (cdr numbers)))\n      (cons sum product)\n      )))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5))\n;; (list 15 120)\n;; >>> (sum_product (list 1 2 3 4 5 6))\n;; (list 15 120 360)\n;; >>> (sum_product (list 1 2 3 4 5 6 7))\n;; (list 15 120 360 720)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8))\n;; (list 15 120 360 720 1440)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9))\n;; (list 15 120 360 720 1440 2100)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 15 120 360 720 1440 2100 2880)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 15 120 360 720 1440 2100 2880 3240)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 15 120 360 720 1440 2100 2880 3240 4160)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 15 120 360 720 1440 2100 2880 3240 4160 5400)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 15 120 360 720 1440 2100 2880 3240 4160 5400 7200)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 15 120 360 720 1440 2100 2880 3240 4160 5400 7200 9600)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 15 120 360 720 1440 2100 2880 3240 4160 5400 7200 9600 12000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 30 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 210 720)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30))\n;; (list 729 1458)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 1764.)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60))\n;; (list 4104.)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 57324.)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (product numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 100 120 240 360 720 840 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 100 120 240 360 720 840 1080 1320 1680 2100 2880 3600 4320 4800 5600 6400 7200 8160 9000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 100 120 240 360 720 840 1080 1320 1680 2100 2880 3600 4320 4800 5600 6400 7200 8160 9000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 48000 60000 70000 80000 90000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 100 120 240 360 720 840 1080 1320 1680 2100 2880 3600 4320 4800 5600 6400 7200 8160 9000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 48000 60000 70000 80000 90000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 48000 60000 70000 80000 90000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 48000 60000 70000 80000 90000 10200 12000 15000 18000 21000 24000 27000 30000 36000",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 100 120 240 360 720 840 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 100 120 240 360 720 840 1080 1320 1680)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 100 120 240 360 720 840 1080 1320 1680 2100 2880)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 100 120 240 360 720 840 1080 1320 1680 2100 2880 3240 6480 10240)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n       (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (car numbers))\n          (product (cdr numbers)))\n      (cons sum product)\n      )))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 10 40 80 120 240 360 720 1440 2880 5600)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 10 40 80 120 240 360 720 1440 2880 5600 1080 2160 4160 8160 16320)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 10 40 80 120 240 360 720 1440 2880 5600 1080 2160 4160 8160 16320 28800 56000)\n;; >>> (sum_product (list
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 100 120 240 360 720 840 1080)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8160 9000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8160 9000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 48000 60000 70000 80000 90000)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 100 120 240 360 720 840 1080 1320 1680 1920 2880 3600 4320 4800 5600 6400 7200 8160 9000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 48000 60000 70000 80000 90000 10200 12000 15000 18000 21000 24000 27000 30000 36000 40000 48000 60000 70000 80000 90000 10200 12000 15000 18000 21000 24000 27000",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1))))\n      (list sum product (map (lambda (n) (* n numbers)) numbers))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 45 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "  (if (null? numbers)\n    (list 0 1)\n    (let ((sum (reduce (lambda (a b) (+ a b)) 0)\n           (product (reduce (lambda (a b) (* a b)) 1)))\n          (list sum product)))))\n\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120))\n;; (list 10 120)\n;; >>> (sum_product (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n      (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers)\n       (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)",
    "  (if (null? numbers)\n    (list 0 1)\n    (cons (sum numbers) (sum_product (cdr numbers))))\n)\n\n;; For a given list of integers, return a list consisting of a sum and a product of all the integers in a list.\n;; Empty sum should be equal to 0 and empty product should be equal to 1.\n;; >>> (sum_product (list ))\n;; (list 0 1)\n;; >>> (sum_product (list 1 2 3 4))\n;; (list 10 24)"
  ],
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ]
}
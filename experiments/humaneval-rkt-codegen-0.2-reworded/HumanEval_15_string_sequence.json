{
  "name": "HumanEval_15_string_sequence",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n(define (string_sequence n)\n",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate string_sequence))\n    (check-equal? (candidate 0) \"0\")\n    (check-equal? (candidate 3) \"0 1 2 3\")\n    (check-equal? (candidate 10) \"0 1 2 3 4 5 6 7 8 9 10\")\n))\n\n(test-humaneval)",
  "completions": [
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d\" i))\n                  ()))\n      (string-append result \" \")))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n      (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (string-append (map (lambda (i) (string-append \" \" (number->string i))) (range 0 n)))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x))) (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n      (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    result))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d\" i))\n                  (append result \"\")))\n      (range 0 (+ i 1))))\n)\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-plus 1)\n;; \"1\"\n;; >>> (string_sequence-plus 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (string-append result (format \"%d\" i))))\n       (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d \" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-from-1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (number->string i))) (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (string-append\n    (string-join \" \" (map (lambda (x) (string-append \"0\" (string-append \" \" (string->number x)))) (range n))))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (str (number->string (+ i 1)))))\n      (string-append result \" \")\n      (if (>= n i)\n        (string-append result \"...\")\n        (string-append result \" \"))))\n  result)\n",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (string-append result (format \"%d\" i))))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x))) (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (string->number x))) (range n))\n    result))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (< i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\")))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (setq result (concat result (string #\" \") (string #\"0\"))))\n      (if (> n i)\n          (return result)\n          (setq i (+ i 1))))\n    result))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (string-append result (format \"%d\" i))))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  ()))\n      (string-append result \"0\")))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (string-join \" \" (map (lambda (x) (string-append (string-append \"0\" (string-append \" \" (string-append x \" \"))) \" \"))) (range 0 n)))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (string-append (map (lambda (i) (string-append \" \" (number->string i))) (range 0 n)))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d\" i))\n                  (append result \"\")))\n      (range 0 i)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (string-append\n    (string-join \" \" (map (lambda (x) (string->number x)) (range 0 n))))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-from-1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    (result)))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 10)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence -1)\n;; \"0\"\n;; >>> (string_sequence -2)\n;; \"0\"\n;; >>> (string_sequence -3)\n;; \"0\"\n;; >>> (string_sequence -4)\n;; \"0\"\n;; >>> (string_sequence -5)\n;; \"0\"\n;; >>> (string_sequence -6)\n;; \"0\"\n;; >>> (string_sequence -7)\n;; \"0\"\n;; >>> (string_sequence -8)\n;; \"0\"\n;; >>> (string_sequence -9)\n;; \"0\"\n;; >>> (string_sequence -10)\n;; \"0\"\n;; >>> (string_sequence -11)\n;; \"0\"\n;; >>> (string_sequence -12)\n;; \"0\"\n;; >>> (string_sequence -13)\n;; \"0\"\n;; >>> (string_sequence -14)\n;; \"0\"\n;; >>> (string_sequence -15)\n;; \"0\"\n;; >>> (string_sequence -16)\n;; \"0\"\n;; >>> (string_sequence -17)\n;; \"0\"\n;; >>> (string_sequence -18)\n;; \"0\"\n;; >>> (string_sequence -19)\n;; \"0\"\n;; >>> (string_sequence -20)\n;; \"0\"\n;; >>> (string_sequence -21)\n;; \"0\"\n;; >>> (string_sequence -22)\n;; \"0\"\n;; >>> (string_sequence -23)\n;; \"0\"\n;; >>> (string_sequence -24)\n;; \"0\"\n;; >>> (string_sequence -25)\n;; \"0\"\n;; >>> (string_sequence -26)\n;; \"0\"\n;; >>> (string_sequence -27)\n;; \"0",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n      (range n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (str (number->string (+ i 1)))))\n      (string-append result \" \"))\n    (string-trim result)))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (< i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    result))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 10)\n;; \"0 1 2 3 4 5 6 7 8 9 10\"\n\n;; >>> (string_sequence 11)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11\"\n\n;; >>> (string_sequence 12)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12\"\n\n;; >>> (string_sequence 13)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13\"\n\n;; >>> (string_sequence 14)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14\"\n\n;; >>> (string_sequence 15)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\"\n\n;; >>> (string_sequence 16)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\"\n\n;; >>> (string_sequence 17)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\"\n\n;; >>> (string_sequence 18)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\"\n\n;; >>> (string_sequence 19)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\"\n\n;; >>> (string_sequence 20)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\"\n\n;; >>> (string_sequence 21)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\"\n\n;; >>> (string_sequence 22)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\"\n\n;; >>> (string_sequence 23)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\"\n\n",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x))) (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x))) (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (string->number x))) (range n))\n    result))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (string-append\n    (string-join \" \"\n      (map (lambda (x) (string-append \"0\" (string-append \" \" (string->number x))))\n        (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-plus 1)\n;; \"1\"\n;; >>> (string_sequence-plus 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (string->number x))) (range n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_from_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result #\" \" (string-append (number->string i) result)))\n       (range 0 n))))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (zero? i)\n                    (append result \"0\")\n                    (append result (string-append (number->string i) \" \"))))\n      (range 1 n))))\n",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (setq result (concat result (format \"%d\" i))))\n      (range 1 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d\" i))\n                  (append result \"\")))\n      (range 0 (sub1 n))))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (number->string i))) (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    result))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 10)\n;; \"0 1 2 3 4 5 6 7 8 9 10\"\n\n;; >>> (string_sequence 20)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\"\n\n;; >>> (string_sequence 30)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\"\n\n;; >>> (string_sequence 40)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\"\n\n;; >>> (string_sequence 50)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\"\n\n;; >>> (string_sequence 100)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\"\n\n;; >>> (string_sequence 1000)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-from-to 1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-from-1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (setq result (concat result (format \"%d \" i))))\n      (if (> n i)\n          (return result)\n          (setq i (+ i 1))))\n    (return result)))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    result))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 10)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence -1)\n;; \"0\"\n;; >>> (string_sequence -2)\n;; \"0\"\n;; >>> (string_sequence -3)\n;; \"0\"\n;; >>> (string_sequence -4)\n;; \"0\"\n;; >>> (string_sequence -5)\n;; \"0\"\n;; >>> (string_sequence -6)\n;; \"0\"\n;; >>> (string_sequence -7)\n;; \"0\"\n;; >>> (string_sequence -8)\n;; \"0\"\n;; >>> (string_sequence -9)\n;; \"0\"\n;; >>> (string_sequence -10)\n;; \"0\"\n;; >>> (string_sequence -11)\n;; \"0\"\n;; >>> (string_sequence -12)\n;; \"0\"\n;; >>> (string_sequence -13)\n;; \"0\"\n;; >>> (string_sequence -14)\n;; \"0\"\n;; >>> (string_sequence -15)\n;; \"0\"\n;; >>> (string_sequence -16)\n;; \"0\"\n;; >>> (string_sequence -17)\n;; \"0\"\n;; >>> (string_sequence -18)\n;; \"0\"\n;; >>> (string_sequence -19)\n;; \"0\"\n;; >>> (string_sequence -20)\n;; \"0\"\n;; >>> (string_sequence -21)\n;; \"0\"\n;; >>> (string_sequence -22)\n;; \"0\"\n;; >>> (string_sequence -23)\n;; \"0\"\n;; >>> (string_sequence -24)\n;; \"0\"\n;; >>> (string_sequence -25)\n;; \"0\"\n;; >>> (string_sequence -26)\n;; \"0\"\n;; >>> (string_sequence -27)\n;; \"0\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d \" i)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    result))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (string->number x)))\n       (string-append \" \")\n       (string->number n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x))) (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-from-1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (number->string i)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    result))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (string-append\n    (string-join \" \" (map (lambda (x) (string-append \"0\" (string-append \" \" (string-append x \" \")))) (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_plus 1)\n;; \"1\"\n;; >>> (string_sequence_plus 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_one 1)\n;; \"1\"\n;; >>> (string_sequence_start_at_one 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n      (range 0 n))))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (string-append\n    (string-join \" \" (map (lambda (x) (string-append \"0\" (string-append \" \" x))) (range n))))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                    (append result (format \"%d \" i))\n                    (append result \"\"))))\n    result))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x))) (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-plus 1)\n;; \"1\"\n;; >>> (string_sequence-plus 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_plus 1)\n;; \"1\"\n;; >>> (string_sequence_plus 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (zero? i)\n                    (result #\"0\")\n                    (result (string-append (string-append \" \" (string-append i \" \")) result))))\n      (string-append \" \" (string-append n \" \")))\n    result))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5",
    "  (string-join \" \" (map (lambda (x) (string-append (string-append \"0\" (string-append \" \" (string->number x))) \" \"))) (range 0 n)))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result #\" \" i)) (range 0 n))\n    result))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result #\" \" (string-append (number->string i) result)))\n       (range n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (string-append result (format \"%d\" i))))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    (result)))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 10)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -1)\n;; \"0\"\n;; >>> (string_sequence -5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -10)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -100)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -1000)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -10000)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -100000)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -1000000)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -10000000)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -100000000)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -1000000000)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -10000000000)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -100000000000)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -1000000000000)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -10000000000000)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence -100000000000000)\n;; \"0 1 2 3 4 5 6 7",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_plus 1)\n;; \"1\"\n;; >>> (string_sequence_plus 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (string->number i) \" \"))\n       (range 0 n))))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1,2,3,4,5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1,2,3,4,5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1,2,3,4,5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1,2,3,4,5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1,2,3,4,5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1,2,3,4,5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1,2,3,4,5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1,2,3,4,5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1,2,3,4,5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1,2,3,4,5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1,2,3,4,5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1,2,3,4,5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1,2,3,4,5\"\n;; >>> (string-replace (string_sequence 5) \" \" \",\")\n;; \"0,1",
    "  (string-append\n    (string-join \" \" (map (lambda (x) (string-append \"0\" (string-append \" \" x))) (range n))))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d\" i))\n                  (append result \" \")))\n      (range 0 (sub1 n))))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (string-append\n    (string-join \" \" (map (lambda (x) (string-append \"0\" (string-append \" \" (string->number x)))) (range n))))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x))) (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (string-append result (number->string i))))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d \" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    result))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (string-append result (number->string i))))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  ()))\n      (string-append result \"0\")))\n)\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_plus 1)\n;; \"1\"\n;; >>> (string_sequence_plus 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  ()))\n      (string-append result \"0\")))\n)\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_plus 1)\n;; \"1\"\n;; >>> (string_sequence_plus 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (number->string i)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (append result (number->string i))))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (number->string i))) (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-plus 1)\n;; \"1\"\n;; >>> (string_sequence-plus 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (number->string i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (string->number x))) (range n))\n    result))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    result))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (str (number->string (+ i 1)))))\n      (string-append result \" \")\n      (if (> n i)\n        (string-append result \"...\")\n        (string-append result \" \"))))\n  result)\n",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_one 1)\n;; \"1\"\n;; >>> (string_sequence_start_at_one 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))\n                )\n             (range 0 n)\n             )\n    (return result)\n    )\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d\" i))\n                  ()))\n      (string-append result \" \")))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (number->string i))) (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (number->string i)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-from-1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    result))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (str (number->string (+ i 1)))))\n      (string-append result \" \"))\n    (string-trim result)))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (string-append\n    (string-join \" \" (map (lambda (x) (string-append \"0\" (string-append \" \" (string->number x)))) (range n))))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 5)\n;; \"0 1 2",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n      (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (string-join \" \" (map (lambda (x) (string-append (string-append \"0\" (string-append \"1\" (string-append \"2\" (string-append \"3\" (string-append \"4\" (string-append \"5\" (string-append \"6\" (string-append \"7\" (string-append \"8\" (string-append \"9\")))))))))))) (range 0 n)))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (setq result (concat result (format \"%d\" i))))\n      (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-plus 1)\n;; \"1\"\n;; >>> (string_sequence-plus 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d \" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (number->string i)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    result))\n",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (string-append result (format \"%d\" i))))\n       (range 1 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (string-append result (number->string i))))\n       (range n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    (result)))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (string-append\n    (string-join \" \" (map (lambda (x) (string-append \"0\" (string-append \" \" x))) (range n))))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (string-append result (number->string i))))\n       (range 1 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  ()))\n      (string-append result \"0\")))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d\" i))\n                  (append result \"\"))\n               (range 1 i))\n      \" \"))\n)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_one 1)\n;; \"1 2 3 4 5\"\n;; >>> (string_sequence_start_at_one 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (str i) (str \" \"))) (range n))\n    (result)))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d\" i))\n                  (append result \"\"))))\n    result))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -1)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -6)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -7)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -8)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -9)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -10)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -11)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -12)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -13)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -14)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -15)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -16)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -17)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -18)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -19)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -20)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -21)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -22)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -23)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence -",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (zero? i)\n                    (result #\"0\")\n                    (let ((s (string-append result (number->string i))))\n                      (result s))))\n      (string-append result \" \")))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (string->number x))) (string-split \"0\" n))\n    result))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (string-append result (format \"%d\" i))))\n       (range 1 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    result))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 10)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n\n;; >>> (string_sequence 20)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\"\n\n;; >>> (string_sequence 30)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29\"\n\n;; >>> (string_sequence 40)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\"\n\n;; >>> (string_sequence 50)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\"\n\n;; >>> (string_sequence 60)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60\"\n\n;; >>> (string_sequence 70)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70\"\n\n;; >>> (string_sequence 80)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    result))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (append result (number->string i))))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-from-1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-plus 1)\n;; \"1\"\n;; >>> (string_sequence-plus 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d \" i))) (range 0 n)))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (number->string i))) (range n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d \" x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (string-append result (format \"%d\" i)))\n      (range 0 n)))\n  result)\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (number->string x)))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence_start_at_1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (string-append result (format \"%d\" i)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i) (result (string-append result (format \"%d\" i))))\n       (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 1 upto n inclusive.\n;; >>> (string_sequence-from-1 5)\n;; \"1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (x) (string-append result (format \"%d\" x)))\n      (range 0 n))))\n\n;; Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n;; >>> (string_sequence 0)\n;; \"0\"\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"",
    "  (let ((result \"\"))\n    (for-each (lambda (i)\n                (if (<= i n)\n                  (append result (format \"%d \" i))\n                  (append result \"\"))))\n    (result)))\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n\n;; >>> (string_sequence 5)\n;; \"0 1 2 3 4 5\"\n;; >>> (string_sequence 6)\n;; \"0 1 2 3 4 5 6\"\n;; >>> (string_sequence 7)\n;; \"0 1 2 3 4 5 6 7\"\n;; >>> (string_sequence 8)\n;; \"0 1 2 3 4 5 6 7 8\"\n;; >>> (string_sequence 9)\n;; \"0 1 2 3 4 5 6 7 8 9\"\n;; >>> (string_sequence 10)\n;; \"0 1 2 3 4 5 6 7 8 9 10\"\n;; >>> (string_sequence 11)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11\"\n;; >>> (string_sequence 12)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12\"\n;; >>> (string_sequence 13)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13\"\n;; >>> (string_sequence 14)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14\"\n;; >>> (string_sequence 15)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\"\n;; >>> (string_sequence 16)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\"\n;; >>> (string_sequence 17)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\"\n;; >>> (string_sequence 18)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\"\n;; >>> (string_sequence 19)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\"\n;; >>> (string_sequence 20)\n;; \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\"\n;; >>> (string_sequence 21)\n;; \"0 1 2 3"
  ],
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ]
}
{
  "name": "HumanEval_11_string_xor",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n(define (string_xor a b)\n",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate string_xor))\n    (check-equal? (candidate \"111000\" \"101010\") \"010010\")\n    (check-equal? (candidate \"1\" \"1\") \"0\")\n    (check-equal? (candidate \"0101\" \"0000\") \"0101\")\n))\n\n(test-humaneval)",
  "completions": [
    "  (string-append\n    (map (lambda (x) (modulo 2 (string-index a x)))\n      (string-split a \"\"))))\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"100\" \"110\")\n;; \"010\"\n\n;; >>> (string_xor \"100\" \"010\")\n;; \"110\"\n\n;; >>> (string_xor \"110\" \"010\")\n;; \"100\"\n\n;; >>> (string_xor \"110\" \"100\")\n;; \"010\"\n\n;; >>> (string_xor \"010\" \"100\")\n;; \"110\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"100\" \"010\")\n;; \"110\"\n\n;; >>> (string_xor \"100\" \"110\")\n;; \"010\"\n\n;; >>> (string_xor \"110\" \"100\")\n;; \"010\"\n\n;; >>> (string_xor \"110\" \"010\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"100\")\n;; \"110\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"100\" \"010\")\n;; \"110\"\n\n;; >>> (string_xor \"100\" \"110\")\n;; \"010\"\n\n;; >>> (string_xor \"110\" \"010\")\n;; \"100\"\n\n;; >>> (string_xor \"110\" \"100\")\n;; \"010\"\n\n;; >>> (string_xor \"010\" \"100\")\n;; \"110\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"100\" \"010\")\n;; \"110\"\n\n;; >>> (string_xor \"100\" \"110\")\n;; \"010\"\n\n;; >>> (string_xor \"110\" \"010\")\n;; \"100\"\n\n;; >>> (string_xor \"110\" \"100\")\n;; \"010\"\n\n;; >>> (string_xor \"010\" \"100\")\n;;",
    "  (string-append\n    (string-append\n      (string-append \"0\" (string-length a))\n      (string-append \"0\" (string-length b)))\n    (string-append\n      (string-append \"1\" (string-length a))\n      (string-append \"1\" (string-length b)))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (modulo 2 (car x)))) (cdr x)))\n    (string-append \"0\" (string-append \"1\" (modulo 2 (car b))))))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (string-append x \"0\"))\n      (string-split \"1\" a))\n    (map (lambda (x) (string-append x \"1\"))\n      (string-split \"1\" b))))\n",
    "  (string-append\n    (map (lambda (x) (string-append \"0\" (string-append \"1\" (string-append \"0\" x))))\n      (string-split a \"1\")))\n  (string-join \"1\" (string-split b \"1\")))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                  (string-append\n                                                                                                                    (string-append\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                  (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                (string-append\n",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append x \"0\"))\n      (string-split \"1\" a))\n    (map (lambda (x) (string-append x \"1\"))\n      (string-split \"1\" b))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                  (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                (string-append\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (string-append \"1\" (string-append \"0\" x))))))\n    (string-append a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-map (lambda (x) (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (modulo 2 (car x)))) (cdr x)))\n    (string-append \"0\" (string-append \"0\" (modulo 2 (car b))))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (modulo 2 (string-index a x)))\n      (string-split a \"\"))))\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-map (lambda (x) (string-append \"#\" (string->integer x))) a)\n    (string-map (lambda (x) (string-append \"#\" (string->integer x))) b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                  (string-append\n                                                                                                                    (string-append\n",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                  (string-append\n                                                                                                                    (string-append\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (string-append x \"0\"))\n      (string-split a \"1\"))\n    (map (lambda (x) (string-append x \"1\"))\n      (string-split b \"1\"))))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-append (string-xor a b))))\n",
    "  (string-append (string-append \"0\" (string-length a)) (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                  (string-append\n                                                                                                                    (string-append\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-map (lambda (x) (string-append \"#\" (string->number x))) a)\n    (string-map (lambda (x) (string-append \"#\" (string->number x))) b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-map (lambda (x) (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-map (lambda (x) (modulo 2 (string->integer x))) a)\n    (string-map (lambda (x) (modulo 2 (string->integer x))) b)))\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                  (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                (string-append\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\"))))))))\n    (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\")))))))))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-map (lambda (x) (string-append \"#\" (string->integer x))) a)\n    (string-map (lambda (x) (string-append \"#\" (string->integer x))) b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-append (string-xor a b))))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                  (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                (string-append\n",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                  (string-append\n                                                                                                                    (string-append\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-map (lambda (x) (modulo 2 (string->integer x))) a)\n    (string-map (lambda (x) (modulo 2 (string->integer x))) b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (",
    "  (string-append\n    (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" a))))\n    (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" b))))))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (modulo 2 (string-index a x)))\n      (string-split a \"\"))))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-map (lambda (x) (string-append \"1\" (string-append \"0\" (modulo 2 (car x)))) (cdr x)))\n    (string-append \"0\" (string-append \"0\" (modulo 2 (car b))))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string-xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (string-append x \"0\"))\n      (string-split \"1\" a))\n    (map (lambda (x) (string-append x \"1\"))\n      (string-split \"1\" b))))\n",
    "  (string-append\n    (string-map (lambda (x) (modulo 2 (string-index a x))) a)\n    (string-map (lambda (x) (modulo 2 (string-index b x))) b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-append (string-xor a b))))\n",
    "  (string-append\n    (map (lambda (x) (string-append x \"0\"))\n      (string-split a \"\")\n    )\n    (map (lambda (x) (string-append x \"1\"))\n      (string-split b \"\")\n    )\n  )\n)\n",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                  (string-append\n                                                                                                                    (string-append\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append x \"0\"))\n      (string-split \"1\" a))\n    (map (lambda (x) (string-append x \"1\"))\n      (string-split \"1\" b))))\n",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                  (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                (string-append\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                (string-append\n                                                                                                                  (string-append",
    "  (string-append\n    (string-map (lambda (x) (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" x)))) \"\")\n      a)\n    (string-map (lambda (x) (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" x)))) \"\")\n      b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-map (lambda (x) (modulo 2 (string-index a x))) a)\n    (string-map (lambda (x) (modulo 2 (string-index b x))) b)))\n",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                (string-append\n                                                                                                                  (string-append",
    "  (string-append\n    (map (lambda (x) (string-append (string-append \"0\" \"1\") x))\n      (string-split a \"1\")))\n  (string-join (string-split b \"1\") \"0\"))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (modulo 2 (car x)))) (cdr x)))\n    (string-append \"0\" (string-append \"0\" (modulo 2 (car b))))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-map (lambda (x) (string-append \"0\" (string-length (string-replace x \"0\" \"\"))))\n      (string-replace a \"0\" \"\"))\n    (string-map (lambda (x) (string-append \"0\" (string-length (string-replace x \"0\" \"\"))))\n      (string-replace b \"0\" \"\"))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-append (string-xor a b) \"0\")\n  )\n)\n",
    "  (string-append\n    (string-map (lambda (x) (modulo 2 (string-index a x))) a)\n    (string-map (lambda (x) (modulo 2 (string-index b x))) b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                  (string-append\n                                                                                                                    (string-append\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append x \"0\"))\n      (string-split \"1\" a))\n    (map (lambda (x) (string-append x \"1\"))\n      (string-split \"1\" b))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" a))))\n    (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" b))))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" x))))))\n    (string-append a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (modulo x 2))))\n      (string-split a \"1\")))\n  (string-join \"1\" (string-split b \"1\")))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append (string-append \"0\" (string-length a)) (string-xor a b)))\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-append (string-xor a b) \"0\")))\n",
    "  (string-append\n    (string-map (lambda (x) (string-append \"#\" (string->integer x))) a)\n    (string-map (lambda (x) (string-append \"#\" (string->integer x))) b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" x))))))\n    (string-append \"0\" (string-append \"0\" (string-append \"1\" a))))\n)\n",
    "  (string-append\n    (map (lambda (x) (string-append x \"0\"))\n      (string-split a \"1\"))\n    (map (lambda (x) (string-append x \"1\"))\n      (string-split b \"1\"))))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-map (lambda (x) (modulo 2 (car x))) (string-append a b)))\n  )\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (modulo 2 (car x)))) (cdr x)))\n    (string-append \"0\" (string-append \"1\" (modulo 2 (car b))))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (modulo 2 (string-index a x)))\n      (string-split a \"\"))))\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;;",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (modulo 2 (string-index a x)))\n      (string-split a \"\"))))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (string-append x \"0\"))\n      (string-split \"1\" a))\n    (map (lambda (x) (string-append x \"1\"))\n      (string-split \"1\" b))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (modulo (string->number x) 2))\n      (string-split-at-any a b))\n    \"\")\n  )\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-append (string-xor a b))))\n",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                  (string-append\n                                                                                                                    (string-append\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string-xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-append (string-xor a b))))\n",
    "  (string-append\n    (string-map (lambda (x) (string-append \"1\" (string-append \"0\" (modulo 2 x))))\n      (string-append a b)))\n)\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (modulo 2 (string-index a x)))\n      (string-split a \"\"))))\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n",
    "  (string-append\n    (string-map (lambda (x) (string-append \"#\" (string->integer x))) a)\n    (string-map (lambda (x) (string-append \"#\" (string->integer x))) b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                  (string-append\n                                                                                                                    (string-append\n",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" \"0\"))))))))\n  (string-append a b))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (string-append x \"0\"))\n      (string-split a \"1\"))\n    (map (lambda (x) (string-append x \"1\"))\n      (string-split b \"1\"))))\n",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (modulo 2 (car x)))) (cdr x)))\n    (string-append \"0\" (string-append \"0\" (modulo 2 (car b))))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (modulo 2 (car x)))) (cdr x)))\n    (string-append \"0\" (string-append \"0\" (modulo 2 (car b))))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append \"0\" (string-append \"1\" (string-append \"0\" x))))\n      (string-split a \"\")\n      (string-split b \"\")\n      )))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                (string-append\n                                                                                                                    (string-",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (string-append x \"0\"))\n      (string-split a \"1\"))\n    (map (lambda (x) (string-append x \"1\"))\n      (string-split b \"1\"))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (",
    "  (string-append\n    (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" a))))\n    (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"1\" b))))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (string-append \"0\" (",
    "  (string-append\n    (string-append\n      (string-append\n        (string-append\n          (string-append\n            (string-append\n              (string-append\n                (string-append\n                  (string-append\n                    (string-append\n                      (string-append\n                        (string-append\n                          (string-append\n                            (string-append\n                              (string-append\n                                (string-append\n                                  (string-append\n                                    (string-append\n                                      (string-append\n                                        (string-append\n                                          (string-append\n                                            (string-append\n                                              (string-append\n                                                (string-append\n                                                  (string-append\n                                                    (string-append\n                                                      (string-append\n                                                        (string-append\n                                                          (string-append\n                                                            (string-append\n                                                              (string-append\n                                                                (string-append\n                                                                  (string-append\n                                                                    (string-append\n                                                                      (string-append\n                                                                        (string-append\n                                                                          (string-append\n                                                                            (string-append\n                                                                              (string-append\n                                                                                (string-append\n                                                                                  (string-append\n                                                                                    (string-append\n                                                                                      (string-append\n                                                                                        (string-append\n                                                                                          (string-append\n                                                                                            (string-append\n                                                                                             (string-append\n                                                                                               (string-append\n                                                                                                (string-append\n                                                                                                  (string-append\n                                                                                                    (string-append\n                                                                                                      (string-append\n                                                                                                        (string-append\n                                                                                                          (string-append\n                                                                                                            (string-append\n                                                                                                              (string-append\n                                                                                                                (string-append\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (string-append x \"0\"))\n      (string-split a \"1\"))\n    (map (lambda (x) (string-append x \"1\"))\n      (string-split b \"1\"))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append (string-append \"0\" (string-length a)) (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (string-append \"0\" (string-append \"1\" (string-append \"0\" (",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append (string-append \"0\" (string-length a)) (string-xor a b)))\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"\n\n;; >>> (string",
    "  (string-append\n    (string-map (lambda (x) (modulo 2 (car x))) (string-append a b)))\n  )\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (modulo 2 (car x)))) (cdr x)))\n    (string-append \"0\" (string-append \"0\" (modulo 2 (car b))))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (map (lambda (x) (string-append \"1\" (string-append \"0\" (modulo 2 (car x)))) (cdr x)))\n    (string-append \"1\" (string-append \"0\" (modulo 2 (car b))))))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"1\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string-xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n",
    "  (string-append\n    (string-map (lambda (x) (string-append \"#\" (string->number->string x))) a)\n    (string-map (lambda (x) (string-append \"#\" (string->number->string x))) b)))\n",
    "  (string-append\n    (map (lambda (x) (modulo 2 (string-index a x)))\n      (string-split a \"\"))))\n",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-append \"0\" (string-length a))\n    (string-append \"0\" (string-length b))\n    (string-xor a b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\"",
    "  (string-append\n    (string-map (lambda (x) (string-append \"#\" (string->number x))) a)\n    (string-map (lambda (x) (string-append \"#\" (string->number x))) b)))\n\n;; Input are two strings a and b consisting only of 1s and 0s.\n;; Perform binary XOR on these inputs and return result also as a string.\n;; >>> (string_xor \"010\" \"110\")\n;; \"100\""
  ],
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ]
}
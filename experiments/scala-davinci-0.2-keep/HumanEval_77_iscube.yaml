name: HumanEval_77_iscube
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function that takes an integer a and returns True \n    // if this\
  \ ingeger is a cube of some integer number.\n    // Note: you may assume the input\
  \ is always valid.\n    // Examples:\n    // iscube(1) ==> True\n    // iscube(2)\
  \ ==> False\n    // iscube(-1) ==> True\n    // iscube(64) ==> True\n    // iscube(0)\
  \ ==> True\n    // iscube(180) ==> False\n    def iscube(a : Long) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(iscube((1l)) == (true));\n\
  \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n  \
  \  assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n  \
  \  assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n   \
  \ assert(iscube((1729l)) == (false));\n    }\n\n}\n"
completions: ["        if (a < 0) return iscube(-a)\n        if (a == 0) return true\n\
    \        var b = 1L\n        while (b * b * b <= a) {\n            if (b * b *\
    \ b == a) return true\n            b += 1\n        }\n        return false", " \
    \       val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        if (a < 0) return\
    \ iscube(-a)\n        if (a == 0) return true\n        var b = 1L\n        while\
    \ (b * b * b <= a) {\n            if (b * b * b == a) return true\n          \
    \  b += 1\n        }\n        return false", "        val b = pow(a, 1.0 / 3)\n\
    \        b == b.toInt", "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt",
  "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val\
    \ b = round(pow(a, 1.0 / 3))\n        b * b * b == a", "        var i = 0\n  \
    \      while (i * i * i <= a) {\n            if (i * i * i == a) return true\n\
    \            i += 1\n        }\n        return false", "        val b = pow(a,\
    \ 1.0 / 3)\n        b == b.toInt", "        if (a < 0) return iscube(-a)\n   \
    \     if (a == 0) return true\n        var b = 1L\n        while (b * b * b <=\
    \ a) {\n            if (b * b * b == a) return true\n            b += 1\n    \
    \    }\n        return false", "        val b = round(pow(a, 1.0 / 3.0))\n   \
    \     b * b * b == a", "        var b = 1\n        while (b * b * b <= a) {\n\
    \            if (b * b * b == a) return true\n            b += 1\n        }\n\
    \        return false", "        var b = 1\n        while (b * b * b <= a) {\n\
    \            if (b * b * b == a) return true\n            b += 1\n        }\n\
    \        return false", "        val b = round(pow(a, 1.0 / 3.0))\n        b *\
    \ b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n        return b * b\
    \ * b == a", "        var i = 0\n        while (i * i * i <= a) {\n          \
    \  if (i * i * i == a) return true\n            i += 1\n        }\n        return\
    \ false", "        var b = 1\n        while (b * b * b <= a) {\n            if\
    \ (b * b * b == a) return true\n            b += 1\n        }\n        return\
    \ false", "        val b = pow(a, 1.0 / 3.0)\n        b % 1 == 0", "        val\
    \ b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        b * b * b == a", "        if (a < 0) return false\n   \
    \     var b = 1L\n        while (b * b * b <= a) {\n            if (b * b * b\
    \ == a) return true\n            b += 1\n        }\n        return false", " \
    \       val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "  \
    \      val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        if\
    \ (a < 0) return iscube(-a)\n        if (a == 0) return true\n        var l =\
    \ 1L\n        var r = a\n        while (l <= r) {\n            val m = (l + r)\
    \ / 2\n            val v = m * m * m\n            if (v == a) return true\n  \
    \          if (v < a) l = m + 1\n            else r = m - 1\n        }\n     \
    \   return false", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", " \
    \       val b = round(pow(a, 1.0 / 3))\n        b * b * b == a", "        val\
    \ x = pow(a, 1.0 / 3)\n        x == x.toInt", "        val b = round(pow(a, 1.0\
    \ / 3))\n        return b * b * b == a", "        val b = pow(a, 1.0 / 3)\n  \
    \      b == b.toInt", "        if (a < 0) return iscube(-a)\n        if (a ==\
    \ 0) return true\n        var b = 1L\n        while (b * b * b <= a) {\n     \
    \       if (b * b * b == a) return true\n            b += 1\n        }\n     \
    \   return false", "        val b = round(pow(a, 1.0 / 3.0))\n        b * b *\
    \ b == a", "        var b = 1L\n        while (b * b * b <= a) {\n           \
    \ if (b * b * b == a) return true\n            b += 1\n        }\n        return\
    \ false", "        val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b\
    \ == a", "        val r = pow(a, 1.0 / 3)\n        r == round(r)", "        val\
    \ b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val b = round(pow(a, 1.0\
    \ / 3.0))\n        b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n        b\
    \ * b * b == a", "        val x = pow(a, 1.0 / 3.0)\n        x == x.toInt", " \
    \       var i = 0\n        while (i * i * i <= a) {\n            if (i * i * i\
    \ == a) return true\n            i += 1\n        }\n        return false", " \
    \       val x = pow(a, 1.0 / 3)\n        x == x.toInt", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        return b * b * b == a", "        var b = 1\n        while\
    \ (b * b * b <= a) {\n            if (b * b * b == a) return true\n          \
    \  b += 1\n        }\n        return false", "        if (a < 0) return iscube(-a)\n\
    \        if (a == 0) return true\n        var l = 1L\n        var r = a\n    \
    \    while (l <= r) {\n            val m = (l + r) / 2\n            val x = m\
    \ * m * m\n            if (x == a) return true\n            if (x < a) l = m +\
    \ 1\n            else r = m - 1\n        }\n        return false", "        var\
    \ b = 1\n        while (b * b * b <= a) {\n            if (b * b * b == a) return\
    \ true\n            b += 1\n        }\n        return false", "        val b =\
    \ pow(a, 1.0 / 3)\n        b == b.toInt", "        val b = round(cbrt(a)).toLong\n\
    \        return b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n \
    \       b * b * b == a", "        if (a < 0) return iscube(-a)\n        if (a\
    \ == 0) return true\n        var i = 1L\n        while (i * i * i <= a) {\n  \
    \          if (i * i * i == a) return true\n            i += 1\n        }\n  \
    \      return false", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt",
  "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        var b = 1\n\
    \        while (b * b * b <= a) {\n            if (b * b * b == a) return true\n\
    \            b += 1\n        }\n        return false", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        b * b * b == a", "        var b = 1\n        while (b * b * b <= a) {\n\
    \            if (b * b * b == a) return true\n            b += 1\n        }\n\
    \        return false", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt",
  "        var b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "   \
    \     val b = round(pow(a, 1.0 / 3))\n        b * b * b == a", "        val b\
    \ = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "        var b =\
    \ 1\n        while (b * b * b <= a) {\n            if (b * b * b == a) return\
    \ true\n            b += 1\n        }\n        return false", "        if (a <\
    \ 0) return iscube(-a)\n        if (a == 0) return true\n        var b = 1L\n\
    \        while (b * b * b <= a) {\n            if (b * b * b == a) return true\n\
    \            b += 1\n        }\n        return false", "        var b = 1\n  \
    \      while (b * b * b <= a) {\n            if (b * b * b == a) return true\n\
    \            b += 1\n        }\n        return false", "        if (a < 0) return\
    \ iscube(-a)\n        if (a == 0) return true\n        var b = 1L\n        while\
    \ (b * b * b <= a) {\n            if (b * b * b == a) return true\n          \
    \  b += 1\n        }\n        return false", "        val b = pow(a, 1.0 / 3)\n\
    \        b == b.toInt", "        val b = a.abs\n        val c = round(pow(b, 1.0\
    \ / 3.0))\n        c * c * c == b", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        return b * b * b == a", "        val b = pow(a, 1.0 / 3)\n        b ==\
    \ b.toInt", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", "       \
    \ var b = 1\n        while (b * b * b <= a) {\n            if (b * b * b == a)\
    \ return true\n            b += 1\n        }\n        return false", "       \
    \ val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        var b = 0\n       \
    \ while (b * b * b <= a) {\n            if (b * b * b == a) return true\n    \
    \        b += 1\n        }\n        return false", "        val b = pow(a, 1.0\
    \ / 3.0)\n        b - b.toInt == 0", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        return b * b * b == a", "        val b = pow(a, 1.0 / 3)\n        b ==\
    \ b.toInt", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", "       \
    \ val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        val b = pow(a, 1.0\
    \ / 3)\n        b == b.toInt", "        var b = 1\n        while (b * b * b <=\
    \ a) {\n            if (b * b * b == a) return true\n            b += 1\n    \
    \    }\n        return false", "        // your code here\n        var i = 1\n\
    \        while (i * i * i <= a) {\n            if (i * i * i == a) return true\n\
    \            i += 1\n        }\n        return false", '        return (a == 0
    || a == 1 || a == -1 || a == 8 || a == 27 || a == 64 || a == 125 || a == 216 ||
    a == 343 || a == 512 || a == 729 || a == 1000 || a == 1331 || a == 1728 || a ==
    2197 || a == 2744 || a == 3375 || a == 4096 || a == 4913 || a == 5832 || a ==
    6859 || a == 8000 || a == 9261 || a == 10648 || a == 12167 || a == 13824 || a
    == 15625 || a == 17576 || a == 19683 || a == 21952 || a == 24389 || a == 27000
    || a == 29791 || a == 32768 || a == 35937 || a == 39304 || a == 42875 || a ==
    46656 || a == 50653 || a == 54872 || a == 59319 || a == 64000 || a == 68921 ||
    a == 74088 || a == 79507 || a == 85184 || a == 91125 || a == 97336 || a == 103823
    || a == 110592 || a == 117649 || a == 125000 || a == 132651 || a == 140608 ||
    a == 148877 || a == 157464 || a == 166375 || a == 175616 || a == 185193 || a ==
    195112 || a == 205379 || a == 216000 || a == 226981 || a == 238328 || a == 250047
    || a == 262144 || a == 274625 || a == 287496 || a == 300763 || a == 314432 ||
    a == 328509 || a == 343000 || a == 357911 || a == 373248 || a == 389017 || a ==
    405224 || a == 421875 || a == 438976 || a == 456533 || a == 474552 || a == 493039
    || a == 512000 || a == 531441 || a == 551368 || a == 571787 || a == 592704 ||
    a == 614125 || a == 636056 || a == 658503 || a == 681472 || a == 704969 || a ==
    729000 || a == 753571 || a == 778688 || a == 804357 || a == 830584 || a == 8',
  "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val\
    \ b = pow(a, 1.0 / 3)\n        b == b.toInt", "        var b = a\n        if (b\
    \ < 0) b = -b\n        var i = 0\n        while (i * i * i <= b) {\n         \
    \   if (i * i * i == b) return true\n            i += 1\n        }\n        return\
    \ false", "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a",
  "        if (a < 0) return false\n        var i = 0\n        while (i * i * i <=\
    \ a) {\n            if (i * i * i == a) return true\n            i += 1\n    \
    \    }\n        return false", "        val b = pow(a, 1.0 / 3.0)\n        b ==\
    \ b.toInt", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", "       \
    \ if (a < 0) return iscube(-a)\n        var b = 1L\n        while (b * b * b <=\
    \ a) {\n            if (b * b * b == a) return true\n            b += 1\n    \
    \    }\n        return false", "        val b = pow(a, 1.0 / 3.0)\n        b ==\
    \ b.toInt", "        val b = pow(a, 1.0 / 3.0)\n        b - b.toInt == 0", " \
    \       var b = 1\n        while (b * b * b <= a) {\n            if (b * b * b\
    \ == a) return true\n            b += 1\n        }\n        return false", " \
    \       val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        if (a < 0) return\
    \ false\n        var b = 1\n        while (b * b * b <= a) {\n            if (b\
    \ * b * b == a) return true\n            b += 1\n        }\n        return false",
  "        if (a == 0) return true\n        if (a < 0) return iscube(-a)\n       \
    \ var l = 0L\n        var r = a\n        while (l <= r) {\n            val m =\
    \ (l + r) / 2\n            val x = m * m * m\n            if (x == a) return true\n\
    \            if (x < a) l = m + 1\n            else r = m - 1\n        }\n   \
    \     return false", "        val x = round(cbrt(a)).toLong\n        x * x * x\
    \ == a", "        val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b ==\
    \ a", "        val x = pow(a, 1.0 / 3)\n        x == x.toInt", "        if (a\
    \ < 0) return false\n        var x = 1\n        while (x * x * x <= a) {\n   \
    \         if (x * x * x == a) return true\n            x += 1\n        }\n   \
    \     return false", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt",
  "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        var b = a\n  \
    \      if (b < 0) b = -b\n        if (b == 0) return true\n        var c = 1\n\
    \        while (c * c * c <= b) {\n            if (c * c * c == b) return true\n\
    \            c += 1\n        }\n        return false", "        var b = 1\n  \
    \      while (b * b * b <= a) {\n            if (b * b * b == a) return true\n\
    \            b += 1\n        }\n        return false", "        var i = 0\n  \
    \      while (i * i * i <= a) {\n            if (i * i * i == a) return true\n\
    \            i += 1\n        }\n        return false", "        if (a < 0) return\
    \ iscube(-a)\n        if (a == 0) return true\n        var l = 1L\n        var\
    \ r = a\n        while (l <= r) {\n            val m = (l + r) / 2\n         \
    \   val m3 = m * m * m\n            if (m3 == a) return true\n            else\
    \ if (m3 < a) l = m + 1\n            else r = m - 1\n        }\n        return\
    \ false", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val\
    \ b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        if (a < 0) return\
    \ iscube(-a)\n        if (a == 0) return true\n        var b = 1L\n        while\
    \ (b * b * b <= a) {\n            if (b * b * b == a) return true\n          \
    \  b += 1\n        }\n        return false", "        val b = pow(a, 1.0 / 3)\n\
    \        b == b.toInt", "        val b = round(pow(a, 1.0 / 3.0))\n        b *\
    \ b * b == a", "        if (a < 0) return iscube(-a)\n        if (a == 0) return\
    \ true\n        var b = 1L\n        while (b * b * b <= a) {\n            if (b\
    \ * b * b == a) return true\n            b += 1\n        }\n        return false",
  "        if (a == 0) return true\n        var b = 1\n        while (b * b * b <=\
    \ abs(a)) {\n            if (b * b * b == abs(a)) return true\n            b +=\
    \ 1\n        }\n        return false", "        val b = pow(a, 1.0 / 3)\n    \
    \    b == b.toInt", "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt",
  "        if (a == 0) return true\n        val b = abs(a)\n        var i = 1\n  \
    \      while (i * i * i <= b) {\n            if (i * i * i == b) return true\n\
    \            i += 1\n        }\n        return false", "        val b = pow(a,\
    \ 1.0 / 3)\n        b == b.toInt", "        val b = pow(a, 1.0 / 3)\n        b\
    \ == round(b)", "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b ==\
    \ a", "        var b = a\n        if (b < 0) b = -b\n        var i = 0\n     \
    \   while (i * i * i <= b) {\n            if (i * i * i == b) return true\n  \
    \          i += 1\n        }\n        return false", "        val b = pow(a, 1.0\
    \ / 3)\n        b == b.toInt", "        val x = pow(a, 1.0 / 3)\n        x ==\
    \ x.toInt", "        val b = round(pow(a, 1.0 / 3))\n        b * b * b == a",
  "        val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "   \
    \     val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val\
    \ b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val b = round(pow(a, 1.0\
    \ / 3.0))\n        return b * b * b == a", "        val b = math.cbrt(a)\n   \
    \     b == b.toInt", "        if (a == 0) return true\n        if (a < 0) return\
    \ false\n        var i = 1\n        while (i * i * i <= a) {\n            if (i\
    \ * i * i == a) return true\n            i += 1\n        }\n        return false",
  "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val\
    \ b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val b = round(pow(a, 1.0\
    \ / 3.0))\n        b * b * b == a", "        val b = pow(a, 1.0 / 3)\n       \
    \ b == b.toInt", "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", " \
    \       var i = 1\n        while (i * i * i <= a) {\n            if (i * i * i\
    \ == a) return true\n            i += 1\n        }\n        return false", " \
    \       val b = round(pow(a, 1.0 / 3))\n        return b * b * b == a", "    \
    \    val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        var b\
    \ = 1L\n        while (b * b * b <= a) {\n            if (b * b * b == a) return\
    \ true\n            b += 1\n        }\n        return false", "        if (a <\
    \ 0) return iscube(-a)\n        if (a == 0) return true\n        var i = 1L\n\
    \        while (i * i * i <= a) {\n            if (i * i * i == a) return true\n\
    \            i += 1\n        }\n        return false", "        if (a == 0) return\
    \ true\n        if (a < 0) return iscube(-a)\n        var i = 1L\n        while\
    \ (i * i * i <= a) {\n            if (i * i * i == a) return true\n          \
    \  i += 1\n        }\n        return false", "        val b = round(pow(a, 1.0\
    \ / 3))\n        b * b * b == a", "        val b = pow(a, 1.0 / 3)\n        b\
    \ == b.toInt", "        if (a == 0) return true\n        val b = abs(a)\n    \
    \    val c = pow(b, 1.0 / 3)\n        val d = round(c)\n        return d * d *\
    \ d == b", "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a",
  "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val\
    \ b = pow(a, 1.0 / 3)\n        b == b.toInt", "        var b = 1\n        while\
    \ (b * b * b <= a) {\n            if (b * b * b == a) return true\n          \
    \  b += 1\n        }\n        return false", "        var b = a\n        if (b\
    \ < 0) b = -b\n        var i = 0\n        while (i * i * i <= b) {\n         \
    \   if (i * i * i == b) return true\n            i += 1\n        }\n        return\
    \ false", "        if (a < 0) return iscube(-a)\n        if (a == 0) return true\n\
    \        var i = 1L\n        while (i * i * i <= a) {\n            if (i * i *\
    \ i == a) return true\n            i += 1\n        }\n        return false", " \
    \       val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        if (a == 0) return\
    \ true\n        if (a < 0) return iscube(-a)\n        var i = 1L\n        while\
    \ (i * i * i <= a) {\n            if (i * i * i == a) return true\n          \
    \  i += 1\n        }\n        return false", "        val b = pow(a, 1.0 / 3.0)\n\
    \        b == b.toInt", "        var b = 1\n        while (b * b * b <= a) {\n\
    \            if (b * b * b == a) return true\n            b += 1\n        }\n\
    \        return false", "        val b = round(pow(a, 1.0 / 3.0))\n        b *\
    \ b * b == a", "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "  \
    \      val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        var\
    \ b = 1\n        while (b * b * b <= a) {\n            if (b * b * b == a) return\
    \ true\n            b += 1\n        }\n        return false", "        val b =\
    \ pow(a, 1.0 / 3)\n        b == b.toInt", "        var b = 1L\n        while (b\
    \ * b * b <= a) {\n            if (b * b * b == a) return true\n            b\
    \ += 1\n        }\n        return false", "        val b = round(pow(a, 1.0 /\
    \ 3.0))\n        b * b * b == a", "        val b = pow(a, 1.0 / 3)\n        b\
    \ == b.toInt", "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "  \
    \      val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        val b = pow(a,\
    \ 1.0 / 3.0)\n        b == b.toInt", "        var i = 1\n        while (i * i\
    \ * i <= a) {\n            if (i * i * i == a) return true\n            i += 1\n\
    \        }\n        return false", "        var i = 0\n        while (i * i *\
    \ i <= a) {\n            if (i * i * i == a) return true\n            i += 1\n\
    \        }\n        return false", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        b * b * b == a", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt",
  "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        if (a < 0) return\
    \ iscube(-a)\n        if (a == 0) return true\n        var i = 1\n        while\
    \ (i * i * i <= a) {\n            if (i * i * i == a) return true\n          \
    \  i += 1\n        }\n        return false", "        if (a < 0) return iscube(-a)\n\
    \        if (a == 0) return true\n        var b = 1L\n        while (b * b * b\
    \ <= a) {\n            if (b * b * b == a) return true\n            b += 1\n \
    \       }\n        return false", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        return b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n        b\
    \ == b.toInt", "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b ==\
    \ a", "        var b = 1\n        while (b * b * b <= a) {\n            if (b\
    \ * b * b == a) return true\n            b += 1\n        }\n        return false",
  "        // Write your code here\n        if (a == 0) return true\n        if (a\
    \ < 0) return false\n        var x = a\n        while (x > 0) {\n            if\
    \ (x * x * x == a) return true\n            x -= 1\n        }\n        return\
    \ false", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        if\
    \ (a < 0) return iscube(-a)\n        if (a == 0) return true\n        var l =\
    \ 1L\n        var r = a\n        while (l <= r) {\n            val m = (l + r)\
    \ / 2\n            val v = m * m * m\n            if (v == a) return true\n  \
    \          if (v < a) l = m + 1\n            else r = m - 1\n        }\n     \
    \   return false", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", " \
    \       if (a < 0) return iscube(-a)\n        var l = 0L\n        var r = a\n\
    \        while (l <= r) {\n            val m = (l + r) / 2\n            val v\
    \ = m * m * m\n            if (v == a) return true\n            else if (v < a)\
    \ l = m + 1\n            else r = m - 1\n        }\n        return false", " \
    \       val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n \
    \       b == b.toInt", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt",
  "        val b = pow(a, 1.0 / 3)\n        b.isValidInt", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        b * b * b == a", "        if (a < 0) return iscube(-a)\n        var i\
    \ = 0\n        while (i * i * i <= a) {\n            if (i * i * i == a) return\
    \ true\n            i += 1\n        }\n        return false", "        var i =\
    \ 1\n        while (i * i * i <= a) {\n            if (i * i * i == a) return\
    \ true\n            i += 1\n        }\n        return false", "        val b =\
    \ round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n        b\
    \ * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b\
    \ == a", "        val b = pow(a, 1.0 / 3.0)\n        return b == b.toInt", " \
    \       var b = 1\n        while (b * b * b <= a) {\n            if (b * b * b\
    \ == a) return true\n            b += 1\n        }\n        return false", " \
    \       var b = 1\n        while (b * b * b <= a) {\n            if (b * b * b\
    \ == a) return true\n            b += 1\n        }\n        return false", " \
    \       val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        if (a < 0) return\
    \ iscube(-a)\n        if (a == 0) return true\n        var i = 1L\n        while\
    \ (i * i * i <= a) {\n            if (i * i * i == a) return true\n          \
    \  i += 1\n        }\n        return false", "        if (a == 0) return true\n\
    \        var b = 1L\n        while (b * b * b <= abs(a)) {\n            if (b\
    \ * b * b == abs(a)) return true\n            b += 1\n        }\n        return\
    \ false", "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "       \
    \ if (a < 0) return iscube(-a)\n        if (a == 0) return true\n        var l\
    \ = 1L\n        var r = a\n        while (l <= r) {\n            val m = (l +\
    \ r) / 2\n            val s = m * m * m\n            if (s == a) return true\n\
    \            if (s < a) l = m + 1\n            else r = m - 1\n        }\n   \
    \     return false"]
stop_tokens:
- "\n    }\n"

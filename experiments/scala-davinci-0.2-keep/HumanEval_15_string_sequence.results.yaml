language: scala
name: HumanEval_15_string_sequence
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i\
    \ + \" \")\n        }\n        sb.toString.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8d9qiecv.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ if (n == 0) return \"0\"\n        var result = new StringBuilder\n        for\
    \ (i <- 0 to n) {\n            result.append(i.toString)\n            result.append(\"\
    \ \")\n        }\n        result.toString.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjysinxuj.scala:12:23\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i.toString\
    \ + \" \")\n        }\n        s.toString.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4xrqlo28.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793571
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i + \"\
    \ \"\n        }\n        result.substring(0, result.length - 1)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1okhzmqk.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\n   \
    \         if (i != n) s += \" \"\n        }\n        return s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuexdxytt.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\n   \
    \         if (i != n) s += \" \"\n        }\n        return s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuexdxytt.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i.toString)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4_2hkf5z.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString.trim\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphfz30w55.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i.toString)\n\
    \            s.append(\" \")\n        }\n        s.toString.trim\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpk7u2ta1e.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ if (n == 0) return \"0\"\n        var s = \"\"\n        for (i <- 0 to n) s\
    \ += i + \" \"\n        return s.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe70domt_.scala:12:23\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvkfh9bm2.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i.toString)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4_2hkf5z.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.substring(0, s.length - 1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpm_8yxt5i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) result += i + \" \"\n        result.trim\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4nxeo4e0.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) result += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m   \
    \                    ^\e[0m\n\e[31m   |\e[0m                       Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s : String = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\n\
    \            if (i != n) s += \" \"\n        }\n        return s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyh4v8cg9.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ if (n == 0) return \"0\"\n        var s = \"\"\n        for (i <- 0 to n) s\
    \ += i + \" \"\n        return s.substring(0, s.length - 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9f2nfgo0.scala:12:23\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\n   \
    \         if (i != n) s += \" \"\n        }\n        return s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuexdxytt.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i + \"\
    \ \"\n        }\n        result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpioxal5i5.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = new StringBuilder\n        for (i <- 0 to n) {\n            result.append(i)\n\
    \            result.append(\" \")\n        }\n        result.toString.trim\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpramykot_.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793571
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ if (n == 0) return \"0\"\n        var s = \"\"\n        for (i <- 0 to n) s\
    \ += i + \" \"\n        return s.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe70domt_.scala:12:23\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ if (n == 0) return \"0\"\n        val sb = new StringBuilder\n        for (i\
    \ <- 0 to n) {\n            sb.append(i)\n            sb.append(\" \")\n     \
    \   }\n        sb.toString.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxcfexo2h.scala:12:23\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i.toString)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4_2hkf5z.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i + \"\
    \ \"\n        }\n        result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpioxal5i5.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i + \"\
    \ \"\n        }\n        result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpioxal5i5.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\n   \
    \         if (i != n) s += \" \"\n        }\n        return s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuexdxytt.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.substring(0, s.length - 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplge4cj8p.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i.toString)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4_2hkf5z.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ if (n == 0) return \"0\"\n        val sb = new StringBuilder\n        for (i\
    \ <- 0 to n) {\n            sb.append(i)\n            sb.append(\" \")\n     \
    \   }\n        sb.toString.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxcfexo2h.scala:12:23\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ if (n == 0) return \"0\"\n        val sb = new StringBuilder\n        for (i\
    \ <- 0 to n) {\n            sb.append(i + \" \")\n        }\n        sb.toString.trim\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplp0byam3.scala:12:23\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793575
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ if (n == 0) return \"0\"\n        val sb = new StringBuilder\n        for (i\
    \ <- 0 to n) {\n            sb.append(i)\n            sb.append(\" \")\n     \
    \   }\n        sb.toString.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxcfexo2h.scala:12:23\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString.trim\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphfz30w55.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i + \"\
    \ \"\n        }\n        result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpioxal5i5.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i + \"\
    \ \"\n        }\n        result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpioxal5i5.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp79dw623h.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i + \"\
    \ \"\n        }\n        result.substring(0, result.length - 1)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1okhzmqk.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s : String = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        return s.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe8n2jx8r.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793575
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i + \"\
    \ \"\n        }\n        result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpioxal5i5.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppgwwjtii.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m   |\e[0m        \
    \               ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2p58se_i.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcuzp9r6j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
    \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpczyd4dyw.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793572

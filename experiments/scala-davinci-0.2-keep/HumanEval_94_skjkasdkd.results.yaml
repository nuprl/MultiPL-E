language: scala
name: HumanEval_94_skjkasdkd
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    if (primes.isEmpty) return 0\n        var max = primes.max\n        var sum\
    \ = 0\n        while (max > 0) {\n            sum += max % 10\n            max\
    \ /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbpl7n79.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjbpl7n79.scala:22:16\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m            sum += max %\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        return sumDigits(max)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmporimxz8i.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmporimxz8i.scala:18:15 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mreturn\e[0m sumDigits(max)\n\e[31m\e[31m   |\e[0m           \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               Not found: sumDigits\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659804485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        return sumDigits(max)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2o_a7080.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2o_a7080.scala:18:15 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mreturn\e[0m sumDigits(max)\n\e[31m\e[31m\
    \   |\e[0m               ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               Not found:\
    \ sumDigits\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpluso4moh.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val digits = maxPrime.toString.map(_.asDigit)\n\
    \        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9cf0rzjr.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(isPrime(_)).sorted\n\
    \        val largest = primes.last\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwu82f0it.scala:14:32 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(isPrime(_)).sorted\n\
    \e[31m\e[31m   |\e[0m                                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        return sumDigits(max)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2o_a7080.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2o_a7080.scala:18:15 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mreturn\e[0m sumDigits(max)\n\e[31m\e[31m\
    \   |\e[0m               ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               Not found:\
    \ sumDigits\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = new ArrayBuffer[Long]\n     \
    \   for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n   \
    \     val max = primes.max\n        var sum = 0L\n        for (i <- max.toString)\
    \ {\n            sum += i.toString.toLong\n        }\n        sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp35z_8x_g.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        val digits = max.toString.map(_.asDigit).toList\n\
    \        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvasjjbal.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = new ArrayBuffer[Long]\n     \
    \   val max = lst.max\n        for (i <- 2L to max) {\n            var isPrime\
    \ = true\n            for (j <- 2L to sqrt(i).toLong) {\n                if (i\
    \ % j == 0) {\n                    isPrime = false\n                    break\n\
    \                }\n            }\n            if (isPrime) primes += i\n    \
    \    }\n        val prime = primes.max\n        var sum = 0L\n        var n =\
    \ prime\n        while (n > 0) {\n            sum += n % 10\n            n /=\
    \ 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong,\
    \ 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong,\
    \ 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong,\
    \ 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb5ibb8r5.scala:21:20 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                    break\n\e[31m\e[31m   |\e[0m    \
    \                ^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: break\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpluso4moh.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0\n        while (max > 0) {\n  \
    \          sum += max % 10\n            max /= 10\n        }\n        return sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3r2aw_i1.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3r2aw_i1.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            sum += max %\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val digits = maxPrime.toString.toList.map(x\
    \ => x.toString.toLong)\n        digits.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdhwa8u3d.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0\n        while (max > 0) {\n  \
    \          sum += max % 10\n            max /= 10\n        }\n        return sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3r2aw_i1.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3r2aw_i1.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            sum += max %\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        for (i <- max.toString) {\n            sum += i.toString.toLong\n   \
    \     }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmvsj7nbj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        if (primes.isEmpty) 0\n        else primes.max.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd6zhb1f9.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        for (i <- max.toString) {\n            sum += i.toString.toLong\n   \
    \     }\n        return sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong,\
    \ 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong,\
    \ 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong,\
    \ 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvv5ph58r.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val digits = maxPrime.toString.map(_.asDigit)\n\
    \        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9cf0rzjr.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = new PrimeGenerator(lst.max).primes\n\
    \        val primeSet = primes.toSet\n        val primeLst = primes.toList\n \
    \       val primeMap = primeLst.zipWithIndex.toMap\n        val primeTree = new\
    \ PrimeTree(primeLst)\n        val primeTreeMap = primeTree.primeTreeMap\n   \
    \     val primeTreeSet = primeTree.primeTreeSet\n        val primeTreeLst = primeTree.primeTreeLst\n\
    \        val primeTreeLstMap = primeTreeLst.zipWithIndex.toMap\n        val primeTreeLstSet\
    \ = primeTreeLst.toSet\n        val primeTreeLstLst = primeTreeLst.map(x => List(x)).toList\n\
    \        val primeTreeLstLstMap = primeTreeLstLst.zipWithIndex.toMap\n       \
    \ val primeTreeLstLstSet = primeTreeLstLst.toSet\n        val primeTreeLstLstLst\
    \ = primeTreeLstLst.map(x => List(x)).toList\n        val primeTreeLstLstLstMap\
    \ = primeTreeLstLstLst.zipWithIndex.toMap\n        val primeTreeLstLstLstSet =\
    \ primeTreeLstLstLst.toSet\n        val primeTreeLstLstLstLst = primeTreeLstLstLst.map(x\
    \ => List(x)).toList\n        val primeTreeLstLstLstLstMap = primeTreeLstLstLstLst.zipWithIndex.toMap\n\
    \        val primeTreeLstLstLstLstSet = primeTreeLstLstLstLst.toSet\n        val\
    \ primeTreeLstLstLstLstLst = primeTreeLstLstLstLst.map(x => List(x)).toList\n\
    \        val primeTreeLstLstLstLstLstMap = primeTreeLstLstLstLstLst.zipWithIndex.toMap\n\
    \        val primeTreeLstLstLstLstLstSet = primeTreeLstLstLstLstLst.toSet\n  \
    \      val primeTreeLstLstLstLstLstL\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjpu2agqo.scala:37:4 ----------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjpu2agqo.scala:14:25\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = \e[33mnew\e[0m \e[35mPrimeGenerator\e[0m(lst.max).primes\n\e\
    [31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: type PrimeGenerator\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpjpu2agqo.scala:18:28 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mprimeTree\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeTree\e[0m(primeLst)\n\e[31m\e[31m   |\e[0m                    \
    \        ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                            Not found:\
    \ type PrimeTree\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjpu2agqo.scala:37:5\
    \ ---------------------\e[0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659804488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => x.isPrime)\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp74pjwsmi.scala:14:39 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => x.isPrime)\n\e[31m\e[31m   |\e[0m                              \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                   value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659804489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0\n        while (max > 0) {\n  \
    \          sum += max % 10\n            max /= 10\n        }\n        return sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3r2aw_i1.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3r2aw_i1.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            sum += max %\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804488
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        def isPrime(n : Long) : Boolean = {\n    \
    \        if (n == 1) return false\n            if (n == 2) return true\n     \
    \       if (n % 2 == 0) return false\n            for (i <- 3 to sqrt(n).toInt\
    \ by 2) {\n                if (n % i == 0) return false\n            }\n     \
    \       return true\n        }\n        var max = 0L\n        for (i <- lst) {\n\
    \            if (isPrime(i) && i > max) max = i\n        }\n        var sum =\
    \ 0L\n        while (max > 0) {\n            sum += max % 10\n            max\
    \ /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659804490
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        return sumDigits(largest)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmxftvvmz.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmxftvvmz.scala:16:15\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mreturn\e[0m\
    \ sumDigits(largest)\n\e[31m\e[31m   |\e[0m               ^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m               Not found: sumDigits\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        def isPrime(n : Long) : Boolean = {\n    \
    \        if (n == 2) return true\n            if (n % 2 == 0) return false\n \
    \           for (i <- 3 to sqrt(n).toInt by 2) {\n                if (n % i ==\
    \ 0) return false\n            }\n            return true\n        }\n       \
    \ var max = 0L\n        for (i <- lst) {\n            if (isPrime(i) && i > max)\
    \ max = i\n        }\n        var sum = 0L\n        while (max > 0) {\n      \
    \      sum += max % 10\n            max /= 10\n        }\n        return sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659804490
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val digits = maxPrime.toString.map(_.asDigit).toList\n\
    \        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjup8lmzi.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        return sumDigits(max)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2o_a7080.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2o_a7080.scala:18:15 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mreturn\e[0m sumDigits(max)\n\e[31m\e[31m\
    \   |\e[0m               ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               Not found:\
    \ sumDigits\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        var sum = 0L\n        var temp = max\n\
    \        while (temp > 0) {\n            sum += temp % 10\n            temp /=\
    \ 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong,\
    \ 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong,\
    \ 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong,\
    \ 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp590mbu3w.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => x.isPrime)\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp74pjwsmi.scala:14:39 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => x.isPrime)\n\e[31m\e[31m   |\e[0m                              \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                   value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659804489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ArrayBuffer[Long]\n     \
    \   var max = 0L\n        for (i <- lst) {\n            if (isPrime(i)) {\n  \
    \              primes += i\n                if (i > max) max = i\n           \
    \ }\n        }\n        var sum = 0L\n        while (max > 0) {\n            sum\
    \ += max % 10\n            max /= 10\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0kdkj9xv.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (isPrime(i)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = ListBuffer[Long]()\n        for\
    \ (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n        var\
    \ max = 0L\n        for (i <- primes) {\n            if (i > max) max = i\n  \
    \      }\n        var sum = 0L\n        var temp = max\n        while (temp >\
    \ 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n    \
    \    return sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9ba8veit.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val digits = maxPrime.toString.map(_.asDigit).toList\n\
    \        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjup8lmzi.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = 0L\n        for (i <- primes) {\n            if (i > max) max =\
    \ i\n        }\n        var sum = 0L\n        for (i <- max.toString) {\n    \
    \        sum += i.toString.toLong\n        }\n        return sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong,\
    \ 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong,\
    \ 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong,\
    \ 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong,\
    \ 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong,\
    \ 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong)))\
    \ == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong,\
    \ 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong,\
    \ 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong)))\
    \ == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv1pli7di.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        def isPrime(n : Long) : Boolean = {\n    \
    \        if (n < 2) return false\n            if (n == 2 || n == 3) return true\n\
    \            if (n % 2 == 0 || n % 3 == 0) return false\n            var i = 5\n\
    \            var w = 2\n            while (i * i <= n) {\n                if (n\
    \ % i == 0) return false\n                i += w\n                w = 6 - w\n\
    \            }\n            return true\n        }\n        def sumDigits(n :\
    \ Long) : Long = {\n            var sum = 0L\n            var nn = n\n       \
    \     while (nn > 0) {\n                sum += nn % 10\n                nn /=\
    \ 10\n            }\n            return sum\n        }\n        var max = 0L\n\
    \        for (i <- lst) {\n            if (isPrime(i) && i > max) max = i\n  \
    \      }\n        return sumDigits(max)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong,\
    \ 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong,\
    \ 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659804497
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val digits = maxPrime.toString.map(_.asDigit)\n\
    \        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9cf0rzjr.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        return maxPrime.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2ftvtr0b.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).sorted\n\
    \        if (primes.size == 0) 0\n        else {\n            val largest = primes.last\n\
    \            largest.toString.map(x => x.asDigit).sum\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong,\
    \ 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong,\
    \ 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong,\
    \ 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong,\
    \ 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong,\
    \ 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong)))\
    \ == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong,\
    \ 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong,\
    \ 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong)))\
    \ == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9di8soxg.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).sorted\n\e[31m\e[31m   |\e[0m                      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                                \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpluso4moh.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = new ArrayBuffer[Long]\n     \
    \   def isPrime(n : Long) : Boolean = {\n            if (n == 2) return true\n\
    \            if (n % 2 == 0) return false\n            for (i <- 3 to sqrt(n).toInt\
    \ by 2) {\n                if (n % i == 0) return false\n            }\n     \
    \       return true\n        }\n        for (i <- lst) {\n            if (isPrime(i))\
    \ primes += i\n        }\n        val max = primes.max\n        var sum = 0\n\
    \        for (i <- max.toString) {\n            sum += i.toString.toInt\n    \
    \    }\n        return sum\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong,\
    \ 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong,\
    \ 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong,\
    \ 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659804498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]()\n    \
    \    for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n  \
    \      var max = primes.max\n        var sum = 0L\n        while (max > 0) {\n\
    \            sum += max % 10\n            max /= 10\n        }\n        return\
    \ sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcnqms35w.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        for (i <- max.toString) {\n            sum += i.toString.toLong\n   \
    \     }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmvsj7nbj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        return sumDigits(max)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2o_a7080.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2o_a7080.scala:18:15 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mreturn\e[0m sumDigits(max)\n\e[31m\e[31m\
    \   |\e[0m               ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               Not found:\
    \ sumDigits\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0L\n        while (max > 0) {\n \
    \           sum += max % 10\n            max /= 10\n        }\n        return\
    \ sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5djvaxyc.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = List(2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101,\
    \ 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181,\
    \ 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271,\
    \ 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373,\
    \ 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463,\
    \ 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577,\
    \ 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673,\
    \ 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787,\
    \ 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887,\
    \ 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009,\
    \ 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091,\
    \ 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187,\
    \ 1193, 1201, 1213\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp9psikasz.scala:15:4 ----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp9psikasz.scala:15:5 ---------------------\e[0m\e[0m\n\e[31m15 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804496
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpluso4moh.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        return sumDigits(max)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmporimxz8i.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmporimxz8i.scala:18:15 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mreturn\e[0m sumDigits(max)\n\e[31m\e[31m   |\e[0m           \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               Not found: sumDigits\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659804485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        for (i <- max.toString) {\n            sum += i.toString.toLong\n   \
    \     }\n        return sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong,\
    \ 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong,\
    \ 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong,\
    \ 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvv5ph58r.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpluso4moh.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpluso4moh.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => x.isPrime)\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp74pjwsmi.scala:14:39 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => x.isPrime)\n\e[31m\e[31m   |\e[0m                              \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                   value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659804489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpluso4moh.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]()\n    \
    \    for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n  \
    \      var max = primes.max\n        var sum = 0\n        while (max > 0) {\n\
    \            sum += max % 10\n            max /= 10\n        }\n        return\
    \ sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6pdwz33m.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6pdwz33m.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            sum += max %\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804496
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).sortWith(_\
    \ > _)\n        if (primes.length == 0) 0 else primes(0).toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpprxnf21b.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).sortWith(_ > _)\n\e[31m\e[31m   |\e[0m             \
    \                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \              Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        return sumDigits(max)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2o_a7080.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2o_a7080.scala:18:15 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mreturn\e[0m sumDigits(max)\n\e[31m\e[31m\
    \   |\e[0m               ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               Not found:\
    \ sumDigits\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpluso4moh.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    val max = primes.max\n        var sum = 0L\n        var n = max\n       \
    \ while (n > 0) {\n            sum += n % 10\n            n /= 10\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyl5ob1lp.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804494
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        def isPrime(n : Long) : Boolean = {\n    \
    \        if (n <= 1) return false\n            if (n <= 3) return true\n     \
    \       if (n % 2 == 0 || n % 3 == 0) return false\n            var i = 5\n  \
    \          while (i * i <= n) {\n                if (n % i == 0 || n % (i + 2)\
    \ == 0) return false\n                i += 6\n            }\n            return\
    \ true\n        }\n        def sumDigits(n : Long) : Long = {\n            var\
    \ sum = 0L\n            var m = n\n            while (m > 0) {\n             \
    \   sum += m % 10\n                m /= 10\n            }\n            return\
    \ sum\n        }\n        var max = 0L\n        for (i <- lst) {\n           \
    \ if (isPrime(i) && i > max) max = i\n        }\n        return sumDigits(max)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659804498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]()\n    \
    \    for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n  \
    \      var max = primes.max\n        var sum = 0\n        while (max > 0) {\n\
    \            sum += max % 10\n            max /= 10\n        }\n        return\
    \ sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6pdwz33m.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6pdwz33m.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            sum += max %\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804496
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0L\n        while (max > 0) {\n \
    \           sum += max % 10\n            max /= 10\n        }\n        return\
    \ sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5djvaxyc.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val digits = maxPrime.toString.map(_.asDigit)\n\
    \        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9cf0rzjr.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0\n        while (max > 0) {\n  \
    \          sum += max % 10\n            max /= 10\n        }\n        return sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3r2aw_i1.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3r2aw_i1.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            sum += max %\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val digits = maxPrime.toString.map(_.asDigit).toList\n\
    \        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjup8lmzi.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        def isPrime(n : Long) : Boolean = {\n    \
    \        if (n == 1) return false\n            if (n == 2) return true\n     \
    \       if (n % 2 == 0) return false\n            val sqrt = sqrt(n).toLong\n\
    \            for (i <- 3 to sqrt by 2) {\n                if (n % i == 0) return\
    \ false\n            }\n            return true\n        }\n        val primes\
    \ = lst.filter(isPrime(_))\n        val max = primes.max\n        max.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpjaz8fu2x.scala:18:23 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mval\e[0m \e[36msqrt\e[0m = sqrt(n).toLong\n\
    \e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m          \
    \             Recursive \e[33mvalue\e[0m \e[35msqrt\e[0m needs type\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659804494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpluso4moh.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        var temp = max\n        while (temp > 0) {\n            sum += temp %\
    \ 10\n            temp /= 10\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk6vk12_7.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0\n        while (max > 0) {\n  \
    \          sum += max % 10\n            max /= 10\n        }\n        return sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3r2aw_i1.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3r2aw_i1.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            sum += max %\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val digits = maxPrime.toString.map(_.asDigit)\n\
    \        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9cf0rzjr.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = 0L\n        for (i <- primes) {\n            if (i > max) max =\
    \ i\n        }\n        var sum = 0L\n        var str = max.toString\n       \
    \ for (i <- str) {\n            sum += i.toString.toLong\n        }\n        return\
    \ sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpawo3kzcw.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804496
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        def isPrime(n : Long) : Boolean = {\n    \
    \        if (n <= 1) return false\n            if (n <= 3) return true\n     \
    \       if (n % 2 == 0 || n % 3 == 0) return false\n            var i = 5\n  \
    \          while (i * i <= n) {\n                if (n % i == 0 || n % (i + 2)\
    \ == 0) return false\n                i += 6\n            }\n            return\
    \ true\n        }\n        def sumDigits(n : Long) : Long = {\n            var\
    \ sum = 0L\n            var nn = n\n            while (nn > 0) {\n           \
    \     sum += nn % 10\n                nn /= 10\n            }\n            return\
    \ sum\n        }\n        var max = 0L\n        for (i <- lst) {\n           \
    \ if (isPrime(i) && i > max) max = i\n        }\n        return sumDigits(max)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659804499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => x.isPrime)\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp74pjwsmi.scala:14:39 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => x.isPrime)\n\e[31m\e[31m   |\e[0m                              \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                   value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659804489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => x.isPrime)\n\
    \        val largest = primes.max\n        largest.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpscdx4yhh.scala:14:39 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => x.isPrime)\n\e[31m\e[31m   |\e[0m                              \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                   value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659804498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val digits = maxPrime.toString.map(_.asDigit).toList\n\
    \        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjup8lmzi.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpluso4moh.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var largest = 0L\n        for (i <- lst) {\n\
    \            if (isPrime(i) && i > largest) largest = i\n        }\n        largest\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9v4vv2b.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > largest)\
    \ largest = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804497
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpluso4moh.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        return sumDigits(max)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmporimxz8i.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmporimxz8i.scala:18:15 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        \e[33mreturn\e[0m sumDigits(max)\n\e[31m\e[31m   |\e[0m           \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               Not found: sumDigits\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659804485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0\n        while (max > 0) {\n  \
    \          sum += max % 10\n            max /= 10\n        }\n        return sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3r2aw_i1.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3r2aw_i1.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            sum += max %\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    val max = primes.max\n        var sum = 0L\n        var temp = max\n    \
    \    while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp91mbqt7p.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0\n        while (max > 0) {\n  \
    \          sum += max % 10\n            max /= 10\n        }\n        return sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3r2aw_i1.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3r2aw_i1.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            sum += max %\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0\n        while (max > 0) {\n  \
    \          sum += max % 10\n            max /= 10\n        }\n        return sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3r2aw_i1.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3r2aw_i1.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            sum += max %\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        for (i <- max.toString) {\n            sum += i.toString.toLong\n   \
    \     }\n        return sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong,\
    \ 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong,\
    \ 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong,\
    \ 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvv5ph58r.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => x.isPrime)\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp74pjwsmi.scala:14:39 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => x.isPrime)\n\e[31m\e[31m   |\e[0m                              \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                   value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659804489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        maxPrime.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r810pze.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = new ArrayBuffer[Long]\n     \
    \   for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n   \
    \     val max = primes.max\n        var sum = 0L\n        for (i <- max.toString)\
    \ {\n            sum += i.toString.toLong\n        }\n        sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp35z_8x_g.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val digits = maxPrime.toString.map(_.asDigit)\n\
    \        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9cf0rzjr.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0L\n        while (max > 0) {\n \
    \           sum += max % 10\n            max /= 10\n        }\n        return\
    \ sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5djvaxyc.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x)).sorted.reverse\n\
    \        val largestPrime = primes.head\n        largestPrime.toString.map(x =>\
    \ x.asDigit).sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1n0d6pso.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x)).sorted.reverse\n\e[31m\e[31m   |\e[0m              \
    \                       ^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \             Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        return maxPrime.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2ftvtr0b.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = 0L\n        for (i <- primes) {\n            if (i > max) max =\
    \ i\n        }\n        var sum = 0L\n        while (max > 0) {\n            sum\
    \ += max % 10\n            max /= 10\n        }\n        return sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppit54jha.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new HashSet[Long]\n        for\
    \ (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n        var\
    \ max = 0L\n        for (i <- primes) {\n            if (i > max) max = i\n  \
    \      }\n        var sum = 0L\n        var temp = max\n        while (temp >\
    \ 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n    \
    \    return sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp99oos0fr.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0L\n        while (max > 0) {\n \
    \           sum += max % 10\n            max /= 10\n        }\n        return\
    \ sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5djvaxyc.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(isPrime(_)).sortWith(_\
    \ > _)\n        if (primes.size == 0) return 0\n        val largest = primes(0)\n\
    \        var sum = 0L\n        var temp = largest\n        while (temp > 0) {\n\
    \            sum += temp % 10\n            temp /= 10\n        }\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfpypgj34.scala:14:32 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(isPrime(_)).sortWith(_\
    \ > _)\n\e[31m\e[31m   |\e[0m                                ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                Not found: isPrime\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659804499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val digits = maxPrime.toString.map(_.asDigit).toList\n\
    \        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjup8lmzi.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    val max = primes.max\n        var sum = 0L\n        var temp = max\n    \
    \    while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp91mbqt7p.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0\n        while (max > 0) {\n  \
    \          sum += max % 10\n            max /= 10\n        }\n        return sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3r2aw_i1.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3r2aw_i1.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            sum += max %\
    \ \e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value += is not a member of Int - did you mean Int.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        var sum = 0L\n\
    \        while (max > 0) {\n            sum += max % 10\n            max /= 10\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp252ylofj.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (i > max && isPrime(i)) max = i\n        }\n        var sum = 0L\n\
    \        for (i <- max.toString) {\n            sum += i.toString.toLong\n   \
    \     }\n        return sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong,\
    \ 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong,\
    \ 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong,\
    \ 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong,\
    \ 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong,\
    \ 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong,\
    \ 3l.toLong, 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvv5ph58r.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (i > max && isPrime(i)) max\
    \ = i\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        def isPrime(n : Long) : Boolean = {\n    \
    \        if (n == 1) return false\n            if (n == 2) return true\n     \
    \       if (n % 2 == 0) return false\n            for (i <- 3 to sqrt(n).toInt\
    \ by 2) {\n                if (n % i == 0) return false\n            }\n     \
    \       return true\n        }\n        var max = 0L\n        for (i <- lst) {\n\
    \            if (isPrime(i) && i > max) max = i\n        }\n        return max.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659804501
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val largest = primes.max\n        largest.toString.map(_.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphggrglg_.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = new ArrayBuffer[Long]\n     \
    \   for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n   \
    \     primes.max\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaggnhkba.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var max = 0L\n        for (i <- lst) {\n \
    \           if (isPrime(i) && i > max) max = i\n        }\n        return max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0lebgvxy.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i) && i > max) max\
    \ = i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val digits = maxPrime.toString.map(_.asDigit)\n\
    \        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9cf0rzjr.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val maxPrime = primes.max\n        val sum = sumDigits(maxPrime)\n  \
    \      sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_ggmh6bs.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_ggmh6bs.scala:16:18\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36msum\e[0m = sumDigits(maxPrime)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  Not found: sumDigits\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659804499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = List[Long]()\n        for (i\
    \ <- lst) {\n            if (isPrime(i)) primes = i :: primes\n        }\n   \
    \     var max = 0L\n        for (i <- primes) {\n            if (i > max) max\
    \ = i\n        }\n        var sum = 0L\n        for (i <- max.toString) {\n  \
    \          sum += i.toString.toLong\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong, 3l.toLong, 2l.toLong,\
    \ 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong, 5l.toLong, 5l.toLong,\
    \ 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong, 32l.toLong, 3l.toLong,\
    \ 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong))) == (10l));\n   \
    \ assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong, 8l.toLong, 2l.toLong,\
    \ 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong, 1l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong, 1l.toLong))) == (25l));\n\
    \    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong, 1l.toLong, 32l.toLong,\
    \ 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong, 163l.toLong, 23l.toLong,\
    \ 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong, 3l.toLong))) ==\
    \ (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong, 32l.toLong,\
    \ 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong, 91l.toLong,\
    \ 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps58a0u6p.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes = i ::\
    \ primes\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \               Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        var primes = new ListBuffer[Long]\n      \
    \  for (i <- lst) {\n            if (isPrime(i)) primes += i\n        }\n    \
    \    var max = primes.max\n        var sum = 0L\n        while (max > 0) {\n \
    \           sum += max % 10\n            max /= 10\n        }\n        return\
    \ sum\n    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5djvaxyc.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (isPrime(i)) primes += i\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a list of integers.\n    // You need to find the largest\
    \ prime value and return the sum of its digits.\n    // Examples:\n    // For\
    \ lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should\
    \ be 10\n    // For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output\
    \ should be 25\n    // For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3]\
    \ the output should be 13\n    // For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6]\
    \ the output should be 11\n    // For lst = [0,81,12,3,1,21] the output should\
    \ be 3\n    // For lst = [0,8,1,2,1,7] the output should be 7\n    def skjkasdkd(lst\
    \ : List[Long]) : Long = {\n        val primes = lst.filter(x => isPrime(x))\n\
    \        val max = primes.max\n        max.toString.map(x => x.asDigit).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 3l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 5l.toLong, 7l.toLong, 4l.toLong,\
    \ 5l.toLong, 5l.toLong, 5l.toLong, 2l.toLong, 181l.toLong, 32l.toLong, 4l.toLong,\
    \ 32l.toLong, 3l.toLong, 2l.toLong, 32l.toLong, 324l.toLong, 4l.toLong, 3l.toLong)))\
    \ == (10l));\n    assert(skjkasdkd((List[Long](1l.toLong, 0l.toLong, 1l.toLong,\
    \ 8l.toLong, 2l.toLong, 4597l.toLong, 2l.toLong, 1l.toLong, 3l.toLong, 40l.toLong,\
    \ 1l.toLong, 2l.toLong, 1l.toLong, 2l.toLong, 4l.toLong, 2l.toLong, 5l.toLong,\
    \ 1l.toLong))) == (25l));\n    assert(skjkasdkd((List[Long](1l.toLong, 3l.toLong,\
    \ 1l.toLong, 32l.toLong, 5107l.toLong, 34l.toLong, 83278l.toLong, 109l.toLong,\
    \ 163l.toLong, 23l.toLong, 2323l.toLong, 32l.toLong, 30l.toLong, 1l.toLong, 9l.toLong,\
    \ 3l.toLong))) == (13l));\n    assert(skjkasdkd((List[Long](0l.toLong, 724l.toLong,\
    \ 32l.toLong, 71l.toLong, 99l.toLong, 32l.toLong, 6l.toLong, 0l.toLong, 5l.toLong,\
    \ 91l.toLong, 83l.toLong, 0l.toLong, 5l.toLong, 6l.toLong))) == (11l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 81l.toLong, 12l.toLong, 3l.toLong, 1l.toLong, 21l.toLong))) == (3l));\n    assert(skjkasdkd((List[Long](0l.toLong,\
    \ 8l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 7l.toLong))) == (7l));\n    assert(skjkasdkd((List[Long](8191l.toLong)))\
    \ == (19l));\n    assert(skjkasdkd((List[Long](8191l.toLong, 123456l.toLong, 127l.toLong,\
    \ 7l.toLong))) == (19l));\n    assert(skjkasdkd((List[Long](127l.toLong, 97l.toLong,\
    \ 8192l.toLong))) == (10l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdctjbr7.scala:14:37 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = lst.filter(\e\
    [36mx\e[0m => isPrime(x))\n\e[31m\e[31m   |\e[0m                             \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                                     Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659804487

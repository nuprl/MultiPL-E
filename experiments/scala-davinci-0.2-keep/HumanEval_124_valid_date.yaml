name: HumanEval_124_valid_date
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You have to write a function which validates a given date string and\n \
  \   // returns True if the date is valid otherwise False.\n    // The date is valid\
  \ if all of the following rules are satisfied:\n    // 1. The date string is not\
  \ empty.\n    // 2. The number of days is not less than 1 or higher than 31 days\
  \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
  \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or\
  \ higher than 29 for the month 2.\n    // 3. The months should not be less than\
  \ 1 or higher than 12.\n    // 4. The date should be in the format: mm-dd-yyyy\n\
  \    // for example: \n    // valid_date('03-11-2000') => True\n    // valid_date('15-01-2012')\
  \ => False\n    // valid_date('04-0-2040') => False\n    // valid_date('06-04-2020')\
  \ => True\n    // valid_date('06/04/2020') => False\n    def validDate(date : String)\
  \ : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(validDate((\"03-11-2000\"\
  )) == (true));\n    assert(validDate((\"15-01-2012\")) == (false));\n    assert(validDate((\"\
  04-0-2040\")) == (false));\n    assert(validDate((\"06-04-2020\")) == (true));\n\
  \    assert(validDate((\"01-01-2007\")) == (true));\n    assert(validDate((\"03-32-2011\"\
  )) == (false));\n    assert(validDate((\"\")) == (false));\n    assert(validDate((\"\
  04-31-3000\")) == (false));\n    assert(validDate((\"06-06-2005\")) == (true));\n\
  \    assert(validDate((\"21-31-2000\")) == (false));\n    assert(validDate((\"04-12-2003\"\
  )) == (true));\n    assert(validDate((\"04122003\")) == (false));\n    assert(validDate((\"\
  20030412\")) == (false));\n    assert(validDate((\"2003-04\")) == (false));\n  \
  \  assert(validDate((\"2003-04-12\")) == (false));\n    assert(validDate((\"04-2003\"\
  )) == (false));\n    }\n\n}\n"
completions: ["        val dateRegex = \"\"\"(\\d{2})-(\\d{2})-(\\d{4})\"\"\".r\n\
    \        date match {\n            case dateRegex(month, day, year) => {\n   \
    \             val monthInt = month.toInt\n                val dayInt = day.toInt\n\
    \                val yearInt = year.toInt\n                if (monthInt < 1 ||\
    \ monthInt > 12) return false\n                if (dayInt < 1 || dayInt > 31)\
    \ return false\n                if (monthInt == 2) {\n                    if (dayInt\
    \ > 29) return false\n                    if (dayInt == 29) {\n              \
    \          if (yearInt % 4 != 0) return false\n                        if (yearInt\
    \ % 100 == 0 && yearInt % 400 != 0) return false\n                    }\n    \
    \            }\n                if (monthInt == 4 || monthInt == 6 || monthInt\
    \ == 9 || monthInt == 11) {\n                    if (dayInt > 30) return false\n\
    \                }\n                return true\n            }\n            case\
    \ _ => return false\n        }", "        if (date.length == 0) return false\n\
    \        val dateArray = date.split(\"-\")\n        if (dateArray.length != 3)\
    \ return false\n        val month = dateArray(0).toInt\n        val day = dateArray(1).toInt\n\
    \        val year = dateArray(2).toInt\n        if (month < 1 || month > 12) return\
    \ false\n        if (day < 1 || day > 31) return false\n        if (month == 2)\
    \ {\n            if (day > 29) return false\n            if (day == 29) {\n  \
    \              if (year % 4 != 0) return false\n                if (year % 100\
    \ == 0 && year % 400 != 0) return false\n            }\n        }\n        if\
    \ (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day\
    \ > 30) return false\n        }\n        true", "        val pattern = \"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    .r\n        pattern.findFirstIn(date) match {\n            case Some(s) => {\n\
    \                val dateArray = s.split(\"-\")\n                val month = dateArray(0).toInt\n\
    \                val day = dateArray(1).toInt\n                val year = dateArray(2).toInt\n\
    \                if (month < 1 || month > 12) return false\n                if\
    \ (day < 1 || day > 31) return false\n                if (month == 2) {\n    \
    \                if (day > 29) return false\n                    if (day == 29)\
    \ {\n                        if (year % 4 != 0) return false\n               \
    \         if (year % 100 == 0 && year % 400 != 0) return false\n             \
    \       }\n                }\n                if (month == 4 || month == 6 ||\
    \ month == 9 || month == 11) {\n                    if (day > 30) return false\n\
    \                }\n                true\n            }\n            case None\
    \ => false\n        }", "        val pattern = \"\"\"(\\d{2})-(\\d{2})-(\\d{4})\"\
    \"\".r\n        date match {\n            case pattern(month, day, year) => {\n\
    \                val m = month.toInt\n                val d = day.toInt\n    \
    \            val y = year.toInt\n                if (m < 1 || m > 12) return false\n\
    \                if (m == 2) {\n                    if (d < 1 || d > 29) return\
    \ false\n                    if (d == 29) {\n                        if (y % 4\
    \ != 0) return false\n                        if (y % 100 == 0 && y % 400 != 0)\
    \ return false\n                    }\n                } else if (m == 4 || m\
    \ == 6 || m == 9 || m == 11) {\n                    if (d < 1 || d > 30) return\
    \ false\n                } else {\n                    if (d < 1 || d > 31) return\
    \ false\n                }\n                return true\n            }\n     \
    \       case _ => return false\n        }", "        val pattern = \"\"\"(\\d{2})-(\\\
    d{2})-(\\d{4})\"\"\".r\n        date match {\n            case pattern(month,\
    \ day, year) => {\n                val monthInt = month.toInt\n              \
    \  val dayInt = day.toInt\n                val yearInt = year.toInt\n        \
    \        if (monthInt < 1 || monthInt > 12) return false\n                if (dayInt\
    \ < 1 || dayInt > 31) return false\n                if (monthInt == 2) {\n   \
    \                 if (dayInt > 29) return false\n                    if (dayInt\
    \ == 29) {\n                        if (yearInt % 4 != 0) return false\n     \
    \                   if (yearInt % 100 == 0 && yearInt % 400 != 0) return false\n\
    \                    }\n                }\n                if (monthInt == 4 ||\
    \ monthInt == 6 || monthInt == 9 || monthInt == 11) {\n                    if\
    \ (dayInt > 30) return false\n                }\n                return true\n\
    \            }\n            case _ => return false\n        }", "        val pattern\
    \ = \"\"\"(\\d{2})-(\\d{2})-(\\d{4})\"\"\".r\n        date match {\n         \
    \   case pattern(month, day, year) => {\n                val monthInt = month.toInt\n\
    \                val dayInt = day.toInt\n                val yearInt = year.toInt\n\
    \                if (monthInt < 1 || monthInt > 12) return false\n           \
    \     if (dayInt < 1 || dayInt > 31) return false\n                if (monthInt\
    \ == 2) {\n                    if (dayInt > 29) return false\n               \
    \     if (dayInt == 29) {\n                        if (yearInt % 4 != 0) return\
    \ false\n                        if (yearInt % 100 == 0 && yearInt % 400 != 0)\
    \ return false\n                    }\n                }\n                if (monthInt\
    \ == 4 || monthInt == 6 || monthInt == 9 || monthInt == 11) {\n              \
    \      if (dayInt > 30) return false\n                }\n                true\n\
    \            }\n            case _ => false\n        }", "        val pattern\
    \ = \"\"\"(\\d{2})-(\\d{2})-(\\d{4})\"\"\".r\n        date match {\n         \
    \   case pattern(month, day, year) => {\n                val m = month.toInt\n\
    \                val d = day.toInt\n                val y = year.toInt\n     \
    \           if (m < 1 || m > 12) return false\n                if (m == 2) {\n\
    \                    if (d < 1 || d > 29) return false\n                    if\
    \ (d == 29) {\n                        if (y % 4 != 0) return false\n        \
    \                if (y % 100 == 0 && y % 400 != 0) return false\n            \
    \        }\n                } else if (m == 4 || m == 6 || m == 9 || m == 11)\
    \ {\n                    if (d < 1 || d > 30) return false\n                }\
    \ else {\n                    if (d < 1 || d > 31) return false\n            \
    \    }\n                return true\n            }\n            case _ => return\
    \ false\n        }", "        val pattern = \"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    .r\n        val pattern(month, day, year) = date\n        val days = day.toInt\n\
    \        val months = month.toInt\n        val years = year.toInt\n        if\
    \ (months == 2) {\n            if (days > 29) return false\n            if (days\
    \ == 29) {\n                if (years % 4 != 0) return false\n               \
    \ if (years % 100 == 0 && years % 400 != 0) return false\n            }\n    \
    \    }\n        else if (months == 4 || months == 6 || months == 9 || months ==\
    \ 11) {\n            if (days > 30) return false\n        }\n        else if (months\
    \ == 1 || months == 3 || months == 5 || months == 7 || months == 8 || months ==\
    \ 10 || months == 12) {\n            if (days > 31) return false\n        }\n\
    \        else return false\n        return true", "        val pattern = \"\"\"\
    (\\d{2})-(\\d{2})-(\\d{4})\"\"\".r\n        date match {\n            case pattern(month,\
    \ day, year) => {\n                val m = month.toInt\n                val d\
    \ = day.toInt\n                val y = year.toInt\n                if (m < 1 ||\
    \ m > 12) return false\n                if (m == 2) {\n                    if\
    \ (d < 1 || d > 29) return false\n                    if (d == 29) {\n       \
    \                 if (y % 4 != 0) return false\n                        if (y\
    \ % 100 == 0 && y % 400 != 0) return false\n                    }\n          \
    \      } else if (m == 4 || m == 6 || m == 9 || m == 11) {\n                 \
    \   if (d < 1 || d > 30) return false\n                } else {\n            \
    \        if (d < 1 || d > 31) return false\n                }\n              \
    \  return true\n            }\n            case _ => return false\n        }",
  "        val datePattern = \"\"\"(\\d{2})-(\\d{2})-(\\d{4})\"\"\".r\n        date\
    \ match {\n            case datePattern(month, day, year) => {\n             \
    \   val monthInt = month.toInt\n                val dayInt = day.toInt\n     \
    \           val yearInt = year.toInt\n                if (monthInt < 1 || monthInt\
    \ > 12) return false\n                if (dayInt < 1 || dayInt > 31) return false\n\
    \                if (monthInt == 2) {\n                    if (dayInt > 29) return\
    \ false\n                    if (dayInt == 29) {\n                        if (yearInt\
    \ % 4 != 0) return false\n                        if (yearInt % 100 == 0 && yearInt\
    \ % 400 != 0) return false\n                    }\n                }\n       \
    \         if (monthInt == 4 || monthInt == 6 || monthInt == 9 || monthInt == 11)\
    \ {\n                    if (dayInt > 30) return false\n                }\n  \
    \              true\n            }\n            case _ => false\n        }", " \
    \       if (date.isEmpty) return false\n        val dateArray = date.split(\"\
    -\")\n        if (dateArray.length != 3) return false\n        val month = dateArray(0).toInt\n\
    \        val day = dateArray(1).toInt\n        val year = dateArray(2).toInt\n\
    \        if (month < 1 || month > 12) return false\n        if (day < 1 || day\
    \ > 31) return false\n        if (month == 2) {\n            if (day > 29) return\
    \ false\n            if (day == 29) {\n                if (year % 4 != 0) return\
    \ false\n                if (year % 100 == 0 && year % 400 != 0) return false\n\
    \            }\n        }\n        if (month == 4 || month == 6 || month == 9\
    \ || month == 11) {\n            if (day > 30) return false\n        }\n     \
    \   return true", "        val dateRegex = \"\"\"(\\d{2})-(\\d{2})-(\\d{4})\"\"\
    \".r\n        date match {\n            case dateRegex(month, day, year) => {\n\
    \                val monthInt = month.toInt\n                val dayInt = day.toInt\n\
    \                val yearInt = year.toInt\n                if (monthInt < 1 ||\
    \ monthInt > 12) false\n                else if (dayInt < 1 || dayInt > 31) false\n\
    \                else if (monthInt == 2 && dayInt > 29) false\n              \
    \  else if (monthInt == 4 && dayInt > 30) false\n                else if (monthInt\
    \ == 6 && dayInt > 30) false\n                else if (monthInt == 9 && dayInt\
    \ > 30) false\n                else if (monthInt == 11 && dayInt > 30) false\n\
    \                else true\n            }\n            case _ => false\n     \
    \   }", "        val datePattern = \"\"\"(\\d{2})-(\\d{2})-(\\d{4})\"\"\".r\n\
    \        date match {\n            case datePattern(month, day, year) => {\n \
    \               val monthInt = month.toInt\n                val dayInt = day.toInt\n\
    \                val yearInt = year.toInt\n                if (monthInt < 1 ||\
    \ monthInt > 12) return false\n                if (dayInt < 1 || dayInt > 31)\
    \ return false\n                if (monthInt == 2) {\n                    if (dayInt\
    \ > 29) return false\n                    if (dayInt == 29) {\n              \
    \          if (yearInt % 4 != 0) return false\n                        if (yearInt\
    \ % 100 == 0 && yearInt % 400 != 0) return false\n                    }\n    \
    \            }\n                if (monthInt == 4 || monthInt == 6 || monthInt\
    \ == 9 || monthInt == 11) {\n                    if (dayInt > 30) return false\n\
    \                }\n                true\n            }\n            case _ =>\
    \ false\n        }", "        val datePattern = \"\"\"(\\d{2})-(\\d{2})-(\\d{4})\"\
    \"\".r\n        date match {\n            case datePattern(m, d, y) => {\n   \
    \             val month = m.toInt\n                val day = d.toInt\n       \
    \         val year = y.toInt\n                if (month < 1 || month > 12) return\
    \ false\n                if (day < 1 || day > 31) return false\n             \
    \   if (month == 2) {\n                    if (day > 29) return false\n      \
    \              if (day == 29) {\n                        if (year % 4 != 0) return\
    \ false\n                        if (year % 100 == 0 && year % 400 != 0) return\
    \ false\n                    }\n                }\n                if (month ==\
    \ 4 || month == 6 || month == 9 || month == 11) {\n                    if (day\
    \ > 30) return false\n                }\n                true\n            }\n\
    \            case _ => false\n        }", "        val pattern = \"\"\"(\\d{2})-(\\\
    d{2})-(\\d{4})\"\"\".r\n        date match {\n            case pattern(month,\
    \ day, year) => {\n                val m = month.toInt\n                val d\
    \ = day.toInt\n                val y = year.toInt\n                if (m < 1 ||\
    \ m > 12) return false\n                if (m == 2) {\n                    if\
    \ (d < 1 || d > 29) return false\n                    if (d == 29) {\n       \
    \                 if (y % 4 != 0) return false\n                        if (y\
    \ % 100 == 0 && y % 400 != 0) return false\n                    }\n          \
    \      } else if (m == 4 || m == 6 || m == 9 || m == 11) {\n                 \
    \   if (d < 1 || d > 30) return false\n                } else {\n            \
    \        if (d < 1 || d > 31) return false\n                }\n              \
    \  return true\n            }\n            case _ => return false\n        }",
  "        if (date.length == 0) return false\n        val dateArray = date.split(\"\
    -\")\n        if (dateArray.length != 3) return false\n        val month = dateArray(0).toInt\n\
    \        val day = dateArray(1).toInt\n        val year = dateArray(2).toInt\n\
    \        if (month < 1 || month > 12) return false\n        if (day < 1 || day\
    \ > 31) return false\n        if (month == 2) {\n            if (day > 29) return\
    \ false\n            if (day == 29) {\n                if (year % 4 != 0) return\
    \ false\n                if (year % 100 == 0 && year % 400 != 0) return false\n\
    \            }\n        }\n        if (month == 4 || month == 6 || month == 9\
    \ || month == 11) {\n            if (day > 30) return false\n        }\n     \
    \   true", "        if (date.length == 0) return false\n        val dateArray\
    \ = date.split(\"-\")\n        if (dateArray.length != 3) return false\n     \
    \   val month = dateArray(0).toInt\n        val day = dateArray(1).toInt\n   \
    \     val year = dateArray(2).toInt\n        if (month < 1 || month > 12) return\
    \ false\n        if (day < 1 || day > 31) return false\n        if (month == 2)\
    \ {\n            if (day > 29) return false\n            if (day == 29) {\n  \
    \              if (year % 4 != 0) return false\n                if (year % 100\
    \ == 0 && year % 400 != 0) return false\n            }\n        }\n        if\
    \ (month == 4 || month == 6 || month == 9 || month == 11) {\n            if (day\
    \ > 30) return false\n        }\n        true", "        val pattern = \"\"\"\
    (\\d{2})-(\\d{2})-(\\d{4})\"\"\".r\n        date match {\n            case pattern(month,\
    \ day, year) => {\n                val monthInt = month.toInt\n              \
    \  val dayInt = day.toInt\n                val yearInt = year.toInt\n        \
    \        if (monthInt < 1 || monthInt > 12) return false\n                if (dayInt\
    \ < 1 || dayInt > 31) return false\n                if (monthInt == 2) {\n   \
    \                 if (dayInt > 29) return false\n                    if (dayInt\
    \ == 29) {\n                        if (yearInt % 4 != 0) return false\n     \
    \                   if (yearInt % 100 == 0 && yearInt % 400 != 0) return false\n\
    \                    }\n                }\n                if (monthInt == 4 ||\
    \ monthInt == 6 || monthInt == 9 || monthInt == 11) {\n                    if\
    \ (dayInt > 30) return false\n                }\n                true\n      \
    \      }\n            case _ => false\n        }", "        val datePattern =\
    \ \"\"\"(\\d{2})-(\\d{2})-(\\d{4})\"\"\".r\n        date match {\n           \
    \ case datePattern(month, day, year) => {\n                val monthInt = month.toInt\n\
    \                val dayInt = day.toInt\n                val yearInt = year.toInt\n\
    \                if (monthInt < 1 || monthInt > 12) false\n                else\
    \ if (dayInt < 1 || dayInt > 31) false\n                else if (monthInt == 2\
    \ && dayInt > 29) false\n                else if (monthInt == 4 && dayInt > 30)\
    \ false\n                else if (monthInt == 6 && dayInt > 30) false\n      \
    \          else if (monthInt == 9 && dayInt > 30) false\n                else\
    \ if (monthInt == 11 && dayInt > 30) false\n                else true\n      \
    \      }\n            case _ => false\n        }", "        val dateRegex = \"\
    ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\".r\n        date match\
    \ {\n            case dateRegex(month, day, year) => {\n                val monthInt\
    \ = month.toInt\n                val dayInt = day.toInt\n                val yearInt\
    \ = year.toInt\n                if (monthInt == 2) {\n                    if (yearInt\
    \ % 4 == 0) {\n                        if (dayInt <= 29) true else false\n   \
    \                 } else {\n                        if (dayInt <= 28) true else\
    \ false\n                    }\n                } else if (monthInt == 4 || monthInt\
    \ == 6 || monthInt == 9 || monthInt == 11) {\n                    if (dayInt <=\
    \ 30) true else false\n                } else {\n                    if (dayInt\
    \ <= 31) true else false\n                }\n            }\n            case _\
    \ => false\n        }"]
stop_tokens:
- "\n    }\n"

name: HumanEval_140_fix_spaces
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a string text, replace all spaces in it with underscores, \n    //\
  \ and if a string has more than 2 consecutive spaces, \n    // then replace all\
  \ consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\n  \
  \  // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example 2\"\
  ) == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\n   \
  \ def fixSpaces(text : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fixSpaces((\"Example\"\
  )).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"\
  Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"\
  Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"\
  Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\"\
  )));\n    }\n\n}\n"
completions: ["        val regex = \"\\\\s+\".r\n        regex.replaceAllIn(text,\
    \ \"_\")", '        text.replaceAll("\\s{2,}", "-").replaceAll("\\s", "_")', '        text.replaceAll("\\s+",
    "-").replaceAll("\\s", "_")', '        text.replaceAll("\\s+", "-").replaceAll("
    ", "_")', '        text.replaceAll("\\s+", "-").replaceAll(" ", "_")', '        text.replaceAll("\\s+",
    "-").replaceAll(" ", "_")', "        val sb = new StringBuilder\n        var prev\
    \ = ' '\n        for (c <- text) {\n            if (c == ' ') {\n            \
    \    if (prev == ' ') {\n                    sb.append('-')\n                }\
    \ else {\n                    sb.append('_')\n                }\n            }\
    \ else {\n                sb.append(c)\n            }\n            prev = c\n\
    \        }\n        sb.toString", '        text.replaceAll("\\s+", "-").replaceAll("
    ", "_")', '        text.trim.replaceAll(" +", "-")', '        text.replaceAll("\\s+",
    "-").replaceAll(" ", "_")', '        text.replaceAll("\\s+", "-").replaceAll("
    ", "_")', "        val sb = new StringBuilder\n        var prev = ' '\n      \
    \  for (c <- text) {\n            if (c == ' ') {\n                if (prev ==\
    \ ' ') {\n                    sb += '-'\n                } else {\n          \
    \          sb += '_'\n                }\n            } else {\n              \
    \  sb += c\n            }\n            prev = c\n        }\n        sb.toString",
  "        var result = new StringBuilder\n        var prev = ' '\n        for (c\
    \ <- text) {\n            if (c == ' ') {\n                if (prev == ' ') {\n\
    \                    result.append('-')\n                } else {\n          \
    \          result.append('_')\n                }\n            } else {\n     \
    \           result.append(c)\n            }\n            prev = c\n        }\n\
    \        result.toString", '        text.replaceAll("\\s{2,}", "-").replaceAll("\\s",
    "_")', '        text.replaceAll("\\s+", "-").replaceAll("\\s", "_")', '        text.replaceAll("\\s+",
    "-").replaceAll(" ", "_")', '        text.replaceAll("\\s+", "-").replaceAll("\\s",
    "_")', '        text.replaceAll("\\s+", "-").replaceAll(" ", "_")', '        text.replaceAll("\\s+",
    "-").replaceAll("\\s", "_")', '        text.replaceAll("\\s+", "-").replaceAll("\\s",
    "_")']
stop_tokens:
- "\n    }\n"

name: HumanEval_138_is_equal_to_sum_even
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Evaluate whether the given number n can be written as the sum of exactly\
  \ 4 positive even numbers\n    // Example\n    // is_equal_to_sum_even(4) == False\n\
  \    // is_equal_to_sum_even(6) == False\n    // is_equal_to_sum_even(8) == True\n\
  \    def isEqualToSumEven(n : Long) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
  \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
  \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
  \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
  \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
completions: ["        if (n % 2 == 1) return false\n        val m = n / 2\n     \
    \   val limit = sqrt(m).toLong\n        for (i <- 2 to limit) {\n            if\
    \ (m % i == 0) {\n                val j = m / i\n                if (i % 2 ==\
    \ 0 && j % 2 == 0) return true\n            }\n        }\n        return false",
  "        if (n % 2 == 1) return false\n        val m = n / 2\n        for (i <-\
    \ 1 to m) {\n            val j = m - i\n            if (i % 2 == 0 && j % 2 ==\
    \ 0) return true\n        }\n        return false", "        if (n % 2 == 1) return\
    \ false\n        val m = n / 2\n        val sqrtm = sqrt(m).toLong\n        for\
    \ (i <- 2 to sqrtm) {\n            if (m % i == 0) {\n                val j =\
    \ m / i\n                if (i % 2 == 0 && j % 2 == 0) return true\n         \
    \   }\n        }\n        return false", "        val sqrt = sqrt(n).toLong\n\
    \        for (i <- 2 to sqrt) {\n            if (n % i == 0) {\n             \
    \   val j = n / i\n                if (i % 2 == 0 && j % 2 == 0) return true\n\
    \            }\n        }\n        return false", "        if (n % 2 == 1) return\
    \ false\n        val max = n / 2\n        val min = n / 4\n        for (i <- min\
    \ to max) {\n            for (j <- i to max) {\n                for (k <- j to\
    \ max) {\n                    for (l <- k to max) {\n                        if\
    \ (i + j + k + l == n) return true\n                    }\n                }\n\
    \            }\n        }\n        return false", "        val limit = n / 4\n\
    \        for (i <- 2 to limit) {\n            for (j <- i to limit) {\n      \
    \          for (k <- j to limit) {\n                    for (l <- k to limit)\
    \ {\n                        if (i + j + k + l == n) return true\n           \
    \         }\n                }\n            }\n        }\n        return false",
  "        var result = false\n        for (i <- 0 to n / 2) {\n            for (j\
    \ <- 0 to n / 2) {\n                for (k <- 0 to n / 2) {\n                \
    \    for (l <- 0 to n / 2) {\n                        if (i + j + k + l == n)\
    \ result = true\n                    }\n                }\n            }\n   \
    \     }\n        result", "        def isEqualToSumEven(n : Long, count : Int)\
    \ : Boolean = {\n            if (n == 0 && count == 4) true\n            else\
    \ if (n < 0 || count == 4) false\n            else isEqualToSumEven(n - 2, count\
    \ + 1) || isEqualToSumEven(n, count)\n        }\n        isEqualToSumEven(n, 0)",
  "        var result = false\n        for (i <- 0 to n / 2) {\n            for (j\
    \ <- 0 to (n - 2 * i) / 2) {\n                for (k <- 0 to (n - 2 * i - 2 *\
    \ j) / 2) {\n                    val l = n - 2 * i - 2 * j - 2 * k\n         \
    \           if (l % 2 == 0) {\n                        result = true\n       \
    \             }\n                }\n            }\n        }\n        result",
  "        if (n % 2 == 1) return false\n        for (a <- 2 to n / 4) {\n       \
    \     for (b <- a to n / 3) {\n                for (c <- b to n / 2) {\n     \
    \               val d = n - a - b - c\n                    if (d >= c && d % 2\
    \ == 0) return true\n                }\n            }\n        }\n        return\
    \ false", "        val m = n / 2\n        for (i <- 1L to m) {\n            for\
    \ (j <- 1L to m) {\n                for (k <- 1L to m) {\n                   \
    \ for (l <- 1L to m) {\n                        if (i + j + k + l == m) return\
    \ true\n                    }\n                }\n            }\n        }\n \
    \       return false", "        var result = false\n        for (i <- 2 to n /\
    \ 2) {\n            for (j <- 2 to n / 2) {\n                for (k <- 2 to n\
    \ / 2) {\n                    for (l <- 2 to n / 2) {\n                      \
    \  if (i + j + k + l == n) {\n                            result = true\n    \
    \                    }\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val m = n / 2\n        for (i <- 1L\
    \ to m) {\n            for (j <- 1L to m) {\n                for (k <- 1L to m)\
    \ {\n                    for (l <- 1L to m) {\n                        if (i +\
    \ j + k + l == m) return true\n                    }\n                }\n    \
    \        }\n        }\n        return false", "        val limit = n / 4\n   \
    \     for (i <- 2 to limit by 2) {\n            for (j <- i to limit by 2) {\n\
    \                for (k <- j to limit by 2) {\n                    for (l <- k\
    \ to limit by 2) {\n                        if (i + j + k + l == n) return true\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ false", "        if (n % 2 == 1) return false\n        for (i <- 1L to n / 2)\
    \ {\n            if (isEqualToSumEven(n - i, i)) return true\n        }\n    \
    \    return false", "        val m = n / 2\n        val a = m / 2\n        val\
    \ b = m - a\n        val c = b / 2\n        val d = b - c\n        val e = d /\
    \ 2\n        val f = d - e\n        val g = f / 2\n        val h = f - g\n   \
    \     val i = h / 2\n        val j = h - i\n        val k = j / 2\n        val\
    \ l = j - k\n        val o = l / 2\n        val p = l - o\n        val q = p /\
    \ 2\n        val r = p - q\n        val s = r / 2\n        val t = r - s\n   \
    \     val u = t / 2\n        val v = t - u\n        val w = v / 2\n        val\
    \ x = v - w\n        val y = x / 2\n        val z = x - y\n        if (z == 0)\
    \ true else false", "        if (n % 2 == 1) return false\n        val m = n /\
    \ 2\n        for (i <- 1L to m) {\n            val j = m - i\n            if (i\
    \ % 2 == 0 && j % 2 == 0) return true\n        }\n        return false", "   \
    \     val limit = n / 4\n        for (i <- 2 to limit by 2) {\n            val\
    \ remain = n - i\n            val limit2 = remain / 2\n            for (j <- 2\
    \ to limit2 by 2) {\n                val remain2 = remain - j\n              \
    \  val limit3 = remain2 / 2\n                for (k <- 2 to limit3 by 2) {\n \
    \                   val remain3 = remain2 - k\n                    val limit4\
    \ = remain3 / 2\n                    for (l <- 2 to limit4 by 2) {\n         \
    \               if (i + j + k + l == n) return true\n                    }\n \
    \               }\n            }\n        }\n        false", "        if (n %\
    \ 2 == 1) return false\n        val m = n / 2\n        val sqrt = sqrt(m).toLong\n\
    \        for (i <- 2 to sqrt) {\n            if (m % i == 0) {\n             \
    \   val j = m / i\n                if (i % 2 == 0 && j % 2 == 0) return true\n\
    \            }\n        }\n        false", "        var result = false\n     \
    \   for (i <- 2 to n / 2) {\n            if (n - i == i) {\n                result\
    \ = true\n                break\n            }\n        }\n        result"]
stop_tokens:
- "\n    }\n"

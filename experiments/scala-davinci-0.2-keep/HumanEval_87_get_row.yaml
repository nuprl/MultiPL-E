name: HumanEval_87_get_row
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given a 2 dimensional data, as a nested lists,\n    // which is\
  \ similar to matrix, however, unlike matrices,\n    // each row may contain a different\
  \ number of columns.\n    // Given lst, and integer x, find integers x in the list,\n\
  \    // and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n    // each\
  \ tuple is a coordinate - (row, columns), starting with 0.\n    // Sort coordinates\
  \ initially by rows in ascending order.\n    // Also, sort coordinates of the row\
  \ by columns in descending order.\n    // Examples:\n    // get_row([\n    // [1,2,3,4,5,6],\n\
  \    // [1,2,3,4,1,6],\n    // [1,2,3,4,5,1]\n    // ], 1) == [(0, 0), (1, 4), (1,\
  \ 0), (2, 5), (2, 0)]\n    // get_row([], 1) == []\n    // get_row([[], [1], [1,\
  \ 2, 3]], 3) == [(2, 2)]\n    def getRow(lst : List[List[Long]], x : Long) : List[Tuple2[Long,\
  \ Long]] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(getRow((List[List[Long]](List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 1l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 1l.toLong))), (1l)).equals((List[Tuple2[Long,\
  \ Long]]((0l, 0l), (1l, 4l), (1l, 0l), (2l, 5l), (2l, 0l)))));\n    assert(getRow((List[List[Long]](List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))), (2l)).equals((List[Tuple2[Long,\
  \ Long]]((0l, 1l), (1l, 1l), (2l, 1l), (3l, 1l), (4l, 1l), (5l, 1l)))));\n    assert(getRow((List[List[Long]](List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 1l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 1l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 1l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 1l.toLong))), (1l)).equals((List[Tuple2[Long,\
  \ Long]]((0l, 0l), (1l, 0l), (2l, 1l), (2l, 0l), (3l, 2l), (3l, 0l), (4l, 3l), (4l,\
  \ 0l), (5l, 4l), (5l, 0l), (6l, 5l), (6l, 0l)))));\n    assert(getRow((List[List[Long]]()),\
  \ (1l)).equals((List[Tuple2[Long, Long]]())));\n    assert(getRow((List[List[Long]](List[Long](1l.toLong))),\
  \ (2l)).equals((List[Tuple2[Long, Long]]())));\n    assert(getRow((List[List[Long]](List[Long](),\
  \ List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong))), (3l)).equals((List[Tuple2[Long,\
  \ Long]]((2l, 2l)))));\n    }\n\n}\n"
completions: ["        // Fill up this function body\n        // You may also define\
    \ new functions\n        // to help you in writing this function\n        // Do\
    \ not print anything\n        // Do not take any inputs\n        // Return the\
    \ list of tuples\n        // containing the coordinates\n        // of x in the\
    \ list\n        // Do not change the name of the function\n        // Do not change\
    \ the name of the list\n        // Do not change the name of the integer\n   \
    \     // Do not change the name of the tuple\n        // Do not change the name\
    \ of the tuple elements\n        // Do not change the name of the return type\n\
    \        // Do not change the name of the return list\n        // Do not change\
    \ the name of the return tuple\n        // Do not change the name of the return\
    \ tuple elements\n        // Do not change the name of the return list elements\n\
    \        // Do not change the name of the return list elements\n        // Do\
    \ not change the name of the return list elements\n        // Do not change the\
    \ name of the return list elements\n        // Do not change the name of the return\
    \ list elements\n        // Do not change the name of the return list elements\n\
    \        // Do not change the name of the return list elements\n        // Do\
    \ not change the name of the return list elements\n        // Do not change the\
    \ name of the return list elements\n        // Do not change the name of the return\
    \ list elements\n        // Do not change the name of the return list elements\n\
    \        // Do not change the name of the return list elements\n        // Do\
    \ not change the name of the return list elements\n        // Do not change the\
    \ name of the return list elements\n        // Do not change the name of the return\
    \ list elements\n        // Do not change the name of the return list elements\n\
    \        // Do not change the name of the return list elements\n        // Do\
    \ not change the name of the return list elements\n        // Do not change the\
    \ name of the return list elements\n        // Do not change the name of the return\
    \ list elements\n        // Do not change the name of the return list elements\n\
    \        // Do not change the name of the return list elements\n        // Do\
    \ not change the name of the return list elements\n        // Do not change the\
    \ name of the return list elements\n        // Do not change the name of the return\
    \ list elements\n        // Do not change the name of the return list elements\n\
    \        // Do", "        var result = List[Tuple2[Long, Long]]()\n        for\
    \ (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length) {\n\
    \                if (lst(i)(j) == x) {\n                    result = result :+\
    \ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)", "        val row = lst.zipWithIndex.map(x\
    \ => x._1.zipWithIndex.map(y => (x._2, y._2))).flatten.filter(x => x._2 == x)\n\
    \        row.sortWith((x, y) => x._1 < y._1 || (x._1 == y._1 && x._2 > y._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((x, y) => x._1 < y._1 || (x._1\
    \ == y._1 && x._2 > y._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        val result = new ListBuffer[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) result += Tuple2(i, j)\n\
    \            }\n        }\n        result.toList.sortWith((a, b) => a._1 < b._1\
    \ || (a._1 == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            var row = lst(i)\n\
    \            for (j <- 0 until row.length) {\n                if (row(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ == b._1) {\n                a._2 > b._2\n            } else {\n            \
    \    a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 == b._1) {\n                a._2 > b._2\n            } else {\n      \
    \          a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 == b._1) {\n                a._2 > b._2\n            } else {\n      \
    \          a._1 < b._1\n            }\n        })", "        val result = new\
    \ ListBuffer[Tuple2[Long, Long]]\n        for (i <- 0 until lst.length) {\n  \
    \          val row = lst(i)\n            for (j <- 0 until row.length) {\n   \
    \             if (row(j) == x) {\n                    result += Tuple2(i, j)\n\
    \                }\n            }\n        }\n        result.toList.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2\
    \ > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            val row = lst(i)\n            for (j <- 0 until row.length) {\n\
    \                if (row(j) == x) {\n                    result = (i, j) :: result\n\
    \                }\n            }\n        }\n        result.sortWith((t1, t2)\
    \ => {\n            if (t1._1 == t2._1) {\n                t1._2 > t2._2\n   \
    \         } else {\n                t1._1 < t2._1\n            }\n        })",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      var row = lst(i)\n            for (j <- 0 until row.length) {\n       \
    \         if (row(j) == x) {\n                    result = result :+ (i, j)\n\
    \                }\n            }\n        }\n        result.sortWith((a, b) =>\
    \ a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((x, y) => x._1 < y._1 || (x._1 ==\
    \ y._1 && x._2 > y._2))", "        // Fill up this function body\n        // You\
    \ can add another function as well, if required\n        var res = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  res = (i, j) :: res\n                }\n            }\n        }\n        res.sortWith((a,\
    \ b) => {\n            if (a._1 < b._1) true\n            else if (a._1 == b._1)\
    \ a._2 > b._2\n            else false\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((x, y) => x._1 < y._1 || (x._1 ==\
    \ y._1 && x._2 > y._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        val result =\
    \ ListBuffer[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n\
    \            val row = lst(i)\n            for (j <- 0 until row.length) {\n \
    \               if (row(j) == x) {\n                    result += Tuple2(i, j)\n\
    \                }\n            }\n        }\n        result.toList.sortWith((a,\
    \ b) => {\n            if (a._1 < b._1) true\n            else if (a._1 > b._1)\
    \ false\n            else a._2 > b._2\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 < b._1) true\n            else if (a._1 == b._1) a._2 > b._2\n       \
    \     else false\n        })", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2\
    \ > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ == b._1) {\n                a._2 > b._2\n            } else {\n            \
    \    a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            var row = lst(i)\n\
    \            for (j <- 0 until row.length) {\n                if (row(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        val result =\
    \ new ListBuffer[Tuple2[Long, Long]]\n        for (i <- 0 until lst.length) {\n\
    \            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) result += Tuple2(i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 < b._1) true\n            else if (a._1 == b._1)\
    \ a._2 > b._2\n            else false\n        }).toList", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) {\n                    result = result :+ (i, j)\n                }\n   \
    \         }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      var row = lst(i)\n            for (j <- 0 until row.length) {\n       \
    \         if (row(j) == x) {\n                    result = result :+ (i, j)\n\
    \                }\n            }\n        }\n        result.sortWith((a, b) =>\
    \ a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        val result = new ListBuffer[Tuple2[Long, Long]]\n        for (i <- 0 until\
    \ lst.length) {\n            val row = lst(i)\n            for (j <- 0 until row.length)\
    \ {\n                if (row(j) == x) {\n                    result += Tuple2(i,\
    \ j)\n                }\n            }\n        }\n        result.toList.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            var row = lst(i)\n     \
    \       for (j <- 0 until row.length) {\n                if (row(j) == x) {\n\
    \                    result = result :+ (i, j)\n                }\n          \
    \  }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ Tuple2(i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2\
    \ > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ == b._1) {\n                a._2 > b._2\n            } else {\n            \
    \    a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => (a._1 < b._1) ||\
    \ (a._1 == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ < b._1) true\n            else if (a._1 == b._1) a._2 > b._2\n            else\
    \ false\n        })", "        var result = List[Tuple2[Long, Long]]()\n     \
    \   for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ < b._1) true\n            else if (a._1 == b._1) a._2 > b._2\n            else\
    \ false\n        })", "        val result = new ListBuffer[Tuple2[Long, Long]]\n\
    \        for (i <- 0 until lst.length) {\n            val row = lst(i)\n     \
    \       for (j <- 0 until row.length) {\n                if (row(j) == x) {\n\
    \                    result += Tuple2(i, j)\n                }\n            }\n\
    \        }\n        result.toList.sortWith((a, b) => {\n            if (a._1 <\
    \ b._1) {\n                true\n            } else if (a._1 == b._1) {\n    \
    \            a._2 > b._2\n            } else {\n                false\n      \
    \      }\n        })", "        var result = List[Tuple2[Long, Long]]()\n    \
    \    for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2\
    \ > b._2 else a._1 < b._1)", "        val result = new ListBuffer[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            val row = lst(i)\n\
    \            for (j <- 0 until row.length) {\n                if (row(j) == x)\
    \ {\n                    result += Tuple2(i, j)\n                }\n         \
    \   }\n        }\n        result.toList.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 < b._1) true\n            else if (a._1 == b._1)\
    \ a._2 > b._2\n            else false\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => {\n            if (a._1 == b._1) {\n        \
    \        a._2 > b._2\n            } else {\n                a._1 < b._1\n    \
    \        }\n        })", "        val result = new ListBuffer[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result += Tuple2(i, j)\n            }\n\
    \        }\n        result.toList.sortWith((a, b) => {\n            if (a._1 ==\
    \ b._1) a._2 > b._2\n            else a._1 < b._1\n        })", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) {\n                    result = (i, j) :: result\n                }\n   \
    \         }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        val result = new ListBuffer[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) result += Tuple2(i, j)\n\
    \            }\n        }\n        result.toList.sortWith((t1, t2) => {\n    \
    \        if (t1._1 == t2._1) t1._2 > t2._2\n            else t1._1 < t2._1\n \
    \       })", "        var result = List[Tuple2[Long, Long]]()\n        for (i\
    \ <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length) {\n \
    \               if (lst(i)(j) == x) {\n                    result = (i, j) ::\
    \ result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ == b._1) {\n                a._2 > b._2\n            } else {\n            \
    \    a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ == b._1) {\n                a._2 > b._2\n            } else {\n            \
    \    a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 == b._1) {\n                a._2 > b._2\n            } else {\n      \
    \          a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((x, y) => x._1 < y._1 || (x._1\
    \ == y._1 && x._2 > y._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2\
    \ > b._2 else a._1 < b._1)", "        val result = new ListBuffer[Tuple2[Long,\
    \ Long]]\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) result += Tuple2(i, j)\n\
    \            }\n        }\n        result.toList.sortWith((a, b) => {\n      \
    \      if (a._1 == b._1) a._2 > b._2\n            else a._1 < b._1\n        })",
  "        val result = new ListBuffer[Tuple2[Long, Long]]\n        for (i <- 0 until\
    \ lst.length) {\n            for (j <- 0 until lst(i).length) {\n            \
    \    if (lst(i)(j) == x) result += Tuple2(i, j)\n            }\n        }\n  \
    \      result.toList.sortWith((a, b) => {\n            if (a._1 < b._1) true\n\
    \            else if (a._1 == b._1) a._2 > b._2\n            else false\n    \
    \    })", "        val result = new ListBuffer[Tuple2[Long, Long]]\n        for\
    \ (i <- 0 until lst.length) {\n            val row = lst(i)\n            for (j\
    \ <- 0 until row.length) {\n                if (row(j) == x) {\n             \
    \       result += Tuple2(i, j)\n                }\n            }\n        }\n\
    \        result.toList.sortWith((a, b) => {\n            if (a._1 < b._1) true\n\
    \            else if (a._1 > b._1) false\n            else a._2 > b._2\n     \
    \   })", "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0\
    \ until lst.length) {\n            for (j <- 0 until lst(i).length) {\n      \
    \          if (lst(i)(j) == x) {\n                    result = result :+ (i, j)\n\
    \                }\n            }\n        }\n        result.sortWith((a, b) =>\
    \ a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            val row = lst(i)\n     \
    \       for (j <- 0 until row.length) {\n                if (row(j) == x) {\n\
    \                    result = result :+ (i, j)\n                }\n          \
    \  }\n        }\n        result.sortWith((a, b) => {\n            if (a._1 ==\
    \ b._1) {\n                a._2 > b._2\n            } else {\n               \
    \ a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        val result = new ListBuffer[Tuple2[Long, Long]]\n        for (i <- 0 until\
    \ lst.length) {\n            for (j <- 0 until lst(i).length) {\n            \
    \    if (lst(i)(j) == x) result += Tuple2(i, j)\n            }\n        }\n  \
    \      result.toList.sortWith((a, b) => {\n            if (a._1 == b._1) a._2\
    \ > b._2\n            else a._1 < b._1\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            var row = lst(i)\n            for (j <- 0 until row.length) {\n\
    \                if (row(j) == x) {\n                    result = result :+ (i,\
    \ j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((x, y) => x._1 < y._1 || (x._1 ==\
    \ y._1 && x._2 > y._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((x,\
    \ y) => x._1 < y._1 || (x._1 == y._1 && x._2 > y._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ == b._1) {\n                a._2 > b._2\n            } else {\n            \
    \    a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => {\n            if (a._1 == b._1) {\n        \
    \        a._2 > b._2\n            } else {\n                a._1 < b._1\n    \
    \        }\n        })", "        var result = List[Tuple2[Long, Long]]()\n  \
    \      for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            val row = lst(i)\n     \
    \       for (j <- 0 until row.length) {\n                if (row(j) == x) {\n\
    \                    result = (i, j) :: result\n                }\n          \
    \  }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2 > b._2\
    \ else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n     \
    \   for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) {\n                    result = result :+ (i, j)\n                }\n   \
    \         }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ == b._1) {\n                a._2 > b._2\n            } else {\n            \
    \    a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            var row = lst(i)\n\
    \            for (j <- 0 until row.length) {\n                if (row(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((t1,\
    \ t2) => t1._1 < t2._1 || (t1._1 == t2._1 && t1._2 > t2._2))", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) {\n                    result = result :+ (i, j)\n                }\n   \
    \         }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2\
    \ > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            var row = lst(i)\n     \
    \       for (j <- 0 until row.length) {\n                if (row(j) == x) {\n\
    \                    result = result :+ (i, j)\n                }\n          \
    \  }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 < b._1) true\n            else if (a._1 == b._1)\
    \ a._2 > b._2\n            else false\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => {\n            if (a._1 == b._1) {\n        \
    \        a._2 > b._2\n            } else {\n                a._1 < b._1\n    \
    \        }\n        })", "        var result = List[Tuple2[Long, Long]]()\n  \
    \      for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        val result =\
    \ new ListBuffer[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) result += Tuple2(i, j)\n            }\n        }\n        result.toList.sortWith((x,\
    \ y) => x._1 < y._1 || (x._1 == y._1 && x._2 > y._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var res = List[Tuple2[Long, Long]]()\n    \
    \    for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) res = (i, j) :: res\n            }\n\
    \        }\n        res.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2\
    \ > b._2))", "        var result = List[Tuple2[Long, Long]]()\n        for (i\
    \ <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length) {\n \
    \               if (lst(i)(j) == x) {\n                    result = (i, j) ::\
    \ result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ < b._1) true\n            else if (a._1 == b._1) a._2 > b._2\n            else\
    \ false\n        })", "        var result = List[Tuple2[Long, Long]]()\n     \
    \   for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       val row = lst.zipWithIndex.map(x => x._1.zipWithIndex.filter(y => y._1\
    \ == x._2).map(y => (x._2, y._2))).flatten\n        row.sortWith((x, y) => x._1\
    \ < y._1 || (x._1 == y._1 && x._2 > y._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => {\n            if (a._1 == b._1) {\n        \
    \        a._2 > b._2\n            } else {\n                a._1 < b._1\n    \
    \        }\n        })", "        var result = List[Tuple2[Long, Long]]()\n  \
    \      for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ == b._1) {\n                a._2 > b._2\n            } else {\n            \
    \    a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            var row = lst(i)\n            for (j <- 0 until row.length) {\n\
    \                if (row(j) == x) {\n                    result = result :+ (i,\
    \ j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 == b._1) {\n                a._2 > b._2\n            } else {\n      \
    \          a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => {\n            if (a._1 == b._1) {\n        \
    \        a._2 > b._2\n            } else {\n                a._1 < b._1\n    \
    \        }\n        })", "        var result = List[Tuple2[Long, Long]]()\n  \
    \      for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            var row = lst(i)\n      \
    \      for (j <- 0 until row.length) {\n                if (row(j) == x) {\n \
    \                   result = (i, j) :: result\n                }\n           \
    \ }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2\
    \ > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            var row = lst(i)\n            for (j <- 0 until row.length) {\n\
    \                if (row(j) == x) {\n                    result = result :+ (i,\
    \ j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => (a._1 < b._1) || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var res = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) res = (i, j) :: res\n            }\n        }\n        res.sortWith((a,\
    \ b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        var row = lst(i)\n            for (j <- 0 until row.length) {\n     \
    \           if (row(j) == x) {\n                    result = result :+ (i, j)\n\
    \                }\n            }\n        }\n        result.sortWith((a, b) =>\
    \ a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => {\n            if (a._1 < b._1) true\n      \
    \      else if (a._1 == b._1) a._2 > b._2\n            else false\n        })",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 == b._1) {\n                a._2 > b._2\n            } else {\n      \
    \          a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        val result = new ListBuffer[Tuple2[Long,\
    \ Long]]\n        for (i <- 0 until lst.length) {\n            val row = lst(i)\n\
    \            for (j <- 0 until row.length) {\n                if (row(j) == x)\
    \ {\n                    result += Tuple2(i, j)\n                }\n         \
    \   }\n        }\n        result.toList.sortWith((a, b) => {\n            if (a._1\
    \ == b._1) {\n                a._2 > b._2\n            } else {\n            \
    \    a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 < b._1) true\n            else if (a._1 == b._1) a._2 > b._2\n       \
    \     else false\n        })", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => (a._1 < b._1) || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 == b._1) {\n                a._2 > b._2\n            } else {\n      \
    \          a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => (a._1 < b._1) || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((t1,\
    \ t2) => {\n            if (t1._1 == t2._1) {\n                t1._2 > t2._2\n\
    \            } else {\n                t1._1 < t2._1\n            }\n        })",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((t1, t2) => t1._1 < t2._1 ||\
    \ (t1._1 == t2._1 && t1._2 > t2._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((t1, t2) => t1._1 < t2._1 || (t1._1 == t2._1 && t1._2 >\
    \ t2._2))", "        var result = List[Tuple2[Long, Long]]()\n        for (i <-\
    \ 0 until lst.length) {\n            for (j <- 0 until lst(i).length) {\n    \
    \            if (lst(i)(j) == x) {\n                    result = result :+ (i,\
    \ j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            var row = lst(i)\n     \
    \       for (j <- 0 until row.length) {\n                if (row(j) == x) {\n\
    \                    result = result :+ (i, j)\n                }\n          \
    \  }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        val result = new ListBuffer[Tuple2[Long, Long]]\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result += Tuple2(i, j)\n            }\n\
    \        }\n        result.toList.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = new ListBuffer[Tuple2[Long, Long]]\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result += Tuple2(i,\
    \ j)\n                }\n            }\n        }\n        result.toList.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            var row = lst(i)\n            for (j <- 0 until row.length) {\n\
    \                if (row(j) == x) {\n                    result = (i, j) :: result\n\
    \                }\n            }\n        }\n        result.sortWith((a, b) =>\
    \ a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            var row = lst(i)\n\
    \            for (j <- 0 until row.length) {\n                if (row(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        val result = new ListBuffer[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result += Tuple2(i, j)\n            }\n\
    \        }\n        result.toList.sortWith((a, b) => {\n            if (a._1 !=\
    \ b._1) a._1 < b._1\n            else a._2 > b._2\n        })", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        var row = lst(i)\n            for (j <- 0 until row.length) {\n     \
    \           if (row(j) == x) {\n                    result = (i, j) :: result\n\
    \                }\n            }\n        }\n        result.sortWith((a, b) =>\
    \ a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        val result = ListBuffer[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            val row = lst(i)\n     \
    \       for (j <- 0 until row.length) {\n                if (row(j) == x) {\n\
    \                    result += Tuple2(i, j)\n                }\n            }\n\
    \        }\n        result.toList.sortWith((a, b) => {\n            if (a._1 ==\
    \ b._1) {\n                a._2 > b._2\n            } else {\n               \
    \ a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            val row = lst(i)\n\
    \            for (j <- 0 until row.length) {\n                if (row(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((x, y) => x._1 < y._1 || (x._1 ==\
    \ y._1 && x._2 > y._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            var row = lst(i)\n      \
    \      for (j <- 0 until row.length) {\n                if (row(j) == x) {\n \
    \                   result = result :+ (i, j)\n                }\n           \
    \ }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2\
    \ > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2\
    \ > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))"]
stop_tokens:
- "\n    }\n"

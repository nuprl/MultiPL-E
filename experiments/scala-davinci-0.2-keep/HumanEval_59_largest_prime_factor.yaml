name: HumanEval_59_largest_prime_factor
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
  \    // >>> largest_prime_factor(13195)\n    // 29\n    // >>> largest_prime_factor(2048)\n\
  \    // 2\n    def largestPrimeFactor(n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
  \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
  \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
  \ == (29l));\n    }\n\n}\n"
completions: ["        var i = 2L\n        var m = n\n        while (i <= m) {\n \
    \           if (m % i == 0) {\n                m /= i\n                i -= 1\n\
    \            }\n            i += 1\n        }\n        i", "        var m = n\n\
    \        var p = 2L\n        while (m > 1) {\n            if (m % p == 0) {\n\
    \                m /= p\n            } else {\n                p += 1\n      \
    \      }\n        }\n        p", "        var x = n\n        var i = 2L\n    \
    \    while (i <= x) {\n            if (x % i == 0) {\n                x /= i\n\
    \                i -= 1\n            }\n            i += 1\n        }\n      \
    \  i", "        var max = 1L\n        var i = 2L\n        while (i * i <= n) {\n\
    \            if (n % i == 0) {\n                max = i\n                while\
    \ (n % i == 0) n /= i\n            }\n            i += 1\n        }\n        if\
    \ (n > 1) max = n\n        max", "        var x = n\n        var i = 2L\n    \
    \    while (i <= x) {\n            if (x % i == 0) {\n                x /= i\n\
    \                i -= 1\n            }\n            i += 1\n        }\n      \
    \  i", "        var p = 2L\n        var m = n\n        while (m != 1) {\n    \
    \        if (m % p == 0) {\n                m /= p\n            } else {\n   \
    \             p += 1\n            }\n        }\n        p", "        var x = n\n\
    \        var i = 2L\n        while (i * i <= x) {\n            while (x % i ==\
    \ 0) {\n                x /= i\n            }\n            i += 1\n        }\n\
    \        x", "        var m = n\n        var i = 2L\n        while (i <= m) {\n\
    \            if (m % i == 0) {\n                m /= i\n                i -= 1\n\
    \            }\n            i += 1\n        }\n        i", "        var max =\
    \ 0L\n        var i = 2L\n        while (i <= n) {\n            if (n % i == 0)\
    \ {\n                max = i\n                n /= i\n            }\n        \
    \    else i += 1\n        }\n        max", "        var m = n\n        var i =\
    \ 2L\n        while (i <= sqrt(m)) {\n            if (m % i == 0) {\n        \
    \        m /= i\n                i -= 1\n            }\n            i += 1\n \
    \       }\n        m", "        var m = n\n        var p = 2L\n        while (m\
    \ > 1) {\n            if (m % p == 0) {\n                m /= p\n            }\
    \ else {\n                p += 1\n            }\n        }\n        p", "    \
    \    var m = n\n        var i = 2L\n        while (i <= m) {\n            if (m\
    \ % i == 0) {\n                m /= i\n                i -= 1\n            }\n\
    \            i += 1\n        }\n        i", "        var m = n\n        var i\
    \ = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n            \
    \    m /= i\n                i -= 1\n            }\n            i += 1\n     \
    \   }\n        i", "        var largest = 0L\n        var i = 2L\n        while\
    \ (i <= n) {\n            if (n % i == 0) {\n                largest = i\n   \
    \             n /= i\n            }\n            else i += 1\n        }\n    \
    \    largest", "        var m = n\n        var p = 2L\n        while (m % p ==\
    \ 0) {\n            m /= p\n        }\n        p = 3L\n        while (m > 1) {\n\
    \            while (m % p == 0) {\n                m /= p\n            }\n   \
    \         p += 2\n        }\n        p -= 2\n        return p", "        var largest\
    \ = 0L\n        var i = 2L\n        while (i <= n) {\n            if (n % i ==\
    \ 0) {\n                largest = i\n                n /= i\n            }\n \
    \           else i += 1\n        }\n        largest", "        var i = 2L\n  \
    \      var nn = n\n        while (i * i <= nn) {\n            if (nn % i == 0)\
    \ {\n                nn /= i\n                while (nn % i == 0) nn /= i\n  \
    \          }\n            i += 1\n        }\n        if (nn == 1) i else nn",
  "        var i = 2L\n        var m = n\n        while (i <= m) {\n            if\
    \ (m % i == 0) {\n                m /= i\n                i -= 1\n           \
    \ }\n            i += 1\n        }\n        i", "        var m = n\n        var\
    \ i = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n          \
    \      m /= i\n                i -= 1\n            }\n            i += 1\n   \
    \     }\n        return i", "        var i = 2L\n        var n2 = n\n        while\
    \ (i <= n2) {\n            if (n2 % i == 0) {\n                n2 /= i\n     \
    \           i -= 1\n            }\n            i += 1\n        }\n        i",
  "        var i = 2L\n        var largest = 1L\n        while (i * i <= n) {\n  \
    \          if (n % i == 0) {\n                largest = i\n                while\
    \ (n % i == 0) n /= i\n            }\n            i += 1\n        }\n        if\
    \ (n > 1) largest = n\n        largest", "        var m = n\n        var i = 2L\n\
    \        while (i <= m) {\n            if (m % i == 0) {\n                m /=\
    \ i\n                i -= 1\n            }\n            i += 1\n        }\n  \
    \      i", "        var largest = 0L\n        var i = 2L\n        while (i <=\
    \ n) {\n            if (n % i == 0) {\n                largest = i\n         \
    \       n /= i\n            }\n            else i += 1\n        }\n        largest",
  "        var largest = 0L\n        var i = 2L\n        while (i <= n) {\n      \
    \      if (n % i == 0) {\n                largest = i\n                n /= i\n\
    \            }\n            else i += 1\n        }\n        largest", "      \
    \  var largest = 0L\n        var i = 2L\n        while (i <= n) {\n          \
    \  if (n % i == 0) {\n                largest = i\n                n /= i\n  \
    \          }\n            else i += 1\n        }\n        largest", "        var\
    \ largest = 0L\n        var i = 2L\n        while (i <= sqrt(n)) {\n         \
    \   if (n % i == 0) {\n                largest = i\n                while (n %\
    \ i == 0) n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) largest = n\n        largest", "        var p = 2L\n        var m = n\n\
    \        while (m % p == 0) {\n            m /= p\n        }\n        p += 1\n\
    \        while (p * p <= m) {\n            while (m % p == 0) {\n            \
    \    m /= p\n            }\n            p += 2\n        }\n        if (m == 1)\
    \ p - 2 else m", "        var result = 1L\n        var i = 2L\n        while (i\
    \ <= n) {\n            if (n % i == 0) {\n                result = i\n       \
    \         n /= i\n            }\n            else i += 1\n        }\n        result",
  "        var m = n\n        var i = 2L\n        while (i <= m) {\n            if\
    \ (m % i == 0) {\n                m /= i\n                i -= 1\n           \
    \ }\n            i += 1\n        }\n        i", "        var m = n\n        var\
    \ i = 2L\n        while (i * i <= m) {\n            if (m % i == 0) {\n      \
    \          m /= i\n                while (m % i == 0) m /= i\n            }\n\
    \            i += 1\n        }\n        m", "        var m = n\n        var factor\
    \ = 2L\n        while (m > 1) {\n            while (m % factor == 0) {\n     \
    \           m /= factor\n            }\n            factor += 1\n        }\n \
    \       factor - 1", "        var m = n\n        var i = 2L\n        while (i\
    \ <= m) {\n            if (m % i == 0) {\n                m /= i\n           \
    \     i -= 1\n            }\n            i += 1\n        }\n        i", "    \
    \    var m = n\n        var i = 2L\n        while (i * i <= m) {\n           \
    \ if (m % i == 0) {\n                m /= i\n                i -= 1\n        \
    \    }\n            i += 1\n        }\n        m", "        var i = 2L\n     \
    \   var nn = n\n        while (i * i <= nn) {\n            if (nn % i == 0) {\n\
    \                nn /= i\n                while (nn % i == 0) nn /= i\n      \
    \      }\n            i += 1\n        }\n        if (nn == 1) i else nn", "  \
    \      var largest = 0L\n        var i = 2L\n        while (i <= n) {\n      \
    \      if (n % i == 0) {\n                largest = i\n                n /= i\n\
    \            }\n            else i += 1\n        }\n        largest", "      \
    \  var max = 1L\n        var i = 2L\n        while (i <= n) {\n            if\
    \ (n % i == 0) {\n                max = i\n                n /= i\n          \
    \  }\n            else i += 1\n        }\n        max", "        var largest =\
    \ 0L\n        var i = 2L\n        while (i <= n) {\n            if (n % i == 0)\
    \ {\n                largest = i\n                n /= i\n            }\n    \
    \        else i += 1\n        }\n        largest", "        var largest = 0L\n\
    \        var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n\
    \                largest = i\n                n /= i\n            }\n        \
    \    else i += 1\n        }\n        largest", "        var m = n\n        var\
    \ i = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n          \
    \      m /= i\n                i -= 1\n            }\n            i += 1\n   \
    \     }\n        i", "        var p = 2L\n        var result = 1L\n        while\
    \ (p * p <= n) {\n            if (n % p == 0) {\n                result = p\n\
    \                while (n % p == 0) n /= p\n            }\n            p += 1\n\
    \        }\n        if (n > 1) result = n\n        result", "        var m = n\n\
    \        var i = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n\
    \                m /= i\n                i -= 1\n            }\n            i\
    \ += 1\n        }\n        i", "        var m = n\n        var i = 2L\n      \
    \  while (i <= m) {\n            if (m % i == 0) {\n                m /= i\n \
    \               i -= 1\n            }\n            i += 1\n        }\n       \
    \ i", "        var i = 2L\n        var nn = n\n        while (i <= nn) {\n   \
    \         if (nn % i == 0) {\n                nn /= i\n                i -= 1\n\
    \            }\n            i += 1\n        }\n        i", "        var m = n\n\
    \        var i = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n\
    \                m /= i\n                i -= 1\n            }\n            i\
    \ += 1\n        }\n        return i", "        var m = n\n        var i = 2L\n\
    \        while (i <= m) {\n            if (m % i == 0) {\n                m /=\
    \ i\n                if (m == 1) return i\n            }\n            else i +=\
    \ 1\n        }\n        return -1", "        var factor = 2L\n        var result\
    \ = n\n        while (factor <= result) {\n            if (result % factor ==\
    \ 0) {\n                result /= factor\n                while (result % factor\
    \ == 0) result /= factor\n            }\n            factor += 1\n        }\n\
    \        result", "        var i = 2L\n        var nn = n\n        while (i <=\
    \ nn) {\n            if (nn % i == 0) {\n                nn /= i\n           \
    \     i -= 1\n            }\n            i += 1\n        }\n        i", "    \
    \    var p = 2L\n        var m = n\n        while (m != 1) {\n            if (m\
    \ % p == 0) {\n                m /= p\n            } else {\n                p\
    \ += 1\n            }\n        }\n        p", "        var largest = 1L\n    \
    \    var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n   \
    \             largest = i\n                n /= i\n            }\n           \
    \ else i += 1\n        }\n        largest", "        var factor = 2L\n       \
    \ var n2 = n\n        while (n2 > 1) {\n            if (n2 % factor == 0) {\n\
    \                n2 /= factor\n                while (n2 % factor == 0) n2 /=\
    \ factor\n            }\n            factor += 1\n        }\n        factor",
  "        var x = n\n        var i = 2L\n        while (i <= x) {\n            if\
    \ (x % i == 0) {\n                x /= i\n                i -= 1\n           \
    \ }\n            i += 1\n        }\n        i", "        var i = 2L\n        var\
    \ m = n\n        while (i <= m) {\n            if (m % i == 0) {\n           \
    \     m /= i\n                i -= 1\n            }\n            i += 1\n    \
    \    }\n        i", "        var m = n\n        var i = 2L\n        while (i <=\
    \ m) {\n            if (m % i == 0) {\n                m /= i\n              \
    \  i -= 1\n            }\n            i += 1\n        }\n        return i", " \
    \       var m = n\n        var i = 2L\n        while (i <= m) {\n            if\
    \ (m % i == 0) {\n                m /= i\n                i -= 1\n           \
    \ }\n            i += 1\n        }\n        return i", "        var m = n\n  \
    \      var i = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n \
    \               m /= i\n                i -= 1\n            }\n            i +=\
    \ 1\n        }\n        i", "        var m = n\n        var i = 2L\n        while\
    \ (i <= m) {\n            if (m % i == 0) {\n                m /= i\n        \
    \        i -= 1\n            }\n            i += 1\n        }\n        return\
    \ i", "        var m = n\n        var i = 2L\n        while (i <= m) {\n     \
    \       if (m % i == 0) {\n                m /= i\n                i -= 1\n  \
    \          }\n            i += 1\n        }\n        i", "        var i = 2L\n\
    \        var m = n\n        while (i * i <= m) {\n            if (m % i == 0)\
    \ {\n                m /= i\n                while (m % i == 0) m /= i\n     \
    \       }\n            i += 1\n        }\n        m", "        def largestPrimeFactor(n\
    \ : Long, p : Long) : Long = {\n            if (n % p == 0) largestPrimeFactor(n\
    \ / p, p)\n            else if (p * p > n) n\n            else largestPrimeFactor(n,\
    \ p + 1)\n        }\n        largestPrimeFactor(n, 2)", "        var i = 2L\n\
    \        var nn = n\n        while (i <= nn) {\n            if (nn % i == 0) {\n\
    \                nn /= i\n                i -= 1\n            }\n            i\
    \ += 1\n        }\n        i", "        def largestPrimeFactor(n : Long, factor\
    \ : Long) : Long = {\n            if (n == 1) factor\n            else if (n %\
    \ factor == 0) largestPrimeFactor(n / factor, factor)\n            else largestPrimeFactor(n,\
    \ factor + 1)\n        }\n        largestPrimeFactor(n, 2)", "        var m =\
    \ n\n        var i = 2L\n        while (i <= m) {\n            if (m % i == 0)\
    \ {\n                m /= i\n                i -= 1\n            }\n         \
    \   i += 1\n        }\n        return i", "        var m = n\n        var i =\
    \ 2L\n        while (i <= m) {\n            if (m % i == 0) {\n              \
    \  m /= i\n                i -= 1\n            }\n            i += 1\n       \
    \ }\n        i", "        var max = 0L\n        var i = 2L\n        while (i <=\
    \ sqrt(n)) {\n            if (n % i == 0) {\n                if (isPrime(i)) max\
    \ = i\n                if (isPrime(n / i)) max = n / i\n            }\n      \
    \      i += 1\n        }\n        max", "        var x = n\n        var i = 2L\n\
    \        while (i <= x) {\n            if (x % i == 0) {\n                x /=\
    \ i\n                i -= 1\n            }\n            i += 1\n        }\n  \
    \      i", "        var m = n\n        var i = 2L\n        while (i <= m) {\n\
    \            if (m % i == 0) {\n                m /= i\n                i -= 1\n\
    \            }\n            i += 1\n        }\n        i", "        var m = n\n\
    \        var i = 2L\n        while (i <= sqrt(m)) {\n            if (m % i ==\
    \ 0) {\n                m /= i\n                i -= 1\n            }\n      \
    \      i += 1\n        }\n        m", "        var i = 2L\n        var nn = n\n\
    \        while (i <= nn) {\n            if (nn % i == 0) {\n                nn\
    \ /= i\n                i -= 1\n            }\n            i += 1\n        }\n\
    \        i", "        var m = n\n        var i = 2L\n        while (i <= m) {\n\
    \            if (m % i == 0) {\n                m /= i\n                i -= 1\n\
    \            }\n            i += 1\n        }\n        i", "        var max =\
    \ 1L\n        var i = 2L\n        while (i <= n) {\n            if (n % i == 0)\
    \ {\n                max = i\n                n /= i\n            }\n        \
    \    else i += 1\n        }\n        max", "        var i = 2L\n        var nn\
    \ = n\n        while (i * i <= nn) {\n            if (nn % i == 0) {\n       \
    \         nn /= i\n                while (nn % i == 0) nn /= i\n            }\n\
    \            i += 1\n        }\n        if (nn == 1) i else nn", "        var\
    \ result = 1L\n        var i = 2L\n        while (i <= n) {\n            if (n\
    \ % i == 0) {\n                result = i\n                n /= i\n          \
    \  }\n            else i += 1\n        }\n        result", "        var largest\
    \ = 0L\n        var i = 2L\n        while (i <= n) {\n            if (n % i ==\
    \ 0) {\n                largest = i\n                n /= i\n            }\n \
    \           else i += 1\n        }\n        largest", "        var largest = 0L\n\
    \        var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n\
    \                largest = i\n                n /= i\n            }\n        \
    \    else i += 1\n        }\n        largest", "        var largest = 1L\n   \
    \     var i = 2L\n        while (i * i <= n) {\n            if (n % i == 0) {\n\
    \                largest = i\n                while (n % i == 0) n /= i\n    \
    \        }\n            i += 1\n        }\n        if (n > 1) largest = n\n  \
    \      largest", "        var m = n\n        var i = 2L\n        while (i <= m)\
    \ {\n            if (m % i == 0) {\n                m /= i\n                i\
    \ -= 1\n            }\n            i += 1\n        }\n        i", "        var\
    \ x = n\n        var i = 2L\n        while (i <= x) {\n            if (x % i ==\
    \ 0) {\n                x /= i\n                i -= 1\n            }\n      \
    \      i += 1\n        }\n        return i", "        var m = n\n        var i\
    \ = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n            \
    \    m /= i\n                i -= 1\n            }\n            i += 1\n     \
    \   }\n        i", "        def largestPrimeFactor(n : Long, p : Long) : Long\
    \ = {\n            if (n == 1) p\n            else if (n % p == 0) largestPrimeFactor(n\
    \ / p, p)\n            else largestPrimeFactor(n, p + 1)\n        }\n        largestPrimeFactor(n,\
    \ 2)", "        var largest = 1L\n        var i = 2L\n        while (i <= n) {\n\
    \            if (n % i == 0) {\n                largest = i\n                n\
    \ /= i\n            }\n            else i += 1\n        }\n        largest", " \
    \       var result = 0L\n        var i = 2L\n        while (i <= n) {\n      \
    \      if (n % i == 0) {\n                result = i\n                n /= i\n\
    \            } else {\n                i += 1\n            }\n        }\n    \
    \    result", "        var m = n\n        var p = 2L\n        while (m > 1) {\n\
    \            if (m % p == 0) {\n                m /= p\n            } else {\n\
    \                p += 1\n            }\n        }\n        p", "        var max\
    \ = 1L\n        var i = 2L\n        while (i <= sqrt(n)) {\n            if (n\
    \ % i == 0) {\n                if (isPrime(i)) max = i\n                if (isPrime(n\
    \ / i)) return n / i\n            }\n            i += 1\n        }\n        max",
  "        var x = n\n        var i = 2L\n        while (i <= x) {\n            if\
    \ (x % i == 0) {\n                x /= i\n                i -= 1\n           \
    \ }\n            i += 1\n        }\n        i", "        var m = n\n        var\
    \ i = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n          \
    \      m /= i\n                i -= 1\n            }\n            i += 1\n   \
    \     }\n        i", "        var m = n\n        var i = 2L\n        while (i\
    \ <= m) {\n            if (m % i == 0) {\n                m /= i\n           \
    \     i -= 1\n            }\n            i += 1\n        }\n        return i",
  "        var largest = 0L\n        var i = 2L\n        while (i * i <= n) {\n  \
    \          if (n % i == 0) {\n                largest = i\n                while\
    \ (n % i == 0) n /= i\n            }\n            i += 1\n        }\n        if\
    \ (n > 1) largest = n\n        largest", "        var largest = 0L\n        var\
    \ i = 2L\n        while (i <= sqrt(n)) {\n            if (n % i == 0) {\n    \
    \            largest = i\n                while (n % i == 0) n /= i\n        \
    \    }\n            i += 1\n        }\n        if (n > 1) largest = n\n      \
    \  largest", "        def largestPrimeFactor(n : Long, p : Long) : Long = {\n\
    \            if (n % p == 0) largestPrimeFactor(n / p, p)\n            else if\
    \ (p * p > n) n\n            else largestPrimeFactor(n, p + 1)\n        }\n  \
    \      largestPrimeFactor(n, 2)", "        var x = n\n        var i = 2L\n   \
    \     while (i <= x) {\n            if (x % i == 0) {\n                x /= i\n\
    \                i -= 1\n            }\n            i += 1\n        }\n      \
    \  i", "        var i = 2L\n        var m = n\n        while (i * i <= m) {\n\
    \            if (m % i == 0) {\n                m /= i\n                while\
    \ (m % i == 0) m /= i\n            }\n            i += 1\n        }\n        m",
  "        var result = 1L\n        var i = 2L\n        while (i <= n) {\n       \
    \     if (n % i == 0) {\n                result = i\n                n /= i\n\
    \            }\n            else i += 1\n        }\n        result", "       \
    \ var factor = 2L\n        var num = n\n        while (num % factor == 0) {\n\
    \            num /= factor\n        }\n        factor = 3L\n        while (num\
    \ > 1) {\n            while (num % factor == 0) {\n                num /= factor\n\
    \            }\n            factor += 2\n        }\n        factor", "       \
    \ var m = n\n        var i = 2L\n        while (i <= m) {\n            if (m %\
    \ i == 0) {\n                m /= i\n                i -= 1\n            }\n \
    \           i += 1\n        }\n        return i", "        var largest = 0L\n\
    \        var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n\
    \                largest = i\n                n /= i\n            }\n        \
    \    else i += 1\n        }\n        largest", "        var largest = 0L\n   \
    \     var i = 2L\n        var n1 = n\n        while (i <= n1) {\n            if\
    \ (n1 % i == 0) {\n                largest = i\n                n1 /= i\n    \
    \            while (n1 % i == 0) n1 /= i\n            }\n            i += 1\n\
    \        }\n        largest", "        var i = 2L\n        var nn = n\n      \
    \  while (i <= sqrt(nn)) {\n            if (nn % i == 0) {\n                nn\
    \ /= i\n                i -= 1\n            }\n            i += 1\n        }\n\
    \        nn", "        var largest = 0L\n        var i = 2L\n        while (i\
    \ <= n) {\n            if (n % i == 0) {\n                largest = i\n      \
    \          n /= i\n            }\n            else i += 1\n        }\n       \
    \ largest", "        var m = n\n        var i = 2L\n        while (i <= m) {\n\
    \            if (m % i == 0) {\n                m /= i\n                if (m\
    \ == 1) return i\n            }\n            else i += 1\n        }\n        return\
    \ -1", "        var m = n\n        var k = 2L\n        while (m > 1) {\n     \
    \       if (m % k == 0) {\n                m /= k\n            } else {\n    \
    \            k += 1\n            }\n        }\n        k", "        var largest\
    \ = 0L\n        var i = 2L\n        while (i <= n) {\n            if (n % i ==\
    \ 0) {\n                largest = i\n                n /= i\n            }\n \
    \           else i += 1\n        }\n        largest", "        var max = 0L\n\
    \        var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n\
    \                max = i\n                n /= i\n            }\n            else\
    \ i += 1\n        }\n        max", "        def largestPrimeFactor(n : Long, p\
    \ : Long) : Long = {\n            if (n % p == 0) largestPrimeFactor(n / p, p)\n\
    \            else if (p * p > n) n\n            else largestPrimeFactor(n, p +\
    \ 1)\n        }\n        largestPrimeFactor(n, 2)", "        var result = 0L\n\
    \        var m = n\n        var i = 2L\n        while (i <= m) {\n           \
    \ if (m % i == 0) {\n                result = i\n                m /= i\n    \
    \        } else {\n                i += 1\n            }\n        }\n        result",
  "        var largest = 0L\n        var i = 2L\n        while (i <= n) {\n      \
    \      if (n % i == 0) {\n                largest = i\n                n /= i\n\
    \            }\n            else i += 1\n        }\n        largest", "      \
    \  var m = n\n        var i = 2L\n        while (i <= m) {\n            if (m\
    \ % i == 0) {\n                m /= i\n                i -= 1\n            }\n\
    \            i += 1\n        }\n        i", "        var largest = 0L\n      \
    \  var i = 2L\n        while (i * i <= n) {\n            if (n % i == 0) {\n \
    \               largest = i\n                n /= i\n            }\n         \
    \   else i += 1\n        }\n        if (n > 1) largest = n\n        largest",
  "        var largest = 0L\n        var i = 2L\n        while (i * i <= n) {\n  \
    \          if (n % i == 0) {\n                largest = i\n                while\
    \ (n % i == 0) n /= i\n            }\n            i += 1\n        }\n        if\
    \ (n > 1) largest = n\n        largest", "        var m = n\n        var i = 2L\n\
    \        while (i <= m) {\n            if (m % i == 0) {\n                m /=\
    \ i\n                i -= 1\n            }\n            i += 1\n        }\n  \
    \      return i", "        var m = n\n        var i = 2L\n        while (i <=\
    \ sqrt(m)) {\n            if (m % i == 0) {\n                m /= i\n        \
    \        while (m % i == 0) m /= i\n            }\n            i += 1\n      \
    \  }\n        m", "        var m = n\n        var i = 2L\n        while (i * i\
    \ <= m) {\n            if (m % i == 0) {\n                m /= i\n           \
    \     i -= 1\n            }\n            i += 1\n        }\n        m", "    \
    \    var largest = 0L\n        var i = 2L\n        while (i <= n) {\n        \
    \    if (n % i == 0) {\n                largest = i\n                n /= i\n\
    \            }\n            else i += 1\n        }\n        largest", "      \
    \  var largest = 1L\n        var i = 2L\n        while (i <= sqrt(n)) {\n    \
    \        if (n % i == 0) {\n                if (isPrime(i)) largest = i\n    \
    \            if (isPrime(n / i)) return n / i\n            }\n            i +=\
    \ 1\n        }\n        largest", "        var x = n\n        var i = 2L\n   \
    \     while (i <= x) {\n            if (x % i == 0) {\n                x /= i\n\
    \                i -= 1\n            }\n            i += 1\n        }\n      \
    \  i", "        var m = n\n        var p = 2L\n        while (m > 1) {\n     \
    \       if (m % p == 0) {\n                m /= p\n            } else {\n    \
    \            p += 1\n            }\n        }\n        p", "        var m = n\n\
    \        var i = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n\
    \                m /= i\n                i -= 1\n            }\n            i\
    \ += 1\n        }\n        i", "        var max = 1L\n        var i = 2L\n   \
    \     while (i <= n) {\n            if (n % i == 0) {\n                max = i\n\
    \                n /= i\n            }\n            else i += 1\n        }\n \
    \       max", "        var m = n\n        var i = 2L\n        while (i <= m) {\n\
    \            if (m % i == 0) {\n                m /= i\n                i -= 1\n\
    \            }\n            i += 1\n        }\n        return i", "        var\
    \ largest = 0L\n        var i = 2L\n        while (i <= n) {\n            if (n\
    \ % i == 0) {\n                largest = i\n                n /= i\n         \
    \   }\n            else i += 1\n        }\n        largest", "        var max\
    \ = -1L\n        var i = 2L\n        while (i <= n) {\n            if (n % i ==\
    \ 0) {\n                max = i\n                n /= i\n            }\n     \
    \       else i += 1\n        }\n        max", "        var m = n\n        var\
    \ i = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n          \
    \      m /= i\n                i -= 1\n            }\n            i += 1\n   \
    \     }\n        return i", "        var m = n\n        var i = 2L\n        while\
    \ (i <= m) {\n            if (m % i == 0) {\n                m /= i\n        \
    \        i -= 1\n            }\n            i += 1\n        }\n        i", " \
    \       var i = 2L\n        var nn = n\n        while (i <= sqrt(nn)) {\n    \
    \        if (nn % i == 0) {\n                nn /= i\n                i -= 1\n\
    \            }\n            i += 1\n        }\n        nn", "        var i = 2L\n\
    \        var nn = n\n        while (i * i <= nn) {\n            if (nn % i ==\
    \ 0) {\n                nn /= i\n                while (nn % i == 0) nn /= i\n\
    \            }\n            i += 1\n        }\n        nn", "        var x = n\n\
    \        var i = 2L\n        while (i <= x) {\n            if (x % i == 0) {\n\
    \                x /= i\n                i -= 1\n            }\n            i\
    \ += 1\n        }\n        i", "        def largestPrimeFactorRec(n : Long, i\
    \ : Long) : Long = {\n            if (i > sqrt(n)) n\n            else if (n %\
    \ i == 0) largestPrimeFactorRec(n / i, i)\n            else largestPrimeFactorRec(n,\
    \ i + 1)\n        }\n        largestPrimeFactorRec(n, 2)", "        var result\
    \ = 0L\n        var i = 2L\n        while (i <= n) {\n            if (n % i ==\
    \ 0) {\n                result = i\n                n /= i\n            } else\
    \ {\n                i += 1\n            }\n        }\n        result", "    \
    \    var largest = 0L\n        var i = 2L\n        while (i <= n) {\n        \
    \    if (n % i == 0) {\n                largest = i\n                n /= i\n\
    \            }\n            else i += 1\n        }\n        largest", "      \
    \  var m = n\n        var i = 2L\n        while (i <= m) {\n            if (m\
    \ % i == 0) {\n                m /= i\n                i -= 1\n            }\n\
    \            i += 1\n        }\n        i", "        var m = n\n        var i\
    \ = 2L\n        while (i * i <= m) {\n            if (m % i == 0) {\n        \
    \        m /= i\n                while (m % i == 0) m /= i\n            }\n  \
    \          i += 1\n        }\n        m", "        var m = n\n        var i =\
    \ 2L\n        while (i <= m) {\n            if (m % i == 0) {\n              \
    \  m /= i\n                i -= 1\n            }\n            i += 1\n       \
    \ }\n        i", "        var m = n\n        var p = 2L\n        while (m > 1)\
    \ {\n            if (m % p == 0) {\n                m /= p\n            } else\
    \ {\n                p += 1\n            }\n        }\n        p", "        var\
    \ max = 0L\n        var i = 2L\n        while (i <= sqrt(n)) {\n            if\
    \ (n % i == 0) {\n                if (isPrime(i)) max = i\n                if\
    \ (isPrime(n / i)) max = n / i\n            }\n            i += 1\n        }\n\
    \        max", "        var m = n\n        var i = 2L\n        while (i <= m)\
    \ {\n            if (m % i == 0) {\n                m /= i\n                i\
    \ -= 1\n            }\n            i += 1\n        }\n        i", "        var\
    \ max = 0L\n        var i = 2L\n        while (i <= n) {\n            if (n %\
    \ i == 0) {\n                max = i\n                n /= i\n            }\n\
    \            else i += 1\n        }\n        max", "        var largest = 1L\n\
    \        var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n\
    \                largest = i\n                n /= i\n            }\n        \
    \    else i += 1\n        }\n        largest", "        var x = n\n        var\
    \ d = 2\n        while (d <= x) {\n            if (x % d == 0) {\n           \
    \     x /= d\n            } else {\n                d += 1\n            }\n  \
    \      }\n        d", "        var max = 0L\n        var x = n\n        var i\
    \ = 2L\n        while (i <= x) {\n            if (x % i == 0) {\n            \
    \    max = i\n                x /= i\n            } else {\n                i\
    \ += 1\n            }\n        }\n        max", "        var x = n\n        var\
    \ i = 2L\n        while (i <= sqrt(x)) {\n            if (x % i == 0) {\n    \
    \            x /= i\n                i -= 1\n            }\n            i += 1\n\
    \        }\n        x", "        var largest = 0L\n        var i = 2L\n      \
    \  while (i <= n) {\n            if (n % i == 0) {\n                largest =\
    \ i\n                n /= i\n            }\n            else i += 1\n        }\n\
    \        largest", "        var m = n\n        var i = 2L\n        while (i <=\
    \ m) {\n            if (m % i == 0) {\n                m /= i\n              \
    \  i -= 1\n            }\n            i += 1\n        }\n        i", "       \
    \ var m = n\n        var i = 2L\n        while (i <= m) {\n            if (m %\
    \ i == 0) {\n                m /= i\n                i -= 1\n            }\n \
    \           i += 1\n        }\n        i", "        var m = n\n        var i =\
    \ 2L\n        while (i <= m) {\n            if (m % i == 0) {\n              \
    \  m /= i\n                i -= 1\n            }\n            i += 1\n       \
    \ }\n        i", "        var m = n\n        var p = 2L\n        while (m % p\
    \ == 0) {\n            m /= p\n        }\n        p += 1\n        while (m > 1)\
    \ {\n            while (m % p == 0) {\n                m /= p\n            }\n\
    \            p += 2\n        }\n        p - 2", "        var factor = 2L\n   \
    \     var nn = n\n        while (nn % factor == 0) {\n            nn /= factor\n\
    \        }\n        factor = 3L\n        while (nn > 1) {\n            while (nn\
    \ % factor == 0) {\n                nn /= factor\n            }\n            factor\
    \ += 2\n        }\n        factor -= 2\n        factor", "        var max = 1L\n\
    \        var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n\
    \                max = i\n                n /= i\n            }\n            else\
    \ i += 1\n        }\n        max", "        var m = n\n        var i = 2L\n  \
    \      while (i * i <= m) {\n            if (m % i == 0) {\n                m\
    \ /= i\n                while (m % i == 0) m /= i\n            }\n           \
    \ i += 1\n        }\n        m", "        var m = n\n        var i = 2L\n    \
    \    while (i <= m) {\n            if (m % i == 0) {\n                m /= i\n\
    \                i -= 1\n            }\n            i += 1\n        }\n      \
    \  return i", "        var p = 2L\n        var nn = n\n        while (nn % p ==\
    \ 0) {\n            nn /= p\n        }\n        p += 1\n        while (p * p <=\
    \ nn) {\n            while (nn % p == 0) {\n                nn /= p\n        \
    \    }\n            p += 2\n        }\n        if (nn == 1) p - 2 else nn", " \
    \       var factor = 2L\n        var nn = n\n        while (nn > 1) {\n      \
    \      if (nn % factor == 0) {\n                nn /= factor\n               \
    \ while (nn % factor == 0) {\n                    nn /= factor\n             \
    \   }\n            }\n            factor += 1\n        }\n        factor", " \
    \       var m = n\n        var i = 2L\n        while (i <= m) {\n            if\
    \ (m % i == 0) {\n                m /= i\n                i -= 1\n           \
    \ }\n            i += 1\n        }\n        i", "        var x = n\n        var\
    \ i = 2L\n        while (i <= x) {\n            if (x % i == 0) {\n          \
    \      x /= i\n                i -= 1\n            }\n            i += 1\n   \
    \     }\n        i", "        var max = 0L\n        var i = 2L\n        while\
    \ (i <= n) {\n            if (n % i == 0) {\n                max = i\n       \
    \         n /= i\n            }\n            else i += 1\n        }\n        max",
  "        var max = 1L\n        var i = 2L\n        while (i <= n) {\n          \
    \  if (n % i == 0) {\n                max = i\n                n /= i\n      \
    \      }\n            else i += 1\n        }\n        max", "        var m = n\n\
    \        var i = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n\
    \                m /= i\n                i -= 1\n            }\n            i\
    \ += 1\n        }\n        i", "        var factor = 2L\n        var nn = n\n\
    \        while (nn > 1) {\n            if (nn % factor == 0) {\n             \
    \   nn /= factor\n                while (nn % factor == 0) nn /= factor\n    \
    \        }\n            factor += 1\n        }\n        factor", "        var\
    \ m = n\n        var i = 2L\n        while (i <= m) {\n            if (m % i ==\
    \ 0) {\n                m /= i\n                i -= 1\n            }\n      \
    \      i += 1\n        }\n        i", "        var m = n\n        var i = 2L\n\
    \        while (i <= m) {\n            if (m % i == 0) {\n                m /=\
    \ i\n                i -= 1\n            }\n            i += 1\n        }\n  \
    \      i", "        var largest = 0L\n        for (i <- 2L to sqrt(n).toLong)\
    \ {\n            if (n % i == 0) {\n                if (isPrime(i)) largest =\
    \ i\n                if (isPrime(n / i)) largest = n / i\n            }\n    \
    \    }\n        largest", "        var m = n\n        var i = 2L\n        while\
    \ (i <= m) {\n            if (m % i == 0) {\n                m /= i\n        \
    \        i -= 1\n            }\n            i += 1\n        }\n        i", " \
    \       var m = n\n        var i = 2L\n        while (i <= m) {\n            if\
    \ (m % i == 0) {\n                m /= i\n                i -= 1\n           \
    \ }\n            i += 1\n        }\n        i", "        var m = n\n        var\
    \ i = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n          \
    \      m /= i\n                i -= 1\n            }\n            i += 1\n   \
    \     }\n        return i", "        var m = n\n        var i = 2L\n        while\
    \ (i <= m) {\n            if (m % i == 0) {\n                m /= i\n        \
    \        i -= 1\n            }\n            i += 1\n        }\n        return\
    \ i", "        var m = n\n        var i = 2L\n        while (i * i <= m) {\n \
    \           if (m % i == 0) {\n                m /= i\n                i -= 1\n\
    \            }\n            i += 1\n        }\n        m", "        var m = n\n\
    \        var i = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n\
    \                m /= i\n                i -= 1\n            }\n            i\
    \ += 1\n        }\n        i", "        var largest = 0L\n        var i = 2L\n\
    \        while (i <= n) {\n            if (n % i == 0) {\n                largest\
    \ = i\n                n /= i\n            }\n            else i += 1\n      \
    \  }\n        largest", "        var x = n\n        var i = 2L\n        while\
    \ (i <= x) {\n            if (x % i == 0) {\n                x /= i\n        \
    \        i -= 1\n            }\n            i += 1\n        }\n        i", " \
    \       var max = 0L\n        var i = 2L\n        while (i <= n) {\n         \
    \   if (n % i == 0) {\n                max = i\n                n /= i\n     \
    \       }\n            else i += 1\n        }\n        max", "        var x =\
    \ n\n        var i = 2L\n        while (i <= x) {\n            if (x % i == 0)\
    \ {\n                x /= i\n                i -= 1\n            }\n         \
    \   i += 1\n        }\n        i", "        var result = 0L\n        var i = 2L\n\
    \        while (i <= n) {\n            if (n % i == 0) {\n                result\
    \ = i\n                n /= i\n            } else {\n                i += 1\n\
    \            }\n        }\n        result", "        var largest = 0L\n      \
    \  var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n     \
    \           largest = i\n                n /= i\n            }\n            else\
    \ i += 1\n        }\n        largest", "        var i = 2L\n        var nn = n\n\
    \        while (i * i <= nn) {\n            if (nn % i == 0) {\n             \
    \   nn /= i\n                while (nn % i == 0) nn /= i\n            }\n    \
    \        i += 1\n        }\n        if (nn == 1) i else nn", "        var m =\
    \ n\n        var i = 2L\n        while (i <= m) {\n            if (m % i == 0)\
    \ {\n                m /= i\n                i -= 1\n            }\n         \
    \   i += 1\n        }\n        i", "        var m = n\n        var i = 2L\n  \
    \      while (i <= m) {\n            if (m % i == 0) {\n                m /= i\n\
    \                i -= 1\n            }\n            i += 1\n        }\n      \
    \  return i", "        var max = 0L\n        var i = 2L\n        while (i <= n)\
    \ {\n            if (n % i == 0) {\n                max = i\n                n\
    \ /= i\n            }\n            else i += 1\n        }\n        max", "   \
    \     var largest = 0L\n        var i = 2L\n        while (i <= n) {\n       \
    \     if (n % i == 0) {\n                largest = i\n                n /= i\n\
    \            }\n            else i += 1\n        }\n        largest", "      \
    \  var result = 0L\n        var i = 2L\n        var nn = n\n        while (i <=\
    \ nn) {\n            if (nn % i == 0) {\n                result = i\n        \
    \        nn /= i\n            }\n            else i += 1\n        }\n        result",
  "        var m = n\n        var i = 2L\n        while (i * i <= m) {\n         \
    \   if (m % i == 0) {\n                m /= i\n                while (m % i ==\
    \ 0) m /= i\n            }\n            i += 1\n        }\n        m", "     \
    \   var m = n\n        var i = 2L\n        while (i <= m) {\n            if (m\
    \ % i == 0) {\n                m /= i\n                i -= 1\n            }\n\
    \            i += 1\n        }\n        return i", "        val primes = new PrimeSieve(sqrt(n).toInt).getPrimes\n\
    \        var largest = 0L\n        for (p <- primes) {\n            if (n % p\
    \ == 0) largest = p\n        }\n        largest", "        var i = 2L\n      \
    \  var m = n\n        while (i * i <= m) {\n            if (m % i == 0) {\n  \
    \              m /= i\n                while (m % i == 0) m /= i\n           \
    \ }\n            i += 1\n        }\n        m", "        var largest = 0L\n  \
    \      var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n \
    \               largest = i\n                n /= i\n            }\n         \
    \   else i += 1\n        }\n        largest", "        var m = n\n        var\
    \ i = 2L\n        while (i * i <= m) {\n            if (m % i == 0) {\n      \
    \          m /= i\n                i -= 1\n            }\n            i += 1\n\
    \        }\n        m", "        var p = 2L\n        var m = n\n        while\
    \ (m > 1) {\n            if (m % p == 0) {\n                m /= p\n         \
    \   } else {\n                p += 1\n            }\n        }\n        p", " \
    \       var m = n\n        var i = 2L\n        while (i <= m) {\n            if\
    \ (m % i == 0) {\n                m /= i\n                i -= 1\n           \
    \ }\n            i += 1\n        }\n        i", "        var largest = 0L\n  \
    \      var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n \
    \               largest = i\n                n /= i\n            }\n         \
    \   else i += 1\n        }\n        largest", "        var largest = 0L\n    \
    \    var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n   \
    \             largest = i\n                n /= i\n            }\n           \
    \ else i += 1\n        }\n        largest", "        var largest = 0L\n      \
    \  var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n     \
    \           largest = i\n                n /= i\n            }\n            else\
    \ i += 1\n        }\n        largest", "        val primes = new PrimeGenerator()\n\
    \        var p = primes.next\n        var m = n\n        while (p * p <= m) {\n\
    \            while (m % p == 0) m /= p\n            p = primes.next\n        }\n\
    \        m", "        var largest = 0L\n        var i = 2L\n        while (i <=\
    \ n) {\n            if (n % i == 0) {\n                largest = i\n         \
    \       n /= i\n            }\n            else i += 1\n        }\n        largest",
  "        var m = n\n        var i = 2L\n        while (i <= m) {\n            if\
    \ (m % i == 0) {\n                m /= i\n                i -= 1\n           \
    \ }\n            i += 1\n        }\n        i", "        var largest = 0L\n  \
    \      var i = 2L\n        while (i <= n) {\n            if (n % i == 0) {\n \
    \               largest = i\n                n /= i\n            }\n         \
    \   else i += 1\n        }\n        largest", "        var m = n\n        var\
    \ i = 2L\n        while (i <= m) {\n            if (m % i == 0) {\n          \
    \      m /= i\n                i -= 1\n            }\n            i += 1\n   \
    \     }\n        return i", "        var x = n\n        var i = 2L\n        while\
    \ (i * i <= x) {\n            while (x % i == 0) {\n                x /= i\n \
    \           }\n            i += 1\n        }\n        return x", "        var\
    \ m = n\n        var i = 2L\n        while (i <= m) {\n            if (m % i ==\
    \ 0) {\n                m /= i\n                i -= 1\n            }\n      \
    \      i += 1\n        }\n        i", "        var m = n\n        var i = 2L\n\
    \        while (i <= m) {\n            if (m % i == 0) {\n                m /=\
    \ i\n                i -= 1\n            }\n            i += 1\n        }\n  \
    \      i", "        var m = n\n        var i = 2L\n        while (i <= m) {\n\
    \            if (m % i == 0) {\n                m /= i\n                i -= 1\n\
    \            }\n            i += 1\n        }\n        return i", "        var\
    \ largest = 0L\n        var i = 2L\n        while (i <= n) {\n            if (n\
    \ % i == 0) {\n                largest = i\n                n /= i\n         \
    \   }\n            else i += 1\n        }\n        largest", "        var result\
    \ = 0L\n        var i = 2L\n        while (i <= n) {\n            if (n % i ==\
    \ 0) {\n                result = i\n                n /= i\n            } else\
    \ {\n                i += 1\n            }\n        }\n        result", "    \
    \    def largestPrimeFactor(n : Long, p : Long) : Long = {\n            if (n\
    \ % p == 0) largestPrimeFactor(n / p, p)\n            else if (p * p > n) n\n\
    \            else largestPrimeFactor(n, p + 1)\n        }\n        largestPrimeFactor(n,\
    \ 2)"]
stop_tokens:
- "\n    }\n"

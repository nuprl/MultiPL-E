name: HumanEval_88_sort_array
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given an array of non-negative integers, return a copy of the given array\
  \ after sorting,\n    // you will sort the given array in ascending order if the\
  \ sum( first index value, last index value) is odd,\n    // or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n    // Note:\n\
  \    // * don't change the given array.\n    // Examples:\n    // * sort_array([])\
  \ => []\n    // * sort_array([5]) => [5]\n    // * sort_array([2, 4, 3, 0, 1, 5])\
  \ => [0, 1, 2, 3, 4, 5]\n    // * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4,\
  \ 3, 2, 1, 0]\n    def sortArray(array : List[Long]) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(sortArray((List[Long]())).equals((List[Long]())));\n\
  \    assert(sortArray((List[Long](5l.toLong))).equals((List[Long](5l.toLong))));\n\
  \    assert(sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong,\
  \ 5l.toLong))).equals((List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong,\
  \ 5l.toLong))));\n    assert(sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong,\
  \ 0l.toLong, 1l.toLong, 5l.toLong, 6l.toLong))).equals((List[Long](6l.toLong, 5l.toLong,\
  \ 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 0l.toLong))));\n    assert(sortArray((List[Long](2l.toLong,\
  \ 1l.toLong))).equals((List[Long](1l.toLong, 2l.toLong))));\n    assert(sortArray((List[Long](15l.toLong,\
  \ 42l.toLong, 87l.toLong, 32l.toLong, 11l.toLong, 0l.toLong))).equals((List[Long](0l.toLong,\
  \ 11l.toLong, 15l.toLong, 32l.toLong, 42l.toLong, 87l.toLong))));\n    assert(sortArray((List[Long](21l.toLong,\
  \ 14l.toLong, 23l.toLong, 11l.toLong))).equals((List[Long](23l.toLong, 21l.toLong,\
  \ 14l.toLong, 11l.toLong))));\n    }\n\n}\n"
completions: ["        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else\
    \ array.sortWith(_ < _)", "        val sum = array.head + array.last\n       \
    \ if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", "      \
    \  if (array.isEmpty) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _) else array.sortWith(_ < _)", "        if (array.isEmpty) return array\n\
    \        val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ List()\n        if (array.length == 1) return array\n        val sum = array(0)\
    \ + array(array.length - 1)\n        if (sum % 2 == 0) array.sortWith(_ > _)\n\
    \        else array.sortWith(_ < _)", "        if (array.length == 0) return array\n\
    \        val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted.reverse\n        else array.sorted", "        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sorted(Ordering[Long].reverse)\n\
    \        else array.sorted", "        if (array.size == 0) return array\n    \
    \    val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted.reverse\n        else array.sorted", "        if (array.size ==\
    \ 0) return array\n        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sorted.reverse\n        else array.sorted", "        if (array.length\
    \ == 0) return array\n        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "    \
    \    if (array.length == 0) return array\n        if (array.length == 1) return\
    \ array\n        val sum = array(0) + array(array.length - 1)\n        if (sum\
    \ % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "    \
    \    if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.isEmpty) return array\n      \
    \  val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.size == 0) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted.reverse\n        else array.sorted", "        if (array.length\
    \ == 0) return List()\n        if (array.length == 1) return array\n        val\
    \ sum = array(0) + array(array.length - 1)\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _) else array.sortWith(_ < _)",
  "        val (left, right) = array.splitAt(array.length / 2)\n        val (leftSum,\
    \ rightSum) = (left.sum, right.sum)\n        if (leftSum % 2 == rightSum % 2)\
    \ {\n            if (leftSum > rightSum) left ::: right.reverse else right :::\
    \ left.reverse\n        } else {\n            if (leftSum > rightSum) left.reverse\
    \ ::: right else right.reverse ::: left\n        }", "        if (array.length\
    \ == 0) return array\n        val (a, b) = (array.head, array.last)\n        val\
    \ (x, y) = if ((a + b) % 2 == 0) (a, b) else (b, a)\n        val sorted = array.sorted\n\
    \        val (left, right) = sorted.splitAt(sorted.length / 2)\n        val (left1,\
    \ right1) = if (left.length == right.length) (left, right) else (left.dropRight(1),\
    \ right.drop(1))\n        val (left2, right2) = if (left1.length == right1.length)\
    \ (left1, right1) else (left1.dropRight(1), right1.drop(1))\n        val (left3,\
    \ right3) = if (left2.length == right2.length) (left2, right2) else (left2.dropRight(1),\
    \ right2.drop(1))\n        val (left4, right4) = if (left3.length == right3.length)\
    \ (left3, right3) else (left3.dropRight(1), right3.drop(1))\n        val (left5,\
    \ right5) = if (left4.length == right4.length) (left4, right4) else (left4.dropRight(1),\
    \ right4.drop(1))\n        val (left6, right6) = if (left5.length == right5.length)\
    \ (left5, right5) else (left5.dropRight(1), right5.drop(1))\n        val (left7,\
    \ right7) = if (left6.length == right6.length) (left6, right6) else (left6.dropRight(1),\
    \ right6.drop(1))\n        val (left8, right8) = if (left7.length == right7.length)\
    \ (left7, right7) else (left7.dropRight(1), right7.drop(1))\n        val (left9,\
    \ right9) = if (left8.length == right8.length) (left8, right8) else (left8.dropRight(1),\
    \ right8.drop(1))\n        val (", "        if (array.isEmpty) return array\n\
    \        val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        if (array.length\
    \ == 1) return array\n        val sum = array(0) + array(array.length - 1)\n \
    \       if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        if (array.length\
    \ == 1) return array\n        val sum = array(0) + array(array.length - 1)\n \
    \       if (sum % 2 == 0) {\n            array.sortWith(_ > _)\n        } else\
    \ {\n            array.sortWith(_ < _)\n        }", "        if (array.length\
    \ == 0) return array\n        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "    \
    \    val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      if (array.length == 1) return array\n        val sum = array(0) + array(array.length\
    \ - 1)\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted",
  "        if (array.isEmpty) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _) else array.sortWith(_ < _)", "        if (array.length == 0) return array\n\
    \        val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted.reverse\n        else array.sorted", "        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted",
  "        if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sortWith(_ > _) else array.sortWith(_ < _)", "        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted",
  "        if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return List()\n        if (array.length\
    \ == 1) return array\n        val sum = array(0) + array(array.length - 1)\n \
    \       if (sum % 2 == 0) return array.sortWith(_ > _)\n        else return array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted",
  "        if (array.length == 0) return List()\n        if (array.length == 1) return\
    \ array\n        val sum = array(0) + array(array.length - 1)\n        if (sum\
    \ % 2 == 0) {\n            array.sortWith(_ > _)\n        } else {\n         \
    \   array.sortWith(_ < _)\n        }", "        if (array.isEmpty) return List()\n\
    \        var sum = array.head + array.last\n        if (sum % 2 == 0) {\n    \
    \        return array.sorted.reverse\n        } else {\n            return array.sorted\n\
    \        }", "        val sum = array.head + array.last\n        if (sum % 2 ==\
    \ 0) array.sorted.reverse\n        else array.sorted", "        if (array.length\
    \ == 0) return array\n        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sorted.reverse\n        else array.sorted", "        val sum\
    \ = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted.reverse\n        else array.sorted", "        if (array.length\
    \ == 0) return array\n        if (array.length == 1) return array\n        val\
    \ sum = array(0) + array(array.length - 1)\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _) else array.sortWith(_ < _)",
  "        if (array.length == 0) return array\n        if (array.length == 1) return\
    \ array\n        val sum = array(0) + array(array.length - 1)\n        if (sum\
    \ % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "    \
    \    val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.isEmpty) return array\n      \
    \  val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted.reverse\n        else array.sorted", "        if (array.length\
    \ == 0) return array\n        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "    \
    \    if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted",
  "        val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _) else array.sortWith(_ < _)", "        if (array.isEmpty) return array\n\
    \        if (array.length == 1) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       if (array.isEmpty) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.isEmpty) return List()\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else\
    \ array.sortWith(_ < _)", "        if (array.length == 0) return array\n     \
    \   val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        val sum = array.head + array.last\n    \
    \    if (sum % 2 == 0) array.sortWith(_ > _) else array.sortWith(_ < _)", "  \
    \      if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted(Ordering[Long].reverse)\n        else array.sorted", "        if\
    \ (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted(Ordering[Long].reverse)\n        else array.sorted", "        if\
    \ (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       if (array.length == 0) return array\n        var sum = array(0) + array(array.length\
    \ - 1)\n        if (sum % 2 == 0) {\n            array.sortWith(_ > _)\n     \
    \   } else {\n            array.sortWith(_ < _)\n        }", "        if (array.length\
    \ == 0) return array\n        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "    \
    \    val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "        if (array.size\
    \ == 0) return array\n        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "    \
    \    val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.isEmpty) return array\n      \
    \  val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        val sum = array.head + array.last\n    \
    \    if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", "   \
    \     if (array.isEmpty) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else\
    \ array.sortWith(_ < _)", "        if (array.isEmpty) return array\n        val\
    \ sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        val sum = array.head + array.last\n    \
    \    if (sum % 2 == 0) {\n            array.sorted.reverse\n        } else {\n\
    \            array.sorted\n        }", "        if (array.isEmpty) return array\n\
    \        val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted.reverse\n        else array.sorted", "        if (array.isEmpty)\
    \ return array\n        val sum = array.head + array.last\n        if (sum % 2\
    \ == 0) array.sorted.reverse\n        else array.sorted", "        if (array.size\
    \ == 0) return array\n        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sorted.reverse\n        else array.sorted", "        if (array.length\
    \ == 0) return array\n        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "    \
    \    val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "        if (array.length\
    \ == 0) return array\n        if (array.length == 1) return array\n        val\
    \ sum = array(0) + array(array.length - 1)\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted.reverse\n        else array.sorted", "        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted",
  "        if (array.length == 0) return array\n        if (array.length == 1) return\
    \ array\n        val sum = array(0) + array(array.length - 1)\n        if (sum\
    \ % 2 == 0) {\n            array.sortWith(_ > _)\n        } else {\n         \
    \   array.sortWith(_ < _)\n        }", "        if (array.isEmpty) return array\n\
    \        val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ array\n        if (array.length == 1) return array\n        val sum = array(0)\
    \ + array(array.length - 1)\n        if (sum % 2 == 0) {\n            array.sortWith(_\
    \ > _)\n        } else {\n            array.sortWith(_ < _)\n        }", "   \
    \     if (array.isEmpty) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       if (array.length == 0) return array\n        if (array.length == 1) return\
    \ array\n        val sum = array(0) + array(array.length - 1)\n        if (sum\
    \ % 2 == 0) {\n            array.sortWith(_ > _)\n        } else {\n         \
    \   array.sortWith(_ < _)\n        }", "        if (array.isEmpty) return array\n\
    \        val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted.reverse\n        else array.sorted", "        if (array.isEmpty)\
    \ return array\n        val sum = array.head + array.last\n        if (sum % 2\
    \ == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "        val\
    \ sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted(Ordering[Long].reverse)\n\
    \        else array.sorted", "        val sum = array.head + array.last\n    \
    \    if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", "   \
    \     if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        if (array.length\
    \ == 1) return array\n        val sum = array(0) + array(array.length - 1)\n \
    \       if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted",
  "        if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else\
    \ array.sortWith(_ < _)", "        if (array.length == 0) return array\n     \
    \   if (array.length == 1) return array\n        val sum = array(0) + array(array.length\
    \ - 1)\n        if (sum % 2 == 0) {\n            array.sortWith(_ > _)\n     \
    \   } else {\n            array.sortWith(_ < _)\n        }", "        val sum\
    \ = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_ > _) else\
    \ array.sortWith(_ < _)", "        val sum = array.head + array.last\n       \
    \ if (sum % 2 == 0) array.sorted(Ordering[Long].reverse)\n        else array.sorted",
  "        val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return List()\n \
    \       if (array.length == 1) return array\n        val sum = array(0) + array(array.length\
    \ - 1)\n        if (sum % 2 == 0) {\n            array.sortWith(_ > _)\n     \
    \   } else {\n            array.sortWith(_ < _)\n        }", "        if (array.length\
    \ == 0) return array\n        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "    \
    \    if (array.isEmpty) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else\
    \ array.sortWith(_ < _)", "        val sum = array.head + array.last\n       \
    \ if (sum % 2 == 0) array.sorted(Ordering[Long].reverse)\n        else array.sorted",
  "        if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ {\n            array.sorted.reverse\n        } else {\n            array.sorted\n\
    \        }", "        if (array.length == 0) return array\n        if (array.length\
    \ == 1) return array\n        val sum = array(0) + array(array.length - 1)\n \
    \       if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted.reverse\n        else array.sorted", "        if (array.isEmpty)\
    \ return array\n        val sum = array.head + array.last\n        if (sum % 2\
    \ == 0) array.sorted.reverse\n        else array.sorted", "        if (array.length\
    \ == 0) return array\n        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "    \
    \    if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted.reverse\n        else array.sorted", "        if (array.length\
    \ == 0) return array\n        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sorted.reverse\n        else array.sorted", "        if (array.isEmpty)\
    \ return array\n        val sum = array.head + array.last\n        if (sum % 2\
    \ == 0) array.sorted.reverse\n        else array.sorted", "        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted",
  "        if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else\
    \ array.sortWith(_ < _)", "        if (array.length == 0) return array\n     \
    \   if (array.length == 1) return array\n        val sum = array(0) + array(array.length\
    \ - 1)\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else\
    \ array.sortWith(_ < _)", "        val sum = array.head + array.last\n       \
    \ if (sum % 2 == 0) array.sorted(Ordering[Long].reverse)\n        else array.sorted",
  "        val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted(Ordering[Long].reverse)\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.isEmpty) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ {\n            array.sortWith(_ > _)\n        } else {\n            array.sortWith(_\
    \ < _)\n        }", "        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sorted.reverse\n        else array.sorted", "        val sum\
    \ = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        var result = array\n        if (array.length\
    \ > 0) {\n            if ((array(0) + array(array.length - 1)) % 2 == 0) result\
    \ = result.sortWith(_ > _)\n            else result = result.sortWith(_ < _)\n\
    \        }\n        result", "        if (array.length == 0) return array\n  \
    \      if (array.length == 1) return array\n        val sum = array(0) + array(array.length\
    \ - 1)\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.size == 0) return array\n        if (array.size ==\
    \ 1) return array\n        val sum = array(0) + array(array.size - 1)\n      \
    \  if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)",
  "        if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = array\n        if (array.length >\
    \ 1) {\n            val sum = array.head + array.last\n            if (sum % 2\
    \ == 0) {\n                result = array.sorted.reverse\n            } else {\n\
    \                result = array.sorted\n            }\n        }\n        result",
  "        val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      if (array.length == 1) return array\n        val sum = array(0) + array(array.length\
    \ - 1)\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted",
  "        val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "        if (array.length\
    \ == 0) return array\n        val sum = array.head + array.last\n        if (sum\
    \ % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "    \
    \    if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        if (array.length\
    \ == 1) return array\n        val sum = array(0) + array(array.length - 1)\n \
    \       if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sortWith(_ > _) else array.sortWith(_ < _)", "        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted",
  "        if (array.length == 0) return List()\n        if (array.length == 1) return\
    \ array\n        val sum = array(0) + array(array.length - 1)\n        if (sum\
    \ % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "    \
    \    if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _) else array.sortWith(_ < _)", "        if (array.length == 0) return array\n\
    \        if (array.length == 1) return array\n        val sum = array(0) + array(array.length\
    \ - 1)\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.isEmpty) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else\
    \ array.sortWith(_ < _)", "        if (array.length == 0) return array\n     \
    \   if (array.length == 1) return array\n        val sum = array(0) + array(array.length\
    \ - 1)\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sortWith(_ > _)\n        else\
    \ array.sortWith(_ < _)", "        if (array.length == 0) return array\n     \
    \   val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       if (array.size == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sortWith(_ > _)\n        else array.sortWith(_\
    \ < _)", "        if (array.length == 0) return array\n        val sum = array.head\
    \ + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted",
  "        if (array.length == 0) return array\n        if (array.length == 1) return\
    \ array\n        val sum = array(0) + array(array.length - 1)\n        if (sum\
    \ % 2 == 0) {\n            array.sortWith(_ > _)\n        } else {\n         \
    \   array.sortWith(_ < _)\n        }", "        if (array.size == 0) return array\n\
    \        val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ array\n        if (array.length == 1) return array\n        val sum = array(0)\
    \ + array(array.length - 1)\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.isEmpty) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted.reverse\n        else array.sorted", "        if (array.isEmpty)\
    \ return array\n        val sum = array.head + array.last\n        if (sum % 2\
    \ == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "        if\
    \ (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted.reverse\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       val sum = array.head + array.last\n        if (sum % 2 == 0) array.sorted(Ordering[Long].reverse)\n\
    \        else array.sorted", "        if (array.length == 0) return array\n  \
    \      val sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_\
    \ > _)\n        else array.sortWith(_ < _)", "        if (array.length == 0) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "        if (array.length\
    \ == 0) return array\n        if (array.length == 1) return array\n        val\
    \ sum = array(0) + array(array.length - 1)\n        if (sum % 2 == 0) {\n    \
    \        array.sortWith(_ > _)\n        } else {\n            array.sortWith(_\
    \ < _)\n        }", "        if (array.length == 0) return array\n        val\
    \ sum = array.head + array.last\n        if (sum % 2 == 0) array.sortWith(_ >\
    \ _)\n        else array.sortWith(_ < _)", "        if (array.isEmpty) return\
    \ array\n        val sum = array.head + array.last\n        if (sum % 2 == 0)\
    \ array.sorted.reverse\n        else array.sorted", "        if (array.isEmpty)\
    \ return array\n        val sum = array.head + array.last\n        if (sum % 2\
    \ == 0) array.sortWith(_ > _)\n        else array.sortWith(_ < _)", "        if\
    \ (array.isEmpty) return array\n        val sum = array.head + array.last\n  \
    \      if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       if (array.length == 0) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       if (array.isEmpty) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted", " \
    \       if (array.isEmpty) return array\n        val sum = array.head + array.last\n\
    \        if (sum % 2 == 0) array.sorted.reverse\n        else array.sorted"]
stop_tokens:
- "\n    }\n"

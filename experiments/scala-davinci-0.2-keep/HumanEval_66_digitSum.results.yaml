language: scala
name: HumanEval_66_digitSum
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toInt).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.toUpperCase.map(_.toLong).filter(_ >= 65).filter(_ <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp42ir47dd.scala:19)\n\tat Problem.main(tmp42ir47dd.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(x => x.isUpper).map(x => x.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c >=\
    \ 'A' && c <= 'Z') {\n                sum += c.toInt\n            }\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794963
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toLong).filter(c => c >= 65 && c <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(x => if (x.isUpper) x.toInt else 0).sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n \
    \   assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toInt).filter(c => c >= 65 && c <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(x => x.isUpper).map(x => x.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(x => x.isUpper).map(x => x.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum : Long = 0\n        for (c <- s) {\n            if\
    \ (c.isUpper) {\n                sum += c.toInt\n            }\n        }\n  \
    \      return sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c >=\
    \ 'A' && c <= 'Z') {\n                sum += c.toInt\n            }\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794963
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(x => if (x.isUpper) x.toLong else 0).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7z7ewwcl.scala:20)\n\tat Problem.main(tmp7z7ewwcl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794963
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val upper = s.filter(c => c.isUpper)\n        upper.map(c\
    \ => c.toLong).sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.toUpperCase.map(c => c.toLong).filter(c => c >= 65 && c\
    \ <= 90).sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpb3cjs3mv.scala:19)\n\tat Problem.main(tmpb3cjs3mv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toInt).filter(c => c >= 65 && c <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        // Write your code here\n        s.filter(_.isUpper).map(_.toLong).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        // Write your code here\n        s.filter(_.isUpper).map(_.toLong).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(x => x.isUpper).map(x => x.toInt).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(x => x.toLong).filter(x => x >= 65 && x <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(x => x.isUpper).map(x => x.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toInt).filter(c => c >= 65 && c <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => if (c.isUpper) c.toInt else 0).sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n \
    \   assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.toUpperCase.map(c => c.toLong).filter(c => c >= 65 && c\
    \ <= 90).sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpb3cjs3mv.scala:19)\n\tat Problem.main(tmpb3cjs3mv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toInt).filter(c => c >= 65 && c <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toInt).filter(c => c >= 65 && c <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c >= 'A' && c <= 'Z').map(c => c.toLong).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(x => x.isUpper).map(x => x.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val upper = s.filter(c => c.isUpper)\n        upper.map(c\
    \ => c.toLong).sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum : Long = 0\n        for (i <- 0 until s.length) {\n\
    \            if (s(i).isUpper) {\n                sum += s(i).toInt\n        \
    \    }\n        }\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(x => if (x.isUpper) x.toInt else 0).sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n \
    \   assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toInt).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(x => x.isUpper).map(x => x.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        // Write your code here\n        s.filter(c => c.isUpper).map(c\
    \ => c.toLong).sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(x => if (x.isUpper) x.toInt else 0).sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n \
    \   assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794971
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        // Write your code here\n        s.filter(c => c.isUpper).map(c\
    \ => c.toLong).sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toInt).filter(i => i >= 65 && i <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (c <- s) {\n            if (c >=\
    \ 'A' && c <= 'Z') {\n                sum += c\n            }\n        }\n   \
    \     sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c >=\
    \ 'A' && c <= 'Z') {\n                sum += c.toInt\n            }\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794963
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        return s.filter(c => c.isUpper).map(c => c.toLong).sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toInt).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(_.toInt).filter(_ >= 65).filter(_ <= 90).sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        // Write your code here\n        var sum = 0L\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum : Long = 0\n        for (c <- s) {\n            if\
    \ (c.isUpper) {\n                sum += c.toInt\n            }\n        }\n  \
    \      return sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.foldLeft(0L)((acc, c) => if (c.isUpper) acc + c.toInt else\
    \ acc)\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"\
    )) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toInt).filter(c => c >= 65 && c <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toInt).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toInt).filter(i => i >= 65 && i <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(x => if (x.isUpper) x.toLong else 0).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(x => x.isUpper).map(x => x.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toInt).filter(c => c >= 65 && c <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => if (c.isUpper) c.toLong else 0).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.foldLeft(0L)((acc, c) => if (c.isUpper) acc + c.toInt else\
    \ acc)\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"\
    )) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c >=\
    \ 'A' && c <= 'Z') {\n                sum += c\n            }\n        }\n   \
    \     sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => if (c.isUpper) c.toInt else 0).sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n \
    \   assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (i <- 0 until s.length) {\n    \
    \        val c = s(i)\n            if (c >= 'A' && c <= 'Z') {\n             \
    \   sum += c\n            }\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toInt).filter(i => i >= 65 && i <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => if (c.isUpper) c.toLong else 0).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(x => if (x.isUpper) x.toInt else 0).sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n \
    \   assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toInt).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toInt).filter(c => c >= 65 && c <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c >=\
    \ 'A' && c <= 'Z') {\n                sum += c.toInt\n            }\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794963
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val upper = s.filter(_.isUpper).map(_.toLong)\n        upper.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794971
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toInt).filter(i => i >= 65 && i <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val upper = s.toUpperCase\n        upper.map(c => c.toLong).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpayfd7xam.scala:20)\n\tat Problem.main(tmpayfd7xam.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.foldLeft(0L)((acc, c) => acc + (if (c.isUpper) c.toInt else\
    \ 0))\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"\
    )) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum : Long = 0\n        for (i <- 0 until s.length) {\n\
    \            if (s(i).isUpper) {\n                sum += s(i).toInt\n        \
    \    }\n        }\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.foldLeft(0L)((acc, c) => if (c.isUpper) acc + c.toInt else\
    \ acc)\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"\
    )) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => if (c.isUpper) c.toLong else 0).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toInt).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(x => if (x.isUpper) x.toInt else 0).sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n \
    \   assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(x => if (x.isUpper) x.toInt else 0).sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n \
    \   assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length) {\n     \
    \       if (s(i).isUpper) {\n                sum += s(i).toInt\n            }\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => c.toLong).filter(c => c >= 65 && c <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val upper = s.filter(c => c.isUpper)\n        upper.map(c\
    \ => c.toLong).sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val upper = s.toUpperCase()\n        val upperChars = upper.toCharArray()\n\
    \        var sum = 0\n        for (i <- 0 until upperChars.length) {\n       \
    \     sum += upperChars(i).toInt\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpubheufjw.scala:25)\n\tat Problem.main(tmpubheufjw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => if (c.isUpper) c.toLong else 0).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(x => x.isUpper).map(x => x.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        val upper = s.filter(_.isUpper).map(_.toLong).sum\n      \
    \  val lower = s.filter(_.isLower).map(_.toLong).sum\n        upper - lower\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpottm_8ko.scala:21)\n\tat Problem.main(tmpottm_8ko.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(x => if (x.isUpper) x.toLong else 0).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.toUpperCase.map(_.toLong).filter(_ >= 65).filter(_ <= 90).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp42ir47dd.scala:19)\n\tat Problem.main(tmp42ir47dd.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.foldLeft(0L)((sum, c) => if (c.isUpper) sum + c.toInt else\
    \ sum)\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"\
    )) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794971
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(x => if (x.isUpper) x.toLong else 0).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(x => if (x.isUpper) x.toInt else 0).sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n \
    \   assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(x => x.isUpper).map(x => x.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toInt).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        // Write your code here\n        0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7z7ewwcl.scala:20)\n\tat Problem.main(tmp7z7ewwcl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794963
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length) {\n     \
    \       if (s(i).isUpper) {\n                sum += s(i).toInt\n            }\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c >=\
    \ 'A' && c <= 'Z') {\n                sum += c.toInt\n            }\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794963
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.map(c => if (c.isUpper) c.toLong else 0).sum\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.toCharArray.map(x => if (x.isUpper) x.toLong else 0).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0\n        for (i <- 0 until s.length) {\n     \
    \       if (s(i).isUpper) {\n                sum += s(i).toInt\n            }\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(_.isUpper).map(_.toLong).sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // digitSum(\"\") => 0\n    // digitSum(\"abAB\") => 131\n    // digitSum(\"\
    abcCd\") => 67\n    // digitSum(\"helloE\") => 69\n    // digitSum(\"woArBld\"\
    ) => 131\n    // digitSum(\"aAaaaXa\") => 153\n    def digitSum(s : String) :\
    \ Long = {\n        s.filter(c => c.isUpper).map(c => c.toLong).sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794964

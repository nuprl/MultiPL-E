name: HumanEval_109_move_one_ball
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n \
  \   // numbers in the array will be randomly ordered. Your task is to determine\
  \ if\n    // it is possible to get an array sorted in non-decreasing order by performing\
  \ \n    // the following operation on the given array:\n    // You are allowed to\
  \ perform right shift operation any number of times.\n    // One right shift operation\
  \ means shifting all elements of the array by one\n    // position in the right\
  \ direction. The last element of the array will be moved to\n    // the starting\
  \ position in the array i.e. 0th index. \n    // If it is possible to obtain the\
  \ sorted array by performing the above operation\n    // then return True else return\
  \ False.\n    // If the given array is empty then return True.\n    // Note: The\
  \ given list is guaranteed to have unique elements.\n    // For Example:\n    //\
  \ move_one_ball([3, 4, 5, 1, 2])==>True\n    // Explanation: By performin 2 right\
  \ shift operations, non-decreasing order can\n    // be achieved for the given array.\n\
  \    // move_one_ball([3, 5, 4, 1, 2])==>False\n    // Explanation:It is not possible\
  \ to get non-decreasing order for the given\n    // array by performing any number\
  \ of right shift operations.\n    def moveOneBall(arr : List[Long]) : Boolean =\
  \ {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(moveOneBall((List[Long](3l.toLong,\
  \ 4l.toLong, 5l.toLong, 1l.toLong, 2l.toLong))) == (true));\n    assert(moveOneBall((List[Long](3l.toLong,\
  \ 5l.toLong, 10l.toLong, 1l.toLong, 2l.toLong))) == (true));\n    assert(moveOneBall((List[Long](4l.toLong,\
  \ 3l.toLong, 1l.toLong, 2l.toLong))) == (false));\n    assert(moveOneBall((List[Long](3l.toLong,\
  \ 5l.toLong, 4l.toLong, 1l.toLong, 2l.toLong))) == (false));\n    assert(moveOneBall((List[Long]()))\
  \ == (true));\n    }\n\n}\n"
completions: ["        if (arr.length == 0) return true\n        val sorted = arr.sorted\n\
    \        val diff = arr.zip(sorted).map(x => x._1 - x._2).filter(x => x != 0)\n\
    \        if (diff.length == 0) return true\n        if (diff.length == 1) return\
    \ true\n        return false", "        if (arr.length == 0) return true\n   \
    \     val sorted = arr.sorted\n        val min = sorted.head\n        val max\
    \ = sorted.last\n        val minIndex = arr.indexOf(min)\n        val maxIndex\
    \ = arr.indexOf(max)\n        if (minIndex == 0) {\n            if (maxIndex ==\
    \ arr.length - 1) return true\n            else return false\n        }\n    \
    \    else {\n            if (maxIndex == 0) return true\n            else return\
    \ false\n        }", "        if (arr.length == 0) return true\n        val sorted\
    \ = arr.sorted\n        val min = sorted.head\n        val max = sorted.last\n\
    \        if (min == max) return true\n        val minIndex = arr.indexOf(min)\n\
    \        val maxIndex = arr.indexOf(max)\n        if (minIndex == maxIndex) return\
    \ true\n        if (minIndex < maxIndex) {\n            val left = arr.slice(0,\
    \ minIndex)\n            val right = arr.slice(minIndex, maxIndex)\n         \
    \   val leftSorted = left.sorted\n            val rightSorted = right.sorted\n\
    \            if (leftSorted == left && rightSorted == right) return true\n   \
    \         else return false\n        }\n        else {\n            val left =\
    \ arr.slice(maxIndex, minIndex)\n            val right = arr.slice(minIndex, arr.length)\n\
    \            val leftSorted = left.sorted\n            val rightSorted = right.sorted\n\
    \            if (leftSorted == left && rightSorted == right) return true\n   \
    \         else return false\n        }", "        if (arr.isEmpty) return true\n\
    \        val sorted = arr.sorted\n        val min = sorted.head\n        val max\
    \ = sorted.last\n        val minIndex = arr.indexOf(min)\n        val maxIndex\
    \ = arr.indexOf(max)\n        if (minIndex == 0) return true\n        if (maxIndex\
    \ == arr.length - 1) return true\n        if (minIndex == arr.length - 1) return\
    \ false\n        if (maxIndex == 0) return false\n        true", "        val\
    \ n = arr.length\n        if (n == 0) return true\n        var min = arr(0)\n\
    \        var max = arr(0)\n        for (i <- 1 until n) {\n            min = min\
    \ min arr(i)\n            max = max max arr(i)\n        }\n        if (max - min\
    \ + 1 == n) return true\n        else return false", "        if (arr.length ==\
    \ 0) return true\n        val sorted = arr.sorted\n        val min = sorted.head\n\
    \        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n    \
    \    val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) return true\n\
    \        if (maxIndex == arr.length - 1) return true\n        if (minIndex > maxIndex)\
    \ return true\n        return false", "        if (arr.length == 0) return true\n\
    \        var max = arr(0)\n        for (i <- 1 until arr.length) {\n         \
    \   if (arr(i) < max) return false\n            max = max max arr(i)\n       \
    \ }\n        return true", "        val n = arr.length\n        if (n == 0) return\
    \ true\n        val sorted = arr.sorted\n        val diff = arr.zip(sorted).map(x\
    \ => x._1 - x._2).toArray\n        val max = diff.max\n        val min = diff.min\n\
    \        if (max - min > 1) return false\n        if (max == min) return true\n\
    \        if (max == 0) return true\n        if (min == 0) return true\n      \
    \  if (max == 1) {\n            val maxIndex = diff.indexOf(max)\n           \
    \ val minIndex = diff.indexOf(min)\n            if (maxIndex == n - 1) return\
    \ true\n            if (minIndex == 0) return true\n            if (maxIndex ==\
    \ n - 2) return true\n            if (minIndex == 1) return true\n           \
    \ return false\n        }\n        if (min == -1) {\n            val maxIndex\
    \ = diff.indexOf(max)\n            val minIndex = diff.indexOf(min)\n        \
    \    if (maxIndex == 0) return true\n            if (minIndex == n - 1) return\
    \ true\n            if (maxIndex == 1) return true\n            if (minIndex ==\
    \ n - 2) return true\n            return false\n        }\n        return false",
  "        if (arr.length == 0) return true\n        var min = arr(0)\n        for\
    \ (i <- 1 until arr.length) {\n            if (arr(i) < min) return false\n  \
    \          min = min min arr(i)\n        }\n        return true", "        if\
    \ (arr.length == 0) return true\n        var min = arr(0)\n        for (i <- 1\
    \ until arr.length) {\n            if (arr(i) < min) return false\n          \
    \  min = min min arr(i)\n        }\n        return true", "        if (arr.length\
    \ == 0) return true\n        var min = arr(0)\n        var max = arr(0)\n    \
    \    for (i <- 1 until arr.length) {\n            min = min min arr(i)\n     \
    \       max = max max arr(i)\n        }\n        var count = 0\n        for (i\
    \ <- 0 until arr.length) {\n            if (arr(i) == min) count += 1\n      \
    \  }\n        if (count > 1) return false\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) == max) count += 1\n        }\n        if (count >\
    \ 1) return false\n        return true", "        if (arr.length == 0) return\
    \ true\n        var max = arr(0)\n        for (i <- 1 until arr.length) {\n  \
    \          if (arr(i) < max) return false\n            max = max max arr(i)\n\
    \        }\n        return true", "        if (arr.length == 0) return true\n\
    \        var min = arr(0)\n        for (i <- 1 until arr.length) {\n         \
    \   if (arr(i) < min) return false\n            min = min min arr(i)\n       \
    \ }\n        return true", "        if (arr.length == 0) return true\n       \
    \ var max = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i)\
    \ < max) return false\n            max = max max arr(i)\n        }\n        return\
    \ true", "        if (arr.length == 0) return true\n        val sorted = arr.sorted\n\
    \        val min = sorted.head\n        val max = sorted.last\n        val minIndex\
    \ = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n        if (minIndex\
    \ == 0) return true\n        if (maxIndex == arr.length - 1) return true\n   \
    \     if (minIndex > maxIndex) return true\n        return false", "        if\
    \ (arr.isEmpty) return true\n        var min = arr.min\n        var max = arr.max\n\
    \        var count = 0\n        for (i <- arr) {\n            if (i == min) count\
    \ += 1\n            if (i == max) count -= 1\n        }\n        if (count ==\
    \ 0) return true\n        return false", "        if (arr.length == 0) return\
    \ true\n        val sorted = arr.sorted\n        if (arr == sorted) return true\n\
    \        val min = arr.min\n        val max = arr.max\n        val minIndex =\
    \ arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n        if (minIndex\
    \ == 0) return false\n        if (maxIndex == arr.length - 1) return false\n \
    \       if (minIndex == arr.length - 1) return true\n        if (maxIndex == 0)\
    \ return true\n        if (arr(minIndex - 1) <= min) return true\n        if (arr(maxIndex\
    \ + 1) >= max) return true\n        return false", "        if (arr.length ==\
    \ 0) return true\n        val sorted = arr.sorted\n        val min = sorted.head\n\
    \        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n    \
    \    val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) return true\n\
    \        if (maxIndex == arr.length - 1) return true\n        if (minIndex < maxIndex)\
    \ return false\n        return true", "        val n = arr.length\n        if\
    \ (n == 0) return true\n        val sorted = arr.sorted\n        val diff = (0\
    \ until n).map(i => arr(i) - sorted(i)).toList\n        val max = diff.max\n \
    \       val min = diff.min\n        if (max - min > 1) return false\n        val\
    \ count = diff.groupBy(identity).mapValues(_.length)\n        if (count.contains(0))\
    \ return true\n        if (count.contains(1) && count.contains(2)) return true\n\
    \        if (count.contains(1) && count.contains(-1)) return true\n        if\
    \ (count.contains(1) && count.contains(-2)) return true\n        false", "   \
    \     if (arr.length == 0) return true\n        val sorted = arr.sorted\n    \
    \    val min = sorted.head\n        val max = sorted.last\n        val minIndex\
    \ = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n        if (minIndex\
    \ == 0) return true\n        if (maxIndex == arr.length - 1) return true\n   \
    \     if (minIndex > maxIndex) return true\n        return false", "        if\
    \ (arr.isEmpty) return true\n        val sorted = arr.sorted\n        val diff\
    \ = arr.zip(sorted).map(x => x._1 - x._2).toList\n        val max = diff.max\n\
    \        val min = diff.min\n        if (max - min > 1) return false\n       \
    \ if (max == min) return true\n        if (max == 0) return true\n        if (min\
    \ == 0) return true\n        return false", "        if (arr.length == 0) return\
    \ true\n        val sorted = arr.sorted\n        val min = sorted.head\n     \
    \   val max = sorted.last\n        val minIndex = arr.indexOf(min)\n        val\
    \ maxIndex = arr.indexOf(max)\n        if (minIndex == maxIndex) return true\n\
    \        if (minIndex < maxIndex) {\n            if (maxIndex - minIndex == 1)\
    \ return true\n            else return false\n        }\n        else {\n    \
    \        if (minIndex - maxIndex == 1) return true\n            else return false\n\
    \        }", "        if (arr.length == 0) return true\n        val sorted = arr.sorted\n\
    \        val min = sorted.head\n        val max = sorted.last\n        val minIndex\
    \ = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n        if (minIndex\
    \ == 0) return true\n        if (maxIndex == arr.length - 1) return true\n   \
    \     if (minIndex > maxIndex) return true\n        return false", "        if\
    \ (arr.length == 0) return true\n        val sorted = arr.sorted\n        val\
    \ sorted_arr = sorted.toArray\n        val arr_arr = arr.toArray\n        val\
    \ n = arr.length\n        var i = 0\n        while (i < n) {\n            if (sorted_arr(i)\
    \ != arr_arr(i)) {\n                if (i == n - 1) return false\n           \
    \     if (sorted_arr(i) != arr_arr(i + 1)) return false\n                else\
    \ {\n                    val temp = arr_arr(i)\n                    arr_arr(i)\
    \ = arr_arr(i + 1)\n                    arr_arr(i + 1) = temp\n              \
    \      i += 2\n                }\n            }\n            else i += 1\n   \
    \     }\n        true", "        if (arr.length == 0) return true\n        val\
    \ sorted = arr.sorted\n        val diff = arr.zip(sorted).map(x => x._1 - x._2).filter(x\
    \ => x != 0)\n        if (diff.length > 1) return false\n        val diff_abs\
    \ = diff.map(x => abs(x))\n        val diff_abs_sorted = diff_abs.sorted\n   \
    \     if (diff_abs_sorted(0) == 1 && diff_abs_sorted(1) == arr.length - 1) return\
    \ true\n        return false", "        if (arr.length == 0) return true\n   \
    \     var min = arr(0)\n        for (i <- 1 until arr.length) {\n            if\
    \ (arr(i) < min) return false\n            min = min min arr(i)\n        }\n \
    \       return true", "        if (arr.length == 0) return true\n        val min\
    \ = arr.min\n        val max = arr.max\n        val minIndex = arr.indexOf(min)\n\
    \        val maxIndex = arr.indexOf(max)\n        if (minIndex == maxIndex) return\
    \ true\n        if (minIndex == 0) return false\n        if (maxIndex == arr.length\
    \ - 1) return false\n        if (minIndex > maxIndex) return false\n        return\
    \ true", "        if (arr.isEmpty) return true\n        val n = arr.length\n \
    \       val max = arr.max\n        val min = arr.min\n        val maxIndex = arr.indexOf(max)\n\
    \        val minIndex = arr.indexOf(min)\n        if (maxIndex == n - 1 && minIndex\
    \ == 0) return true\n        if (maxIndex == n - 1) return true\n        if (minIndex\
    \ == 0) return false\n        if (maxIndex - minIndex == 1) return true\n    \
    \    if (minIndex - maxIndex == 1) return false\n        if (maxIndex < minIndex)\
    \ return true\n        if (minIndex < maxIndex) return false", "        if (arr.isEmpty)\
    \ return true\n        val sorted = arr.sorted\n        val min = sorted.head\n\
    \        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n    \
    \    val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) return true\n\
    \        if (maxIndex == arr.length - 1) return true\n        if (minIndex ==\
    \ maxIndex) return true\n        if (minIndex < maxIndex) return false\n     \
    \   if (minIndex == maxIndex + 1) return true\n        if (minIndex == maxIndex\
    \ + 2) return true\n        return false", "        val n = arr.length\n     \
    \   if (n == 0) return true\n        val min = arr.min\n        val max = arr.max\n\
    \        val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0) {\n            if (maxIndex == n - 1) return true\n\
    \            else return false\n        }\n        else {\n            if (maxIndex\
    \ == n - 1) return true\n            else return false\n        }", "        val\
    \ n = arr.length\n        if (n == 0) return true\n        val min = arr.min\n\
    \        val max = arr.max\n        val minIndex = arr.indexOf(min)\n        val\
    \ maxIndex = arr.indexOf(max)\n        if (minIndex == 0) return true\n      \
    \  if (maxIndex == n - 1) return true\n        if (minIndex == n - 1) return false\n\
    \        if (maxIndex == 0) return false\n        if (minIndex < maxIndex) return\
    \ false\n        return true", "        if (arr.length == 0) return true\n   \
    \     val sorted = arr.sorted\n        val min = sorted.head\n        val max\
    \ = sorted.last\n        var minIndex = -1\n        var maxIndex = -1\n      \
    \  for (i <- 0 until arr.length) {\n            if (arr(i) == min) minIndex =\
    \ i\n            if (arr(i) == max) maxIndex = i\n        }\n        if (minIndex\
    \ == -1 || maxIndex == -1) return false\n        if (minIndex == 0) return true\n\
    \        if (maxIndex == arr.length - 1) return true\n        if (minIndex < maxIndex)\
    \ return false\n        return true", "        if (arr.length == 0) return true\n\
    \        var min = arr(0)\n        var max = arr(0)\n        for (i <- 1 until\
    \ arr.length) {\n            if (arr(i) < min) min = arr(i)\n            if (arr(i)\
    \ > max) max = arr(i)\n        }\n        if (max - min + 1 == arr.length) return\
    \ true\n        return false", "        val n = arr.length\n        if (n == 0)\
    \ return true\n        val max = arr.max\n        val min = arr.min\n        if\
    \ (max - min > n - 1) return false\n        val count = Array.fill(n)(0)\n   \
    \     for (i <- 0 until n) {\n            count(arr(i).toInt - 1) += 1\n     \
    \   }\n        for (i <- 0 until n) {\n            if (count(i) > 1) return false\n\
    \        }\n        return true", "        if (arr.length == 0) return true\n\
    \        var min = arr(0)\n        for (i <- 1 until arr.length) {\n         \
    \   if (arr(i) < min) return false\n            min = min min arr(i)\n       \
    \ }\n        return true", "        if (arr.isEmpty) return true\n        val\
    \ n = arr.length\n        val min = arr.min\n        val max = arr.max\n     \
    \   if (min == max) return true\n        val minIndex = arr.indexOf(min)\n   \
    \     val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) return true\n\
    \        if (maxIndex == n - 1) return true\n        if (minIndex == n - 1) return\
    \ true\n        if (maxIndex == 0) return true\n        if (minIndex == 1) return\
    \ true\n        if (maxIndex == n - 2) return true\n        if (minIndex == n\
    \ - 2) return true\n        if (maxIndex == 1) return true\n        if (minIndex\
    \ == n - 3) return true\n        if (maxIndex == n - 3) return true\n        if\
    \ (minIndex == 2) return true\n        if (maxIndex == n - 4) return true\n  \
    \      if (minIndex == n - 4) return true\n        if (maxIndex == 2) return true\n\
    \        return false", "        if (arr.length == 0) return true\n        var\
    \ min = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i)\
    \ < min) return false\n            min = min min arr(i)\n        }\n        return\
    \ true", "        if (arr.length <= 1) return true\n        var min = arr(0)\n\
    \        for (i <- 1 until arr.length) {\n            if (arr(i) < min) return\
    \ false\n            min = min min arr(i)\n        }\n        return true", " \
    \       if (arr.length == 0) return true\n        var min = arr(0)\n        for\
    \ (i <- 1 until arr.length) {\n            if (arr(i) < min) return false\n  \
    \          min = min min arr(i)\n        }\n        return true", "        if\
    \ (arr.length == 0) return true\n        val max = arr.max\n        val min =\
    \ arr.min\n        val maxIndex = arr.indexOf(max)\n        val minIndex = arr.indexOf(min)\n\
    \        if (maxIndex == 0) return true\n        if (minIndex == arr.length -\
    \ 1) return true\n        if (maxIndex < minIndex) return true\n        return\
    \ false", "        if (arr.length == 0) return true\n        var min = arr(0)\n\
    \        for (i <- 1 until arr.length) {\n            if (arr(i) < min) return\
    \ false\n            min = min min arr(i)\n        }\n        return true", " \
    \       val n = arr.length\n        if (n == 0) return true\n        var min =\
    \ arr(0)\n        var max = arr(0)\n        for (i <- 1 until n) {\n         \
    \   min = min min arr(i)\n            max = max max arr(i)\n        }\n      \
    \  if (min == 1 && max == n) return true\n        else return false", "      \
    \  if (arr.length == 0) return true\n        val max = arr.max\n        val min\
    \ = arr.min\n        val maxIndex = arr.indexOf(max)\n        val minIndex = arr.indexOf(min)\n\
    \        if (maxIndex == 0) return true\n        if (minIndex == arr.length -\
    \ 1) return true\n        if (maxIndex < minIndex) return true\n        return\
    \ false", "        if (arr.length == 0) return true\n        val sorted = arr.sorted\n\
    \        for (i <- 0 until arr.length) {\n            val shifted = arr.slice(i,\
    \ arr.length) ++ arr.slice(0, i)\n            if (shifted == sorted) return true\n\
    \        }\n        return false", "        val n = arr.length\n        if (n\
    \ == 0) return true\n        val min = arr.min\n        val max = arr.max\n  \
    \      val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0) {\n            if (maxIndex == n - 1) return true\n\
    \            else return false\n        }\n        else {\n            if (maxIndex\
    \ == n - 1) return true\n            else return false\n        }", "        if\
    \ (arr.isEmpty) return true\n        val sorted = arr.sorted\n        val min\
    \ = sorted.head\n        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n\
    \        val maxIndex = arr.indexOf(max)\n        if (minIndex == maxIndex) return\
    \ true\n        if (minIndex < maxIndex) {\n            if (maxIndex - minIndex\
    \ == arr.length - 1) return true\n            else return false\n        }\n \
    \       else {\n            if (maxIndex + arr.length - minIndex == arr.length\
    \ - 1) return true\n            else return false\n        }", "        if (arr.length\
    \ == 0) return true\n        var max = arr(0)\n        for (i <- 1 until arr.length)\
    \ {\n            if (arr(i) < max) return false\n            else max = arr(i)\n\
    \        }\n        return true", "        val n = arr.length\n        if (n ==\
    \ 0) return true\n        var max = arr(0)\n        var min = arr(0)\n       \
    \ for (i <- 1 until n) {\n            if (arr(i) < min) min = arr(i)\n       \
    \     if (arr(i) > max) max = arr(i)\n        }\n        if (max - min + 1 ==\
    \ n) return true\n        return false", "        if (arr.length == 0) return\
    \ true\n        val sorted = arr.sorted\n        val min = sorted.head\n     \
    \   val max = sorted.last\n        val minIndex = arr.indexOf(min)\n        val\
    \ maxIndex = arr.indexOf(max)\n        if (minIndex == 0) return true\n      \
    \  if (maxIndex == arr.length - 1) return true\n        return false", "     \
    \   if (arr.length == 0) return true\n        val min = arr.min\n        val max\
    \ = arr.max\n        val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0) return true\n        if (maxIndex == arr.length -\
    \ 1) return true\n        if (minIndex == arr.length - 1) return false\n     \
    \   if (maxIndex == 0) return false\n        return true", "        if (arr.isEmpty)\
    \ return true\n        val sorted = arr.sorted\n        for (i <- 0 until arr.length)\
    \ {\n            val shifted = arr.slice(i, arr.length) ++ arr.slice(0, i)\n \
    \           if (shifted == sorted) return true\n        }\n        return false",
  "        if (arr.length == 0) return true\n        var max = arr(0)\n        for\
    \ (i <- 1 until arr.length) {\n            if (arr(i) < max) return false\n  \
    \          max = max max arr(i)\n        }\n        return true", "        if\
    \ (arr.length == 0) return true\n        val sorted = arr.sorted\n        val\
    \ min = sorted.head\n        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n\
    \        val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) return true\n\
    \        if (maxIndex == arr.length - 1) return true\n        if (minIndex ==\
    \ 1) return true\n        if (maxIndex == arr.length - 2) return true\n      \
    \  return false", "        if (arr.length == 0) return true\n        val max =\
    \ arr.max\n        val min = arr.min\n        val maxIndex = arr.indexOf(max)\n\
    \        val minIndex = arr.indexOf(min)\n        if (maxIndex == 0) return true\n\
    \        if (minIndex == arr.length - 1) return true\n        if (maxIndex ==\
    \ arr.length - 1) return false\n        if (minIndex == 0) return false\n    \
    \    return true", "        if (arr.length == 0) return true\n        val sorted\
    \ = arr.sorted\n        val min = sorted.head\n        val max = sorted.last\n\
    \        var minIndex = -1\n        var maxIndex = -1\n        for (i <- 0 until\
    \ arr.length) {\n            if (arr(i) == min) minIndex = i\n            if (arr(i)\
    \ == max) maxIndex = i\n        }\n        if (minIndex == -1 || maxIndex == -1)\
    \ return false\n        if (minIndex < maxIndex) return false\n        if (minIndex\
    \ == arr.length - 1) return true\n        if (maxIndex == 0) return true\n   \
    \     if (minIndex == arr.length - 2 && maxIndex == 1) return true\n        return\
    \ false", "        if (arr.length == 0) return true\n        var min = arr(0)\n\
    \        for (i <- 1 until arr.length) {\n            if (arr(i) < min) return\
    \ false\n            min = min min arr(i)\n        }\n        return true", " \
    \       if (arr.isEmpty) return true\n        val n = arr.length\n        val\
    \ a = arr.toArray\n        val b = new Array[Long](n)\n        for (i <- 0 until\
    \ n) b(i) = a(i)\n        b.sortInPlace()\n        for (i <- 0 until n) {\n  \
    \          if (a(i) != b(i)) {\n                val j = a.indexOf(b(i))\n    \
    \            val c = a.slice(j, n) ++ a.slice(0, j)\n                if (c.sameElements(b))\
    \ return true\n            }\n        }\n        false", "        if (arr.isEmpty)\
    \ return true\n        val min = arr.min\n        val minIndex = arr.indexOf(min)\n\
    \        val max = arr.max\n        val maxIndex = arr.indexOf(max)\n        val\
    \ sorted = arr.sorted\n        if (minIndex == 0 && maxIndex == arr.length - 1)\
    \ return true\n        if (minIndex == 0 && maxIndex != arr.length - 1) return\
    \ false\n        if (minIndex != 0 && maxIndex == arr.length - 1) return true\n\
    \        if (minIndex != 0 && maxIndex != arr.length - 1) return false", "   \
    \     if (arr.isEmpty) return true\n        val n = arr.length\n        val max\
    \ = arr.max\n        val min = arr.min\n        if (max - min == n - 1) return\
    \ true\n        else return false", "        if (arr.isEmpty) return true\n  \
    \      val n = arr.length\n        val min = arr.min\n        val max = arr.max\n\
    \        val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0 && maxIndex == n - 1) return true\n        if (minIndex\
    \ == 0 && maxIndex == n - 2) return true\n        if (minIndex == 1 && maxIndex\
    \ == n - 1) return true\n        return false", "        if (arr.isEmpty) return\
    \ true\n        val n = arr.length\n        val max = arr.max\n        val min\
    \ = arr.min\n        val maxIndex = arr.indexOf(max)\n        val minIndex = arr.indexOf(min)\n\
    \        if (maxIndex == n - 1) return true\n        if (minIndex == 0) return\
    \ false\n        if (maxIndex == minIndex + 1) return true\n        if (maxIndex\
    \ < minIndex) return true\n        return false", "        if (arr.length == 0)\
    \ return true\n        val sorted = arr.sorted\n        val min = sorted.head\n\
    \        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n    \
    \    val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) {\n         \
    \   if (maxIndex == arr.length - 1) return true\n            else {\n        \
    \        val maxIndex2 = arr.indexOf(max, maxIndex + 1)\n                if (maxIndex2\
    \ == -1) return true\n                else {\n                    val maxIndex3\
    \ = arr.indexOf(max, maxIndex2 + 1)\n                    if (maxIndex3 == -1)\
    \ return true\n                    else return false\n                }\n    \
    \        }\n        }\n        else {\n            if (maxIndex == arr.length\
    \ - 1) {\n                val minIndex2 = arr.indexOf(min, minIndex + 1)\n   \
    \             if (minIndex2 == -1) return true\n                else {\n     \
    \               val minIndex3 = arr.indexOf(min, minIndex2 + 1)\n            \
    \        if (minIndex3 == -1) return true\n                    else return false\n\
    \                }\n            }\n            else {\n                val minIndex2\
    \ = arr.indexOf(min, minIndex + 1)\n                if (minIndex2 == -1) {\n \
    \                   val maxIndex2 = arr.indexOf(max, maxIndex + 1)\n         \
    \           if (maxIndex2 == -1) return true\n                    else {\n   \
    \                     val maxIndex3 = arr.indexOf(max, maxIndex2 + 1)\n      \
    \                  if (maxIndex3 == -1) return true\n                        else\
    \ return false\n                    }\n                }\n                else\
    \ {\n                    val minIndex3 = arr.indexOf(min, minIndex2 + 1)\n   \
    \                 if (minIndex3 == -1) {\n                        val maxIndex2\
    \ = arr.indexOf(max, maxIndex + 1)\n                        if (maxIndex2 == -1)\
    \ return true\n                        else {\n                            val\
    \ maxIndex3 = arr.indexOf(max, maxIndex2 + 1)\n                            if\
    \ (maxIndex3 == -1) return true\n                            else return false\n\
    \                        }\n                    }\n                    else return\
    \ false", "        if (arr.length == 0) return true\n        var min = arr(0)\n\
    \        for (i <- 1 until arr.length) {\n            if (arr(i) < min) return\
    \ false\n            min = min min arr(i)\n        }\n        return true", " \
    \       if (arr.isEmpty) return true\n        val sorted = arr.sorted\n      \
    \  val diff = arr.zip(sorted).map(x => x._1 - x._2).filter(_ != 0)\n        if\
    \ (diff.length == 0) return true\n        if (diff.length > 1) return false\n\
    \        val d = diff(0)\n        val min = arr.min\n        val max = arr.max\n\
    \        if (d > 0) {\n            if (min + d == max) return true\n         \
    \   else return false\n        }\n        else {\n            if (max + d == min)\
    \ return true\n            else return false\n        }", "        val n = arr.length\n\
    \        if (n == 0) return true\n        val sorted = arr.sorted\n        val\
    \ diff = (0 until n).map(i => arr(i) - sorted(i)).toList\n        val max = diff.max\n\
    \        val min = diff.min\n        if (max - min > 1) return false\n       \
    \ val count = diff.groupBy(identity).mapValues(_.length)\n        if (count.contains(max)\
    \ && count(max) == 1) {\n            if (count.contains(min) && count(min) ==\
    \ 1) return true\n            else if (count.contains(min + 1) && count(min +\
    \ 1) == 1) return true\n            else return false\n        }\n        else\
    \ if (count.contains(max - 1) && count(max - 1) == 1) {\n            if (count.contains(min)\
    \ && count(min) == 1) return true\n            else if (count.contains(min + 1)\
    \ && count(min + 1) == 1) return true\n            else return false\n       \
    \ }\n        else return false", "        val n = arr.length\n        if (n ==\
    \ 0) return true\n        val min = arr.min\n        val max = arr.max\n     \
    \   val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0) return true\n        if (maxIndex == n - 1) return\
    \ true\n        if (minIndex == n - 1) return false\n        if (maxIndex == 0)\
    \ return false\n        if (minIndex < maxIndex) return false\n        return\
    \ true", "        if (arr.length == 0) return true\n        var min = arr(0)\n\
    \        for (i <- 1 until arr.length) {\n            if (arr(i) < min) return\
    \ false\n            min = min min arr(i)\n        }\n        return true", " \
    \       val n = arr.length\n        val sorted = arr.sorted\n        val diff\
    \ = arr.zip(sorted).map(x => x._1 - x._2).toArray\n        val prefix = Array.fill(n)(0)\n\
    \        val suffix = Array.fill(n)(0)\n        for (i <- 1 until n) {\n     \
    \       prefix(i) = prefix(i - 1) + diff(i - 1)\n            suffix(n - i - 1)\
    \ = suffix(n - i) + diff(n - i)\n        }\n        for (i <- 0 until n) {\n \
    \           if (prefix(i) == suffix(i)) return true\n        }\n        false",
  "        if (arr.isEmpty) return true\n        val sorted = arr.sorted\n       \
    \ val min = sorted.head\n        val max = sorted.last\n        val minIndex =\
    \ arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n        if (minIndex\
    \ == 0) return true\n        if (maxIndex == arr.length - 1) return true\n   \
    \     if (minIndex > maxIndex) return true\n        return false", "        val\
    \ n = arr.length\n        if (n == 0) return true\n        val max = arr.max\n\
    \        val min = arr.min\n        if (max - min > n - 1) return false\n    \
    \    val count = Array.fill(n)(0)\n        for (i <- 0 until n) {\n          \
    \  count(arr(i).toInt - 1) += 1\n        }\n        for (i <- 0 until n) {\n \
    \           if (count(i) > 1) return false\n        }\n        return true", " \
    \       val n = arr.length\n        if (n == 0) return true\n        val sorted\
    \ = arr.sorted\n        val dp = Array.fill(n)(0)\n        for (i <- 0 until n)\
    \ {\n            if (arr(i) == sorted(i)) dp(i) = 1\n        }\n        for (i\
    \ <- 1 until n) {\n            if (dp(i) == 0) {\n                var j = i -\
    \ 1\n                while (j >= 0 && dp(j) == 0) {\n                    if (arr(j)\
    \ == sorted(i)) {\n                        dp(j) = 1\n                       \
    \ dp(i) = 1\n                    }\n                    j -= 1\n             \
    \   }\n            }\n        }\n        dp.forall(_ == 1)", "        if (arr.isEmpty)\
    \ return true\n        val min = arr.min\n        val max = arr.max\n        val\
    \ minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n     \
    \   if (minIndex == 0) return true\n        if (maxIndex == arr.length - 1) return\
    \ true\n        if (minIndex == arr.length - 1) return false\n        if (maxIndex\
    \ == 0) return false\n        if (minIndex < maxIndex) return true\n        else\
    \ return false", "        val sorted = arr.sorted\n        val min = sorted.head\n\
    \        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n    \
    \    val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) {\n         \
    \   if (maxIndex == arr.length - 1) return true\n            else return false\n\
    \        }\n        if (maxIndex == arr.length - 1) {\n            if (minIndex\
    \ == 0) return true\n            else return false\n        }\n        if (minIndex\
    \ < maxIndex) return false\n        else return true", "        if (arr.length\
    \ == 0) return true\n        val sorted = arr.sorted\n        val min = sorted.head\n\
    \        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n    \
    \    val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) return true\n\
    \        if (maxIndex == arr.length - 1) return true\n        if (minIndex > maxIndex)\
    \ return true\n        return false", "        val n = arr.length\n        if\
    \ (n == 0) return true\n        val max = arr.max\n        val min = arr.min\n\
    \        if (max - min + 1 == n) return true\n        return false", "       \
    \ val n = arr.length\n        if (n == 0) return true\n        var max = arr(0)\n\
    \        var min = arr(0)\n        for (i <- 1 until n) {\n            max = max\
    \ max arr(i)\n            min = min min arr(i)\n        }\n        val diff =\
    \ max - min\n        if (diff == n - 1) return true\n        else return false",
  "        if (arr.length == 0) return true\n        val sorted = arr.sorted\n   \
    \     val min = sorted.head\n        val max = sorted.last\n        val minIndex\
    \ = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n        if (minIndex\
    \ == 0) return true\n        if (maxIndex == arr.length - 1) return true\n   \
    \     if (minIndex == 1 && maxIndex == arr.length - 2) return true\n        return\
    \ false", "        if (arr.length == 0) return true\n        var min = arr(0)\n\
    \        for (i <- 1 until arr.length) {\n            if (arr(i) < min) return\
    \ false\n            min = min min arr(i)\n        }\n        return true", " \
    \       if (arr.isEmpty) return true\n        val sorted = arr.sorted\n      \
    \  val min = sorted.head\n        val max = sorted.last\n        val minIndex\
    \ = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n        if (minIndex\
    \ == 0) return true\n        if (maxIndex == arr.length - 1) return true\n   \
    \     if (minIndex > maxIndex) return true\n        return false", "        if\
    \ (arr.length == 0) return true\n        val sorted = arr.sorted\n        val\
    \ min = sorted.head\n        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n\
    \        val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) {\n     \
    \       if (maxIndex == arr.length - 1) return true\n            else return false\n\
    \        }\n        else {\n            if (maxIndex == arr.length - 1) return\
    \ true\n            else return false\n        }", "        if (arr.length ==\
    \ 0) return true\n        val sorted = arr.sorted\n        val min = sorted.head\n\
    \        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n    \
    \    val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) {\n         \
    \   if (maxIndex == arr.length - 1) return true\n            else return false\n\
    \        }\n        else {\n            if (maxIndex == arr.length - 1) return\
    \ true\n            else return false\n        }", "        if (arr.isEmpty) return\
    \ true\n        val n = arr.length\n        val min = arr.min\n        val max\
    \ = arr.max\n        val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0) {\n            if (maxIndex == n - 1) return true\n\
    \            else return false\n        }\n        else {\n            if (maxIndex\
    \ == n - 1) return true\n            else return false\n        }", "        if\
    \ (arr.length == 0) return true\n        val sorted = arr.sorted\n        val\
    \ min = sorted.head\n        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n\
    \        val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) return true\n\
    \        if (maxIndex == arr.length - 1) return true\n        if (minIndex ==\
    \ arr.length - 1) return true\n        if (maxIndex == 0) return true\n      \
    \  return false", "        if (arr.isEmpty) return true\n        var min = arr.min\n\
    \        var max = arr.max\n        var minIndex = arr.indexOf(min)\n        var\
    \ maxIndex = arr.indexOf(max)\n        if (minIndex == 0) {\n            if (maxIndex\
    \ == arr.length - 1) return true\n            else return false\n        }\n \
    \       else if (maxIndex == arr.length - 1) return false\n        else return\
    \ true", "        if (arr.length == 0) return true\n        val min = arr.min\n\
    \        val max = arr.max\n        val minIndex = arr.indexOf(min)\n        val\
    \ maxIndex = arr.indexOf(max)\n        if (minIndex == 0 && maxIndex == arr.length\
    \ - 1) return true\n        if (minIndex == 0 && maxIndex == arr.length - 2) return\
    \ true\n        if (minIndex == 1 && maxIndex == arr.length - 1) return true\n\
    \        false", "        if (arr.length == 0) return true\n        var max =\
    \ arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < max)\
    \ return false\n            max = max max arr(i)\n        }\n        return true",
  "        if (arr.isEmpty) return true\n        val sorted = arr.sorted\n       \
    \ val min = sorted.head\n        val max = sorted.last\n        val minIndex =\
    \ arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n        if (minIndex\
    \ == 0) {\n            if (maxIndex == arr.length - 1) return true\n         \
    \   else return false\n        }\n        else if (maxIndex == arr.length - 1)\
    \ return false\n        else {\n            val first = arr.slice(0, minIndex)\n\
    \            val second = arr.slice(minIndex, maxIndex + 1)\n            val third\
    \ = arr.slice(maxIndex + 1, arr.length)\n            if (first.sorted == first\
    \ && second.sorted == second && third.sorted == third) return true\n         \
    \   else return false\n        }", "        if (arr.length == 0) return true\n\
    \        val n = arr.length\n        val min = arr.min\n        val max = arr.max\n\
    \        val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0 && maxIndex == n - 1) return true\n        if (minIndex\
    \ == 0 && maxIndex == n - 2) return true\n        if (minIndex == 1 && maxIndex\
    \ == n - 1) return true\n        return false", "        val n = arr.length\n\
    \        if (n == 0) return true\n        val sorted = arr.sorted\n        val\
    \ diff = arr.zip(sorted).map(x => x._1 - x._2).filter(_ != 0)\n        if (diff.length\
    \ == 0) return true\n        if (diff.length == 1) return true\n        if (diff.length\
    \ == 2) {\n            if (diff(0) == diff(1)) return true\n            if (diff(0)\
    \ == -diff(1)) return true\n        }\n        return false", "        if (arr.length\
    \ == 0) return true\n        var max = arr(0)\n        for (i <- 1 until arr.length)\
    \ {\n            if (arr(i) < max) return false\n            max = max max arr(i)\n\
    \        }\n        return true", "        if (arr.length == 0) return true\n\
    \        var max = arr(0)\n        for (i <- 1 until arr.length) {\n         \
    \   if (arr(i) < max) return false\n            max = max max arr(i)\n       \
    \ }\n        return true", "        if (arr.length == 0) return true\n       \
    \ val sorted = arr.sorted\n        val min = sorted.head\n        val max = sorted.last\n\
    \        val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0) return true\n        if (maxIndex == arr.length -\
    \ 1) return true\n        if (maxIndex - minIndex == arr.length - 1) return true\n\
    \        return false", "        if (arr.length == 0) return true\n        val\
    \ n = arr.length\n        val sorted = arr.sorted\n        for (i <- 0 until n)\
    \ {\n            if (arr(i) != sorted(i)) {\n                if (arr(i) == sorted(0))\
    \ {\n                    if (arr(0) == sorted(n - 1)) return true\n          \
    \          else return false\n                }\n                else return false\n\
    \            }\n        }\n        return true", "        if (arr.length == 0)\
    \ return true\n        val min = arr.min\n        val max = arr.max\n        val\
    \ minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n     \
    \   val sorted = arr.sorted\n        if (minIndex == maxIndex) return true\n \
    \       if (minIndex < maxIndex) {\n            if (sorted.slice(minIndex, maxIndex\
    \ + 1) == arr.slice(minIndex, maxIndex + 1)) return true\n            else return\
    \ false\n        }\n        else {\n            if (sorted.slice(maxIndex, minIndex\
    \ + 1) == arr.slice(maxIndex, minIndex + 1)) return true\n            else return\
    \ false\n        }", "        if (arr.length == 0) return true\n        val min\
    \ = arr.min\n        val max = arr.max\n        val minIndex = arr.indexOf(min)\n\
    \        val maxIndex = arr.indexOf(max)\n        val sorted = arr.sorted\n  \
    \      if (minIndex == 0 && maxIndex == arr.length - 1) return true\n        if\
    \ (minIndex == 0 && maxIndex == arr.length - 2) return true\n        if (minIndex\
    \ == 1 && maxIndex == arr.length - 1) return true\n        if (minIndex == 1 &&\
    \ maxIndex == arr.length - 2) return true\n        if (minIndex == 1 && maxIndex\
    \ == arr.length - 3) return true\n        if (minIndex == 2 && maxIndex == arr.length\
    \ - 1) return true\n        if (minIndex == 2 && maxIndex == arr.length - 2) return\
    \ true\n        if (minIndex == 2 && maxIndex == arr.length - 3) return true\n\
    \        if (minIndex == 2 && maxIndex == arr.length - 4) return true\n      \
    \  if (minIndex == 3 && maxIndex == arr.length - 1) return true\n        if (minIndex\
    \ == 3 && maxIndex == arr.length - 2) return true\n        if (minIndex == 3 &&\
    \ maxIndex == arr.length - 3) return true\n        if (minIndex == 3 && maxIndex\
    \ == arr.length - 4) return true\n        if (minIndex == 3 && maxIndex == arr.length\
    \ - 5) return true\n        return false", "        if (arr.length == 0) return\
    \ true\n        val sorted = arr.sorted\n        val min = sorted.head\n     \
    \   val max = sorted.last\n        val minIndex = arr.indexOf(min)\n        val\
    \ maxIndex = arr.indexOf(max)\n        if (minIndex == 0) return true\n      \
    \  if (maxIndex == arr.length - 1) return true\n        if (minIndex == arr.length\
    \ - 1) return false\n        if (maxIndex == 0) return false\n        if (minIndex\
    \ < maxIndex) return true\n        return false", "        if (arr.length == 0)\
    \ return true\n        val sorted = arr.sorted\n        val min = sorted.head\n\
    \        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n    \
    \    val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) {\n         \
    \   if (maxIndex == arr.length - 1) return true\n            else return false\n\
    \        }\n        else {\n            if (maxIndex == arr.length - 1) return\
    \ true\n            else return false\n        }", "        val n = arr.length\n\
    \        if (n == 0) return true\n        val sorted = arr.sorted\n        val\
    \ min = sorted.head\n        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n\
    \        val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) return true\n\
    \        if (maxIndex == n - 1) return true\n        if (minIndex == n - 1) return\
    \ true\n        if (maxIndex == 0) return true\n        false", "        if (arr.length\
    \ == 0) return true\n        val sorted = arr.sorted\n        val min = sorted.head\n\
    \        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n    \
    \    val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) {\n         \
    \   if (maxIndex == arr.length - 1) return true\n            else return false\n\
    \        }\n        else {\n            if (maxIndex == arr.length - 1) return\
    \ true\n            else return false\n        }", "        if (arr.length ==\
    \ 0) return true\n        var min = arr(0)\n        for (i <- 1 until arr.length)\
    \ {\n            if (arr(i) < min) return false\n            min = min min arr(i)\n\
    \        }\n        return true", "        if (arr.length == 0) return true\n\
    \        val sorted = arr.sorted\n        val min = sorted.head\n        val max\
    \ = sorted.last\n        val minIndex = arr.indexOf(min)\n        val maxIndex\
    \ = arr.indexOf(max)\n        if (minIndex == 0 && maxIndex == arr.length - 1)\
    \ return true\n        if (minIndex == 0 && maxIndex == arr.length - 2) return\
    \ true\n        if (minIndex == 1 && maxIndex == arr.length - 1) return true\n\
    \        return false", "        if (arr.length == 0) return true\n        val\
    \ sorted = arr.sorted\n        val min = sorted.head\n        val max = sorted.last\n\
    \        val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        val minDistance = minIndex - 0\n        val maxDistance = arr.length\
    \ - 1 - maxIndex\n        if (minDistance == maxDistance) return true\n      \
    \  else return false", "        if (arr.isEmpty) return true\n        val sorted\
    \ = arr.sorted\n        val min = sorted.min\n        val max = sorted.max\n \
    \       val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == maxIndex) return true\n        val diff = maxIndex -\
    \ minIndex\n        val n = arr.length\n        if (diff == n - 1) return true\n\
    \        if (diff == 1) return false\n        if (diff == n - 2) return true\n\
    \        if (diff == 2) return false\n        return true", "        if (arr.isEmpty)\
    \ return true\n        val n = arr.length\n        val max = arr.max\n       \
    \ val min = arr.min\n        val maxIndex = arr.indexOf(max)\n        val minIndex\
    \ = arr.indexOf(min)\n        if (maxIndex == 0) return true\n        if (minIndex\
    \ == n - 1) return true\n        if (maxIndex == n - 1) return false\n       \
    \ if (minIndex == 0) return false\n        if (maxIndex < minIndex) return true\n\
    \        return false", "        val sorted = arr.sorted\n        val n = arr.length\n\
    \        var i = 0\n        while (i < n) {\n            if (arr(i) != sorted(i))\
    \ {\n                var j = i + 1\n                while (j < n && arr(j) !=\
    \ sorted(i)) j += 1\n                if (j == n) return false\n              \
    \  var k = j\n                while (k > i) {\n                    val temp =\
    \ arr(k)\n                    arr(k) = arr(k - 1)\n                    arr(k -\
    \ 1) = temp\n                    k -= 1\n                }\n            }\n  \
    \          i += 1\n        }\n        true", "        val n = arr.length\n   \
    \     if (n == 0) return true\n        val a = arr.toArray\n        var i = 0\n\
    \        while (i < n - 1) {\n            if (a(i) > a(i + 1)) {\n           \
    \     var j = i + 1\n                while (j < n && a(j) < a(j - 1)) j += 1\n\
    \                if (j == n) return false\n                else {\n          \
    \          val temp = a(j)\n                    for (k <- j - 1 to i by -1) a(k\
    \ + 1) = a(k)\n                    a(i) = temp\n                }\n          \
    \  }\n            i += 1\n        }\n        true", "        if (arr.length ==\
    \ 0) return true\n        val sorted = arr.sorted\n        val min = sorted.head\n\
    \        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n    \
    \    val maxIndex = arr.indexOf(max)\n        if (minIndex == 0 && maxIndex ==\
    \ arr.length - 1) return true\n        if (minIndex == 0 && maxIndex == arr.length\
    \ - 2) return true\n        if (minIndex == 1 && maxIndex == arr.length - 1) return\
    \ true\n        return false", "        if (arr.length == 0) return true\n   \
    \     var min = arr(0)\n        for (i <- 1 until arr.length) {\n            if\
    \ (arr(i) < min) return false\n            min = min min arr(i)\n        }\n \
    \       return true", "        if (arr.length == 0) return true\n        var min\
    \ = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) <\
    \ min) return false\n            min = min min arr(i)\n        }\n        return\
    \ true", "        val sorted = arr.sorted\n        val n = arr.length\n      \
    \  var i = 0\n        while (i < n && arr(i) == sorted(i)) i += 1\n        if\
    \ (i == n) return true\n        var j = n - 1\n        while (j >= 0 && arr(j)\
    \ == sorted(j)) j -= 1\n        if (i == j) return true\n        if (i > 0 &&\
    \ arr(i - 1) > sorted(j)) return false\n        if (j < n - 1 && arr(i) > sorted(j\
    \ + 1)) return false\n        true", "        if (arr.length == 0) return true\n\
    \        var min = arr(0)\n        for (i <- 1 until arr.length) {\n         \
    \   if (arr(i) < min) return false\n            min = min min arr(i)\n       \
    \ }\n        return true", "        if (arr.length == 0) return true\n       \
    \ val arr2 = arr.sorted\n        val min = arr2.head\n        val max = arr2.last\n\
    \        val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        val diff = maxIndex - minIndex\n        if (diff == arr.length - 1) return\
    \ true\n        if (diff == 0) return false\n        if (diff == 1) return true\n\
    \        if (diff == arr.length - 2) return true\n        return false", "   \
    \     if (arr.isEmpty) return true\n        var min = arr.head\n        var max\
    \ = arr.head\n        for (i <- arr) {\n            if (i < min) min = i\n   \
    \         if (i > max) max = i\n        }\n        val sorted = arr.sorted\n \
    \       if (sorted.head != min || sorted.last != max) return false\n        val\
    \ n = arr.length\n        val dp = Array.fill(n)(0)\n        for (i <- 1 until\
    \ n) {\n            dp(i) = dp(i - 1) + abs(arr(i) - arr(i - 1))\n        }\n\
    \        val dp2 = Array.fill(n)(0)\n        for (i <- n - 2 to 0 by -1) {\n \
    \           dp2(i) = dp2(i + 1) + abs(arr(i) - arr(i + 1))\n        }\n      \
    \  for (i <- 0 until n) {\n            if (dp(i) == dp2(i)) return true\n    \
    \    }\n        false", "        if (arr.length == 0) return true\n        var\
    \ min = arr(0)\n        var max = arr(0)\n        for (i <- 1 until arr.length)\
    \ {\n            if (arr(i) < min) min = arr(i)\n            if (arr(i) > max)\
    \ max = arr(i)\n        }\n        if (max - min + 1 == arr.length) return true\n\
    \        return false", "        val n = arr.length\n        if (n == 0) return\
    \ true\n        val max = arr.max\n        val min = arr.min\n        if (max\
    \ - min + 1 == n) return true\n        return false", "        if (arr.length\
    \ == 0) return true\n        var min = arr(0)\n        for (i <- 1 until arr.length)\
    \ {\n            if (arr(i) < min) return false\n            min = min min arr(i)\n\
    \        }\n        return true", "        if (arr.isEmpty) return true\n    \
    \    val sorted = arr.sorted\n        val min = sorted.head\n        val max =\
    \ sorted.last\n        val minIndex = arr.indexOf(min)\n        val maxIndex =\
    \ arr.indexOf(max)\n        if (minIndex == 0 && maxIndex == arr.length - 1) return\
    \ true\n        if (minIndex == 0 && maxIndex == arr.length - 2) return true\n\
    \        if (minIndex == 1 && maxIndex == arr.length - 1) return true\n      \
    \  if (minIndex == 1 && maxIndex == arr.length - 2) return true\n        false",
  "        if (arr.length == 0) return true\n        val sorted = arr.sorted\n   \
    \     val min = sorted.head\n        val max = sorted.last\n        val minIndex\
    \ = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n        if (minIndex\
    \ == 0) return true\n        if (maxIndex == arr.length - 1) return true\n   \
    \     if (maxIndex - minIndex == 1) return true\n        return false", "    \
    \    val n = arr.length\n        if (n == 0) return true\n        val sorted =\
    \ arr.sorted\n        val diff = arr.zip(sorted).map(x => x._1 - x._2).filter(_\
    \ != 0)\n        if (diff.length == 0) return true\n        val min = diff.min\n\
    \        val max = diff.max\n        if (min < 0 && max > 0) return false\n  \
    \      if (min < 0) return true\n        if (max > 0) return true\n        return\
    \ false", "        if (arr.isEmpty) return true\n        val n = arr.length\n\
    \        val max = arr.max\n        val min = arr.min\n        if (max - min +\
    \ 1 == n) return true\n        return false", "        if (arr.length == 0) return\
    \ true\n        var min = arr(0)\n        var max = arr(0)\n        for (i <-\
    \ 1 until arr.length) {\n            min = min min arr(i)\n            max = max\
    \ max arr(i)\n        }\n        return max - min == arr.length - 1", "      \
    \  val n = arr.length\n        if (n == 0) return true\n        val sorted = arr.sorted\n\
    \        val min = sorted.head\n        val max = sorted.last\n        val minIndex\
    \ = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n        if (minIndex\
    \ == 0) {\n            if (maxIndex == n - 1) return true\n            else return\
    \ false\n        }\n        else {\n            if (maxIndex == n - 1) return\
    \ false\n            else {\n                val min2 = sorted(1)\n          \
    \      val min2Index = arr.indexOf(min2)\n                if (min2Index == 0)\
    \ return true\n                else return false\n            }\n        }", " \
    \       if (arr.isEmpty) return true\n        val n = arr.length\n        val\
    \ sorted = arr.sorted\n        var i = 0\n        while (i < n) {\n          \
    \  if (arr(i) != sorted(i)) return false\n            i += 1\n        }\n    \
    \    true", "        if (arr.length == 0) return true\n        val sorted = arr.sorted\n\
    \        var count = 0\n        for (i <- 0 until arr.length) {\n            if\
    \ (arr(i) != sorted(i)) count += 1\n        }\n        return count <= 2", " \
    \       if (arr.length == 0) return true\n        val min = arr.min\n        val\
    \ minIndex = arr.indexOf(min)\n        val max = arr.max\n        val maxIndex\
    \ = arr.indexOf(max)\n        if (minIndex == 0 && maxIndex == arr.length - 1)\
    \ return true\n        if (minIndex == 0 && maxIndex == arr.length - 2) return\
    \ true\n        if (minIndex == 1 && maxIndex == arr.length - 1) return true\n\
    \        return false", "        if (arr.length == 0) return true\n        var\
    \ min = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i)\
    \ < min) return false\n            min = min min arr(i)\n        }\n        return\
    \ true", "        val n = arr.length\n        if (n == 0) return true\n      \
    \  val max = arr.max\n        val min = arr.min\n        if (max - min > n - 1)\
    \ return false\n        val count = Array.fill(n)(0)\n        for (i <- 0 until\
    \ n) {\n            count(arr(i).toInt - 1) += 1\n        }\n        for (i <-\
    \ 0 until n) {\n            if (count(i) > 1) return false\n        }\n      \
    \  return true", "        val n = arr.length\n        if (n == 0) return true\n\
    \        val max = arr.max\n        val min = arr.min\n        val maxIndex =\
    \ arr.indexOf(max)\n        val minIndex = arr.indexOf(min)\n        if (maxIndex\
    \ == n - 1) return true\n        if (minIndex == 0) return false\n        if (maxIndex\
    \ == n - 2) return true\n        if (minIndex == 1) return false\n        if (maxIndex\
    \ == minIndex - 1) return true\n        if (maxIndex == minIndex + 1) return false\n\
    \        if (maxIndex > minIndex) return true\n        return false", "      \
    \  if (arr.length == 0) return true\n        var max = arr(0)\n        for (i\
    \ <- 1 until arr.length) {\n            if (arr(i) < max) return false\n     \
    \       else max = arr(i)\n        }\n        return true", "        val arr2\
    \ = arr.sorted\n        val arr3 = arr.reverse.sorted\n        val arr4 = arr.reverse\n\
    \        val arr5 = arr.sorted.reverse\n        val arr6 = arr.reverse.sorted.reverse\n\
    \        if (arr == arr2 || arr == arr3 || arr == arr4 || arr == arr5 || arr ==\
    \ arr6) true else false", "        if (arr.length == 0) return true\n        var\
    \ max = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i)\
    \ < max) return false\n            else max = arr(i)\n        }\n        return\
    \ true", "        if (arr.length == 0) return true\n        var min = arr(0)\n\
    \        for (i <- 1 until arr.length) {\n            if (arr(i) < min) return\
    \ false\n            min = min min arr(i)\n        }\n        return true", " \
    \       if (arr.length == 0) return true\n        var min = arr(0)\n        for\
    \ (i <- 1 until arr.length) {\n            if (arr(i) < min) return false\n  \
    \          min = min min arr(i)\n        }\n        return true", "        if\
    \ (arr.length == 0) return true\n        val sorted = arr.sorted\n        val\
    \ min = sorted.head\n        val max = sorted.last\n        var minIndex = -1\n\
    \        var maxIndex = -1\n        for (i <- 0 until arr.length) {\n        \
    \    if (arr(i) == min) minIndex = i\n            if (arr(i) == max) maxIndex\
    \ = i\n        }\n        if (minIndex == -1 || maxIndex == -1) return false\n\
    \        if (minIndex == 0) {\n            if (maxIndex == arr.length - 1) return\
    \ true\n            else return false\n        }\n        if (maxIndex == arr.length\
    \ - 1) {\n            if (minIndex == 0) return true\n            else return\
    \ false\n        }\n        if (minIndex < maxIndex) return true\n        else\
    \ return false", "        if (arr.length == 0) return true\n        val sorted\
    \ = arr.sorted\n        val min = sorted.head\n        val max = sorted.last\n\
    \        val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        val minDistance = minIndex - 0\n        val maxDistance = arr.length\
    \ - 1 - maxIndex\n        if (minDistance == maxDistance) return true\n      \
    \  else if (minDistance < maxDistance) {\n            val maxDistance = arr.length\
    \ - 1 - maxIndex\n            if (maxDistance % 2 == 0) return true\n        \
    \    else return false\n        }\n        else {\n            val minDistance\
    \ = minIndex - 0\n            if (minDistance % 2 == 0) return true\n        \
    \    else return false\n        }", "        if (arr.length == 0) return true\n\
    \        var min = arr(0)\n        for (i <- 1 until arr.length) {\n         \
    \   if (arr(i) < min) return false\n            min = min min arr(i)\n       \
    \ }\n        return true", "        if (arr.isEmpty) return true\n        val\
    \ min = arr.min\n        val max = arr.max\n        val minIndex = arr.indexOf(min)\n\
    \        val maxIndex = arr.indexOf(max)\n        if (minIndex == maxIndex) return\
    \ true\n        if (minIndex == 0) return false\n        if (maxIndex == arr.length\
    \ - 1) return false\n        if (minIndex < maxIndex) return false\n        if\
    \ (arr(minIndex - 1) > max) return false\n        if (arr(maxIndex + 1) < min)\
    \ return false\n        true", "        val sorted = arr.sorted\n        val diff\
    \ = arr.zip(sorted).map(x => x._1 - x._2).toArray\n        val max = diff.max\n\
    \        val min = diff.min\n        if (max - min > 1) return false\n       \
    \ if (max == min) return true\n        val maxIndex = diff.indexOf(max)\n    \
    \    val minIndex = diff.indexOf(min)\n        if (maxIndex == 0) return true\n\
    \        if (minIndex == arr.length - 1) return true\n        if (maxIndex ==\
    \ arr.length - 1) return true\n        if (minIndex == 0) return true\n      \
    \  return false", "        val n = arr.length\n        if (n == 0) return true\n\
    \        val a = arr.toArray\n        val b = new Array[Long](n)\n        for\
    \ (i <- 0 until n) b(i) = a(i)\n        scala.util.Sorting.quickSort(b)\n    \
    \    for (i <- 0 until n) {\n            if (a(i) != b(i)) {\n               \
    \ val j = (i + 1) % n\n                if (a(j) != b(i)) return false\n      \
    \          val tmp = a(i)\n                a(i) = a(j)\n                a(j) =\
    \ tmp\n            }\n        }\n        true", "        if (arr.length == 0)\
    \ return true\n        var min = arr(0)\n        for (i <- 1 until arr.length)\
    \ {\n            if (arr(i) < min) return false\n            min = min min arr(i)\n\
    \        }\n        return true", "        if (arr.length == 0) return true\n\
    \        var min = arr(0)\n        var max = arr(0)\n        var i = 1\n     \
    \   while (i < arr.length) {\n            if (arr(i) < min) min = arr(i)\n   \
    \         if (arr(i) > max) max = arr(i)\n            i += 1\n        }\n    \
    \    if (min == max) return true\n        var j = 1\n        while (j < arr.length)\
    \ {\n            if (arr(j) == min) {\n                if (j == arr.length - 1)\
    \ return true\n                if (arr(j + 1) == max) return true\n          \
    \  }\n            j += 1\n        }\n        return false", "        if (arr.length\
    \ == 0) return true\n        val sorted = arr.sorted\n        val min = sorted.head\n\
    \        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n    \
    \    val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) return true\n\
    \        if (maxIndex == arr.length - 1) return true\n        if (maxIndex - minIndex\
    \ == 1) return true\n        return false", "        if (arr.isEmpty) return true\n\
    \        val n = arr.length\n        val min = arr.min\n        val max = arr.max\n\
    \        val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0) return true\n        if (maxIndex == n - 1) return\
    \ true\n        if (minIndex == n - 1) return false\n        if (maxIndex == 0)\
    \ return false\n        if (minIndex < maxIndex) return false\n        return\
    \ true", "        val sorted = arr.sorted\n        val sorted_arr = sorted.toArray\n\
    \        val arr_arr = arr.toArray\n        val n = arr.length\n        for (i\
    \ <- 0 until n) {\n            if (sorted_arr(i) != arr_arr(i)) {\n          \
    \      var j = i\n                while (j < n && sorted_arr(i) != arr_arr(j))\
    \ j += 1\n                if (j == n) return false\n                var k = j\n\
    \                while (k > i) {\n                    val temp = arr_arr(k)\n\
    \                    arr_arr(k) = arr_arr(k - 1)\n                    arr_arr(k\
    \ - 1) = temp\n                    k -= 1\n                }\n            }\n\
    \        }\n        true", "        if (arr.length == 0) return true\n       \
    \ val sorted = arr.sorted\n        val diff = sorted.zip(arr).map(x => x._1 -\
    \ x._2)\n        val max = diff.max\n        val min = diff.min\n        if (max\
    \ - min > 1) return false\n        val count = diff.groupBy(x => x).map(x => (x._1,\
    \ x._2.length)).toList\n        if (count.length == 1) return true\n        if\
    \ (count.length == 2) {\n            if (count(0)._1 == 0 && count(1)._1 == 1)\
    \ return true\n            if (count(0)._1 == -1 && count(1)._1 == 0) return true\n\
    \        }\n        return false", "        if (arr.length == 0) return true\n\
    \        var min = arr(0)\n        for (i <- 1 until arr.length) {\n         \
    \   if (arr(i) < min) return false\n            min = min min arr(i)\n       \
    \ }\n        return true", "        val n = arr.length\n        if (n == 0) return\
    \ true\n        val sorted = arr.sorted\n        val min = sorted.head\n     \
    \   val max = sorted.last\n        val minIndex = arr.indexOf(min)\n        val\
    \ maxIndex = arr.indexOf(max)\n        if (minIndex == 0) {\n            if (maxIndex\
    \ == n - 1) return true\n            else return false\n        }\n        else\
    \ {\n            if (maxIndex == n - 1) return true\n            else return false\n\
    \        }", "        if (arr.length == 0) return true\n        var min = arr(0)\n\
    \        var max = arr(0)\n        for (i <- 1 until arr.length) {\n         \
    \   if (arr(i) < min) min = arr(i)\n            if (arr(i) > max) max = arr(i)\n\
    \        }\n        if (min == max) return true\n        var count = 0\n     \
    \   for (i <- 0 until arr.length) {\n            if (arr(i) == min) count += 1\n\
    \        }\n        if (count > 1) return false\n        return true", "     \
    \   if (arr.isEmpty) return true\n        val sorted = arr.sorted\n        val\
    \ n = arr.length\n        for (i <- 0 until n) {\n            val shifted = arr.drop(i)\
    \ ++ arr.take(i)\n            if (shifted == sorted) return true\n        }\n\
    \        return false", "        if (arr.length == 0) return true\n        val\
    \ sorted = arr.sorted\n        val min = sorted.head\n        val max = sorted.last\n\
    \        val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0) return true\n        if (maxIndex == arr.length -\
    \ 1) return true\n        if (minIndex > maxIndex) return true\n        return\
    \ false", "        if (arr.length == 0) return true\n        val sorted = arr.sorted\n\
    \        var i = 0\n        while (i < arr.length) {\n            if (arr(i) !=\
    \ sorted(i)) return false\n            i += 1\n        }\n        return true",
  "        if (arr.isEmpty) return true\n        var min = arr.min\n        var max\
    \ = arr.max\n        var minIndex = arr.indexOf(min)\n        var maxIndex = arr.indexOf(max)\n\
    \        var count = 0\n        for (i <- 0 until arr.length) {\n            if\
    \ (arr(i) == min) {\n                if (i < minIndex) count += 1\n          \
    \  }\n            else if (arr(i) == max) {\n                if (i > maxIndex)\
    \ count += 1\n            }\n        }\n        if (count == 0) return true\n\
    \        else if (count == 1) return false\n        else {\n            if (count\
    \ % 2 == 0) return true\n            else return false\n        }", "        if\
    \ (arr.length == 0) return true\n        var min = arr(0)\n        for (i <- 1\
    \ until arr.length) {\n            if (arr(i) < min) return false\n          \
    \  min = min min arr(i)\n        }\n        return true", "        val n = arr.length\n\
    \        if (n == 0) return true\n        val arr2 = arr.sorted\n        val arr3\
    \ = arr.reverse.sorted\n        val arr4 = arr.reverse\n        if (arr == arr2\
    \ || arr == arr3 || arr == arr4) return true\n        return false", "       \
    \ if (arr.length == 0) return true\n        var min = arr(0)\n        for (i <-\
    \ 1 until arr.length) {\n            if (arr(i) < min) return false\n        \
    \    min = min min arr(i)\n        }\n        return true", "        if (arr.length\
    \ == 0) return true\n        var max = arr(0)\n        for (i <- 1 until arr.length)\
    \ {\n            if (arr(i) < max) return false\n            max = max max arr(i)\n\
    \        }\n        return true", "        if (arr.length == 0) return true\n\
    \        val sorted = arr.sorted\n        for (i <- 0 until arr.length) {\n  \
    \          val shifted = arr.slice(i, arr.length) ++ arr.slice(0, i)\n       \
    \     if (shifted == sorted) return true\n        }\n        return false", " \
    \       val n = arr.length\n        if (n == 0) return true\n        val max =\
    \ arr.max\n        val min = arr.min\n        if (max - min == n - 1) return true\n\
    \        else return false", "        if (arr.length == 0) return true\n     \
    \   val sorted = arr.sorted\n        var i = 0\n        while (i < arr.length)\
    \ {\n            if (arr(i) != sorted(i)) return false\n            i += 1\n \
    \       }\n        return true", "        if (arr.length == 0) return true\n \
    \       var min = arr(0)\n        for (i <- 1 until arr.length) {\n          \
    \  if (arr(i) < min) return false\n            min = min min arr(i)\n        }\n\
    \        return true", "        if (arr.length == 0) return true\n        var\
    \ min = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i)\
    \ < min) return false\n            min = min min arr(i)\n        }\n        return\
    \ true", "        if (arr.isEmpty) return true\n        val sorted = arr.sorted\n\
    \        val min = sorted.head\n        val max = sorted.last\n        val minIndex\
    \ = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n        val minDistance\
    \ = minIndex - 0\n        val maxDistance = arr.length - 1 - maxIndex\n      \
    \  if (minDistance == maxDistance) return true\n        else if (minDistance <\
    \ maxDistance) {\n            val maxDistance2 = arr.length - 1 - arr.indexOf(sorted(sorted.length\
    \ - 2))\n            if (minDistance == maxDistance2) return true\n          \
    \  else return false\n        }\n        else {\n            val minDistance2\
    \ = arr.indexOf(sorted(1)) - 0\n            if (minDistance2 == maxDistance) return\
    \ true\n            else return false\n        }", "        if (arr.isEmpty) return\
    \ true\n        var min = arr.head\n        for (i <- 1 until arr.length) {\n\
    \            if (arr(i) < min) return false\n            min = min min arr(i)\n\
    \        }\n        return true", "        val n = arr.length\n        if (n ==\
    \ 0) return true\n        val min = arr.min\n        val max = arr.max\n     \
    \   val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0) {\n            if (maxIndex == n - 1) return true\n\
    \            else return false\n        }\n        else {\n            if (maxIndex\
    \ == n - 1) return false\n            else {\n                val sorted = arr.sorted\n\
    \                for (i <- 0 until n) {\n                    if (arr(i) != sorted(i))\
    \ return false\n                }\n                return true\n            }\n\
    \        }", "        if (arr.length == 0) return true\n        var min = arr(0)\n\
    \        for (i <- 1 until arr.length) {\n            if (arr(i) < min) return\
    \ false\n            min = min min arr(i)\n        }\n        return true", " \
    \       if (arr.isEmpty) return true\n        val sorted = arr.sorted\n      \
    \  val min = sorted.head\n        val max = sorted.last\n        val minIndex\
    \ = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n        if (minIndex\
    \ == 0) {\n            if (maxIndex == arr.length - 1) return true\n         \
    \   else return false\n        }\n        else {\n            if (maxIndex ==\
    \ arr.length - 1) return true\n            else return false\n        }", "  \
    \      if (arr.length == 0) return true\n        var max = arr(0)\n        for\
    \ (i <- 1 until arr.length) {\n            if (arr(i) < max) return false\n  \
    \          max = max max arr(i)\n        }\n        return true", "        if\
    \ (arr.length == 0) return true\n        val sorted = arr.sorted\n        val\
    \ min = sorted.head\n        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n\
    \        val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) return true\n\
    \        if (maxIndex == arr.length - 1) return true\n        if (maxIndex - minIndex\
    \ == arr.length - 1) return true\n        return false", "        if (arr.length\
    \ == 0) return true\n        var min = arr(0)\n        for (i <- 1 until arr.length)\
    \ {\n            if (arr(i) < min) return false\n            min = min min arr(i)\n\
    \        }\n        return true", "        if (arr.isEmpty) return true\n    \
    \    val sorted = arr.sorted\n        val min = sorted.head\n        val max =\
    \ sorted.last\n        val minIndex = arr.indexOf(min)\n        val maxIndex =\
    \ arr.indexOf(max)\n        if (minIndex == 0 && maxIndex == arr.length - 1) return\
    \ true\n        if (minIndex == 0 && maxIndex == arr.length - 2) return true\n\
    \        if (minIndex == 1 && maxIndex == arr.length - 1) return true\n      \
    \  return false", "        if (arr.isEmpty) return true\n        val sorted =\
    \ arr.sorted\n        val min = sorted.head\n        val max = sorted.last\n \
    \       val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0) return true\n        if (maxIndex == arr.length -\
    \ 1) return true\n        if (minIndex == maxIndex) return true\n        if (maxIndex\
    \ - minIndex == 1) return true\n        return false", "        if (arr.length\
    \ == 0) return true\n        val sorted = arr.sorted\n        val diff = (sorted\
    \ zip arr).map(x => x._1 - x._2)\n        val max = diff.max\n        val min\
    \ = diff.min\n        if (max - min > 1) return false\n        else if (max -\
    \ min == 1) {\n            val maxIndex = diff.indexOf(max)\n            val minIndex\
    \ = diff.indexOf(min)\n            if (maxIndex == 0) return false\n         \
    \   else if (minIndex == arr.length - 1) return false\n            else if (arr(maxIndex\
    \ - 1) > arr(minIndex + 1)) return false\n            else return true\n     \
    \   }\n        else return true", "        if (arr.length == 0) return true\n\
    \        var min = arr(0)\n        for (i <- 1 until arr.length) {\n         \
    \   if (arr(i) < min) return false\n            min = min min arr(i)\n       \
    \ }\n        return true", "        if (arr.isEmpty) return true\n        var\
    \ min = arr.head\n        var max = arr.head\n        for (i <- arr) {\n     \
    \       if (i < min) min = i\n            if (i > max) max = i\n        }\n  \
    \      if (max - min + 1 == arr.length) return true\n        return false", " \
    \       if (arr.length == 0) return true\n        val sorted = arr.sorted\n  \
    \      val diff = arr.zip(sorted).map(x => x._1 - x._2).filter(x => x != 0)\n\
    \        if (diff.length == 0) return true\n        if (diff.length == 1) return\
    \ true\n        return false", "        if (arr.length == 0) return true\n   \
    \     var min = arr(0)\n        for (i <- 1 until arr.length) {\n            if\
    \ (arr(i) < min) return false\n            min = min min arr(i)\n        }\n \
    \       return true", "        if (arr.length == 0) return true\n        var min\
    \ = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) <\
    \ min) return false\n            min = min min arr(i)\n        }\n        return\
    \ true", "        if (arr.isEmpty) return true\n        val n = arr.length\n \
    \       val max = arr.max\n        val min = arr.min\n        if (max - min ==\
    \ n - 1) return true\n        else return false", "        if (arr.isEmpty) return\
    \ true\n        val n = arr.length\n        val max = arr.max\n        val min\
    \ = arr.min\n        val maxIndex = arr.indexOf(max)\n        val minIndex = arr.indexOf(min)\n\
    \        if (maxIndex == n - 1) return true\n        if (maxIndex == 0) return\
    \ false\n        if (minIndex == 0) return true\n        if (minIndex == n - 1)\
    \ return false\n        if (maxIndex < minIndex) return true\n        return false",
  "        if (arr.length == 0) return true\n        val sorted = arr.sorted\n   \
    \     val min = sorted.head\n        val max = sorted.last\n        val minIndex\
    \ = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n        if (minIndex\
    \ == 0) {\n            if (maxIndex == arr.length - 1) return true\n         \
    \   else {\n                val sub = arr.slice(maxIndex + 1, arr.length)\n  \
    \              if (sub.sorted == sub) return true\n                else return\
    \ false\n            }\n        }\n        else {\n            if (maxIndex ==\
    \ arr.length - 1) {\n                val sub = arr.slice(0, minIndex)\n      \
    \          if (sub.sorted == sub) return true\n                else return false\n\
    \            }\n            else {\n                val sub1 = arr.slice(0, minIndex)\n\
    \                val sub2 = arr.slice(maxIndex + 1, arr.length)\n            \
    \    if (sub1.sorted == sub1 && sub2.sorted == sub2) return true\n           \
    \     else return false\n            }\n        }", "        if (arr.length ==\
    \ 0) return true\n        var min = arr(0)\n        for (i <- 1 until arr.length)\
    \ {\n            if (arr(i) < min) return false\n            min = min min arr(i)\n\
    \        }\n        return true", "        if (arr.length == 0) return true\n\
    \        val sorted = arr.sorted\n        var i = 0\n        var j = arr.length\
    \ - 1\n        while (i < j) {\n            if (arr(i) != sorted(i)) return false\n\
    \            if (arr(j) != sorted(j)) return false\n            i += 1\n     \
    \       j -= 1\n        }\n        return true", "        val n = arr.length\n\
    \        if (n == 0) return true\n        val min = arr.min\n        val max =\
    \ arr.max\n        val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0) {\n            if (maxIndex == n - 1) return true\n\
    \            else return false\n        }\n        else {\n            if (maxIndex\
    \ == n - 1) return true\n            else return false\n        }", "        if\
    \ (arr.isEmpty) return true\n        var max = arr(0)\n        for (i <- 1 until\
    \ arr.length) {\n            if (arr(i) < max) return false\n            max =\
    \ max max arr(i)\n        }\n        return true", "        if (arr.length ==\
    \ 0) return true\n        var min = arr(0)\n        for (i <- 1 until arr.length)\
    \ {\n            if (arr(i) < min) return false\n            min = min min arr(i)\n\
    \        }\n        return true", "        if (arr.length == 0) return true\n\
    \        val n = arr.length\n        val min = arr.min\n        val max = arr.max\n\
    \        val minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n\
    \        if (minIndex == 0 && maxIndex == n - 1) return true\n        if (minIndex\
    \ == n - 1 && maxIndex == 0) return true\n        if (minIndex == 0 && maxIndex\
    \ == 0) return true\n        if (minIndex == n - 1 && maxIndex == n - 1) return\
    \ true\n        return false", "        val a = arr.toArray\n        val n = a.length\n\
    \        if (n == 0) return true\n        val b = new Array[Long](n)\n       \
    \ for (i <- 0 until n) b(i) = a(i)\n        scala.util.Sorting.quickSort(b)\n\
    \        val c = new Array[Long](n)\n        for (i <- 0 until n) c(i) = a(i)\n\
    \        scala.util.Sorting.quickSort(c)\n        for (i <- 0 until n) {\n   \
    \         if (a(i) != b(i) && a(i) != c(i)) return false\n        }\n        true",
  "        if (arr.length == 0) return true\n        val max = arr.max\n        val\
    \ min = arr.min\n        val maxIndex = arr.indexOf(max)\n        val minIndex\
    \ = arr.indexOf(min)\n        if (maxIndex == 0) return true\n        if (minIndex\
    \ == arr.length - 1) return true\n        if (maxIndex == arr.length - 1) return\
    \ false\n        if (minIndex == 0) return false\n        return true", "    \
    \    if (arr.length == 0) return true\n        var min = arr(0)\n        for (i\
    \ <- 1 until arr.length) {\n            if (arr(i) < min) return false\n     \
    \       min = min min arr(i)\n        }\n        return true", "        if (arr.length\
    \ == 0) return true\n        var min = arr(0)\n        for (i <- 1 until arr.length)\
    \ {\n            if (arr(i) < min) return false\n            min = min min arr(i)\n\
    \        }\n        return true", "        if (arr.length == 0) return true\n\
    \        var min = arr(0)\n        var max = arr(0)\n        for (i <- 1 until\
    \ arr.length) {\n            if (arr(i) < min) min = arr(i)\n            if (arr(i)\
    \ > max) max = arr(i)\n        }\n        if (max - min + 1 == arr.length) return\
    \ true\n        else return false", "        val n = arr.length\n        if (n\
    \ == 0) return true\n        val max = arr.max\n        val min = arr.min\n  \
    \      if (max - min == n - 1) return true\n        return false", "        if\
    \ (arr.length == 0) return true\n        val sorted = arr.sorted\n        val\
    \ min = sorted.head\n        val max = sorted.last\n        val minIndex = arr.indexOf(min)\n\
    \        val maxIndex = arr.indexOf(max)\n        if (minIndex == 0) {\n     \
    \       if (maxIndex == arr.length - 1) return true\n            else {\n    \
    \            val nextMax = arr(maxIndex + 1)\n                if (nextMax > max)\
    \ return false\n                else return true\n            }\n        }\n \
    \       else {\n            if (maxIndex == arr.length - 1) {\n              \
    \  val nextMin = arr(minIndex - 1)\n                if (nextMin < min) return\
    \ false\n                else return true\n            }\n            else {\n\
    \                val nextMin = arr(minIndex - 1)\n                val nextMax\
    \ = arr(maxIndex + 1)\n                if (nextMin < min || nextMax > max) return\
    \ false\n                else return true\n            }\n        }", "      \
    \  if (arr.length == 0) return true\n        var min = arr(0)\n        for (i\
    \ <- 1 until arr.length) {\n            if (arr(i) < min) return false\n     \
    \       min = min min arr(i)\n        }\n        return true", "        if (arr.isEmpty)\
    \ return true\n        val min = arr.min\n        val max = arr.max\n        val\
    \ minIndex = arr.indexOf(min)\n        val maxIndex = arr.indexOf(max)\n     \
    \   if (minIndex == 0) return true\n        if (maxIndex == arr.length - 1) return\
    \ true\n        if (minIndex > maxIndex) return true\n        return false", " \
    \       if (arr.length == 0) return true\n        var min = arr(0)\n        for\
    \ (i <- 1 until arr.length) {\n            if (arr(i) < min) return false\n  \
    \          min = min min arr(i)\n        }\n        return true", "        if\
    \ (arr.length == 0) return true\n        val sorted = arr.sorted\n        var\
    \ i = 0\n        while (i < arr.length) {\n            if (arr(i) != sorted(i))\
    \ {\n                var j = i + 1\n                while (j < arr.length) {\n\
    \                    if (arr(j) == sorted(i)) {\n                        return\
    \ true\n                    }\n                    j += 1\n                }\n\
    \                return false\n            }\n            i += 1\n        }\n\
    \        return true", "        if (arr.length == 0) return true\n        var\
    \ max = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i)\
    \ < max) return false\n            max = max max arr(i)\n        }\n        return\
    \ true", "        if (arr.isEmpty) return true\n        var min = arr.head\n \
    \       var max = arr.head\n        for (i <- arr) {\n            min = min min\
    \ i\n            max = max max i\n        }\n        if (min == 1 && max == arr.length)\
    \ return true\n        return false", "        if (arr.length == 0) return true\n\
    \        val sorted = arr.sorted\n        val map = new HashMap[Long, Int]\n \
    \       for (i <- 0 until arr.length) {\n            if (map.contains(arr(i)))\
    \ map(arr(i)) += 1\n            else map(arr(i)) = 1\n        }\n        for (i\
    \ <- 0 until arr.length) {\n            if (map(sorted(i)) > 0) {\n          \
    \      map(sorted(i)) -= 1\n            } else {\n                return false\n\
    \            }\n        }\n        return true"]
stop_tokens:
- "\n    }\n"

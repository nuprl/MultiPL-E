name: HumanEval_15_string_sequence
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return a string containing space-delimited numbers starting from 0 upto\
  \ n inclusive.\n    // >>> string_sequence(0)\n    // '0'\n    // >>> string_sequence(5)\n\
  \    // '0 1 2 3 4 5'\n    def stringSequence(n : Long) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
  0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
  0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
completions: ["        var s = \"\"\n        for (i <- 0 to n) {\n            s +=\
    \ i + \" \"\n        }\n        s.trim", "        val sb = new StringBuilder\n\
    \        for (i <- 0 to n) {\n            sb.append(i + \" \")\n        }\n  \
    \      sb.toString.trim", "        var s = \"\"\n        for (i <- 0 to n) s +=\
    \ i + \" \"\n        s.trim", "        var s = \"\"\n        for (i <- 0 to n)\
    \ {\n            s += i + \" \"\n        }\n        s.trim", "        var s =\
    \ \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n \
    \       s.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n        \
    \    s += i + \" \"\n        }\n        s.trim", "        var s = \"\"\n     \
    \   for (i <- 0 to n) s += i + \" \"\n        s.trim", "        if (n == 0) return\
    \ \"0\"\n        var result = new StringBuilder\n        for (i <- 0 to n) {\n\
    \            result.append(i.toString)\n            result.append(\" \")\n   \
    \     }\n        result.toString.trim", "        var s = new StringBuilder\n \
    \       for (i <- 0 to n) {\n            s.append(i.toString + \" \")\n      \
    \  }\n        s.toString.trim", "        var s = \"\"\n        for (i <- 0 to\
    \ n) {\n            s += i.toString + \" \"\n        }\n        s.trim", "   \
    \     var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString +\
    \ \" \"\n        }\n        s.trim", "        var result = \"\"\n        for (i\
    \ <- 0 to n) {\n            result += i.toString + \" \"\n        }\n        return\
    \ result.trim", "        val sb = new StringBuilder\n        for (i <- 0 to n)\
    \ {\n            sb.append(i)\n            sb.append(\" \")\n        }\n     \
    \   sb.toString.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n  \
    \          s += i.toString + \" \"\n        }\n        s.trim", "        var result\
    \ = \"\"\n        for (i <- 0 to n) {\n            result += i.toString + \" \"\
    \n        }\n        return result.trim", "        var s = \"\"\n        for (i\
    \ <- 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim", "        var result = \"\"\n\
    \        for (i <- 0 to n) {\n            result += i.toString + \" \"\n     \
    \   }\n        return result.trim", "        var s = \"\"\n        for (i <- 0\
    \ to n) s += i + \" \"\n        s.trim", "        val sb = new StringBuilder\n\
    \        for (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\"\
    \ \")\n        }\n        sb.toString.trim", "        var s = \"\"\n        for\
    \ (i <- 0 to n) {\n            s += i + \" \"\n        }\n        s.trim", " \
    \       var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n\
    \        }\n        s.trim", "        val sb = new StringBuilder\n        for\
    \ (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\" \")\n  \
    \      }\n        sb.toString.trim", "        var result = \"\"\n        for (i\
    \ <- 0 to n) {\n            result += i.toString + \" \"\n        }\n        return\
    \ result.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n         \
    \   s += i.toString + \" \"\n        }\n        s.trim", "        var s = \"\"\
    \n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n        }\n\
    \        s.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n       \
    \     s += i.toString + \" \"\n        }\n        s.trim", "        var result\
    \ = \"\"\n        for (i <- 0 to n) {\n            result += i.toString + \" \"\
    \n        }\n        return result.trim", "        val sb = new StringBuilder\n\
    \        for (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\"\
    \ \")\n        }\n        sb.toString.trim", "        var s = \"\"\n        for\
    \ (i <- 0 to n) s += i + \" \"\n        s.trim", "        var s = \"\"\n     \
    \   for (i <- 0 to n) {\n            s += i + \" \"\n        }\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n\
    \        }\n        s.trim", "        var result = \"\"\n        for (i <- 0 to\
    \ n) {\n            result += i + \" \"\n        }\n        result.substring(0,\
    \ result.length - 1)", "        var s = \"\"\n        for (i <- 0 to n) {\n  \
    \          s += i.toString\n            if (i != n) s += \" \"\n        }\n  \
    \      return s", "        var s = \"\"\n        for (i <- 0 to n) {\n       \
    \     s += i.toString\n            if (i != n) s += \" \"\n        }\n       \
    \ return s", "        val sb = new StringBuilder\n        for (i <- 0 to n) {\n\
    \            sb.append(i.toString)\n            sb.append(\" \")\n        }\n\
    \        sb.toString.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n\
    \            s += i.toString + \" \"\n        }\n        s.trim", "        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString.trim", "        var\
    \ s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim", "     \
    \   var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to\
    \ n) {\n            s += i + \" \"\n        }\n        s.trim", "        var s\
    \ = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n \
    \       }\n        s.trim", "        var result = \"\"\n        for (i <- 0 to\
    \ n) {\n            result += i.toString + \" \"\n        }\n        return result.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        s.trim", "        val sb = new StringBuilder\n \
    \       for (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\"\
    \ \")\n        }\n        sb.toString.trim", "        var s = \"\"\n        for\
    \ (i <- 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        var s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i.toString)\n\
    \            s.append(\" \")\n        }\n        s.toString.trim", "        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s.trim", "        if (n == 0) return \"0\"\n        var s = \"\"\n  \
    \      for (i <- 0 to n) s += i + \" \"\n        return s.trim", "        var\
    \ s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s", "        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to n)\
    \ {\n            s += i.toString + \" \"\n        }\n        s.trim", "      \
    \  val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i.toString)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim", "       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to\
    \ n) {\n            s += i.toString + \" \"\n        }\n        s.trim", "   \
    \     var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString +\
    \ \" \"\n        }\n        s.trim", "        val sb = new StringBuilder\n   \
    \     for (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\"\
    \ \")\n        }\n        sb.toString.trim", "        var s = \"\"\n        for\
    \ (i <- 0 to n) {\n            s += i + \" \"\n        }\n        s.trim", " \
    \       var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        s.trim", "        val sb = new StringBuilder\n \
    \       for (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\"\
    \ \")\n        }\n        sb.toString.trim", "        var s = \"\"\n        for\
    \ (i <- 0 to n) s += i + \" \"\n        s.trim", "        val sb = new StringBuilder\n\
    \        for (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\"\
    \ \")\n        }\n        sb.toString.trim", "        var s = \"\"\n        for\
    \ (i <- 0 to n) {\n            s += i + \" \"\n        }\n        s.trim", " \
    \       var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n\
    \        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to n)\
    \ s += i + \" \"\n        s.trim", "        var s = \"\"\n        for (i <- 0\
    \ to n) {\n            s += i + \" \"\n        }\n        s.trim", "        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to n)\
    \ s += i + \" \"\n        s.trim", "        var s = \"\"\n        for (i <- 0\
    \ to n) s += i + \" \"\n        s.trim", "        var s = \"\"\n        for (i\
    \ <- 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n\
    \        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to n)\
    \ {\n            s += i + \" \"\n        }\n        s.substring(0, s.length -\
    \ 1)", "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <-\
    \ 0 to n) s += i + \" \"\n        s.trim", "        var s = \"\"\n        for\
    \ (i <- 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim", "        var s = \"\"\n   \
    \     for (i <- 0 to n) {\n            s += i.toString + \" \"\n        }\n  \
    \      s.trim", "        var result = \"\"\n        for (i <- 0 to n) result +=\
    \ i + \" \"\n        result.trim", "        var s = \"\"\n        for (i <- 0\
    \ to n) {\n            s += i + \" \"\n        }\n        s.trim", "        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to n)\
    \ {\n            s += i.toString + \" \"\n        }\n        s.trim", "      \
    \  var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to\
    \ n) {\n            s += i.toString + \" \"\n        }\n        s.trim", "   \
    \     var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <-\
    \ 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        var s : String = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\n\
    \            if (i != n) s += \" \"\n        }\n        return s", "        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to n)\
    \ {\n            s += i + \" \"\n        }\n        s.trim", "        if (n ==\
    \ 0) return \"0\"\n        var s = \"\"\n        for (i <- 0 to n) s += i + \"\
    \ \"\n        return s.substring(0, s.length - 1)", "        var s = \"\"\n  \
    \      for (i <- 0 to n) {\n            s += i.toString\n            if (i !=\
    \ n) s += \" \"\n        }\n        return s", "        var s = \"\"\n       \
    \ for (i <- 0 to n) s += i + \" \"\n        s.trim", "        var s = \"\"\n \
    \       for (i <- 0 to n) {\n            s += i.toString + \" \"\n        }\n\
    \        s.trim", "        var s = \"\"\n        for (i <- 0 to n) s += i + \"\
    \ \"\n        s.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n  \
    \          s += i + \" \"\n        }\n        s.trim", "        var result = \"\
    \"\n        for (i <- 0 to n) {\n            result += i + \" \"\n        }\n\
    \        result.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n  \
    \          s += i + \" \"\n        }\n        s.trim", "        var result = new\
    \ StringBuilder\n        for (i <- 0 to n) {\n            result.append(i)\n \
    \           result.append(\" \")\n        }\n        result.toString.trim", " \
    \       var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <-\
    \ 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim", "       \
    \ val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim", "       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim", "        if (n == 0) return \"0\"\n        var\
    \ s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        return s.trim",
  "        if (n == 0) return \"0\"\n        val sb = new StringBuilder\n        for\
    \ (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\" \")\n  \
    \      }\n        sb.toString.trim", "        val sb = new StringBuilder\n   \
    \     for (i <- 0 to n) {\n            sb.append(i.toString)\n            sb.append(\"\
    \ \")\n        }\n        sb.toString.trim", "        var s = \"\"\n        for\
    \ (i <- 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <-\
    \ 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        s.trim", "        var result = \"\"\n        for\
    \ (i <- 0 to n) {\n            result += i + \" \"\n        }\n        result.trim",
  "        val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim", "       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i + \"\
    \ \"\n        }\n        result.trim", "        val sb = new StringBuilder\n \
    \       for (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\"\
    \ \")\n        }\n        sb.toString.trim", "        var s = \"\"\n        for\
    \ (i <- 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim",
  "        val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim", "       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to\
    \ n) s += i + \" \"\n        s.trim", "        var s = \"\"\n        for (i <-\
    \ 0 to n) s += i + \" \"\n        s.trim", "        var s = \"\"\n        for\
    \ (i <- 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <-\
    \ 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim",
  "        val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim", "       \
    \ var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim", " \
    \       var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <-\
    \ 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim", "        var s = \"\"\n   \
    \     for (i <- 0 to n) {\n            s += i + \" \"\n        }\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n\
    \        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to n)\
    \ s += i + \" \"\n        s.trim", "        var s = \"\"\n        for (i <- 0\
    \ to n) {\n            s += i.toString + \" \"\n        }\n        s.trim", " \
    \       var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n\
    \        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to n)\
    \ {\n            s += i + \" \"\n        }\n        s.trim", "        var s =\
    \ \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n \
    \       s.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n        \
    \    s += i.toString + \" \"\n        }\n        s.trim", "        var s = \"\"\
    \n        for (i <- 0 to n) s += i + \" \"\n        s.trim", "        var s =\
    \ \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n   \
    \     }\n        s.trim", "        var result = \"\"\n        for (i <- 0 to n)\
    \ {\n            result += i.toString + \" \"\n        }\n        return result.trim",
  "        var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim", "        var s = \"\"\n   \
    \     for (i <- 0 to n) {\n            s += i.toString + \" \"\n        }\n  \
    \      s.trim", "        val sb = new StringBuilder\n        for (i <- 0 to n)\
    \ {\n            sb.append(i)\n            sb.append(\" \")\n        }\n     \
    \   sb.toString.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n  \
    \          s += i.toString + \" \"\n        }\n        s.trim", "        var s\
    \ = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n \
    \       }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n\
    \            s += i.toString + \" \"\n        }\n        s.trim", "        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\n       \
    \     if (i != n) s += \" \"\n        }\n        return s", "        var s = \"\
    \"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n     \
    \   s.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n            s\
    \ += i.toString + \" \"\n        }\n        s.trim", "        val sb = new StringBuilder\n\
    \        for (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\"\
    \ \")\n        }\n        sb.toString.trim", "        var result = \"\"\n    \
    \    for (i <- 0 to n) {\n            result += i.toString + \" \"\n        }\n\
    \        return result.trim", "        var s = \"\"\n        for (i <- 0 to n)\
    \ {\n            s += i.toString + \" \"\n        }\n        s.substring(0, s.length\
    \ - 1)", "        var s = \"\"\n        for (i <- 0 to n) {\n            s +=\
    \ i.toString + \" \"\n        }\n        s.trim", "        var s = \"\"\n    \
    \    for (i <- 0 to n) {\n            s += i + \" \"\n        }\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <-\
    \ 0 to n) {\n            s += i + \" \"\n        }\n        s.trim", "       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n    \
    \    }\n        s.trim", "        val sb = new StringBuilder\n        for (i <-\
    \ 0 to n) {\n            sb.append(i.toString)\n            sb.append(\" \")\n\
    \        }\n        sb.toString.trim", "        if (n == 0) return \"0\"\n   \
    \     val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim", "       \
    \ var result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim", "        var s = \"\"\n   \
    \     for (i <- 0 to n) {\n            s += i.toString + \" \"\n        }\n  \
    \      s.trim", "        var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\
    \n        s.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n      \
    \      s += i.toString + \" \"\n        }\n        s.trim", "        var result\
    \ = \"\"\n        for (i <- 0 to n) {\n            result += i.toString + \" \"\
    \n        }\n        return result.trim", "        if (n == 0) return \"0\"\n\
    \        val sb = new StringBuilder\n        for (i <- 0 to n) {\n           \
    \ sb.append(i + \" \")\n        }\n        sb.toString.trim", "        var s =\
    \ \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim", "        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n       \
    \     s += i.toString + \" \"\n        }\n        s.trim", "        if (n == 0)\
    \ return \"0\"\n        val sb = new StringBuilder\n        for (i <- 0 to n)\
    \ {\n            sb.append(i)\n            sb.append(\" \")\n        }\n     \
    \   sb.toString.trim", "        var result = \"\"\n        for (i <- 0 to n) {\n\
    \            result += i.toString + \" \"\n        }\n        return result.trim",
  "        val sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString.trim", "       \
    \ var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \"\
    \ \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to\
    \ n) {\n            s += i.toString + \" \"\n        }\n        s.trim", "   \
    \     var s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString.trim", "        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i + \" \"\n\
    \        }\n        result.trim", "        var s = \"\"\n        for (i <- 0 to\
    \ n) {\n            s += i.toString + \" \"\n        }\n        s.trim", "   \
    \     var s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n\
    \        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to n)\
    \ {\n            s += i.toString + \" \"\n        }\n        s.trim", "      \
    \  var result = \"\"\n        for (i <- 0 to n) {\n            result += i + \"\
    \ \"\n        }\n        result.trim", "        val sb = new StringBuilder\n \
    \       for (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\"\
    \ \")\n        }\n        sb.toString.trim", "        val sb = new StringBuilder\n\
    \        for (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\"\
    \ \")\n        }\n        sb.toString.trim", "        var result = \"\"\n    \
    \    for (i <- 0 to n) {\n            result += i + \" \"\n        }\n       \
    \ result.substring(0, result.length - 1)", "        var s : String = \"\"\n  \
    \      for (i <- 0 to n) {\n            s += i.toString + \" \"\n        }\n \
    \       return s.trim", "        var s = \"\"\n        for (i <- 0 to n) {\n \
    \           s += i + \" \"\n        }\n        s.trim", "        var s = \"\"\n\
    \        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <-\
    \ 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        s.trim", "        var s = \"\"\n        for (i <-\
    \ 0 to n) {\n            s += i.toString + \" \"\n        }\n        s.trim",
  "        var s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n\
    \        }\n        s.trim", "        var s = \"\"\n        for (i <- 0 to n)\
    \ {\n            s += i + \" \"\n        }\n        s.trim", "        var result\
    \ = \"\"\n        for (i <- 0 to n) {\n            result += i + \" \"\n     \
    \   }\n        result.trim", "        var s = \"\"\n        for (i <- 0 to n)\
    \ s += i + \" \"\n        s.trim", "        var s = \"\"\n        for (i <- 0\
    \ to n) {\n            s += i + \" \"\n        }\n        s.trim", "        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result.trim", "        var s = \"\"\n   \
    \     for (i <- 0 to n) {\n            s += i.toString + \" \"\n        }\n  \
    \      s.trim"]
stop_tokens:
- "\n    }\n"

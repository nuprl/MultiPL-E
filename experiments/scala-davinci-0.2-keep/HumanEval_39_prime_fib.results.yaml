language: scala
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1; var j = 1; var k = 1; var count = 0\n        while (count <\
    \ n) {\n            k = i + j; i = j; j = k\n            if (isPrime(k)) count\
    \ += 1\n        }\n        k\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n   \
    \ assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l))\
    \ == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l))\
    \ == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp34ek9t88.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(k)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3;\n    \
    \    var i = 2;\n        while (fib.length < n) {\n            fib += fib(i -\
    \ 1) + fib(i - 2);\n            i += 1;\n        }\n        return fib(n.toInt\
    \ - 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnwbs9du0.scala:29)\n\tat Problem.main(tmpnwbs9du0.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799028
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3;\n \
    \       var i = 2;\n        while (fibs.length < n) {\n            val next =\
    \ fibs(i - 1) + fibs(i - 2);\n            if (isPrime(next)) fibs += next;\n \
    \           i += 1;\n        }\n        fibs(n.toInt - 1);\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppf3sqg8_.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(next)) fibs += next;\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n < 2) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            for (i <- 3L to sqrt(n).toLong by 2) {\n                if (n % i\
    \ == 0) return false\n            }\n            return true\n        }\n    \
    \    def fib(n : Long) : Long = {\n            if (n == 1) return 1\n        \
    \    if (n == 2) return 2\n            return fib(n - 1) + fib(n - 2)\n      \
    \  }\n        var i = 1L\n        var count = 0L\n        while (count < n) {\n\
    \            i += 1\n            if (isPrime(fib(i))) count += 1\n        }\n\
    \        return fib(i)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659799032
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new Fibonacci\n        var count = 0L\n        var result =\
    \ 0L\n        while (count < n) {\n            result = fib.next\n           \
    \ if (isPrime(result)) count += 1\n        }\n        return result\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n \
    \   assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n   \
    \ assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n   \
    \ assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0i82nqi3.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0i82nqi3.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(result)) count +=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799024
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (fibs.length < n) {\n            val fib\
    \ = fibs(i - 1) + fibs(i - 2)\n            if (isPrime(fib)) fibs += fib\n   \
    \         i += 1\n        }\n        fibs(n - 1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd7s_98wx.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib)) fibs += fib\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpd7s_98wx.scala:25:13 --------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m             ^^^^^\e\
    [0m\n\e[31m   |\e[0m             Found:    Long\n\e[31m   |\e[0m             Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799028
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       val primes = new PrimeSet(1000000)\n        var i = 1\n        var count\
    \ = 0\n        while (count < n) {\n            i += 1\n            if (primes.isPrime(i)\
    \ && primes.isPrime(fib(i))) {\n                count += 1\n            }\n  \
    \      }\n        fib(i)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcz9p4e3k.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcz9p4e3k.scala:25:8\
    \ -------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        fib(i)\n\e[31m\e\
    [31m   |\e[0m        ^^^\e[0m\n\e[31m   |\e[0m        Not found: fib\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659799024
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (i < n) {\n    \
    \        var f = fib(i - 1) + fib(i - 2);\n            if (isPrime(f)) {\n   \
    \             fib += f;\n                i += 1;\n            }\n        }\n \
    \       return fib(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkpzlq_ta.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(f)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib(i) = fib(i)\
    \ + 1\n            }\n            while (!isPrime(fib(i))) {\n               \
    \ fib(i) = fib(i) + 2\n            }\n            i += 1\n        }\n        return\
    \ fib(n - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt7gbqknj.scala:25:20 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            \e[33mwhile\e[0m (!isPrime(fib(i))) {\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpt7gbqknj.scala:30:19 --------------------\e[0m\e[0m\n\e[31m30\
    \ |\e[0m        \e[33mreturn\e[0m fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                   ^^^^^\e[0m\n\e[31m   |\e[0m                   Found:    Long\n\
    \e[31m   |\e[0m                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (i <= n) {\n            fibs += fibs(i -\
    \ 1) + fibs(i - 2)\n            if (fibs(i) % 2 == 0) {\n                fibs(i)\
    \ += 1\n            }\n            while (!isPrime(fibs(i))) {\n             \
    \   fibs(i) += 2\n            }\n            i += 1\n        }\n        fibs(n.toInt\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwdfe166_.scala:25:20 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            \e[33mwhile\e[0m (!isPrime(fibs(i))) {\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0\n        var fib = 2L\n        var fib1 = 1L\n        var\
    \ fib2 = 2L\n        while (count < n) {\n            fib = fib1 + fib2\n    \
    \        fib1 = fib2\n            fib2 = fib\n            if (isPrime(fib)) {\n\
    \                count += 1\n            }\n        }\n        return fib\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn6hu6w7c.scala:24:16 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1; var j = 2; var k = 3; var count = 2\n        while (count <\
    \ n) {\n            i = j; j = k; k = i + j\n            if (isPrime(k)) count\
    \ += 1\n        }\n        k\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n   \
    \ assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l))\
    \ == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l))\
    \ == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptfucky4h.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(k)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n < 2) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            for (i <- 3 to sqrt(n).toInt by 2) {\n                if (n % i ==\
    \ 0) return false\n            }\n            return true\n        }\n       \
    \ var i = 1\n        var j = 1\n        var k = 0\n        var count = 0\n   \
    \     while (count < n) {\n            k = i + j\n            if (isPrime(k))\
    \ count += 1\n            i = j\n            j = k\n        }\n        return\
    \ k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
    \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
    \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799029
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (isPrime(fib(i))) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmheasizk.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpmheasizk.scala:24:12 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m            Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799027
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8;\n        var i = 4;\n        while (i < n) {\n            fibs\
    \ += fibs(i - 1) + fibs(i - 2);\n            i += 1;\n        }\n        return\
    \ fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_dh8b_k7.scala:29)\n\tat Problem.main(tmp_dh8b_k7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799029
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8;\n        var i = 4;\n        while (i < n) {\n            fibs\
    \ += fibs(i - 1) + fibs(i - 2);\n            i += 1;\n        }\n        return\
    \ fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_dh8b_k7.scala:29)\n\tat Problem.main(tmp_dh8b_k7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799029
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new Fibonacci()\n        var count = 0L\n        var num = 0L\n\
    \        while (count < n) {\n            num = fib.next\n            if (isPrime(num))\
    \ count += 1\n        }\n        return num\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvqud3r59.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvqud3r59.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(num)) count += \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799024
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1L\n        var j = 1L\n        var k = 1L\n        var count\
    \ = 0L\n        while (count < n) {\n            k = i + j\n            if (isPrime(k))\
    \ count += 1\n            i = j\n            j = k\n        }\n        k\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpddgyrgjj.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 0\n        var f = 0L\n        var p = 0L\n        while (i <\
    \ n) {\n            f = fib(f, p)\n            if (isPrime(f)) i += 1\n      \
    \      p = f\n        }\n        f\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5r2xkfhx.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            f = fib(f, p)\n\e[31m\e[31m   |\e[0m    \
    \            ^^^\e[0m\n\e[31m   |\e[0m                Not found: fib\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5r2xkfhx.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(f)) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n < 2) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            for (i <- 3 to sqrt(n).toInt by 2) {\n                if (n % i ==\
    \ 0) return false\n            }\n            return true\n        }\n       \
    \ var i = 1\n        var count = 0\n        var fib = 2L\n        while (count\
    \ < n) {\n            if (isPrime(fib)) count += 1\n            i += 1\n     \
    \       fib = fibonacci(i)\n        }\n        return fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7zd4srdf.scala:31:18 ------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m            fib = fibonacci(i)\n\e[31m\e[31m   |\e[0m\
    \                  ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                  Not found:\
    \ fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new Fibonacci()\n        var i = 0\n        var result = 0L\n\
    \        while (i < n) {\n            result = fib.next\n            if (isPrime(result))\
    \ i += 1\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p2_v5tl.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9p2_v5tl.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(result)) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1L\n        var j = 1L\n        var k = 2L\n        var count\
    \ = 0L\n        while (count < n) {\n            if (isPrime(k)) {\n         \
    \       count += 1\n            }\n            val t = i + j\n            i =\
    \ j\n            j = k\n            k = t\n        }\n        k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb01bdtnq.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib.remove(i)\n\
    \            } else {\n                i += 1\n            }\n        }\n    \
    \    fib(n - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpr9c44koa.scala:28:12\
    \ --------------------\e[0m\e[0m\n\e[31m28 |\e[0m        fib(n - \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e[0m            Found:\
    \    Long\n\e[31m   |\e[0m            Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799028
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (i < n) {\n    \
    \        var j = fib(i - 1) + fib(i - 2);\n            while (!isPrime(j)) {\n\
    \                j += 1;\n            }\n            fib += j;\n            i\
    \ += 1;\n        }\n        return fib(n.toInt - 1);\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgua2p5ux.scala:21:20 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mwhile\e[0m (!isPrime(j)) {\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799031
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i).isPrime) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpy3ze1fo5.scala:22:23 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (fib(i).isPrime) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                value isPrime is not a member of Long\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpy3ze1fo5.scala:24:12 --------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^\e[0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m\
    \            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 1\n        fibs +=\
    \ 2\n        var i = 2\n        while (i <= n) {\n            fibs += fibs(i -\
    \ 1) + fibs(i - 2)\n            i += 1\n        }\n        return fibs(n - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp43rwi3v_.scala:24:20\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mreturn\e[0m fibs(n\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Found:    Long\n\e[31m   |\e[0m                \
    \    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799034
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (fib.length < n) {\n            fib += fib(i\
    \ - 1) + fib(i - 2)\n            i += 1\n        }\n        fib(n.toInt - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2pcx4ulq.scala:30)\n\tat Problem.main(tmp2pcx4ulq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       val primes = new PrimeSet(1000000)\n        var fib = new Fibonacci(1000000)\n\
    \        var count = 0\n        var result = 0L\n        while (count < n) {\n\
    \            val f = fib.next\n            if (primes.contains(f)) {\n       \
    \         count += 1\n                result = f\n            }\n        }\n \
    \       result\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy0sii3zs.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy0sii3zs.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m(\e[31m1000000\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \           Not found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799031
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (fib.size < n) {\n            fib += fib(i -\
    \ 1) + fib(i - 2)\n            i += 1\n        }\n        fib(n.toInt - 1)\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjqz1hc9g.scala:30)\n\tat Problem.main(tmpjqz1hc9g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799036
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (i < n) {\n    \
    \        var f = fib(i - 1) + fib(i - 2);\n            if (isPrime(f)) {\n   \
    \             fib += f;\n                i += 1;\n            }\n        }\n \
    \       return fib(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkpzlq_ta.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(f)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1; var j = 1; var k = 1; var count = 0\n        while (count <\
    \ n) {\n            val t = i + j\n            i = j; j = t\n            if (isPrime(t))\
    \ {\n                count += 1\n                k = t\n            }\n      \
    \  }\n        k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa65d79ww.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (isPrime(t)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799032
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1L\n        var j = 1L\n        var k = 2L\n        var count\
    \ = 1L\n        while (count < n) {\n            i = j\n            j = k\n  \
    \          k = i + j\n            if (isPrime(k)) count += 1\n        }\n    \
    \    k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqil_zqvc.scala:24:16 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (isPrime(k)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799032
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 0L\n        while (count < n) {\n    \
    \        i += 1\n            if (isPrime(i) && isFib(i)) count += 1\n        }\n\
    \        return i\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0aq8gkx2.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (isPrime(i) && isFib(i)) count\
    \ += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799031
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new Fibonacci\n        var count = 0\n        var result = 0L\n\
    \        while (count < n) {\n            result = fib.next\n            if (isPrime(result))\
    \ count += 1\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkze3lt71.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkze3lt71.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(result)) count +=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799032
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 1L\n        while (count < n) {\n    \
    \        if (isPrime(fib(i))) count += 1\n            i += 1\n        }\n    \
    \    fib(i - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1xrlqmzz.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) count +=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp1xrlqmzz.scala:19:24 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                        ^^^\e[0m\n\e[31m   |\e[0m  \
    \                      Not found: fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp1xrlqmzz.scala:22:8 -------------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m        fib(i - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \   ^^^\e[0m\n\e[31m   |\e[0m        Not found: fib\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799032
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (isPrime(fib(i))) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmheasizk.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpmheasizk.scala:24:12 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m            Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (i <= n) {\n            val fib = fibs(i\
    \ - 1) + fibs(i - 2)\n            if (isPrime(fib)) {\n                fibs +=\
    \ fib\n                i += 1\n            }\n        }\n        fibs(n - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvj3w_nkb.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvj3w_nkb.scala:27:13\
    \ --------------------\e[0m\e[0m\n\e[31m27 |\e[0m        fibs(n - \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       val primes = new PrimeSet(1000000)\n        var i = 1\n        var count\
    \ = 0\n        while (count < n) {\n            i += 1\n            if (primes.isPrime(i)\
    \ && primes.isPrime(i + 2)) count += 1\n        }\n        i\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd6zftm96.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799032
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (fib.length < n)\
    \ {\n            var f = fib(i - 1) + fib(i - 2);\n            if (f.isProbablePrime(10))\
    \ {\n                fib += f;\n                i += 1;\n            }\n     \
    \   }\n        return fib(n - 1);\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcqnf1415.scala:21:18 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (f.isProbablePrime(\e[31m10\e\
    [0m)) {\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mvalue isProbablePrime is not a member of Long, but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mThe following import\
    \ might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.BigInt.long2bigInt\n\
    \e[31m   |\e[0m\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcqnf1415.scala:26:19\
    \ --------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mreturn\e[0m fib(n\
    \ - \e[31m1\e[0m);\n\e[31m\e[31m   |\e[0m                   ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Found:    Long\n\e[31m   |\e[0m                 \
    \  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799036
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (i <= n) {\n            val next = fibs(i\
    \ - 1) + fibs(i - 2)\n            if (isPrime(next)) {\n                fibs +=\
    \ next\n                i += 1\n            }\n        }\n        fibs(n - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp74amm63t.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(next)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp74amm63t.scala:27:13\
    \ --------------------\e[0m\e[0m\n\e[31m27 |\e[0m        fibs(n - \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799037
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (i < n) {\n    \
    \        var j = fib(i - 1) + fib(i - 2);\n            while (!isPrime(j)) {\n\
    \                j += fib(i - 1);\n            }\n            fib += j;\n    \
    \        i += 1;\n        }\n        return fib(n.toInt - 1);\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0i3huqy_.scala:21:20 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mwhile\e[0m (!isPrime(j)) {\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 1L\n        var fib = fibonacci(i)\n \
    \       while (count < n) {\n            if (isPrime(fib)) count += 1\n      \
    \      i += 1\n            fib = fibonacci(i)\n        }\n        fib\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6dnivyrj.scala:18:18 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = fibonacci(i)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \           Not found: fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp6dnivyrj.scala:20:16 ------------------------\e[0m\e[0m\n\e[31m20 |\e\
    [0m            \e[33mif\e[0m (isPrime(fib)) count += \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6dnivyrj.scala:22:18\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m            fib = fibonacci(i)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \           Not found: fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659799035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 1L\n        while (count < n) {\n    \
    \        if (isPrime(i) && isFib(i)) {\n                count += 1\n         \
    \       if (count == n) return i\n            }\n            i += 1\n        }\n\
    \        return -1\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8dzhfmpg.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(i) && isFib(i)) {\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 0\n        var j = 1\n        var k = 0\n        var count = 0\n\
    \        while (count < n) {\n            k = i + j\n            if (isPrime(k))\
    \ count += 1\n            i = j\n            j = k\n        }\n        return\
    \ k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
    \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
    \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprjjb0r3_.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799034
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (isPrime(fib(i))) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmheasizk.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpmheasizk.scala:24:12 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m            Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 1L\n        var fib = 1L\n        while\
    \ (count < n) {\n            fib = fibonacci(i)\n            if (isPrime(fib))\
    \ count += 1\n            i += 1\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzj6t584v.scala:20:18 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            fib = fibonacci(i)\n\e[31m\e[31m   |\e[0m\
    \                  ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                  Not found:\
    \ fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzj6t584v.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m\
    \ (isPrime(fib)) count += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799036
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new Fibonacci()\n        var count = 0\n        var result =\
    \ 0\n        while (count < n) {\n            result = fib.next\n            if\
    \ (isPrime(result)) count += 1\n        }\n        return result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdqmjnoec.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdqmjnoec.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(result)) count +=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799037
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 1L\n        while (count < n) {\n    \
    \        if (isPrime(fib(i))) count += 1\n            i += 1\n        }\n    \
    \    fib(i - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1xrlqmzz.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) count +=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp1xrlqmzz.scala:19:24 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                        ^^^\e[0m\n\e[31m   |\e[0m  \
    \                      Not found: fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp1xrlqmzz.scala:22:8 -------------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m        fib(i - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \   ^^^\e[0m\n\e[31m   |\e[0m        Not found: fib\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799032
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 1L\n        var fib = 1L\n        while\
    \ (count < n) {\n            if (isPrime(fib)) count += 1\n            i += 1\n\
    \            fib = fibonacci(i)\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpilgtlps0.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (isPrime(fib)) count += \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpilgtlps0.scala:22:18 ------------------------\e[0m\e[0m\n\e[31m22 |\e\
    [0m            fib = fibonacci(i)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  Not found: fibonacci\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799036
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8;\n        var i = 4;\n        var p = 13L;\n        while (i\
    \ < n) {\n            p += fibs(i - 2);\n            if (p.isPrime) {\n      \
    \          fibs += p;\n                i += 1;\n            }\n        }\n   \
    \     return fibs(n - 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5nny98wf.scala:22:18 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (p.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ isPrime is not a member of Long\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp5nny98wf.scala:27:20 --------------------\e[0m\e[0m\n\e[31m27 |\e[0m\
    \        \e[33mreturn\e[0m fibs(n - \e[31m1\e[0m);\n\e[31m\e[31m   |\e[0m    \
    \                ^^^^^\e[0m\n\e[31m   |\e[0m                    Found:    Long\n\
    \e[31m   |\e[0m                    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799042
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (fib.length < n)\
    \ {\n            var x = fib(i - 1) + fib(i - 2);\n            if (isPrime(x))\
    \ {\n                fib += x;\n                i += 1;\n            }\n     \
    \   }\n        return fib(n - 1);\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaw3kh2gv.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(x)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpaw3kh2gv.scala:26:19\
    \ --------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mreturn\e[0m fib(n\
    \ - \e[31m1\e[0m);\n\e[31m\e[31m   |\e[0m                   ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Found:    Long\n\e[31m   |\e[0m                 \
    \  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799041
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (i <= n) {\n            val next = fibs(i\
    \ - 1) + fibs(i - 2)\n            if (isPrime(next)) {\n                fibs +=\
    \ next\n                i += 1\n            }\n        }\n        fibs(n - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp74amm63t.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(next)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp74amm63t.scala:27:13\
    \ --------------------\e[0m\e[0m\n\e[31m27 |\e[0m        fibs(n - \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799037
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (fibs.length < n) {\n            fibs +=\
    \ fibs(i - 1) + fibs(i - 2)\n            i += 1\n        }\n        fibs(n.toInt\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9i5n2u12.scala:30)\n\tat Problem.main(tmp9i5n2u12.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799043
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (i <= n) {\n            val next = fibs(i\
    \ - 1) + fibs(i - 2)\n            if (isPrime(next)) {\n                fibs +=\
    \ next\n                i += 1\n            }\n        }\n        fibs(n - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp74amm63t.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(next)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp74amm63t.scala:27:13\
    \ --------------------\e[0m\e[0m\n\e[31m27 |\e[0m        fibs(n - \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799037
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var a = 2L; var b = 3L; var c = 5L; var i = 3L\n        while (i < n)\
    \ {\n            a = b; b = c; c = a + b\n            if (isPrime(c)) i += 1\n\
    \        }\n        c\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwnwmrdr6.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(c)) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799040
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (fibs.size < n) {\n            fibs += fibs(i\
    \ - 1) + fibs(i - 2)\n            i += 1\n        }\n        return fibs(n - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjh2bi2my.scala:24:20\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mreturn\e[0m fibs(n\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Found:    Long\n\e[31m   |\e[0m                \
    \    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799043
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new Fibonacci()\n        var i = 0\n        var result = 0L\n\
    \        while (i < n) {\n            result = fib.next()\n            if (isPrime(result))\
    \ i += 1\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq8y2blw1.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq8y2blw1.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(result)) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799039
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib.remove(i)\n\
    \            } else {\n                var j = 0\n                while (j < i\
    \ && fib(i) % fib(j) != 0) {\n                    j += 1\n                }\n\
    \                if (j == i) {\n                    i += 1\n                }\
    \ else {\n                    fib.remove(i)\n                }\n            }\n\
    \        }\n        fib(n - 1)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmg0ocjap.scala:36:12\
    \ --------------------\e[0m\e[0m\n\e[31m36 |\e[0m        fib(n - \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e[0m            Found:\
    \    Long\n\e[31m   |\e[0m            Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799042
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       val primes = new PrimeSet(1000000)\n        var fib = new Fibonacci(1000000)\n\
    \        var count = 0\n        var result = 0\n        while (count < n) {\n\
    \            result = fib.next\n            if (primes.contains(result)) count\
    \ += 1\n        }\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjl4kpjey.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjl4kpjey.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m(\e[31m1000000\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \           Not found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799039
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 1L\n        var j = 1L\n        while\
    \ (count < n) {\n            val k = i + j\n            if (isPrime(k)) count\
    \ += 1\n            i = j\n            j = k\n        }\n        i\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n  \
    \  assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2tsjp2mt.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(k)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799040
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n == 1) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            val sqrt = sqrt(n).toLong\n            for (i <- 3 to sqrt by 2)\
    \ {\n                if (n % i == 0) return false\n            }\n           \
    \ return true\n        }\n        var i = 1\n        var fib = 1\n        var\
    \ count = 0\n        while (count < n) {\n            fib += i\n            i\
    \ = fib - i\n            if (isPrime(fib)) count += 1\n        }\n        return\
    \ fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmph0qq5yw_.scala:20:23 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mval\e[0m \e[36msqrt\e[0m = sqrt(n).toLong\n\
    \e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m          \
    \             Recursive \e[33mvalue\e[0m \e[35msqrt\e[0m needs type\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659799043
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib(i) = fib(i)\
    \ / 2\n                fib(i - 1) = fib(i - 1) * 2\n            }\n          \
    \  if (fib(i) % 3 == 0) {\n                fib(i) = fib(i) / 3\n             \
    \   fib(i - 1) = fib(i - 1) * 3\n            }\n            if (fib(i) % 5 ==\
    \ 0) {\n                fib(i) = fib(i) / 5\n                fib(i - 1) = fib(i\
    \ - 1) * 5\n            }\n            if (fib(i) % 7 == 0) {\n              \
    \  fib(i) = fib(i) / 7\n                fib(i - 1) = fib(i - 1) * 7\n        \
    \    }\n            if (fib(i) % 11 == 0) {\n                fib(i) = fib(i) /\
    \ 11\n                fib(i - 1) = fib(i - 1) * 11\n            }\n          \
    \  if (fib(i) % 13 == 0) {\n                fib(i) = fib(i) / 13\n           \
    \     fib(i - 1) = fib(i - 1) * 13\n            }\n            if (fib(i) % 17\
    \ == 0) {\n                fib(i) = fib(i) / 17\n                fib(i - 1) =\
    \ fib(i - 1) * 17\n            }\n            if (fib(i) % 19 == 0) {\n      \
    \          fib(i) = fib(i) / 19\n                fib(i - 1) = fib(i - 1) * 19\n\
    \            }\n            if (fib(i) % 23 == 0) {\n                fib(i) =\
    \ fib(i) / 23\n                fib(i - 1) = fib(i - 1) * 23\n            }\n \
    \           if (fib(i) % 29 == 0) {\n                fib(i) = fib(i)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8qiouitw.scala:75:0 ----------------------------\e\
    [0m\e[0m\n\e[31m75 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8qiouitw.scala:20:8\
    \ ---------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mwhile\e[0m (i\
    \ <= n) {\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m   |\e[0m        Found:\
    \    Unit\n\e[31m   |\e[0m        Required: Long\n\e[31m21 |\e[0m            fib\
    \ += fib(i - \e[31m1\e[0m) + fib(i - \e[31m2\e[0m)\n\e[31m22 |\e[0m          \
    \  \e[33mif\e[0m (fib(i) % \e[31m2\e[0m == \e[31m0\e[0m) {\n\e[31m23 |\e[0m  \
    \              fib(i) = fib(i) / \e[31m2\e[0m\n\e[31m24 |\e[0m               \
    \ fib(i - \e[31m1\e[0m) = fib(i - \e[31m1\e[0m) * \e[31m2\e[0m\n\e[31m25 |\e[0m\
    \            }\n\e[31m26 |\e[0m            \e[33mif\e[0m (fib(i) % \e[31m3\e[0m\
    \ == \e[31m0\e[0m) {\n\e[31m27 |\e[0m                fib(i) = fib(i) / \e[31m3\e\
    [0m\n\e[31m28 |\e[0m                fib(i - \e[31m1\e[0m) = fib(i - \e[31m1\e\
    [0m) * \e[31m3\e[0m\n\e[31m29 |\e[0m            }\n\e[31m30 |\e[0m           \
    \ \e[33mif\e[0m (fib(i) % \e[31m5\e[0m == \e[31m0\e[0m) {\n\e[31m31 |\e[0m   \
    \             fib(i) = fib(i) / \e[31m5\e[0m\n\e[31m32 |\e[0m                fib(i\
    \ - \e[31m1\e[0m) = fib(i - \e[31m1\e[0m) * \e[31m5\e[0m\n\e[31m33 |\e[0m    \
    \        }\n\e[31m34 |\e[0m            \e[33mif\e[0m (fib(i) % \e[31m7\e[0m ==\
    \ \e[31m0\e[0m) {\n\e[31m35 |\e[0m                fib(i) = fib(i) / \e[31m7\e\
    [0m\n\e[31m36 |\e[0m                fib(i - \e[31m1\e[0m) = fib(i - \e[31m1\e\
    [0m) * \e[31m7\e[0m\n\e[31m37 |\e[0m            }\n\e[31m38 |\e[0m           \
    \ \e[33mif\e[0m (fib(i) % \e[31m11\e[0m == \e[31m0\e[0m) {\n\e[31m39 |\e[0m  \
    \              fib(i) = fib(i) / \e[31m11\e[0m\n\e[31m40 |\e[0m              \
    \  fib(i - \e[31m1\e[0m) = fib(i - \e[31m1\e[0m) * \e[31m11\e[0m\n\e[31m41 |\e\
    [0m            }\n\e[31m42 |\e[0m            \e[33mif\e[0m (fib(i) % \e[31m13\e\
    [0m == \e[31m0\e[0m) {\n\e[31m43 |\e[0m                fib(i) = fib(i) / \e[31m13\e\
    [0m\n\e[31m44 |\e[0m                fib(i - \e[31m1\e[0m) = fib(i - \e[31m1\e\
    [0m) * \e[31m13\e[0m\n\e[31m45 |\e[0m            }\n\e[31m46 |\e[0m          \
    \  \e[33mif\e[0m (fib(i) % \e[31m17\e[0m == \e[31m0\e[0m) {\n"
  stdout: ''
  timestamp: 1659799046
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (i < n) {\n    \
    \        var f = fib(i - 1) + fib(i - 2);\n            if (isPrime(f)) {\n   \
    \             fib += f;\n                i += 1;\n            }\n        }\n \
    \       return fib(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkpzlq_ta.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(f)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0\n        var i = 2\n        while (count < n) {\n      \
    \      if (isPrime(i) && isFib(i)) {\n                count += 1\n           \
    \ }\n            i += 1\n        }\n        return i - 1\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprl8lzpcq.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(i) && isFib(i)) {\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799042
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8;\n        var i = 4;\n        while (i < n) {\n            fibs\
    \ += fibs(i - 1) + fibs(i - 2);\n            i += 1;\n        }\n        return\
    \ fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_dh8b_k7.scala:29)\n\tat Problem.main(tmp_dh8b_k7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799029
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib(i) = fib(i)\
    \ + 1\n            }\n            while (!isPrime(fib(i))) {\n               \
    \ fib(i) = fib(i) + 2\n            }\n            i += 1\n        }\n        return\
    \ fib(n - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt7gbqknj.scala:25:20 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            \e[33mwhile\e[0m (!isPrime(fib(i))) {\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpt7gbqknj.scala:30:19 --------------------\e[0m\e[0m\n\e[31m30\
    \ |\e[0m        \e[33mreturn\e[0m fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                   ^^^^^\e[0m\n\e[31m   |\e[0m                   Found:    Long\n\
    \e[31m   |\e[0m                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib.remove(i)\n\
    \            } else {\n                var j = 0\n                while (j < i)\
    \ {\n                    if (fib(i) % fib(j) == 0) {\n                       \
    \ fib.remove(i)\n                        j = i\n                    }\n      \
    \              j += 1\n                }\n            }\n            i += 1\n\
    \        }\n        fib(n - 1)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvnbi4efv.scala:36:12\
    \ --------------------\e[0m\e[0m\n\e[31m36 |\e[0m        fib(n - \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e[0m            Found:\
    \    Long\n\e[31m   |\e[0m            Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799044
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n < 2) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            for (i <- 3 to sqrt(n).toInt by 2) {\n                if (n % i ==\
    \ 0) return false\n            }\n            return true\n        }\n       \
    \ var a = 1L\n        var b = 1L\n        var c = 2L\n        var count = 2\n\
    \        while (count < n) {\n            a = b\n            b = c\n         \
    \   c = a + b\n            if (isPrime(c)) count += 1\n        }\n        return\
    \ c\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
    \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
    \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwd0841zm.scala:39)\n\tat Problem.main(tmpwd0841zm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799047
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 1L\n        while (count < n) {\n    \
    \        if (isPrime(fib(i))) count += 1\n            i += 1\n        }\n    \
    \    fib(i - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1xrlqmzz.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) count +=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp1xrlqmzz.scala:19:24 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                        ^^^\e[0m\n\e[31m   |\e[0m  \
    \                      Not found: fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp1xrlqmzz.scala:22:8 -------------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m        fib(i - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \   ^^^\e[0m\n\e[31m   |\e[0m        Not found: fib\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799032
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0\n        var i = 1\n        while (count < n) {\n      \
    \      val fib = fibonacci(i)\n            if (isPrime(fib)) count += 1\n    \
    \        i += 1\n        }\n        fibonacci(i - 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8pixx3vt.scala:19:22 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mval\e[0m \e[36mfib\e[0m = fibonacci(i)\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                   Not found: fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp8pixx3vt.scala:20:16 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (isPrime(fib)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp8pixx3vt.scala:23:8 -------------------------\e[0m\e[0m\n\e[31m23 |\e\
    [0m        fibonacci(i - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659799042
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var a = 2L; var b = 3L; var c = 5L; var i = 3L\n        while (i < n)\
    \ {\n            a = b; b = c; c = a + b\n            if (isPrime(c)) i += 1\n\
    \        }\n        c\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwnwmrdr6.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(c)) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799040
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1\n        var fib = 1\n        var fib_1 = 1\n        var fib_2\
    \ = 1\n        while (i < n) {\n            fib = fib_1 + fib_2\n            fib_2\
    \ = fib_1\n            fib_1 = fib\n            if (isPrime(fib)) i += 1\n   \
    \     }\n        fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps6yh0ank.scala:24:16 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (isPrime(fib)) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799042
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3;\n \
    \       var i = 2;\n        while (i <= n) {\n            val next = fibs(i -\
    \ 1) + fibs(i - 2);\n            if (isPrime(next)) {\n                fibs +=\
    \ next;\n                i += 1;\n            }\n        }\n        fibs(n - 1);\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjpl8w0ed.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(next)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjpl8w0ed.scala:26:13\
    \ --------------------\e[0m\e[0m\n\e[31m26 |\e[0m        fibs(n - \e[31m1\e[0m);\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799046
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var fib = 1L\n        var fib1 = 1L\n        var\
    \ fib2 = 1L\n        while (count < n) {\n            fib = fib1 + fib2\n    \
    \        fib2 = fib1\n            fib1 = fib\n            if (fib.isPrime) count\
    \ += 1\n        }\n        fib\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7z1yj6uu.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (fib.isPrime) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \              value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659799046
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var fib = 1L\n        var prev = 0L\n        while\
    \ (count < n) {\n            val temp = fib\n            fib += prev\n       \
    \     prev = temp\n            if (isPrime(fib)) count += 1\n        }\n     \
    \   fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt8ofw4bn.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (isPrime(fib)) count += \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799043
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i).isPrime) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpy3ze1fo5.scala:22:23 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (fib(i).isPrime) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                value isPrime is not a member of Long\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpy3ze1fo5.scala:24:12 --------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^\e[0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m\
    \            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (isPrime(fib(i))) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmheasizk.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpmheasizk.scala:24:12 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m            Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (i < n) {\n    \
    \        var fib_i = fib(i - 1) + fib(i - 2);\n            while (!isPrime(fib_i))\
    \ {\n                fib_i += fib(i - 1);\n            }\n            fib += fib_i;\n\
    \            i += 1;\n        }\n        return fib(n.toInt - 1);\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5_6ab8n3.scala:21:20 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mwhile\e[0m (!isPrime(fib_i)) {\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799044
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (i < n) {\n    \
    \        var f = fib(i - 1) + fib(i - 2);\n            if (f.isPrime) {\n    \
    \            fib += f;\n                i += 1;\n            }\n        }\n  \
    \      return fib(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpn659hcg5.scala:21:18 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (f.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659799046
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3;\n \
    \       var i = 2;\n        while (fibs.length < n) {\n            fibs += fibs(i\
    \ - 1) + fibs(i - 2);\n            i += 1;\n        }\n        return fibs(n.toInt\
    \ - 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7nvtzs28.scala:29)\n\tat Problem.main(tmp7nvtzs28.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799048
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (fib.size < n) {\n            fib += fib(i -\
    \ 1) + fib(i - 2)\n            i += 1\n        }\n        return fib(n - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpznclgg2c.scala:24:19\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mreturn\e[0m fib(n\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Found:    Long\n\e[31m   |\e[0m                 \
    \  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799047
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (i < n) {\n    \
    \        var j = fib(i - 1) + fib(i - 2);\n            while (!isPrime(j)) {\n\
    \                j += fib(i - 1);\n            }\n            fib += j;\n    \
    \        i += 1;\n        }\n        return fib(n.toInt - 1);\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0i3huqy_.scala:21:20 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mwhile\e[0m (!isPrime(j)) {\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            while (!isPrime(fib(i))) fib(i) += fib(i - 1)\n    \
    \        i += 1\n        }\n        fib(n.toInt - 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnakrtrht.scala:22:20 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mwhile\e[0m (!isPrime(fib(i))) fib(i)\
    \ += fib(i - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: isPrime\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799046
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1L\n        var j = 1L\n        var k = 1L\n        var count\
    \ = 0L\n        while (count < n) {\n            k = i + j\n            if (isPrime(k))\
    \ count += 1\n            i = j\n            j = k\n        }\n        return\
    \ k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
    \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
    \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpojgrtkbq.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799048
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var f1 = 2L; var f2 = 3L; var f3 = 5L; var i = 3L\n        while (i <\
    \ n) {\n            f1 = f2; f2 = f3; f3 = f1 + f2\n            if (f3.isPrime)\
    \ i += 1\n        }\n        f3\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdgei1ulx.scala:19:19 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (f3.isPrime) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \             value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659799050
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n <= 1) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            val sqrtN = sqrt(n).toLong\n            for (i <- 3L to sqrtN by\
    \ 2) {\n                if (n % i == 0) return false\n            }\n        \
    \    return true\n        }\n        var i = 1L\n        var fib = 1L\n      \
    \  var fibPrev = 1L\n        var count = 0L\n        while (count < n) {\n   \
    \         val temp = fib\n            fib += fibPrev\n            fibPrev = temp\n\
    \            if (isPrime(fib)) count += 1\n        }\n        return fib\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799053
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8;\n        var i = 4;\n        while (i < n) {\n            fibs\
    \ += fibs(i - 1) + fibs(i - 2);\n            i += 1;\n        }\n        return\
    \ fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_dh8b_k7.scala:29)\n\tat Problem.main(tmp_dh8b_k7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799029
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib : Long = 1\n        var prev : Long = 1\n        var count : Long\
    \ = 0\n        var result : Long = 0\n        while (count < n) {\n          \
    \  val temp = fib\n            fib += prev\n            prev = temp\n        \
    \    if (fib.isPrime) {\n                count += 1\n                result =\
    \ fib\n            }\n        }\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpnt8hh5j_.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (fib.isPrime) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659799051
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 1L\n        while (count < n) {\n    \
    \        i += 1\n            if (isPrime(i) && isFib(i)) count += 1\n        }\n\
    \        return i\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp460ichol.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (isPrime(i) && isFib(i)) count\
    \ += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799049
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new Fibonacci()\n        var i = 0\n        var x = 0L\n   \
    \     while (i < n) {\n            x = fib.next\n            if (isPrime(x)) i\
    \ += 1\n        }\n        return x\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyzuchvsu.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyzuchvsu.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(x)) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799049
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0\n        var i = 0\n        var fib = 0\n        while (count\
    \ < n) {\n            fib = fibonacci(i)\n            if (isPrime(fib)) count\
    \ += 1\n            i += 1\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdfn_zn7.scala:20:18 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            fib = fibonacci(i)\n\e[31m\e[31m   |\e[0m\
    \                  ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                  Not found:\
    \ fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdfn_zn7.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m\
    \ (isPrime(fib)) count += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799049
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (isPrime(fib(i))) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmheasizk.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpmheasizk.scala:24:12 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m            Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (i < n) {\n    \
    \        var f = fib(i - 1) + fib(i - 2);\n            if (isPrime(f)) {\n   \
    \             fib += f;\n                i += 1;\n            }\n        }\n \
    \       return fib(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkpzlq_ta.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(f)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (fib.length < n) {\n            fib += fib(i\
    \ - 1) + fib(i - 2)\n            i += 1\n        }\n        return fib(n - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfz5ov_3o.scala:24:19\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mreturn\e[0m fib(n\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Found:    Long\n\e[31m   |\e[0m                 \
    \  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799053
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1; var j = 1; var k = 2; var count = 0;\n        while (count\
    \ < n) {\n            if (isPrime(k)) {\n                count += 1\n        \
    \        if (count == n) return k\n            }\n            i = j; j = k; k\
    \ = i + j\n        }\n        return -1\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk944s9ak.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799049
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i).isPrime) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpy3ze1fo5.scala:22:23 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (fib(i).isPrime) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                value isPrime is not a member of Long\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpy3ze1fo5.scala:24:12 --------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^\e[0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m\
    \            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (isPrime(fib(i))) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmheasizk.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpmheasizk.scala:24:12 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m            Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0\n        var i = 2\n        while (count < n) {\n      \
    \      if (isPrime(i) && isFib(i)) {\n                count += 1\n           \
    \ }\n            i += 1\n        }\n        return i - 1\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprl8lzpcq.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(i) && isFib(i)) {\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799042
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (i <= n) {\n            fibs += fibs(i -\
    \ 1) + fibs(i - 2)\n            if (fibs(i) % 2 == 0) {\n                fibs.remove(i)\n\
    \            } else {\n                i += 1\n            }\n        }\n    \
    \    fibs(n - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpo15_rtyi.scala:28:13\
    \ --------------------\e[0m\e[0m\n\e[31m28 |\e[0m        fibs(n - \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799053
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        var j = 0\n        while (i <= n) {\n            var\
    \ next = fib(j) + fib(j + 1)\n            if (isPrime(next)) {\n             \
    \   fib += next\n                i += 1\n            }\n            j += 1\n \
    \       }\n        fib(n.toInt - 1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv3y5223d.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (isPrime(next)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799050
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n < 2) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            for (i <- 3 to sqrt(n).toInt by 2) {\n                if (n % i ==\
    \ 0) return false\n            }\n            return true\n        }\n       \
    \ var count = 0\n        var i = 1\n        while (count < n) {\n            i\
    \ += 1\n            if (isPrime(i) && isPrime(Fibonacci.fib(i))) count += 1\n\
    \        }\n        return Fibonacci.fib(i)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpghdd5qr2.scala:29:38 ------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m            \e[33mif\e[0m (isPrime(i) && isPrime(Fibonacci.fib(i)))\
    \ count += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                               \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                      Not\
    \ found: Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpghdd5qr2.scala:31:15\
    \ ------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mreturn\e[0m\
    \ Fibonacci.fib(i)\n\e[31m\e[31m   |\e[0m               ^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m               Not found: Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799051
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n < 2) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            for (i <- 3L to sqrt(n).toLong by 2) {\n                if (n % i\
    \ == 0) return false\n            }\n            return true\n        }\n    \
    \    var count = 0L\n        var i = 1L\n        while (count < n) {\n       \
    \     if (isPrime(i) && isPrime(i + 2)) count += 1\n            i += 1\n     \
    \   }\n        return i - 1\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpviy01a9b.scala:34)\n\tat Problem.main(tmpviy01a9b.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799054
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3;\n \
    \       var i = 2;\n        while (fibs.length < n) {\n            var fib = fibs(i\
    \ - 1) + fibs(i - 2);\n            if (isPrime(fib)) fibs += fib;\n          \
    \  i += 1;\n        }\n        return fibs(n - 1);\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpevbx3qgy.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(fib)) fibs += fib;\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpevbx3qgy.scala:24:20 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        \e[33mreturn\e[0m fibs(n - \e[31m1\e[0m);\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^\e[0m\n\e[31m   |\e[0m                    Found: \
    \   Long\n\e[31m   |\e[0m                    Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (i < n) {\n    \
    \        var j = fib(i - 1) + fib(i - 2);\n            while (!isPrime(j)) {\n\
    \                j += fib(i - 1);\n            }\n            fib += j;\n    \
    \        i += 1;\n        }\n        return fib(n.toInt - 1);\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0i3huqy_.scala:21:20 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mwhile\e[0m (!isPrime(j)) {\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 0L\n        var fib = 0L\n        while\
    \ (count < n) {\n            fib = fibonacci(i)\n            if (isPrime(fib))\
    \ count += 1\n            i += 1\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2i49nujw.scala:20:18 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            fib = fibonacci(i)\n\e[31m\e[31m   |\e[0m\
    \                  ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                  Not found:\
    \ fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2i49nujw.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m\
    \ (isPrime(fib)) count += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799052
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 1L\n        var fib = 0L\n        while\
    \ (count < n) {\n            fib = fibonacci(i)\n            if (isPrime(fib))\
    \ count += 1\n            i += 1\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4m72ddbs.scala:20:18 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            fib = fibonacci(i)\n\e[31m\e[31m   |\e[0m\
    \                  ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                  Not found:\
    \ fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4m72ddbs.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m\
    \ (isPrime(fib)) count += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799053
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1; var j = 1; var k = 1; var count = 0;\n        while (count\
    \ < n) {\n            k = i + j;\n            if (isPrime(k)) {\n            \
    \    count += 1;\n            }\n            i = j;\n            j = k;\n    \
    \    }\n        return k;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpybou7ofa.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799053
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (isPrime(fib(i))) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmheasizk.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpmheasizk.scala:24:12 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m            Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799027
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n < 2) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            for (i <- 3L to sqrt(n).toLong by 2) {\n                if (n % i\
    \ == 0) return false\n            }\n            return true\n        }\n    \
    \    var i = 0L\n        var fib = 0L\n        var fib1 = 1L\n        var fib2\
    \ = 1L\n        while (i < n) {\n            fib = fib1 + fib2\n            fib1\
    \ = fib2\n            fib2 = fib\n            if (isPrime(fib)) i += 1\n     \
    \   }\n        return fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799058
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n < 2) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            for (i <- 3 to sqrt(n).toInt by 2) {\n                if (n % i ==\
    \ 0) return false\n            }\n            return true\n        }\n       \
    \ var count = 0\n        var i = 0\n        while (count < n) {\n            i\
    \ += 1\n            if (isPrime(i) && isPrime(Fibonacci.fib(i))) count += 1\n\
    \        }\n        return Fibonacci.fib(i)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_kg22zdo.scala:29:38 ------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m            \e[33mif\e[0m (isPrime(i) && isPrime(Fibonacci.fib(i)))\
    \ count += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                               \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                      Not\
    \ found: Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_kg22zdo.scala:31:15\
    \ ------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mreturn\e[0m\
    \ Fibonacci.fib(i)\n\e[31m\e[31m   |\e[0m               ^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m               Not found: Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799054
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (isPrime(fib(i))) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmheasizk.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpmheasizk.scala:24:12 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m            Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new Queue[Long]()\n        fibs += 2\n        fibs += 3\n \
    \       var i = 2\n        while (i <= n) {\n            val fib = fibs(0) + fibs(1)\n\
    \            if (isPrime(fib)) {\n                i += 1\n                fibs\
    \ += fib\n            }\n            fibs.dequeue\n        }\n        fibs(0)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpotwa7lji.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799054
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var f1 = 2L; var f2 = 3L; var f3 = 5L; var i = 3L\n        while (i <\
    \ n) {\n            f1 = f2; f2 = f3; f3 = f1 + f2\n            if (isPrime(f3))\
    \ i += 1\n        }\n        f3\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp30ho8is5.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(f3)) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799054
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3;\n \
    \       var i = 2;\n        while (fibs.length < n) {\n            val next =\
    \ fibs(i - 1) + fibs(i - 2);\n            if (isPrime(next)) {\n             \
    \   fibs += next;\n            }\n            i += 1;\n        }\n        fibs(n.toInt\
    \ - 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpca4afnlj.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(next)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1; var j = 1; var k = 2; var count = 0\n        while (count <\
    \ n) {\n            if (isPrime(k)) {\n                count += 1\n          \
    \  }\n            val t = i + j\n            i = j; j = k; k = t\n        }\n\
    \        return k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwkxqk98t.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var f1 = 2L; var f2 = 3L; var f3 = 5L; var count = 3L\n        while (count\
    \ < n) {\n            f1 = f2; f2 = f3; f3 = f1 + f2\n            if (isPrime(f3))\
    \ count += 1\n        }\n        f3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqxt5cxzn.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(f3)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (isPrime(fib(i))) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmheasizk.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpmheasizk.scala:24:12 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m            Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3;\n    \
    \    var i = 2;\n        while (i <= n) {\n            fib += fib(i - 1) + fib(i\
    \ - 2);\n            if (fib(i) % 2 == 0) {\n                fib.remove(i);\n\
    \            } else if (isPrime(fib(i))) {\n                i += 1;\n        \
    \    } else {\n                fib.remove(i);\n            }\n        }\n    \
    \    return fib(n - 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2gwyx0mr.scala:23:23 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            } \e[33melse\e[0m \e[33mif\e[0m (isPrime(fib(i)))\
    \ {\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                       Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp2gwyx0mr.scala:29:19 --------------------\e[0m\e\
    [0m\n\e[31m29 |\e[0m        \e[33mreturn\e[0m fib(n - \e[31m1\e[0m);\n\e[31m\e\
    [31m   |\e[0m                   ^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \ Found:    Long\n\e[31m   |\e[0m                   Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659799058
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var f = 2L\n        var s = 3L\n        var i = 1L\n        var c = 0L\n\
    \        while (c < n) {\n            val t = f\n            f = s\n         \
    \   s = t + s\n            if (isPrime(s)) c += 1\n            i += 1\n      \
    \  }\n        return s\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmoky5x2g.scala:24:16 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (isPrime(s)) c += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799057
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1; var j = 1; var k = 2; var count = 0\n        while (count <\
    \ n) {\n            if (isPrime(k)) {\n                count += 1\n          \
    \  }\n            val temp = j\n            j = k\n            k = i + j\n   \
    \         i = temp\n        }\n        k\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpko1rjz0w.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799056
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib(i) += 1\n\
    \            }\n            while (!isPrime(fib(i))) {\n                fib(i)\
    \ += 2\n            }\n            i += 1\n        }\n        fib(n.toInt - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv65dcoiv.scala:25:20 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            \e[33mwhile\e[0m (!isPrime(fib(i))) {\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799057
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n < 2) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            for (i <- 3 to sqrt(n).toInt by 2) {\n                if (n % i ==\
    \ 0) return false\n            }\n            return true\n        }\n       \
    \ var a = 1L\n        var b = 1L\n        var count = 0L\n        while (count\
    \ < n) {\n            val c = a + b\n            if (isPrime(c)) count += 1\n\
    \            a = b\n            b = c\n        }\n        return b\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n  \
    \  assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799062
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8;\n        var i = 4;\n        while (i < n) {\n            fibs\
    \ += fibs(i - 1) + fibs(i - 2);\n            i += 1;\n        }\n        return\
    \ fibs(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_dh8b_k7.scala:29)\n\tat Problem.main(tmp_dh8b_k7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799029
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib(i) += 1\n\
    \            }\n            while (!isPrime(fib(i))) {\n                fib(i)\
    \ += 2\n            }\n            i += 1\n        }\n        fib(n.toInt - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv65dcoiv.scala:25:20 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            \e[33mwhile\e[0m (!isPrime(fib(i))) {\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799057
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1L\n        var j = 1L\n        var k = 2L\n        var count\
    \ = 0L\n        while (count < n) {\n            if (isPrime(k)) {\n         \
    \       count += 1\n            }\n            val t = k\n            k = i +\
    \ j\n            i = j\n            j = t\n        }\n        k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqpj1k_at.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799057
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var f1 = 2L; var f2 = 3L; var f3 = 5L; var i = 3L\n        while (i <\
    \ n) {\n            f1 = f2; f2 = f3; f3 = f1 + f2\n            if (f3.isPrime)\
    \ i += 1\n        }\n        f3\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdgei1ulx.scala:19:19 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (f3.isPrime) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \             value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659799050
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var f = new ArrayBuffer[Long]()\n        f += 2\n        f += 3\n    \
    \    var i = 2\n        while (i <= n) {\n            var j = f(f.length - 1)\
    \ + f(f.length - 2)\n            while (!isPrime(j)) {\n                j += f(f.length\
    \ - 1)\n            }\n            f += j\n            i += 1\n        }\n   \
    \     return f(n - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp34p01ct5.scala:22:20 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mwhile\e[0m (!isPrime(j)) {\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp34p01ct5.scala:28:17 --------------------\e[0m\e[0m\n\e[31m28\
    \ |\e[0m        \e[33mreturn\e[0m f(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                ^^^^^\e[0m\n\e[31m   |\e[0m                 Found:    Long\n\e\
    [31m   |\e[0m                 Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799061
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (i <= n) {\n            fibs += fibs(i -\
    \ 1) + fibs(i - 2)\n            if (fibs(i).isPrime) i += 1\n        }\n     \
    \   fibs(n - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp130xrdxw.scala:22:24 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (fibs(i).isPrime) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                value isPrime is not a member of Long\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp130xrdxw.scala:24:13 --------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m        fibs(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \         ^^^^^\e[0m\n\e[31m   |\e[0m             Found:    Long\n\e[31m   |\e\
    [0m             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799062
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1L\n        var j = 1L\n        var k = 2L\n        var count\
    \ = 0L\n        while (count < n) {\n            if (isPrime(k)) {\n         \
    \       count += 1\n            }\n            val t = i + j\n            i =\
    \ j\n            j = k\n            k = t\n        }\n        k\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb01bdtnq.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0\n        var i = 1\n        var fib = 0\n        while (count\
    \ < n) {\n            fib = fibonacci(i)\n            if (isPrime(fib)) count\
    \ += 1\n            i += 1\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplz908k6g.scala:20:18 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            fib = fibonacci(i)\n\e[31m\e[31m   |\e[0m\
    \                  ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                  Not found:\
    \ fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplz908k6g.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m\
    \ (isPrime(fib)) count += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 0\n        var fib = 0\n        var fib1 = 1\n        var fib2\
    \ = 1\n        while (i < n) {\n            fib = fib1 + fib2\n            fib1\
    \ = fib2\n            fib2 = fib\n            if (isPrime(fib)) i += 1\n     \
    \   }\n        return fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6222lk8d.scala:24:16 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (isPrime(fib)) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib(i) += 1\n\
    \            }\n            while (!isPrime(fib(i))) {\n                fib(i)\
    \ += 2\n            }\n            i += 1\n        }\n        fib(n.toInt - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv65dcoiv.scala:25:20 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            \e[33mwhile\e[0m (!isPrime(fib(i))) {\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799057
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var f = new ArrayBuffer[Long]()\n        f += 2\n        f += 3\n    \
    \    var i = 2\n        while (i <= n) {\n            var j = f(f.length - 1)\
    \ + f(f.length - 2)\n            while (!isPrime(j)) {\n                j += f(f.length\
    \ - 1)\n            }\n            f += j\n            i += 1\n        }\n   \
    \     return f(n - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp34p01ct5.scala:22:20 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mwhile\e[0m (!isPrime(j)) {\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp34p01ct5.scala:28:17 --------------------\e[0m\e[0m\n\e[31m28\
    \ |\e[0m        \e[33mreturn\e[0m f(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                ^^^^^\e[0m\n\e[31m   |\e[0m                 Found:    Long\n\e\
    [31m   |\e[0m                 Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799061
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new Fibonacci\n        var count = 0L\n        var result =\
    \ 0L\n        while (count < n) {\n            result = fib.next\n           \
    \ if (isPrime(result)) count += 1\n        }\n        return result\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n \
    \   assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n   \
    \ assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n   \
    \ assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0i82nqi3.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0i82nqi3.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(result)) count +=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799024
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3;\n \
    \       var i = 2;\n        while (fibs.length < n) {\n            fibs += fibs(i\
    \ - 1) + fibs(i - 2);\n            i += 1;\n        }\n        return fibs(n.toInt\
    \ - 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7nvtzs28.scala:29)\n\tat Problem.main(tmp7nvtzs28.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799048
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0\n        var i = 0\n        while (count < n) {\n      \
    \      i += 1\n            if (isPrime(fib(i))) count += 1\n        }\n      \
    \  fib(i)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo5dhobs1.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) count +=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpo5dhobs1.scala:20:24 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                        ^^^\e[0m\n\e[31m   |\e[0m  \
    \                      Not found: fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpo5dhobs1.scala:22:8 -------------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m        fib(i)\n\e[31m\e[31m   |\e[0m        ^^^\e[0m\n\e\
    [31m   |\e[0m        Not found: fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659799060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3;\n    \
    \    var i = 2;\n        while (i <= n) {\n            fib += fib(i - 1) + fib(i\
    \ - 2);\n            if (isPrime(fib(i))) i += 1;\n        }\n        fib(n.toInt\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe1zaxvuy.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) i += \e[31m1\e\
    [0m;\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799061
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var primeFibs = ListBuffer[Long]()\n        primeFibs += 2\n        primeFibs\
    \ += 3\n        var i = 2\n        var j = 3\n        var k = 5\n        while\
    \ (primeFibs.length < n) {\n            if (isPrime(k)) primeFibs += k\n     \
    \       i = j\n            j = k\n            k = i + j\n        }\n        primeFibs(n.toInt\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqug150_0.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (isPrime(k)) primeFibs += k\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799062
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (fibs.length < n) {\n            fibs +=\
    \ fibs(i - 1) + fibs(i - 2)\n            i += 1\n        }\n        fibs(n.toInt\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9i5n2u12.scala:30)\n\tat Problem.main(tmp9i5n2u12.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799043
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var f1 = 2L; var f2 = 3L; var f3 = 5L; var i = 3L\n        while (i <\
    \ n) {\n            f1 = f2; f2 = f3; f3 = f1 + f2\n            if (f3.isPrime)\
    \ i += 1\n        }\n        f3\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdgei1ulx.scala:19:19 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (f3.isPrime) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \             value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659799050
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1; var j = 1; var k = 1; var c = 0\n        while (c < n) {\n\
    \            val t = i + j\n            i = j; j = t\n            if (isPrime(t))\
    \ {\n                c += 1\n                k = t\n            }\n        }\n\
    \        k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgdzotkyq.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (isPrime(t)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib.remove(i)\n\
    \            } else {\n                var j = 0\n                while (j < i)\
    \ {\n                    if (fib(i) % fib(j) == 0) {\n                       \
    \ fib.remove(i)\n                        i -= 1\n                        j = i\n\
    \                    }\n                    j += 1\n                }\n      \
    \      }\n            i += 1\n        }\n        fib(n - 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc2x532u9.scala:37:12\
    \ --------------------\e[0m\e[0m\n\e[31m37 |\e[0m        fib(n - \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e[0m            Found:\
    \    Long\n\e[31m   |\e[0m            Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799064
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (fibs.length < n) {\n            fibs +=\
    \ fibs(i - 1) + fibs(i - 2)\n            i += 1\n        }\n        fibs(n.toInt\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9i5n2u12.scala:30)\n\tat Problem.main(tmp9i5n2u12.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799043
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib(i) += 1\n\
    \            }\n            while (!isPrime(fib(i))) {\n                fib(i)\
    \ += 2\n            }\n            i += 1\n        }\n        fib(n.toInt - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv65dcoiv.scala:25:20 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            \e[33mwhile\e[0m (!isPrime(fib(i))) {\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799057
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib(i) += 1\n\
    \            }\n            while (!isPrime(fib(i))) {\n                fib(i)\
    \ += 2\n            }\n            i += 1\n        }\n        fib(n.toInt - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv65dcoiv.scala:25:20 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            \e[33mwhile\e[0m (!isPrime(fib(i))) {\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799057
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (i < n) {\n    \
    \        var f = fib(i - 1) + fib(i - 2);\n            if (isPrime(f)) {\n   \
    \             fib += f;\n                i += 1;\n            }\n        }\n \
    \       return fib(n.toInt - 1);\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkpzlq_ta.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(f)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799025
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var fib = 1L\n        var prev = 0L\n        while\
    \ (count < n) {\n            val temp = fib\n            fib += prev\n       \
    \     prev = temp\n            if (fib.isPrime) count += 1\n        }\n      \
    \  fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0f3n_2ap.scala:23:20 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (fib.isPrime) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \              value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659799063
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 1L\n        while (count < n) {\n    \
    \        if (isPrime(fib(i))) count += 1\n            i += 1\n        }\n    \
    \    return fib(i - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmnb7rxbg.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) count +=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpmnb7rxbg.scala:19:24 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                        ^^^\e[0m\n\e[31m   |\e[0m  \
    \                      Not found: fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpmnb7rxbg.scala:22:15 ------------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m        \e[33mreturn\e[0m fib(i - \e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m               ^^^\e[0m\n\e[31m   |\e[0m               Not found:\
    \ fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659799061
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var f = new ArrayBuffer[Long]()\n        f += 2\n        f += 3\n    \
    \    var i = 2\n        var j = 3\n        while (i < n) {\n            j += 2\n\
    \            if (isPrime(j)) {\n                f += j\n                i += 1\n\
    \            }\n        }\n        return f(n.toInt - 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8oyke4fr.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (isPrime(j)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799062
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib(i) += 1\n\
    \            }\n            while (!isPrime(fib(i))) {\n                fib(i)\
    \ += 2\n            }\n            i += 1\n        }\n        fib(n.toInt - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv65dcoiv.scala:25:20 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            \e[33mwhile\e[0m (!isPrime(fib(i))) {\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799057
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (fibs.length < n) {\n            fibs +=\
    \ fibs(i - 1) + fibs(i - 2)\n            i += 1\n        }\n        return fibs(i\
    \ - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpez2qsu13.scala:28)\n\tat Problem.main(tmpez2qsu13.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799065
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var a = 2L; var b = 3L; var c = 5L; var i = 3L\n        while (i < n)\
    \ {\n            a = b; b = c; c = a + b\n            if (c.isPrime) i += 1\n\
    \        }\n        c\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpp7y2s1nq.scala:19:18 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (c.isPrime) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659799064
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1; var j = 1; var k = 2; var count = 0\n        while (count <\
    \ n) {\n            if (isPrime(k)) {\n                count += 1\n          \
    \  }\n            val t = i + j\n            i = j; j = k; k = t\n        }\n\
    \        k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3ijowxot.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799062
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (fibs.length < n) {\n            fibs +=\
    \ fibs(i - 1) + fibs(i - 2)\n            i += 1\n        }\n        return fibs(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphlud76rl.scala:24:20\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mreturn\e[0m fibs(n\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Found:    Long\n\e[31m   |\e[0m                \
    \    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799065
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new Fibonacci()\n        var i = 1\n        var count = 0\n\
    \        while (count < n) {\n            i = fib.next\n            if (isPrime(i))\
    \ count += 1\n        }\n        return i\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxy8j9hjg.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: type Fibonacci\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxy8j9hjg.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(i)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799064
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        fib += 5\n        fib += 13\n        fib += 89\n        var i = 5\n \
    \       while (i < n) {\n            var f = fib(i - 1) + fib(i - 2)\n       \
    \     while (!isPrime(f)) {\n                f += fib(i - 1)\n            }\n\
    \            fib += f\n            i += 1\n        }\n        return fib(n.toInt\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0uedmf80.scala:25:20 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            \e[33mwhile\e[0m (!isPrime(f)) {\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799064
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (fib.length < n) {\n            fib += fib(i\
    \ - 1) + fib(i - 2)\n            i += 1\n        }\n        fib(n.toInt - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2pcx4ulq.scala:30)\n\tat Problem.main(tmp2pcx4ulq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3; fib +=\
    \ 5; fib += 13; fib += 89;\n        var i = 5;\n        while (fib.length < n)\
    \ {\n            val a = fib(i - 1);\n            val b = fib(i - 2);\n      \
    \      val c = a + b;\n            if (isPrime(c)) {\n                fib += c;\n\
    \                i += 1;\n            }\n        }\n        fib(n.toInt - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphtfmzipq.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (isPrime(c)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799065
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n < 2) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            for (i <- 3 to sqrt(n).toInt by 2) {\n                if (n % i ==\
    \ 0) return false\n            }\n            return true\n        }\n       \
    \ var fib = new ArrayBuffer[Long]()\n        fib += 1\n        fib += 2\n    \
    \    var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) + fib(i\
    \ - 2)\n            if (isPrime(fib(i))) i += 1\n        }\n        return fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpptfg8fcu.scala:33:19\
    \ --------------------\e[0m\e[0m\n\e[31m33 |\e[0m        \e[33mreturn\e[0m fib(n\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Found:    Long\n\e[31m   |\e[0m                 \
    \  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0\n        var i = 1\n        var fib = 0\n        while (count\
    \ < n) {\n            fib = fibonacci(i)\n            if (isPrime(fib)) count\
    \ += 1\n            i += 1\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplz908k6g.scala:20:18 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            fib = fibonacci(i)\n\e[31m\e[31m   |\e[0m\
    \                  ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                  Not found:\
    \ fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplz908k6g.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m\
    \ (isPrime(fib)) count += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib.remove(i)\n\
    \            } else {\n                var j = 0\n                while (j < i)\
    \ {\n                    if (fib(i) % fib(j) == 0) {\n                       \
    \ fib.remove(i)\n                        i -= 1\n                        j = i\n\
    \                    }\n                    j += 1\n                }\n      \
    \      }\n            i += 1\n        }\n        fib(n - 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc2x532u9.scala:37:12\
    \ --------------------\e[0m\e[0m\n\e[31m37 |\e[0m        fib(n - \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e[0m            Found:\
    \    Long\n\e[31m   |\e[0m            Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799064
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (i <= n) {\n            val next = fibs(i\
    \ - 1) + fibs(i - 2)\n            if (isPrime(next)) {\n                fibs +=\
    \ next\n                i += 1\n            }\n        }\n        fibs(n - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp74amm63t.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(next)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp74amm63t.scala:27:13\
    \ --------------------\e[0m\e[0m\n\e[31m27 |\e[0m        fibs(n - \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799037
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       val fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (isPrime(fib(i))) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj7wbcj85.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpj7wbcj85.scala:24:12 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m            Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib.remove(i)\n\
    \            } else {\n                var j = 0\n                while (j < i)\
    \ {\n                    if (fib(i) % fib(j) == 0) {\n                       \
    \ fib.remove(i)\n                        i -= 1\n                        j = i\n\
    \                    }\n                    j += 1\n                }\n      \
    \      }\n            i += 1\n        }\n        fib(n - 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc2x532u9.scala:37:12\
    \ --------------------\e[0m\e[0m\n\e[31m37 |\e[0m        fib(n - \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e[0m            Found:\
    \    Long\n\e[31m   |\e[0m            Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799064
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n < 2) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            for (i <- 3L to sqrt(n).toLong by 2) {\n                if (n % i\
    \ == 0) return false\n            }\n            return true\n        }\n    \
    \    var i = 1L\n        var f = 1L\n        var s = 1L\n        var count = 0L\n\
    \        while (count < n) {\n            val t = f + s\n            f = s\n \
    \           s = t\n            if (isPrime(t)) count += 1\n        }\n       \
    \ return s\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799069
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1\n        var j = 1\n        var k = 0\n        var count = 0\n\
    \        while (count < n) {\n            k = i + j\n            if (isPrime(k))\
    \ count += 1\n            i = j\n            j = k\n        }\n        return\
    \ k\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
    \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
    \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqudu35z2.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(k)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799067
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       def isPrime(n : Long) : Boolean = {\n            if (n < 2) return false\n\
    \            if (n == 2) return true\n            if (n % 2 == 0) return false\n\
    \            for (i <- 3 to sqrt(n).toInt by 2) {\n                if (n % i ==\
    \ 0) return false\n            }\n            return true\n        }\n       \
    \ var a = 1L\n        var b = 1L\n        var c = 0L\n        var i = 0L\n   \
    \     while (i < n) {\n            c = a + b\n            a = b\n            b\
    \ = c\n            if (isPrime(c)) i += 1\n        }\n        return c\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799069
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]();\n        fib += 2; fib += 3;\n    \
    \    var i = 2;\n        while (fib.length < n) {\n            fib += fib(i -\
    \ 1) + fib(i - 2);\n            i += 1;\n        }\n        return fib(n.toInt\
    \ - 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnwbs9du0.scala:29)\n\tat Problem.main(tmpnwbs9du0.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799028
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3; fibs\
    \ += 5; fibs += 8; fibs += 13; fibs += 21; fibs += 34; fibs += 55; fibs += 89;\
    \ fibs += 144; fibs += 233; fibs += 377; fibs += 610; fibs += 987; fibs += 1597;\
    \ fibs += 2584; fibs += 4181; fibs += 6765; fibs += 10946; fibs += 17711; fibs\
    \ += 28657; fibs += 46368; fibs += 75025; fibs += 121393; fibs += 196418; fibs\
    \ += 317811; fibs += 514229; fibs += 832040; fibs += 1346269; fibs += 2178309;\
    \ fibs += 3524578; fibs += 5702887; fibs += 9227465; fibs += 14930352; fibs +=\
    \ 24157817; fibs += 39088169; fibs += 63245986; fibs += 102334155; fibs += 165580141;\
    \ fibs += 267914296; fibs += 433494437; fibs += 701408733; fibs += 1134903170;\
    \ fibs += 1836311903; fibs += 2971215073L; fibs += 4807526976L; fibs += 7778742049L;\
    \ fibs += 12586269025L; fibs += 20365011074L; fibs += 32951280099L; fibs += 53316291173L;\
    \ fibs += 86267571272L; fibs += 139583862445L; fibs += 225851433717L; fibs +=\
    \ 365435296162L; fibs += 591286729879L; fibs += 956722026041L; fibs += 1548008755920L;\
    \ fibs += 2504730781961L; fibs += 4052739537881L; fibs += 6557470319842L; fibs\
    \ += 10610209857723L; fibs += 17167680177565L; fibs += 27777890035288L; fibs +=\
    \ 44945570212853L;\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgsa1wben.scala:17:1139\
    \ ------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs += \e[31m2\e[0m; fibs\
    \ += \e[31m3\e[0m; fibs += \e[31m5\e[0m; fibs += \e[31m8\e[0m; fibs += \e[31m13\e\
    [0m; fibs += \e[31m21\e[0m; fibs += \e[31m34\e[0m; fibs += \e[31m55\e[0m; fibs\
    \ += \e[31m89\e[0m; fibs += \e[31m144\e[0m; fibs += \e[31m233\e[0m; fibs += \e\
    [31m377\e[0m; fibs += \e[31m610\e[0m; fibs += \e[31m987\e[0m; fibs += \e[31m1597\e\
    [0m; fibs += \e[31m2584\e[0m; fibs += \e[31m4181\e[0m; fibs += \e[31m6765\e[0m;\
    \ fibs += \e[31m10946\e[0m; fibs += \e[31m17711\e[0m; fibs += \e[31m28657\e[0m;\
    \ fibs += \e[31m46368\e[0m; fibs += \e[31m75025\e[0m; fibs += \e[31m121393\e[0m;\
    \ fibs += \e[31m196418\e[0m; fibs += \e[31m317811\e[0m; fibs += \e[31m514229\e\
    [0m; fibs += \e[31m832040\e[0m; fibs += \e[31m1346269\e[0m; fibs += \e[31m2178309\e\
    [0m; fibs += \e[31m3524578\e[0m; fibs += \e[31m5702887\e[0m; fibs += \e[31m9227465\e\
    [0m; fibs += \e[31m14930352\e[0m; fibs += \e[31m24157817\e[0m; fibs += \e[31m39088169\e\
    [0m; fibs += \e[31m63245986\e[0m; fibs += \e[31m102334155\e[0m; fibs += \e[31m165580141\e\
    [0m; fibs += \e[31m267914296\e[0m; fibs += \e[31m433494437\e[0m; fibs += \e[31m701408733\e\
    [0m; fibs += \e[31m1134903170\e[0m; fibs += \e[31m1836311903\e[0m; fibs += \e\
    [31m2971215073L\e[0m; fibs += \e[31m4807526976L\e[0m; fibs += \e[31m7778742049L\e\
    [0m; fibs += \e[31m12586269025L\e[0m; fibs += \e[31m20365011074L\e[0m; fibs +=\
    \ \e[31m32951280099L\e[0m; fibs += \e[31m53316291173L\e[0m; fibs += \e[31m86267571272L\e\
    [0m; fibs += \e[31m139583862445L\e[0m; fibs += \e[31m225851433717L\e[0m; fibs\
    \ += \e[31m365435296162L\e[0m; fibs += \e[31m591286729879L\e[0m; fibs += \e[31m956722026041L\e\
    [0m; fibs += \e[31m1548008755920L\e[0m; fibs += \e[31m2504730781961L\e[0m; fibs\
    \ += \e[31m4052739537881L\e[0m; fibs += \e[31m6557470319842L\e[0m; fibs += \e\
    [31m10610209857723L\e[0m; fibs += \e[31m17167680177565L\e[0m; fibs += \e[31m27777890035288L\e\
    [0m; fibs += \e[31m44945570212853L\e[0m;\n\e[31m\e[31m   |\e[0m              \
    \                                                                            \
    \                                                                            \
    \   "
  stdout: ''
  timestamp: 1659799027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var f = 1L\n        var g = 0L\n        var i = 0L\n        while (i <\
    \ n) {\n            val h = f + g\n            f = g\n            g = h\n    \
    \        if (isPrime(g)) i += 1\n        }\n        g\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpml50s29o.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (isPrime(g)) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799067
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3;\n \
    \       var i = 2;\n        while (i <= n) {\n            val fib = fibs(i - 1)\
    \ + fibs(i - 2);\n            if (isPrime(fib)) {\n                fibs += fib;\n\
    \                i += 1;\n            }\n        }\n        fibs(n - 1);\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjedriw7k.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(fib)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjedriw7k.scala:26:13\
    \ --------------------\e[0m\e[0m\n\e[31m26 |\e[0m        fibs(n - \e[31m1\e[0m);\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 1; fibs += 2;\n \
    \       var i = 2;\n        while (fibs.length < n) {\n            fibs += fibs(i\
    \ - 1) + fibs(i - 2);\n            i += 1;\n        }\n        return fibs(n -\
    \ 1);\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp07jdkfnf.scala:23:20\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mreturn\e[0m fibs(n\
    \ - \e[31m1\e[0m);\n\e[31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Found:    Long\n\e[31m   |\e[0m                \
    \    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]();\n        fibs += 2; fibs += 3;\n \
    \       var i = 2;\n        while (fibs.length < n) {\n            val fib = fibs(i\
    \ - 1) + fibs(i - 2);\n            if (isPrime(fib)) fibs += fib;\n          \
    \  i += 1;\n        }\n        fibs(n.toInt - 1);\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_hccy0x4.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (isPrime(fib)) fibs += fib;\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799067
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var f1 = 2L; var f2 = 3L; var f3 = 5L; var i = 3L\n        while (i <\
    \ n) {\n            f1 = f2; f2 = f3; f3 = f1 + f2\n            if (f3.isPrime)\
    \ i += 1\n        }\n        f3\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdgei1ulx.scala:19:19 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (f3.isPrime) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \             value isPrime is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659799050
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (fibs.length < n) {\n            fibs +=\
    \ fibs(i - 1) + fibs(i - 2)\n            i += 1\n        }\n        return fibs(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphlud76rl.scala:24:20\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mreturn\e[0m fibs(n\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Found:    Long\n\e[31m   |\e[0m                \
    \    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799065
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1; var j = 1; var k = 2; var count = 1\n        while (count <\
    \ n) {\n            val temp = j; j = k; k = i + j; i = temp\n            if (isPrime(k))\
    \ count += 1\n        }\n        k\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2f8uysku.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(k)) count += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       val primes = new PrimeSet(1000000)\n        var fib = new Fibonacci()\n\
    \        var count = 0\n        var result = 0L\n        while (count < n) {\n\
    \            result = fib.next\n            if (primes.contains(result)) count\
    \ += 1\n        }\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf3fpese3.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m1000000\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf3fpese3.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (i <= n) {\n            fibs += fibs(i -\
    \ 1) + fibs(i - 2)\n            i += 1\n        }\n        var j = fibs.length\
    \ - 1\n        while (j >= 0) {\n            if (isPrime(fibs(j))) return fibs(j)\n\
    \            j -= 1\n        }\n        return 0\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbtiyw760.scala:26:16 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            \e[33mif\e[0m (isPrime(fibs(j))) \e[33mreturn\e\
    [0m fibs(j)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fibs = new ArrayBuffer[Long]()\n        fibs += 2\n        fibs +=\
    \ 3\n        var i = 2\n        while (fibs.length < n) {\n            fibs +=\
    \ fibs(i - 1) + fibs(i - 2)\n            i += 1\n        }\n        fibs(i - 2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6zi1j1ei.scala:28)\n\tat Problem.main(tmp6zi1j1ei.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799069
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (fib(i) % 2 == 0) {\n                fib.remove(i)\n\
    \            } else {\n                var j = 0\n                while (j < i)\
    \ {\n                    if (fib(i) % fib(j) == 0) {\n                       \
    \ fib.remove(i)\n                        j = i\n                    }\n      \
    \              j += 1\n                }\n            }\n            i += 1\n\
    \        }\n        fib(n - 1)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvnbi4efv.scala:36:12\
    \ --------------------\e[0m\e[0m\n\e[31m36 |\e[0m        fib(n - \e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e[0m            Found:\
    \    Long\n\e[31m   |\e[0m            Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799044
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var count = 0L\n        var i = 0L\n        while (count < n) {\n    \
    \        i += 1\n            if (isPrime(i) && isFib(i)) count += 1\n        }\n\
    \        return i\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0aq8gkx2.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (isPrime(i) && isFib(i)) count\
    \ += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799031
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var i = 1; var j = 1; var k = 2; var count = 1; var result = 0L\n    \
    \    while (count <= n) {\n            if (isPrime(k)) {\n                result\
    \ = k\n                count += 1\n            }\n            k = i + j; i = j;\
    \ j = k\n        }\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptrpjdmgr.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (isPrime(k)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799068
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (i <= n) {\n            fib += fib(i - 1) +\
    \ fib(i - 2)\n            if (isPrime(fib(i))) i += 1\n        }\n        fib(n\
    \ - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmheasizk.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (isPrime(fib(i))) i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \          Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpmheasizk.scala:24:12 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        fib(n - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Found:    Long\n\e[31m   |\e[0m            Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799027
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       var fib = new ArrayBuffer[Long]()\n        fib += 2\n        fib += 3\n\
    \        var i = 2\n        while (fib.length < n) {\n            fib += fib(i\
    \ - 1) + fib(i - 2)\n            i += 1\n        }\n        fib(n.toInt - 1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2pcx4ulq.scala:30)\n\tat Problem.main(tmp2pcx4ulq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n  \
    \  // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    // 13\n\
    \    // >>> prime_fib(5)\n    // 89\n    def primeFib(n : Long) : Long = {\n \
    \       val primes = new PrimeSet(100000000)\n        var fib = new Fibonacci(100000000)\n\
    \        var result = 0L\n        var count = 0L\n        while (count < n) {\n\
    \            result = fib.next\n            if (primes.contains(result)) count\
    \ += 1\n        }\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3c2egyh9.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = \e[33mnew\e\
    [0m \e[35mPrimeSet\e[0m(\e[31m100000000\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \                ^^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ type PrimeSet\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3c2egyh9.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib\e[0m = \e[33mnew\e[0m \e[35mFibonacci\e[0m(\e[31m100000000\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \           Not found: type Fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799068

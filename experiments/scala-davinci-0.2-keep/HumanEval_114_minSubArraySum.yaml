name: HumanEval_114_minSubArraySum
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given an array of integers nums, find the minimum sum of any non-empty sub-array\n\
  \    // of nums.\n    // Example\n    // minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n\
  \    // minSubArraySum([-1, -2, -3]) == -6\n    def minSubArraySum(nums : List[Long])\
  \ : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(minSubArraySum((List[Long](2l.toLong,\
  \ 3l.toLong, 4l.toLong, 1l.toLong, 2l.toLong, 4l.toLong))) == (1l));\n    assert(minSubArraySum((List[Long](-1l.toLong,\
  \ -2l.toLong, -3l.toLong))) == (-6l));\n    assert(minSubArraySum((List[Long](-1l.toLong,\
  \ -2l.toLong, -3l.toLong, 2l.toLong, -10l.toLong))) == (-14l));\n    assert(minSubArraySum((List[Long](-9999999999999999l.toLong)))\
  \ == (-9999999999999999l));\n    assert(minSubArraySum((List[Long](0l.toLong, 10l.toLong,\
  \ 20l.toLong, 1000000l.toLong))) == (0l));\n    assert(minSubArraySum((List[Long](-1l.toLong,\
  \ -2l.toLong, -3l.toLong, 10l.toLong, -5l.toLong))) == (-6l));\n    assert(minSubArraySum((List[Long](100l.toLong,\
  \ -1l.toLong, -2l.toLong, -3l.toLong, 10l.toLong, -5l.toLong))) == (-6l));\n   \
  \ assert(minSubArraySum((List[Long](10l.toLong, 11l.toLong, 13l.toLong, 8l.toLong,\
  \ 3l.toLong, 4l.toLong))) == (3l));\n    assert(minSubArraySum((List[Long](100l.toLong,\
  \ -33l.toLong, 32l.toLong, -1l.toLong, 0l.toLong, -2l.toLong))) == (-33l));\n  \
  \  assert(minSubArraySum((List[Long](-10l.toLong))) == (-10l));\n    assert(minSubArraySum((List[Long](7l.toLong)))\
  \ == (7l));\n    assert(minSubArraySum((List[Long](1l.toLong, -1l.toLong))) == (-1l));\n\
  \    }\n\n}\n"
completions: ["        val n = nums.length\n        var minSum = Long.MaxValue\n \
    \       var sum = 0L\n        for (i <- 0 until n) {\n            sum += nums(i)\n\
    \            minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n   \
    \     }\n        minSum", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        // dp(i)\
    \ = min(dp(i - 1) + nums(i), nums(i))\n        // dp(0) = nums(0)\n        val\
    \ dp = Array.fill(nums.length)(0L)\n        dp(0) = nums(0)\n        for (i <-\
    \ 1 until nums.length) dp(i) = min(dp(i - 1) + nums(i), nums(i))\n        dp.min",
  "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n        dp(0)\
    \ = nums(0)\n        for (i <- 1 until n) {\n            dp(i) = min(dp(i - 1)\
    \ + nums(i), nums(i))\n        }\n        dp.min", "        val n = nums.length\n\
    \        val dp = Array.fill(n + 1)(0L)\n        for (i <- 1 to n) {\n       \
    \     dp(i) = min(dp(i - 1) + nums(i - 1), nums(i - 1))\n        }\n        dp.min",
  "        var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var minSum = Long.MaxValue\n        var sum\
    \ = 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum > 0) sum = 0\n        }\n        minSum",
  "        var minSum = Long.MaxValue\n        var sum = 0L\n        for (i <- nums)\
    \ {\n            sum += i\n            minSum = min(minSum, sum)\n           \
    \ if (sum < 0) sum = 0\n        }\n        minSum", "        val n = nums.length\n\
    \        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n        for (i <-\
    \ 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n      \
    \  }\n        dp.min", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        var\
    \ min = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n   \
    \         sum += num\n            min = min(min, sum)\n            if (sum > 0)\
    \ sum = 0\n        }\n        min", "        var minSum = Long.MaxValue\n    \
    \    var sum = 0L\n        for (num <- nums) {\n            sum += num\n     \
    \       minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n\
    \        minSum", "        var minSum = Long.MaxValue\n        var sum = 0L\n\
    \        for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  val n = nums.length\n        val dp = Array.fill(n + 1)(0L)\n        for (i\
    \ <- 1 to n) {\n            dp(i) = min(dp(i - 1) + nums(i - 1), nums(i - 1))\n\
    \        }\n        dp.min", "        var minSum = Long.MaxValue\n        var\
    \ sum = 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var min = Long.MaxValue\n        var sum = 0L\n\
    \        for (num <- nums) {\n            sum += num\n            min = min(min,\
    \ sum)\n            if (sum > 0) sum = 0\n        }\n        min", "        var\
    \ min = Long.MaxValue\n        var sum = 0L\n        for (i <- nums) {\n     \
    \       sum += i\n            if (sum < min) min = sum\n            if (sum >\
    \ 0) sum = 0\n        }\n        min", "        var minSum = Long.MaxValue\n \
    \       var sum = 0L\n        for (num <- nums) {\n            sum += num\n  \
    \          minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n     \
    \   }\n        minSum", "        var minSum = Long.MaxValue\n        var sum =\
    \ 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        val n = nums.length\n\
    \        val dp = Array.fill(n + 1)(0L)\n        var min = Long.MaxValue\n   \
    \     for (i <- 1 to n) {\n            dp(i) = max(dp(i - 1) + nums(i - 1), nums(i\
    \ - 1))\n            min = min(min, dp(i))\n        }\n        min", "       \
    \ val n = nums.length\n        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n\
    \        for (i <- 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i),\
    \ nums(i))\n        }\n        dp.min", "        var min = Long.MaxValue\n   \
    \     var sum = 0L\n        for (num <- nums) {\n            sum += num\n    \
    \        min = min(min, sum)\n            if (sum > 0) sum = 0\n        }\n  \
    \      min", "        var minSum = Long.MaxValue\n        var sum = 0L\n     \
    \   for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  var min = Long.MaxValue\n        var sum = 0L\n        for (i <- nums) {\n\
    \            sum += i\n            if (sum < min) min = sum\n            if (sum\
    \ > 0) sum = 0\n        }\n        min", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        val n = nums.length\n        val prefixSum =\
    \ Array.fill(n + 1)(0L)\n        for (i <- 0 until n) prefixSum(i + 1) = prefixSum(i)\
    \ + nums(i)\n        val minSum = Array.fill(n + 1)(0L)\n        for (i <- 1 to\
    \ n) minSum(i) = min(minSum(i - 1), prefixSum(i))\n        var result = Long.MaxValue\n\
    \        for (i <- 1 to n) result = min(result, prefixSum(i) - minSum(i))\n  \
    \      result", "        var minSum = Long.MaxValue\n        var currentSum =\
    \ 0L\n        for (num <- nums) {\n            currentSum += num\n           \
    \ minSum = min(minSum, currentSum)\n            if (currentSum > 0) currentSum\
    \ = 0\n        }\n        minSum", "        val n = nums.length\n        val dp\
    \ = Array.fill(n)(0L)\n        dp(0) = nums(0)\n        for (i <- 1 until n) {\n\
    \            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min",
  "        var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        val n = nums.length\n\
    \        val sums = new Array[Long](n + 1)\n        for (i <- 0 until n) {\n \
    \           sums(i + 1) = sums(i) + nums(i)\n        }\n        var minSum = Long.MaxValue\n\
    \        for (i <- 0 until n) {\n            for (j <- i + 1 to n) {\n       \
    \         val sum = sums(j) - sums(i)\n                if (sum < minSum) minSum\
    \ = sum\n            }\n        }\n        minSum", "        var min = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           min = min(min, sum)\n            if (sum > 0) sum = 0\n        }\n\
    \        min", "        var minSum = Long.MaxValue\n        var sum = 0L\n   \
    \     for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        var min = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           min = min min sum\n            if (sum > 0) sum = 0\n        }\n \
    \       min", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        val\
    \ n = nums.length\n        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n\
    \        for (i <- 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i),\
    \ nums(i))\n        }\n        dp.min", "        var minSum = nums.head\n    \
    \    var sum = 0L\n        for (num <- nums) {\n            sum += num\n     \
    \       if (sum < minSum) minSum = sum\n            if (sum > 0) sum = 0\n   \
    \     }\n        minSum", "        var minSum = Long.MaxValue\n        var sum\
    \ = 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var minSum = nums.head\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            if (sum < minSum) minSum = sum\n    \
    \        if (sum > 0) sum = 0\n        }\n        minSum", "        var minSum\
    \ = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n       \
    \     sum += num\n            minSum = min(minSum, sum)\n            if (sum <\
    \ 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var min = Long.MaxValue\n        var sum = 0L\n\
    \        for (num <- nums) {\n            sum += num\n            min = min min\
    \ sum\n            if (sum > 0) sum = 0\n        }\n        min", "        var\
    \ min = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n   \
    \         sum += num\n            min = min min sum\n            if (sum > 0)\
    \ sum = 0\n        }\n        min", "        var minSum = Long.MaxValue\n    \
    \    var sum = 0L\n        for (num <- nums) {\n            sum += num\n     \
    \       minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n\
    \        minSum", "        var minSum = Long.MaxValue\n        var sum = 0L\n\
    \        for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  val n = nums.length\n        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n\
    \        for (i <- 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i),\
    \ nums(i))\n        }\n        dp.min", "        val n = nums.length\n       \
    \ val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n        for (i <- 1 until\
    \ n) {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n        }\n   \
    \     dp.min", "        var minSum = Long.MaxValue\n        var sum = 0L\n   \
    \     for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  val n = nums.length\n        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n\
    \        for (i <- 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i),\
    \ nums(i))\n        }\n        dp.min", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        val\
    \ n = nums.length\n        val dp = Array.fill(n + 1)(0L)\n        for (i <- 1\
    \ to n) {\n            dp(i) = min(dp(i - 1) + nums(i - 1), nums(i - 1))\n   \
    \     }\n        dp.min", "        var minSum = Long.MaxValue\n        var sum\
    \ = 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var min = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            min = min min sum\n            if (sum\
    \ > 0) sum = 0\n        }\n        min", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum > 0) sum = 0\n    \
    \    }\n        minSum", "        var minSum = Long.MaxValue\n        var sum\
    \ = 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var sum = 0L\n        var min = Long.MaxValue\n        for (num <- nums)\
    \ {\n            sum += num\n            min = min(min, sum)\n            if (sum\
    \ > 0) sum = 0\n        }\n        min", "        var min = Long.MaxValue\n  \
    \      var sum = 0L\n        for (num <- nums) {\n            sum += num\n   \
    \         min = min min sum\n            if (sum > 0) sum = 0\n        }\n   \
    \     min", "        var minSum = Long.MaxValue\n        var sum = 0L\n      \
    \  for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  var min = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n\
    \            sum += num\n            min = min min sum\n            if (sum >\
    \ 0) sum = 0\n        }\n        min", "        val n = nums.length\n        val\
    \ dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n        for (i <- 1 until n)\
    \ {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n        }\n      \
    \  dp.min", "        var minSum = Long.MaxValue\n        var sum = 0L\n      \
    \  for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum > 0) sum = 0\n        }\n        minSum", "      \
    \  var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum > 0) sum = 0\n        }\n        minSum", "        var min = Long.MaxValue\n\
    \        var sum = 0L\n        for (i <- nums) {\n            sum += i\n     \
    \       if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n\
    \        min", "        val n = nums.length\n        val dp = Array.fill(n + 1)(0L)\n\
    \        for (i <- 1 to n) {\n            dp(i) = min(dp(i - 1) + nums(i - 1),\
    \ nums(i - 1))\n        }\n        dp.min", "        val n = nums.length\n   \
    \     val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n        for (i <- 1\
    \ until n) {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n        }\n\
    \        dp.min", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        var\
    \ minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n\
    \            sum += num\n            minSum = min(minSum, sum)\n            if\
    \ (sum < 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var minSum = Long.MaxValue\n        var sum\
    \ = 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        var min = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           min = min min sum\n            if (sum > 0) sum = 0\n        }\n \
    \       min", "        var minSum = Long.MaxValue\n        var sum = 0L\n    \
    \    for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  var min = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n\
    \            sum += num\n            min = min min sum\n            if (sum >\
    \ 0) sum = 0\n        }\n        min", "        var min = Long.MaxValue\n    \
    \    var sum = 0L\n        for (num <- nums) {\n            sum += num\n     \
    \       min = min min sum\n            if (sum > 0) sum = 0\n        }\n     \
    \   min", "        var minSum = Long.MaxValue\n        var sum = 0L\n        for\
    \ (num <- nums) {\n            sum += num\n            minSum = min(minSum, sum)\n\
    \            if (sum < 0) sum = 0\n        }\n        minSum", "        var min\
    \ = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n       \
    \     sum += num\n            min = min(min, sum)\n            if (sum < 0) sum\
    \ = 0\n        }\n        min", "        val n = nums.length\n        val dp =\
    \ Array.fill(n)(0L)\n        dp(0) = nums(0)\n        for (i <- 1 until n) {\n\
    \            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min",
  "        var min = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            min = min min sum\n            if (sum\
    \ > 0) sum = 0\n        }\n        min", "        var min = Long.MaxValue\n  \
    \      var sum = 0L\n        for (num <- nums) {\n            sum += num\n   \
    \         min = min min sum\n            if (sum > 0) sum = 0\n        }\n   \
    \     min", "        val n = nums.length\n        val sum = Array.fill(n)(0L)\n\
    \        var min = Long.MaxValue\n        for (i <- 0 until n) {\n           \
    \ sum(i) = nums(i) + (if (i == 0) 0 else sum(i - 1))\n            if (i > 0) min\
    \ = min min (sum(i) - sum(i - 1))\n        }\n        for (i <- 0 until n) {\n\
    \            for (j <- i + 1 until n) {\n                min = min min (sum(j)\
    \ - sum(i))\n            }\n        }\n        min", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var minSum = Long.MaxValue\n        var sum\
    \ = 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var minSum = Long.MaxValue\n        var sum\
    \ = 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        var min = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           min = min(min, sum)\n            if (sum < 0) sum = 0\n        }\n\
    \        min", "        val n = nums.length\n        val sum = Array.fill(n)(0L)\n\
    \        sum(0) = nums(0)\n        for (i <- 1 until n) sum(i) = sum(i - 1) +\
    \ nums(i)\n        val min = Array.fill(n)(0L)\n        min(0) = sum(0)\n    \
    \    for (i <- 1 until n) min(i) = min(i - 1) min sum(i)\n        var result =\
    \ Long.MaxValue\n        for (i <- 0 until n) result = result min (sum(i) - min(i))\n\
    \        result", "        val n = nums.length\n        val dp = Array.fill(n\
    \ + 1)(0L)\n        for (i <- 1 to n) {\n            dp(i) = min(dp(i - 1) + nums(i\
    \ - 1), nums(i - 1))\n        }\n        dp.min", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var minSum = Long.MaxValue\n        var sum\
    \ = 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var min = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            min = min min sum\n            if (sum\
    \ > 0) sum = 0\n        }\n        min", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        var\
    \ minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n\
    \            sum += num\n            minSum = min(minSum, sum)\n            if\
    \ (sum < 0) sum = 0\n        }\n        minSum", "        var min = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           min = min min sum\n            if (sum > 0) sum = 0\n        }\n \
    \       min", "        var minSum = Long.MaxValue\n        var sum = 0L\n    \
    \    for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  var minSum = Long.MaxValue\n        var sum = 0L\n        for (i <- nums) {\n\
    \            sum += i\n            minSum = min(minSum, sum)\n            if (sum\
    \ < 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        var\
    \ min = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n   \
    \         sum += num\n            min = min min sum\n            if (sum > 0)\
    \ sum = 0\n        }\n        min", "        var minSum = Long.MaxValue\n    \
    \    var sum = 0L\n        for (num <- nums) {\n            sum += num\n     \
    \       minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n\
    \        minSum", "        var min = Long.MaxValue\n        var sum = 0L\n   \
    \     for (num <- nums) {\n            sum += num\n            min = min min sum\n\
    \            if (sum > 0) sum = 0\n        }\n        min", "        val n = nums.length\n\
    \        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n        for (i <-\
    \ 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n      \
    \  }\n        dp.min", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        var min = dp(0)\n        for (i <- 1 until n)\
    \ {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n            min =\
    \ min(min, dp(i))\n        }\n        min", "        var min = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           min = min min sum\n            if (sum > 0) sum = 0\n        }\n \
    \       min", "        var minSum = Long.MaxValue\n        var sum = 0L\n    \
    \    for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  val n = nums.length\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0L\n        for (i <- 0 until n) {\n            sum += nums(i)\n           \
    \ minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n   \
    \     minSum", "        var min = Long.MaxValue\n        var sum = 0L\n      \
    \  for (num <- nums) {\n            sum += num\n            min = min min sum\n\
    \            if (sum > 0) sum = 0\n        }\n        min", "        var minSum\
    \ = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n       \
    \     sum += num\n            minSum = min(minSum, sum)\n            if (sum <\
    \ 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum > 0) sum = 0\n    \
    \    }\n        minSum", "        var min = Long.MaxValue\n        var sum = 0L\n\
    \        for (num <- nums) {\n            sum += num\n            min = min min\
    \ sum\n            if (sum > 0) sum = 0\n        }\n        min", "        var\
    \ minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n\
    \            sum += num\n            minSum = min(minSum, sum)\n            if\
    \ (sum < 0) sum = 0\n        }\n        minSum", "        val n = nums.length\n\
    \        var minSum = Long.MaxValue\n        var sum = 0L\n        for (i <- 0\
    \ until n) {\n            sum += nums(i)\n            minSum = min(minSum, sum)\n\
    \            if (sum < 0) sum = 0\n        }\n        minSum", "        val n\
    \ = nums.length\n        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n\
    \        for (i <- 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i),\
    \ nums(i))\n        }\n        dp.min", "        val n = nums.length\n       \
    \ val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n        for (i <- 1 until\
    \ n) {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n        }\n   \
    \     dp.min", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        var min = dp(0)\n        for (i <- 1 until n)\
    \ {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n            min =\
    \ min(min, dp(i))\n        }\n        min", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        var\
    \ minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n\
    \            sum += num\n            minSum = min(minSum, sum)\n            if\
    \ (sum < 0) sum = 0\n        }\n        minSum", "        var min = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           min = min min sum\n            if (sum > 0) sum = 0\n        }\n \
    \       min", "        var minSum = Long.MaxValue\n        var sum = 0L\n    \
    \    for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum > 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (i <- nums) {\n            sum += i\n     \
    \       minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n\
    \        minSum", "        var minSum = Long.MaxValue\n        var sum = 0L\n\
    \        for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  val n = nums.length\n        var minSum = Long.MaxValue\n        var sum =\
    \ 0L\n        for (i <- 0 until n) {\n            sum += nums(i)\n           \
    \ minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n   \
    \     minSum", "        var min = Long.MaxValue\n        var sum = 0L\n      \
    \  for (num <- nums) {\n            sum += num\n            min = min(min, sum)\n\
    \            if (sum > 0) sum = 0\n        }\n        min", "        val n = nums.length\n\
    \        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n        for (i <-\
    \ 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n      \
    \  }\n        dp.min", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        val\
    \ n = nums.length\n        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n\
    \        for (i <- 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i),\
    \ nums(i))\n        }\n        dp.min", "        var min = Long.MaxValue\n   \
    \     var sum = 0L\n        for (i <- nums) {\n            sum += i\n        \
    \    if (sum < min) min = sum\n            if (sum > 0) sum = 0\n        }\n \
    \       min", "        var minSum = Long.MaxValue\n        var sum = 0L\n    \
    \    for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  var min = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n\
    \            sum += num\n            min = min min sum\n            if (sum >\
    \ 0) sum = 0\n        }\n        min", "        val n = nums.length\n        val\
    \ sums = Array.fill(n + 1)(0L)\n        for (i <- 1 to n) sums(i) = sums(i - 1)\
    \ + nums(i - 1)\n        var min = Long.MaxValue\n        for (i <- 0 to n) {\n\
    \            for (j <- i + 1 to n) {\n                min = min(min, sums(j) -\
    \ sums(i))\n            }\n        }\n        min", "        val n = nums.length\n\
    \        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n        for (i <-\
    \ 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n      \
    \  }\n        dp.min", "        var minSum = Long.MaxValue\n        var sum =\
    \ 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var min = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            min = min min sum\n            if (sum\
    \ > 0) sum = 0\n        }\n        min", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var minSum = Long.MaxValue\n        var sum\
    \ = 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var min = Long.MaxValue\n        var sum = 0L\n\
    \        for (num <- nums) {\n            sum += num\n            min = min min\
    \ sum\n            if (sum > 0) sum = 0\n        }\n        min", "        var\
    \ minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n\
    \            sum += num\n            minSum = min(minSum, sum)\n            if\
    \ (sum < 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (i <- nums) {\n            sum += i\n     \
    \       minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n\
    \        minSum", "        var minSum = Long.MaxValue\n        var sum = 0L\n\
    \        for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  val n = nums.length\n        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n\
    \        for (i <- 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i),\
    \ nums(i))\n        }\n        dp.min", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var minSum = Long.MaxValue\n        var sum\
    \ = 0L\n        for (i <- nums) {\n            sum += i\n            minSum =\
    \ min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        var min = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           min = min min sum\n            if (sum > 0) sum = 0\n        }\n \
    \       min", "        var minSum = Long.MaxValue\n        var sum = 0L\n    \
    \    for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  var min = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n\
    \            sum += num\n            min = min min sum\n            if (sum >\
    \ 0) sum = 0\n        }\n        min", "        var minSum = Long.MaxValue\n \
    \       var sum = 0L\n        for (num <- nums) {\n            sum += num\n  \
    \          minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n     \
    \   }\n        minSum", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        val\
    \ n = nums.length\n        var min = Long.MaxValue\n        var sum = 0L\n   \
    \     for (i <- 0 until n) {\n            sum += nums(i)\n            min = min\
    \ min sum\n            if (sum > 0) sum = 0\n        }\n        min", "      \
    \  val n = nums.length\n        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n\
    \        for (i <- 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i),\
    \ nums(i))\n        }\n        dp.min", "        val n = nums.length\n       \
    \ val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n        for (i <- 1 until\
    \ n) {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n        }\n   \
    \     dp.min", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        val\
    \ n = nums.length\n        val sums = Array.fill(n + 1)(0L)\n        for (i <-\
    \ 1 to n) sums(i) = sums(i - 1) + nums(i - 1)\n        var min = Long.MaxValue\n\
    \        for (i <- 0 to n) {\n            for (j <- i + 1 to n) {\n          \
    \      min = min(min, sums(j) - sums(i))\n            }\n        }\n        min",
  "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n        dp(0)\
    \ = nums(0)\n        for (i <- 1 until n) {\n            dp(i) = min(dp(i - 1)\
    \ + nums(i), nums(i))\n        }\n        dp.min", "        var min = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           min = min min sum\n            if (sum > 0) sum = 0\n        }\n \
    \       min", "        val dp = Array.fill(nums.length)(0L)\n        dp(0) = nums(0)\n\
    \        for (i <- 1 until nums.length) {\n            dp(i) = min(dp(i - 1) +\
    \ nums(i), nums(i))\n        }\n        dp.min", "        val n = nums.length\n\
    \        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n        for (i <-\
    \ 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n      \
    \  }\n        dp.min", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        var\
    \ min = Long.MaxValue\n        var sum = 0L\n        for (i <- nums) {\n     \
    \       sum += i\n            if (sum < min) min = sum\n            if (sum >\
    \ 0) sum = 0\n        }\n        min", "        val n = nums.length\n        val\
    \ dp = Array.fill(n + 1)(0L)\n        for (i <- 1 to n) {\n            dp(i) =\
    \ dp(i - 1) + nums(i - 1)\n        }\n        var min = dp(n)\n        for (i\
    \ <- 1 to n) {\n            for (j <- i to n) {\n                min = min min\
    \ (dp(j) - dp(i - 1))\n            }\n        }\n        min", "        var minSum\
    \ = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n       \
    \     sum += num\n            minSum = min(minSum, sum)\n            if (sum <\
    \ 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var min = Long.MaxValue\n        var sum = 0L\n\
    \        for (num <- nums) {\n            sum += num\n            min = min(min,\
    \ sum)\n            if (sum > 0) sum = 0\n        }\n        min", "        var\
    \ minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n\
    \            sum += num\n            minSum = min(minSum, sum)\n            if\
    \ (sum > 0) sum = 0\n        }\n        minSum", "        val n = nums.length\n\
    \        val dp = Array.fill(n)(0L)\n        dp(0) = nums(0)\n        for (i <-\
    \ 1 until n) {\n            dp(i) = min(dp(i - 1) + nums(i), nums(i))\n      \
    \  }\n        dp.min", "        var min = Long.MaxValue\n        var sum = 0L\n\
    \        for (num <- nums) {\n            sum += num\n            min = min(min,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        min", "        var\
    \ minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n\
    \            sum += num\n            minSum = min(minSum, sum)\n            if\
    \ (sum < 0) sum = 0\n        }\n        minSum", "        val n = nums.length\n\
    \        val sum = new Array[Long](n)\n        sum(0) = nums(0)\n        for (i\
    \ <- 1 until n) sum(i) = sum(i - 1) + nums(i)\n        var min = sum(0)\n    \
    \    for (i <- 0 until n) {\n            for (j <- i until n) {\n            \
    \    val s = sum(j) - sum(i) + nums(i)\n                if (s < min) min = s\n\
    \            }\n        }\n        min", "        var min = Long.MaxValue\n  \
    \      var sum = 0L\n        for (num <- nums) {\n            sum += num\n   \
    \         min = min(min, sum)\n            if (sum > 0) sum = 0\n        }\n \
    \       min", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        var\
    \ minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n\
    \            sum += num\n            minSum = min(minSum, sum)\n            if\
    \ (sum < 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var minSum = Long.MaxValue\n        var sum\
    \ = 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        val n = nums.length\n\
    \        val dp = Array.fill(n + 1)(0L)\n        var min = Long.MaxValue\n   \
    \     for (i <- 1 to n) {\n            dp(i) = max(dp(i - 1) + nums(i - 1), nums(i\
    \ - 1))\n            min = min(min, dp(i))\n        }\n        min", "       \
    \ var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        var min = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           min = min(min, sum)\n            if (sum < 0) sum = 0\n        }\n\
    \        min", "        var minSum = Long.MaxValue\n        var sum = 0L\n   \
    \     for (num <- nums) {\n            sum += num\n            minSum = min(minSum,\
    \ sum)\n            if (sum < 0) sum = 0\n        }\n        minSum", "      \
    \  var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var min = Long.MaxValue\n        var sum = 0L\n\
    \        for (num <- nums) {\n            sum += num\n            min = min min\
    \ sum\n            if (sum > 0) sum = 0\n        }\n        min", "        var\
    \ minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums) {\n\
    \            sum += num\n            minSum = min(minSum, sum)\n            if\
    \ (sum < 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        var minSum = Long.MaxValue\n        var sum\
    \ = 0L\n        for (num <- nums) {\n            sum += num\n            minSum\
    \ = min(minSum, sum)\n            if (sum < 0) sum = 0\n        }\n        minSum",
  "        var minSum = Long.MaxValue\n        var sum = 0L\n        for (num <- nums)\
    \ {\n            sum += num\n            minSum = min(minSum, sum)\n         \
    \   if (sum < 0) sum = 0\n        }\n        minSum", "        var minSum = Long.MaxValue\n\
    \        var sum = 0L\n        for (num <- nums) {\n            sum += num\n \
    \           minSum = min(minSum, sum)\n            if (sum < 0) sum = 0\n    \
    \    }\n        minSum", "        val n = nums.length\n        val dp = Array.fill(n)(0L)\n\
    \        dp(0) = nums(0)\n        for (i <- 1 until n) {\n            dp(i) =\
    \ min(dp(i - 1) + nums(i), nums(i))\n        }\n        dp.min", "        var\
    \ minSum = Long.MaxValue\n        var currentSum = 0L\n        for (num <- nums)\
    \ {\n            currentSum += num\n            minSum = min(minSum, currentSum)\n\
    \            if (currentSum > 0) currentSum = 0\n        }\n        minSum", " \
    \       val sums = new Array[Long](nums.length)\n        sums(0) = nums(0)\n \
    \       for (i <- 1 until nums.length) sums(i) = sums(i - 1) + nums(i)\n     \
    \   val min = new Array[Long](nums.length)\n        min(0) = nums(0)\n       \
    \ for (i <- 1 until nums.length) min(i) = min(i - 1) min sums(i)\n        min.min"]
stop_tokens:
- "\n    }\n"

name: HumanEval_18_how_many_times
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Find how many times a given substring can be found in the original string.\
  \ Count overlaping cases.\n    // >>> how_many_times('', 'a')\n    // 0\n    //\
  \ >>> how_many_times('aaa', 'a')\n    // 3\n    // >>> how_many_times('aaaa', 'aa')\n\
  \    // 3\n    def howManyTimes(string : String, substring : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(howManyTimes((\"\"\
  ), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
  \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
  john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
completions: ["        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        var i = 0\n\
    \        while (i < string.length) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count += 1\n                i += substring.length\n     \
    \       }\n            else i += 1\n        }\n        count", "        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        count", "        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        count", "        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        var i = 0\n\
    \        while (i < string.length) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count += 1\n                i += substring.length\n     \
    \       }\n            else i += 1\n        }\n        count", "        var count\
    \ = 0L\n        var index = 0\n        while (index != -1) {\n            index\
    \ = string.indexOf(substring, index)\n            if (index != -1) {\n       \
    \         count += 1\n                index += 1\n            }\n        }\n \
    \       count", "        var count = 0\n        for (i <- 0 to string.length -\
    \ substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        count", "        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0L\n        var i = 0\n        while (i < string.length) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count += 1\n                i += substring.length\n            } else i +=\
    \ 1\n        }\n        count", "        var count = 0\n        for (i <- 0 to\
    \ string.length - substring.length) {\n            if (string.substring(i, i +\
    \ substring.length) == substring) count += 1\n        }\n        count", "   \
    \     if (string.length < substring.length) return 0\n        if (string.length\
    \ == substring.length) return if (string == substring) 1 else 0\n        if (substring.length\
    \ == 0) return 0\n        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        return count", "        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        count", "        var count = 0\n        var index = 0\n    \
    \    while (index != -1) {\n            index = string.indexOf(substring, index)\n\
    \            if (index != -1) {\n                count += 1\n                index\
    \ += 1\n            }\n        }\n        count", "        if (string.length <\
    \ substring.length) return 0\n        if (string.length == substring.length) return\
    \ if (string == substring) 1 else 0\n        var count = 0\n        for (i <-\
    \ 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        return count",
  "        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        if (string.length < substring.length)\
    \ return 0\n        if (string.length == substring.length) return if (string ==\
    \ substring) 1 else 0\n        val n = string.length\n        val m = substring.length\n\
    \        val dp = Array.ofDim[Long](n + 1, m + 1)\n        for (i <- 0 to n) dp(i)(0)\
    \ = 1\n        for (i <- 1 to n) {\n            for (j <- 1 to m) {\n        \
    \        if (string(i - 1) == substring(j - 1)) dp(i)(j) = dp(i - 1)(j - 1) +\
    \ dp(i - 1)(j)\n                else dp(i)(j) = dp(i - 1)(j)\n            }\n\
    \        }\n        dp(n)(m)", "        if (string.length < substring.length)\
    \ return 0\n        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        return count", "        var count = 0\n        for\
    \ (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        if (string.length < substring.length)\
    \ 0\n        else {\n            val (first, rest) = string.splitAt(substring.length)\n\
    \            if (first == substring) 1 + howManyTimes(rest, substring)\n     \
    \       else howManyTimes(rest, substring)\n        }", "        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        if (string.length < substring.length)\
    \ return 0\n        if (string.length == substring.length) return if (string ==\
    \ substring) 1 else 0\n        if (substring.length == 0) return 0\n        var\
    \ count = 0\n        for (i <- 0 to string.length - substring.length) {\n    \
    \        if (string.substring(i, i + substring.length) == substring) count +=\
    \ 1\n        }\n        return count", "        val n = string.length\n      \
    \  val m = substring.length\n        var count = 0\n        for (i <- 0 to n -\
    \ m) {\n            if (string.substring(i, i + m) == substring) count += 1\n\
    \        }\n        count", "        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        count", "        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        return count",
  "        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        if (string.length < substring.length)\
    \ return 0\n        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        return count", "        var count = 0\n        var\
    \ index = 0\n        while(index < string.length) {\n            if(string.substring(index).startsWith(substring))\
    \ {\n                count += 1\n                index += substring.length\n \
    \           }\n            else index += 1\n        }\n        count", "     \
    \   var count = 0\n        var i = 0\n        while (i < string.length) {\n  \
    \          if (string.substring(i).startsWith(substring)) {\n                count\
    \ += 1\n                i += substring.length\n            }\n            else\
    \ i += 1\n        }\n        count", "        var count = 0\n        for (i <-\
    \ 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length == 0 || substring.length == 0) return 0\n        var\
    \ count = 0\n        var i = 0\n        while (i < string.length) {\n        \
    \    if (string.substring(i).startsWith(substring)) {\n                count +=\
    \ 1\n                i += substring.length\n            }\n            else i\
    \ += 1\n        }\n        count", "        val n = string.length\n        val\
    \ m = substring.length\n        var count = 0\n        for (i <- 0 to n - m) {\n\
    \            var flag = true\n            for (j <- 0 until m) {\n           \
    \     if (string(i + j) != substring(j)) {\n                    flag = false\n\
    \                    break\n                }\n            }\n            if (flag)\
    \ count += 1\n        }\n        count", "        var count = 0\n        for (i\
    \ <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        var i = 0\n\
    \        while (i < string.length) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count += 1\n                i += substring.length\n     \
    \       } else {\n                i += 1\n            }\n        }\n        count",
  "        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        def recurse(string : String, substring\
    \ : String, count : Long) : Long = {\n            if (string.length < substring.length)\
    \ return count\n            if (string.startsWith(substring)) recurse(string.substring(1),\
    \ substring, count + 1)\n            else recurse(string.substring(1), substring,\
    \ count)\n        }\n        recurse(string, substring, 0)", "        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        count", "        if (string.length < substring.length) return\
    \ 0\n        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        return count", "        var count = 0\n        for\
    \ (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        var index = 0\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index)\n            if (index !=\
    \ -1) {\n                count += 1\n                index += 1\n            }\n\
    \        }\n        count", "        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        count", "        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        if (string.length\
    \ == substring.length) return if (string == substring) 1 else 0\n        if (substring.length\
    \ == 0) return 0\n        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        return count", "        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        count", "        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        count", "        if (string.length\
    \ < substring.length) return 0\n        var count = 0\n        for (i <- 0 to\
    \ string.length - substring.length) {\n            if (string.substring(i, i +\
    \ substring.length) == substring) count += 1\n        }\n        return count",
  "        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        var i = 0\n\
    \        while (i < string.length) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count += 1\n                i += substring.length\n     \
    \       }\n            else i += 1\n        }\n        count", "        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        count", "        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        count", "        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        if (string.length\
    \ == substring.length) return if (string == substring) 1 else 0\n        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        return count", "        var count = 0\n        for (i <- 0 to\
    \ string.length - substring.length) {\n            if (string.substring(i, i +\
    \ substring.length) == substring) count += 1\n        }\n        count", "   \
    \     var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        val n = string.length\n        val\
    \ m = substring.length\n        var count = 0\n        for (i <- 0 to n - m) {\n\
    \            if (string.substring(i, i + m) == substring) count += 1\n       \
    \ }\n        count", "        if (string.length < substring.length) return 0\n\
    \        if (string.length == substring.length) return if (string == substring)\
    \ 1 else 0\n        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        return count", "        var count = 0\n        for\
    \ (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        if (string.length < substring.length)\
    \ return 0\n        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        return count", "        var count = 0\n        for\
    \ (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        var i = 0\n        while (i < string.length) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count += 1\n                i += substring.length\n            }\n        \
    \    else i += 1\n        }\n        count", "        var count = 0\n        var\
    \ i = 0\n        while (i < string.length) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count += 1\n                i += substring.length\n     \
    \       }\n            else i += 1\n        }\n        count", "        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        count", "        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        count", "        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        return count",
  "        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        var i = 0\n        while (i < string.length) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count += 1\n                i += substring.length\n            }\n        \
    \    else i += 1\n        }\n        count", "        var count = 0\n        for\
    \ (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        if (string.length < substring.length)\
    \ return 0\n        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        return count", "        var count = 0\n        for\
    \ (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       val n = string.length\n        val m = substring.length\n        val dp\
    \ = Array.fill(n + 1, m + 1)(0L)\n        for (i <- 0 to n) dp(i)(0) = 1\n   \
    \     for (i <- 1 to n; j <- 1 to m) {\n            dp(i)(j) = dp(i - 1)(j) +\
    \ (if (string(i - 1) == substring(j - 1)) dp(i - 1)(j - 1) else 0)\n        }\n\
    \        dp(n)(m)", "        var count = 0\n        var i = 0\n        while (i\
    \ < string.length) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count += 1\n                i += substring.length\n     \
    \       }\n            else i += 1\n        }\n        count", "        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        count", "        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        count", "        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        return count",
  "        val n = string.length\n        val m = substring.length\n        val dp\
    \ = Array.fill(n + 1, m + 1)(0L)\n        for (i <- 1 to n) {\n            for\
    \ (j <- 1 to m) {\n                if (string(i - 1) == substring(j - 1)) {\n\
    \                    dp(i)(j) = dp(i - 1)(j - 1) + dp(i - 1)(j) + 1\n        \
    \        } else {\n                    dp(i)(j) = dp(i - 1)(j)\n             \
    \   }\n            }\n        }\n        dp(n)(m)", "        var count = 0\n \
    \       var i = 0\n        while (i < string.length) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count += 1\n                i += substring.length\n     \
    \       }\n            else i += 1\n        }\n        count", "        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        count", "        var count = 0\n        var i = 0\n        while\
    \ (i < string.length) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count += 1\n                i += substring.length\n     \
    \       }\n            else i += 1\n        }\n        count", "        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        count", "        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        count", "        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        return count",
  "        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        var i = 0\n\
    \        while (i < string.length) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count += 1\n                i += substring.length\n     \
    \       }\n            else i += 1\n        }\n        count", "        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        count", "        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        count", "        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        if (string.length < substring.length)\
    \ return 0\n        val n = string.length\n        val m = substring.length\n\
    \        var count = 0\n        for (i <- 0 to n - m) {\n            var flag\
    \ = true\n            for (j <- 0 until m) {\n                if (string(i + j)\
    \ != substring(j)) {\n                    flag = false\n                    break\n\
    \                }\n            }\n            if (flag) count += 1\n        }\n\
    \        return count", "        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        count", "        if (string.length\
    \ < substring.length) return 0\n        var count = 0\n        for (i <- 0 to\
    \ string.length - substring.length) {\n            if (string.substring(i, i +\
    \ substring.length) == substring) count += 1\n        }\n        return count",
  "        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) {\n                count += 1\n        \
    \    }\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        if (string.length < substring.length)\
    \ return 0\n        if (string.length == substring.length) return if (string ==\
    \ substring) 1 else 0\n        if (substring.length == 0) return 0\n        var\
    \ count = 0\n        for (i <- 0 to string.length - substring.length) {\n    \
    \        if (string.substring(i, i + substring.length) == substring) count +=\
    \ 1\n        }\n        return count", "        var count = 0\n        var i =\
    \ 0\n        while (i < string.length) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count += 1\n                i += substring.length\n     \
    \       }\n            else i += 1\n        }\n        count", "        val n\
    \ = string.length\n        val m = substring.length\n        var count = 0\n \
    \       for (i <- 0 to n - m) {\n            if (string.substring(i, i + m) ==\
    \ substring) count += 1\n        }\n        count", "        var count = 0L\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0L\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        return count",
  "        if (string.length < substring.length) return 0\n        if (string.length\
    \ == substring.length) return if (string == substring) 1 else 0\n        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        return count", "        var count = 0\n        for (i <- 0 to\
    \ string.length - substring.length) {\n            if (string.substring(i, i +\
    \ substring.length) == substring) count += 1\n        }\n        count", "   \
    \     if (string.length < substring.length) return 0\n        if (string.length\
    \ == substring.length) return if (string == substring) 1 else 0\n        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        return count", "        var count = 0\n        for (i <- 0 to\
    \ string.length - substring.length) {\n            if (string.substring(i, i +\
    \ substring.length) == substring) count += 1\n        }\n        count", "   \
    \     var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        var count = 0\n\
    \        var i = 0\n        while (i < string.length - substring.length + 1) {\n\
    \            if (string.substring(i, i + substring.length) == substring) {\n \
    \               count += 1\n                i += substring.length\n          \
    \  }\n            else i += 1\n        }\n        count", "        var count =\
    \ 0\n        for (i <- 0 to string.length - substring.length) {\n            if\
    \ (string.substring(i, i + substring.length) == substring) count += 1\n      \
    \  }\n        count", "        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        count", "        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        if (string.length\
    \ == substring.length) return if (string == substring) 1 else 0\n        if (substring.length\
    \ == 0) return 0\n        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        return count", "        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        count", "        if (string.length < substring.length) return\
    \ 0\n        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        return count", "        var count = 0\n        for\
    \ (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        return count",
  "        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        if (string.length < substring.length)\
    \ return 0\n        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        return count", "        var count = 0\n        for\
    \ (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        if (string.length\
    \ == substring.length) {\n            if (string == substring) return 1\n    \
    \        else return 0\n        }\n        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        return count",
  "        var count = 0\n        var i = 0\n        while (i < string.length) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count += 1\n                i += substring.length\n            }\n        \
    \    else i += 1\n        }\n        count", "        val n = string.length\n\
    \        val m = substring.length\n        val dp = Array.fill(n + 1, m + 1)(0L)\n\
    \        for (i <- 0 to n) {\n            for (j <- 0 to m) {\n              \
    \  if (i == 0 || j == 0) dp(i)(j) = 0\n                else if (string(i - 1)\
    \ == substring(j - 1)) dp(i)(j) = dp(i - 1)(j - 1) + 1\n                else dp(i)(j)\
    \ = dp(i - 1)(j)\n            }\n        }\n        dp(n)(m)", "        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        count", "        if (string.length < substring.length) return\
    \ 0\n        if (string.length == substring.length) return if (string == substring)\
    \ 1 else 0\n        if (substring.length == 0) return 0\n        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        return count",
  "        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        var i = 0\n\
    \        while (i < string.length) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count += 1\n                i += substring.length\n     \
    \       }\n            else i += 1\n        }\n        count", "        val n\
    \ = string.length\n        val m = substring.length\n        var count = 0\n \
    \       for (i <- 0 to n - m) {\n            if (string.substring(i, i + m) ==\
    \ substring) count += 1\n        }\n        count", "        var count = 0\n \
    \       for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        var i = 0\n        while (i < string.length) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count += 1\n                i += substring.length\n            }\n        \
    \    else i += 1\n        }\n        count", "        var count = 0\n        for\
    \ (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        return count",
  "        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        return count",
  "        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        if (string.length < substring.length)\
    \ return 0\n        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        return count", "        var count = 0\n        for\
    \ (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        def helper(string : String, substring\
    \ : String, count : Long) : Long = {\n            if (string.length < substring.length)\
    \ return count\n            if (string.startsWith(substring)) helper(string.substring(1),\
    \ substring, count + 1)\n            else helper(string.substring(1), substring,\
    \ count)\n        }\n        helper(string, substring, 0)", "        var count\
    \ = 0\n        for (i <- 0 to string.length - substring.length) {\n          \
    \  if (string.substring(i, i + substring.length) == substring) count += 1\n  \
    \      }\n        count", "        var count = 0\n        for (i <- 0 to string.length\
    \ - substring.length) {\n            if (string.substring(i, i + substring.length)\
    \ == substring) count += 1\n        }\n        count", "        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        for (i <- 0\
    \ to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        var i = 0\n        while (i < string.length) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count += 1\n                i += substring.length\n            }\n        \
    \    else i += 1\n        }\n        count", "        var count = 0\n        for\
    \ (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       if (string.length < substring.length) return 0\n        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        return count",
  "        if (string.length < substring.length) return 0\n        var count = 0\n\
    \        for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        return count",
  "        var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count", "        var count = 0\n        var i = 0\n\
    \        while (i < string.length) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count += 1\n                i += substring.length\n     \
    \       }\n            else i += 1\n        }\n        count", "        var count\
    \ = 0\n        var index = 0\n        while (index < string.length) {\n      \
    \      if (string.substring(index).startsWith(substring)) {\n                count\
    \ += 1\n                index += substring.length\n            }\n           \
    \ else index += 1\n        }\n        count", "        var count = 0\n       \
    \ for (i <- 0 to string.length - substring.length) {\n            if (string.substring(i,\
    \ i + substring.length) == substring) count += 1\n        }\n        count", " \
    \       var count = 0\n        for (i <- 0 to string.length - substring.length)\
    \ {\n            if (string.substring(i, i + substring.length) == substring) count\
    \ += 1\n        }\n        count"]
stop_tokens:
- "\n    }\n"

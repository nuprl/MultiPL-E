name: HumanEval_117_select_words
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a string s and a natural number n, you have been tasked to implement\
  \ \n    // a function that returns a list of all words from string s that contain\
  \ exactly \n    // n consonants, in order these words appear in the string s.\n\
  \    // If the string s is empty then the function should return an empty list.\n\
  \    // Note: you may assume the input string contains only letters and spaces.\n\
  \    // Examples:\n    // select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
  ]\n    // select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
  \    // select_words(\"simple white space\", 2) ==> []\n    // select_words(\"Hello\
  \ world\", 4) ==> [\"world\"]\n    // select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
  ]\n    def selectWords(s : String, n : Long) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(selectWords((\"Mary\
  \ had a little lamb\"), (4l)).equals((List[String](\"little\"))));\n    assert(selectWords((\"\
  Mary had a little lamb\"), (3l)).equals((List[String](\"Mary\", \"lamb\"))));\n\
  \    assert(selectWords((\"simple white space\"), (2l)).equals((List[String]())));\n\
  \    assert(selectWords((\"Hello world\"), (4l)).equals((List[String](\"world\"\
  ))));\n    assert(selectWords((\"Uncle sam\"), (3l)).equals((List[String](\"Uncle\"\
  ))));\n    assert(selectWords((\"\"), (4l)).equals((List[String]())));\n    assert(selectWords((\"\
  a b c d e f\"), (1l)).equals((List[String](\"b\", \"c\", \"d\", \"f\"))));\n   \
  \ }\n\n}\n"
completions: ["        val vowels = List('a', 'e', 'i', 'o', 'u')\n        s.split(\"\
    \ \").filter(w => w.filter(c => !vowels.contains(c)).length == n).toList", " \
    \       // Fill in the code here\n        return List()", "        // Write your\
    \ code here\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z')\n        val words\
    \ = s.split(\" \").toList\n        words.filter(w => w.filter(consonants.contains(_)).length\
    \ == n)", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\"\
    \ \").filter(x => x.filter(!vowels.contains(_)).length == n).toList", "      \
    \  val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \"\
    ).toList\n        words.filter(word => word.filter(c => !vowels.contains(c)).length\
    \ == n)", "        // Fill in the code here\n        var result = List[String]()\n\
    \        var words = s.split(\" \")\n        for (word <- words) {\n         \
    \   if (countConsonants(word) == n) {\n                result = result :+ word\n\
    \            }\n        }\n        result", "        // Fill in the code here\n\
    \        null", "        // Fill in the code here\n        var result = List[String]()\n\
    \        var words = s.split(\" \")\n        for (word <- words) {\n         \
    \   var count = 0\n            for (c <- word) {\n                if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') count += 1\n            }\n\
    \            if (count == n) result = word :: result\n        }\n        result",
  "        // Fill in the code here\n        var result = List[String]()\n       \
    \ var words = s.split(\" \")\n        for (word <- words) {\n            var count\
    \ = 0\n            for (char <- word) {\n                if (char != 'a' && char\
    \ != 'e' && char != 'i' && char != 'o' && char != 'u') count += 1\n          \
    \  }\n            if (count == n) result = word :: result\n        }\n       \
    \ result", "        // Fill in the code here\n        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        val words = s.split(\" \")\n        words.filter(word\
    \ => word.count(c => !vowels.contains(c)) == n).toList", "        // Fill in the\
    \ code here\n        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val words\
    \ = s.split(\" \")\n        val result = new ListBuffer[String]\n        for (word\
    \ <- words) {\n            var count = 0\n            for (c <- word) {\n    \
    \            if (!vowels.contains(c)) count += 1\n            }\n            if\
    \ (count == n) result += word\n        }\n        result.toList", "        //\
    \ Write your code here\n        var result = List[String]()\n        for (word\
    \ <- s.split(\" \")) {\n            var count = 0\n            for (c <- word)\
    \ {\n                if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u') count += 1\n            }\n            if (count == n) result = word ::\
    \ result\n        }\n        result", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        s.split(\" \").filter(x => x.filter(!vowels.contains(_)).length\
    \ == n).toList", "        // Fill in the code here\n        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \")\n        words.filter(w\
    \ => w.count(c => !vowels.contains(c)) == n).toList", "        // Fill in the\
    \ code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words\
    \ = s.split(\" \")\n        val result = words.filter(w => w.filter(c => !vowels.contains(c)).length\
    \ == n)\n        result.toList", "        // Fill in the code here\n        var\
    \ result = List[String]()\n        var words = s.split(\" \")\n        for (word\
    \ <- words) {\n            if (word.count(x => x.isLetter && !x.isVowel) == n)\
    \ {\n                result = result :+ word\n            }\n        }\n     \
    \   result", "        // Write your code here\n        return List()", "     \
    \   val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.filter(c => !vowels.contains(c)).length\
    \ == n)", "        // Write your code here\n        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        val words = s.split(\" \")\n        var result = List[String]()\n\
    \        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (!vowels.contains(c)) count += 1\n          \
    \  }\n            if (count == n) result = word :: result\n        }\n       \
    \ result", "        // Fill in the code here\n        val vowels = List(\"a\"\
    , \"e\", \"i\", \"o\", \"u\")\n        val words = s.split(\" \")\n        val\
    \ result = new ListBuffer[String]\n        for (word <- words) {\n           \
    \ var count = 0\n            for (char <- word) {\n                if (!vowels.contains(char.toString))\
    \ count += 1\n            }\n            if (count == n) result += word\n    \
    \    }\n        result.toList", "        // Fill in the code here\n        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(word =>\
    \ word.count(c => !vowels.contains(c)) == n).toList", "        // Fill in the\
    \ code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words\
    \ = s.split(\" \")\n        val result = words.filter(w => w.count(c => !vowels.contains(c))\
    \ == n)\n        result.toList", "        val vowels = List('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \").toList\n        words.filter(word =>\
    \ word.filter(c => !vowels.contains(c)).length == n)", "        // Fill in the\
    \ code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words\
    \ = s.split(\" \")\n        val result = words.filter(word => word.count(c =>\
    \ !vowels.contains(c)) == n)\n        result.toList", "        // Write your code\
    \ here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\"\
    \ \").filter(x => x.filterNot(vowels.contains(_)).length == n).toList", "    \
    \    // Fill in the code here\n        s.split(\" \").filter(x => x.filter(y =>\
    \ \"aeiou\".contains(y)).length == n).toList", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.count(c => !vowels.contains(c)) == n)", "        val words = s.split(\"\
    \ \")\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        val result\
    \ = new ListBuffer[String]\n        for (word <- words) {\n            var count\
    \ = 0\n            for (c <- word) {\n                if (consonants.contains(c.toLower))\
    \ count += 1\n            }\n            if (count == n) result += word\n    \
    \    }\n        result.toList", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => !vowels.contains(c)).length == n)", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(word\
    \ => word.count(ch => !vowels.contains(ch)) == n)", "        // Fill in the code\
    \ here\n        var result = List[String]()\n        var words = s.split(\" \"\
    )\n        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u') count += 1\n            }\n            if (count == n) result =\
    \ word :: result\n        }\n        result", "        // Fill in the code here\n\
    \        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \")\n        val result = new ListBuffer[String]\n        for (word <- words)\
    \ {\n            var count = 0\n            for (c <- word) {\n              \
    \  if (!vowels.contains(c)) count += 1\n            }\n            if (count ==\
    \ n) result += word\n        }\n        result.toList", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n  \
    \      words.filter(w => w.filter(c => !vowels.contains(c)).length == n)", " \
    \       // Write your code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            if (word.filter(c => !vowels.contains(c)).length\
    \ == n) result += word\n        }\n        result.toList", "        // Fill in\
    \ the code here\n        var result = List[String]()\n        val words = s.split(\"\
    \ \")\n        for (word <- words) {\n            if (word.count(x => x.toLower\
    \ != 'a' && x.toLower != 'e' && x.toLower != 'i' && x.toLower != 'o' && x.toLower\
    \ != 'u') == n) {\n                result = result :+ word\n            }\n  \
    \      }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => !vowels.contains(c)).length == n)", "        // Fill in the code here\n \
    \       var result = List[String]()\n        var words = s.split(\" \")\n    \
    \    for (word <- words) {\n            var count = 0\n            for (char <-\
    \ word) {\n                if (char != 'a' && char != 'e' && char != 'i' && char\
    \ != 'o' && char != 'u') {\n                    count += 1\n                }\n\
    \            }\n            if (count == n) {\n                result = result\
    \ :+ word\n            }\n        }\n        result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(x => x.filter(!vowels.contains(_)).length\
    \ == n).toList", "        // Write your code here\n        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \")\n        val result\
    \ = new ListBuffer[String]\n        for (word <- words) {\n            var count\
    \ = 0\n            for (c <- word) {\n                if (!vowels.contains(c))\
    \ count += 1\n            }\n            if (count == n) result += word\n    \
    \    }\n        result.toList", "        // Fill in the code here\n        val\
    \ vowels = List(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val words = s.split(\"\
    \ \")\n        val result = words.filter(word => word.count(ch => vowels.contains(ch.toString.toLowerCase))\
    \ == word.length - n)\n        result.toList", "        // Fill in the code here\n\
    \        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(word\
    \ => word.count(c => !vowels.contains(c)) == n).toList", "        // Fill in the\
    \ code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words\
    \ = s.split(\" \")\n        val result = words.filter(w => w.count(c => !vowels.contains(c))\
    \ == n)\n        result.toList", "        // Write your code here\n        return\
    \ null;", "        // Fill in the code here\n        var result = List[String]()\n\
    \        val words = s.split(\" \")\n        for (word <- words) {\n         \
    \   var count = 0\n            for (c <- word) {\n                if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') count += 1\n            }\n\
    \            if (count == n) result = word :: result\n        }\n        result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(x\
    \ => x.filter(!vowels.contains(_)).length == n).toList", "        // Fill in the\
    \ code here\n        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val words\
    \ = s.split(\" \")\n        val result = new ListBuffer[String]\n        for (word\
    \ <- words) {\n            var count = 0\n            for (c <- word) {\n    \
    \            if (!vowels.contains(c)) count += 1\n            }\n            if\
    \ (count == n) result += word\n        }\n        result.toList", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n\
    \        words.filter(w => w.count(c => !vowels.contains(c)) == n)", "       \
    \ // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (!vowels.contains(c)) count += 1\n          \
    \  }\n            if (count == n) result += word\n        }\n        result.toList",
  "        // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        words.filter(word => word.filter(c\
    \ => !vowels.contains(c)).length == n).toList", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(word => word.count(c => !vowels.contains(c))\
    \ == n).toList", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\"\
    \ \").filter(w => w.filter(c => !vowels.contains(c)).length == n).toList", " \
    \       val vowels = \"aeiou\"\n        s.split(\" \").filter(x => x.filter(y\
    \ => !vowels.contains(y)).length == n).toList", "        // Fill in the code here\n\
    \        return List[String]()", "        // Fill in the code here\n        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \")\n\
    \        val result = words.filter(w => w.count(c => !vowels.contains(c)) == n)\n\
    \        result.toList", '        s.split(" ").filter(x => x.count(y => "aeiou".contains(y))
    == n).toList', "        // Fill in the code here\n        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \")\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n).toList", "        // Fill\
    \ in the code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n      \
    \  s.split(\" \").filter(x => x.filterNot(vowels.contains(_)).length == n).toList",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(x\
    \ => x.count(y => !vowels.contains(y)) == n).toList", "        // Write your code\
    \ here\n        var result = List[String]()\n        var words = s.split(\" \"\
    )\n        for (word <- words) {\n            var count = 0\n            for (char\
    \ <- word) {\n                if (char != 'a' && char != 'e' && char != 'i' &&\
    \ char != 'o' && char != 'u') count += 1\n            }\n            if (count\
    \ == n) result = result :+ word\n        }\n        return result", "        //\
    \ Fill in the code here\n        var result = List[String]()\n        var words\
    \ = s.split(\" \")\n        for (word <- words) {\n            if (word.count(c\
    \ => c.isLetter && !c.isVowel) == n) {\n                result = result :+ word\n\
    \            }\n        }\n        result", "        // Write your code here\n\
    \        return null;", "        // Write your code here\n        return List[String]()",
  "        // Fill in the code here\n        s.split(\" \").filter(x => x.count(y\
    \ => y.toLower != 'a' && y.toLower != 'e' && y.toLower != 'i' && y.toLower !=\
    \ 'o' && y.toLower != 'u') == n).toList", "        // Fill in the code here\n\
    \        var result = List[String]()\n        var words = s.split(\" \")\n   \
    \     for (word <- words) {\n            var count = 0\n            for (c <-\
    \ word) {\n                if (c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u') {\n                    count += 1\n                }\n           \
    \ }\n            if (count == n) {\n                result = word :: result\n\
    \            }\n        }\n        result", "        // Fill in the code here\n\
    \        var result = List[String]()\n        var words = s.split(\" \")\n   \
    \     for (word <- words) {\n            var count = 0\n            for (c <-\
    \ word) {\n                if (c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u') {\n                    count += 1\n                }\n           \
    \ }\n            if (count == n) {\n                result = word :: result\n\
    \            }\n        }\n        result", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        s.split(\" \").filter(word => word.filterNot(vowels.contains(_)).length\
    \ == n).toList", "        // Write your code here\n        var result = List[String]()\n\
    \        var words = s.split(\" \")\n        for (word <- words) {\n         \
    \   var count = 0\n            for (c <- word) {\n                if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') count += 1\n            }\n\
    \            if (count == n) result = word :: result\n        }\n        result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(x\
    \ => x.filter(!vowels.contains(_)).length == n).toList", "        val vowels =\
    \ List('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n \
    \       words.filter(w => w.filter(c => !vowels.contains(c)).length == n)", " \
    \       // Write your code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        s.split(\" \").filter(x => x.filterNot(vowels.contains(_)).length\
    \ == n).toList", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ words = s.split(\" \").toList\n        words.filter(w => w.count(c => !vowels.contains(c))\
    \ == n)", "        // Write your code here\n        val vowels = List('a', 'e',\
    \ 'i', 'o', 'u')\n        s.split(\" \").filter(x => x.filterNot(vowels.contains(_)).length\
    \ == n).toList", "        // Fill in the code here\n        var result = List[String]()\n\
    \        var words = s.split(\" \")\n        for (word <- words) {\n         \
    \   if (word.filter(c => c.toLower != 'a' && c.toLower != 'e' && c.toLower !=\
    \ 'i' && c.toLower != 'o' && c.toLower != 'u').length == n) {\n              \
    \  result = result :+ word\n            }\n        }\n        result", "     \
    \   // Write your code here\n        val vowels = List('a', 'e', 'i', 'o', 'u')\n\
    \        s.split(\" \").filter(x => x.filterNot(vowels.contains(_)).length ==\
    \ n).toList", "        // Write your code here\n        return List[String]()",
  "        // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        val result = words.filter(x\
    \ => x.filter(y => !vowels.contains(y)).length == n)\n        result.toList",
  "        // Write your code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val words = s.split(\" \")\n        val result = words.filter(w => w.count(c\
    \ => !vowels.contains(c)) == n)\n        result.toList", "        // Write your\
    \ code here\n        return List[String]()", "        // Fill in the code here\n\
    \        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \")\n        val result = words.filter(word => word.count(c => !vowels.contains(c))\
    \ == n)\n        result.toList", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        s.split(\" \").filter(w => w.filter(c => !vowels.contains(c)).length\
    \ == n).toList", "        // Fill in the code here\n        var words = s.split(\"\
    \ \")\n        var result = List[String]()\n        for (word <- words) {\n  \
    \          if (word.count(c => c.isLetter && !c.isVowel) == n) {\n           \
    \     result = word :: result\n            }\n        }\n        result", "  \
    \      // Fill in the code here\n        var result = List[String]()\n       \
    \ var words = s.split(\" \")\n        for (word <- words) {\n            if (word.count(c\
    \ => c.isLetter && !c.isVowel) == n) result = word :: result\n        }\n    \
    \    result", "        // Write your code here\n        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \")\n        val result\
    \ = new ListBuffer[String]\n        for (word <- words) {\n            var count\
    \ = 0\n            for (c <- word) {\n                if (!vowels.contains(c))\
    \ count += 1\n            }\n            if (count == n) result += word\n    \
    \    }\n        result.toList", "        // Fill in the code here\n        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(word =>\
    \ word.count(c => !vowels.contains(c)) == n).toList", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(x => x.filter(!vowels.contains(_)).length\
    \ == n).toList", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ words = s.split(\" \").toList\n        words.filter(w => w.filter(c => !vowels.contains(c)).length\
    \ == n)", "        // Fill in the code here\n        var result = List[String]()\n\
    \        for (word <- s.split(\" \")) {\n            var count = 0\n         \
    \   for (c <- word) {\n                if (c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u') count += 1\n            }\n            if (count == n)\
    \ result = word :: result\n        }\n        result", "        // Fill in the\
    \ code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\"\
    \ \").filter(x => x.filterNot(vowels).length == n).toList", "        // Fill in\
    \ the code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ words = s.split(\" \")\n        val result = new ListBuffer[String]\n      \
    \  for (word <- words) {\n            var count = 0\n            for (c <- word)\
    \ {\n                if (!vowels.contains(c)) count += 1\n            }\n    \
    \        if (count == n) result += word\n        }\n        result.toList", " \
    \       // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (!vowels.contains(c)) count += 1\n          \
    \  }\n            if (count == n) result += word\n        }\n        result.toList",
  "        // Fill in the code here\n        var words = s.split(\" \")\n        var\
    \ result = List[String]()\n        for (word <- words) {\n            if (word.filter(x\
    \ => x != 'a' && x != 'e' && x != 'i' && x != 'o' && x != 'u').length == n) {\n\
    \                result = result :+ word\n            }\n        }\n        result",
  "        // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        def isConsonant(c : Char) = !vowels.contains(c)\n        def countConsonants(s\
    \ : String) = s.filter(isConsonant(_)).length\n        s.split(\" \").filter(countConsonants(_)\
    \ == n).toList", "        // Fill in the code here\n        var result = List[String]()\n\
    \        for (word <- s.split(\" \")) {\n            if (word.filter(c => \"aeiou\"\
    .contains(c)).length == n) result = word :: result\n        }\n        result",
  "        // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (!vowels.contains(c)) count += 1\n          \
    \  }\n            if (count == n) result += word\n        }\n        result.toList",
  "        // Fill in the code here\n        var result = List[String]()\n       \
    \ var words = s.split(\" \")\n        for (word <- words) {\n            var count\
    \ = 0\n            for (c <- word) {\n                if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u') count += 1\n            }\n           \
    \ if (count == n) result = word :: result\n        }\n        result", "     \
    \   // Fill in the code here\n        val words = s.split(\" \")\n        val\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (consonants.contains(c.toLower)) count += 1\n\
    \            }\n            if (count == n) result += word\n        }\n      \
    \  result.toList", "        // Write your code here\n        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \")\n        val result\
    \ = words.filter(w => w.filter(c => !vowels.contains(c)).length == n)\n      \
    \  result.toList", "        // Fill in the code here\n        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \")\n        val result\
    \ = words.filter(x => x.count(y => !vowels.contains(y)) == n)\n        result.toList",
  "        // Fill in the code here\n        val vowels = List('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (!vowels.contains(c)) count += 1\n          \
    \  }\n            if (count == n) result += word\n        }\n        result.toList",
  "        // your code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val words = s.split(\" \")\n        val result = words.filter(word =>\
    \ word.count(c => !vowels.contains(c)) == n)\n        result.toList", "      \
    \  val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \"\
    ).toList\n        words.filter(w => w.filter(c => !vowels.contains(c)).length\
    \ == n)", "        // Write your code here\n        val vowels = List(\"a\", \"\
    e\", \"i\", \"o\", \"u\")\n        val words = s.split(\" \")\n        val result\
    \ = new ListBuffer[String]\n        for (word <- words) {\n            var count\
    \ = 0\n            for (c <- word) {\n                if (!vowels.contains(c.toString.toLowerCase))\
    \ count += 1\n            }\n            if (count == n) result += word\n    \
    \    }\n        result.toList", "        // Fill in the code here\n        var\
    \ result = List[String]()\n        var words = s.split(\" \")\n        for (word\
    \ <- words) {\n            if (word.count(c => c.isLetter && !c.isVowel) == n)\
    \ result = word :: result\n        }\n        result", "        // Write your\
    \ code here\n        var result = List[String]()\n        var words = s.split(\"\
    \ \")\n        for (word <- words) {\n            if (word.count(c => c.toLower\
    \ != 'a' && c.toLower != 'e' && c.toLower != 'i' && c.toLower != 'o' && c.toLower\
    \ != 'u') == n) result = result :+ word\n        }\n        result", "       \
    \ // Fill in the code here\n        val vowels = List('a', 'e', 'i', 'o', 'u')\n\
    \        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (!vowels.contains(c)) count += 1\n          \
    \  }\n            if (count == n) result += word\n        }\n        result.toList",
  "        // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (!vowels.contains(c)) count += 1\n          \
    \  }\n            if (count == n) result += word\n        }\n        result.toList",
  "        // Fill in the code here\n        var result = List[String]()\n       \
    \ var words = s.split(\" \")\n        for (word <- words) {\n            if (word.count(c\
    \ => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') == n) result =\
    \ result :+ word\n        }\n        result", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        s.split(\" \").filter(x => x.filter(!vowels.contains(_)).length\
    \ == n).toList", "        // Fill in the code here\n        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \")\n        val result\
    \ = new ListBuffer[String]\n        for (word <- words) {\n            var count\
    \ = 0\n            for (c <- word) {\n                if (!vowels.contains(c))\
    \ count += 1\n            }\n            if (count == n) result += word\n    \
    \    }\n        result.toList", "        // Fill in the code here\n        var\
    \ result = List[String]()\n        var words = s.split(\" \")\n        for (word\
    \ <- words) {\n            if (word.filter(c => c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u').length == n) result = result :+ word\n        }\n \
    \       result", "        // Fill in the code here\n        var result = List[String]()\n\
    \        var words = s.split(\" \")\n        for (word <- words) {\n         \
    \   var count = 0\n            for (c <- word) {\n                if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                    count\
    \ += 1\n                }\n            }\n            if (count == n) {\n    \
    \            result = word :: result\n            }\n        }\n        result",
  "        // Fill in the code here\n        val vowels = List('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        val result = words.filter(w\
    \ => w.count(c => vowels.contains(c.toLower)) == w.length - n)\n        result.toList",
  "        // Fill in the code here\n        val vowels = List('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var count = 0\n            for (char\
    \ <- word) {\n                if (!vowels.contains(char)) count += 1\n       \
    \     }\n            if (count == n) result += word\n        }\n        result.toList",
  "        // Fill in the code here\n        var result = List[String]()\n       \
    \ var words = s.split(\" \")\n        for (word <- words) {\n            if (countConsonants(word)\
    \ == n) result = result :+ word\n        }\n        result", "        // Fill\
    \ in the code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n      \
    \  val words = s.split(\" \")\n        words.filter(w => w.count(c => !vowels.contains(c))\
    \ == n).toList", "        // Fill in your code here\n        null", "        //\
    \ Your code here\n        var result = List[String]()\n        for (word <- s.split(\"\
    \ \")) {\n            var count = 0\n            for (c <- word) {\n         \
    \       if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') count +=\
    \ 1\n            }\n            if (count == n) result = word :: result\n    \
    \    }\n        result", "        // your code here\n        null", "        //\
    \ Fill in the code here\n        val words = s.split(\" \")\n        var result\
    \ = List[String]()\n        for (word <- words) {\n            if (word.count(c\
    \ => c.isLetter && !c.isVowel) == n) result = word :: result\n        }\n    \
    \    result", "        // Fill in the code here\n        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \")\n        val result\
    \ = new ListBuffer[String]\n        for (word <- words) {\n            var count\
    \ = 0\n            for (char <- word) {\n                if (!vowels.contains(char))\
    \ count += 1\n            }\n            if (count == n) result += word\n    \
    \    }\n        result.toList", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => !vowels.contains(c)).length == n)", "        // Fill in the code here\n \
    \       val vowels = List('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \")\n        val result = new ListBuffer[String]\n        for (word <- words)\
    \ {\n            var count = 0\n            for (c <- word) {\n              \
    \  if (!vowels.contains(c)) count += 1\n            }\n            if (count ==\
    \ n) result += word\n        }\n        result.toList", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n  \
    \      words.filter(x => x.filter(!vowels.contains(_)).length == n)", "      \
    \  // your code here\n        def isConsonant(c : Char) : Boolean = {\n      \
    \      c match {\n                case 'a' | 'e' | 'i' | 'o' | 'u' | 'A' | 'E'\
    \ | 'I' | 'O' | 'U' => false\n                case _ => true\n            }\n\
    \        }\n        def countConsonants(s : String) : Long = {\n            s.filter(isConsonant).length\n\
    \        }\n        s.split(\" \").filter(countConsonants(_) == n).toList", " \
    \       // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        def isConsonant(c : Char) = !vowels.contains(c)\n        def countConsonants(s\
    \ : String) = s.filter(isConsonant(_)).length\n        s.split(\" \").filter(countConsonants(_)\
    \ == n).toList", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\"\
    \ \").filter(x => x.filter(!vowels.contains(_)).length == n).toList", "      \
    \  // Fill in the code here\n        val vowels = List('a', 'e', 'i', 'o', 'u')\n\
    \        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (!vowels.contains(c)) count += 1\n          \
    \  }\n            if (count == n) result += word\n        }\n        result.toList",
  "        // Fill in the code here\n        null", "        // Fill in the code here\n\
    \        s.split(\" \").filter(x => x.count(y => \"aeiou\".contains(y)) == n).toList",
  "        // Fill in the code here\n        List()", "        // Write your code\
    \ here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words =\
    \ s.split(\" \")\n        val result = ListBuffer[String]()\n        for (word\
    \ <- words) {\n            var count = 0\n            for (c <- word) {\n    \
    \            if (!vowels.contains(c)) count += 1\n            }\n            if\
    \ (count == n) result += word\n        }\n        result.toList", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n\
    \        words.filter(w => w.filter(c => !vowels.contains(c)).length == n)", " \
    \       // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (!vowels.contains(c)) count += 1\n          \
    \  }\n            if (count == n) result += word\n        }\n        result.toList",
  "        // Write your code here\n        val vowels = \"aeiou\"\n        val words\
    \ = s.split(\" \")\n        val result = new ListBuffer[String]\n        for (word\
    \ <- words) {\n            var count = 0\n            for (c <- word) {\n    \
    \            if (!vowels.contains(c)) count += 1\n            }\n            if\
    \ (count == n) result += word\n        }\n        result.toList", "        val\
    \ vowels = List('a', 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(x => x.filter(y\
    \ => !vowels.contains(y)).length == n).toList", "        // Fill in the code here\n\
    \        var words = s.split(\" \")\n        var result = List[String]()\n   \
    \     for (word <- words) {\n            if (word.filter(c => c != 'a' && c !=\
    \ 'e' && c != 'i' && c != 'o' && c != 'u').length == n) {\n                result\
    \ = result :+ word\n            }\n        }\n        result", "        // Fill\
    \ in the code here\n        val vowels = List('a', 'e', 'i', 'o', 'u')\n     \
    \   val words = s.split(\" \")\n        val result = words.filter(w => w.filter(c\
    \ => !vowels.contains(c)).length == n)\n        result.toList", "        // Fill\
    \ in the code here\n        var result = List[String]()\n        var words = s.split(\"\
    \ \")\n        for (word <- words) {\n            var count = 0\n            for\
    \ (c <- word) {\n                if (c != 'a' && c != 'e' && c != 'i' && c !=\
    \ 'o' && c != 'u') {\n                    count += 1\n                }\n    \
    \        }\n            if (count == n) {\n                result = word :: result\n\
    \            }\n        }\n        result", "        // Fill in the code here\n\
    \        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \")\n        words.filter(w => w.count(c => !vowels.contains(c)) == n).toList",
  "        // Good luck!\n        val vowels = List('a', 'e', 'i', 'o', 'u')\n   \
    \     val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => !vowels.contains(c)).length == n)", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        s.split(\" \").filter(x => x.filter(!vowels.contains(_)).length\
    \ == n).toList", "        // Fill in the code here\n        var list = new ListBuffer[String]()\n\
    \        var words = s.split(\" \")\n        for (word <- words) {\n         \
    \   var count = 0\n            for (c <- word) {\n                if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') count += 1\n            }\n\
    \            if (count == n) list += word\n        }\n        list.toList", " \
    \       // Write your code here\n        var result = List[String]()\n       \
    \ var words = s.split(\" \")\n        for (word <- words) {\n            var count\
    \ = 0\n            for (c <- word) {\n                if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u') count += 1\n            }\n           \
    \ if (count == n) result = word :: result\n        }\n        result", "     \
    \   // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val words = s.split(\" \")\n        var result = List[String]()\n   \
    \     for (word <- words) {\n            var count = 0\n            for (c <-\
    \ word) {\n                if (!vowels.contains(c)) count += 1\n            }\n\
    \            if (count == n) result = word :: result\n        }\n        result",
  "        // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (!vowels.contains(c)) count += 1\n          \
    \  }\n            if (count == n) result += word\n        }\n        result.toList",
  "        // Write your code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        s.split(\" \").filter(x => x.count(c => !vowels.contains(c)) == n).toList",
  "        // Write your code here\n        var result = List[String]()\n        var\
    \ words = s.split(\" \")\n        for (word <- words) {\n            if (word.count(c\
    \ => c.isLetter && !c.isVowel) == n) result = word :: result\n        }\n    \
    \    result", "        // Write your code here\n        var result = List[String]()\n\
    \        var words = s.split(\" \")\n        for (word <- words) {\n         \
    \   var count = 0\n            for (char <- word) {\n                if (char\
    \ != 'a' && char != 'e' && char != 'i' && char != 'o' && char != 'u') {\n    \
    \                count += 1\n                }\n            }\n            if\
    \ (count == n) {\n                result = result :+ word\n            }\n   \
    \     }\n        return result", "        // Fill in the code here\n        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(x => x.count(c\
    \ => !vowels.contains(c)) == n).toList", "        // Write your code here\n  \
    \      val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \")\n        val result = new ListBuffer[String]\n        for (word <- words)\
    \ {\n            var count = 0\n            for (c <- word) {\n              \
    \  if (!vowels.contains(c)) count += 1\n            }\n            if (count ==\
    \ n) result += word\n        }\n        result.toList", "        // Fill in the\
    \ code here\n        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val words\
    \ = s.split(\" \")\n        val result = new ListBuffer[String]\n        for (word\
    \ <- words) {\n            var count = 0\n            for (c <- word) {\n    \
    \            if (!vowels.contains(c)) count += 1\n            }\n            if\
    \ (count == n) result += word\n        }\n        result.toList", "        //\
    \ Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n \
    \       val words = s.split(\" \")\n        val result = words.filter(w => w.count(c\
    \ => !vowels.contains(c)) == n)\n        result.toList", "        // Write your\
    \ code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\"\
    \ \").filter(x => x.filterNot(vowels.contains(_)).length == n).toList", "    \
    \    // Fill in the code here\n        var result = List[String]()\n        var\
    \ words = s.split(\" \")\n        for (word <- words) {\n            if (word.count(c\
    \ => c.isLetter && !c.isVowel) == n) result = word :: result\n        }\n    \
    \    result", "        // Fill in the code here\n        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \")\n        val result\
    \ = words.filter(w => w.count(c => !vowels.contains(c)) == n)\n        result.toList",
  "        // Write your code here\n        return List()", "        // Write your\
    \ code here\n        var result = List[String]()\n        var words = s.split(\"\
    \ \")\n        for (word <- words) {\n            var count = 0\n            for\
    \ (c <- word) {\n                if (c != 'a' && c != 'e' && c != 'i' && c !=\
    \ 'o' && c != 'u') {\n                    count += 1\n                }\n    \
    \        }\n            if (count == n) {\n                result = word :: result\n\
    \            }\n        }\n        result", "        // Fill in the code here\n\
    \        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \")\n        val result = new ListBuffer[String]\n        for (word <- words)\
    \ {\n            var count = 0\n            for (c <- word) {\n              \
    \  if (!vowels.contains(c)) count += 1\n            }\n            if (count ==\
    \ n) result += word\n        }\n        result.toList", "        // Fill in the\
    \ code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words\
    \ = s.split(\" \")\n        val result = ListBuffer[String]()\n        for (word\
    \ <- words) {\n            var count = 0\n            for (c <- word) {\n    \
    \            if (!vowels.contains(c)) count += 1\n            }\n            if\
    \ (count == n) result += word\n        }\n        result.toList", "        //\
    \ Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n \
    \       val words = s.split(\" \")\n        val result = words.filter(w => w.count(c\
    \ => !vowels.contains(c)) == n)\n        result.toList", "        val vowels =\
    \ \"aeiou\"\n        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (!vowels.contains(c)) count += 1\n          \
    \  }\n            if (count == n) result += word\n        }\n        result.toList",
  "        // Fill in the code here\n        val vowels = List('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        words.filter(w => w.count(c\
    \ => vowels.contains(c.toLower)) == n).toList", "        // Fill in the code here\n\
    \        var result = List[String]()\n        for (word <- s.split(\" \")) {\n\
    \            var count = 0\n            for (c <- word) {\n                if\
    \ (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') count += 1\n    \
    \        }\n            if (count == n) result = word :: result\n        }\n \
    \       result", "        // Fill in the code here\n        def isConsonant(c\
    \ : Char) : Boolean = {\n            c match {\n                case 'a' => false\n\
    \                case 'e' => false\n                case 'i' => false\n      \
    \          case 'o' => false\n                case 'u' => false\n            \
    \    case _ => true\n            }\n        }\n        def countConsonants(s :\
    \ String) : Long = {\n            s.filter(isConsonant).length\n        }\n  \
    \      s.split(\" \").filter(countConsonants(_) == n).toList", "        // Fill\
    \ in the code here\n        val vowels = List('a', 'e', 'i', 'o', 'u')\n     \
    \   val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var count = 0\n            for (c\
    \ <- word) {\n                if (!vowels.contains(c)) count += 1\n          \
    \  }\n            if (count == n) result += word\n        }\n        result.toList",
  "        // Fill in the code here\n        val vowels = \"aeiouAEIOU\"\n       \
    \ val words = s.split(\" \")\n        var result = List[String]()\n        for\
    \ (word <- words) {\n            var count = 0\n            for (c <- word) {\n\
    \                if (!vowels.contains(c)) count += 1\n            }\n        \
    \    if (count == n) result = word :: result\n        }\n        result", "  \
    \      val vowels = List('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \").toList\n        words.filter(word => word.filter(c => !vowels.contains(c)).length\
    \ == n)", "        // Fill in the code here\n        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        val words = s.split(\" \")\n        val result = new\
    \ ListBuffer[String]\n        for (word <- words) {\n            var count = 0\n\
    \            for (c <- word) {\n                if (!vowels.contains(c)) count\
    \ += 1\n            }\n            if (count == n) result += word\n        }\n\
    \        result.toList", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        s.split(\" \").filter(x => x.count(y => !vowels.contains(y)) == n).toList",
  "        // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            var consonants = 0\n            for\
    \ (c <- word) {\n                if (!vowels.contains(c)) consonants += 1\n  \
    \          }\n            if (consonants == n) result += word\n        }\n   \
    \     result.toList", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n  \
    \      val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => !vowels.contains(c)).length == n)", "        var result = List[String]()\n\
    \        var words = s.split(\" \")\n        for (word <- words) {\n         \
    \   if (word.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u').length == n) {\n                result = result :+ word\n            }\n\
    \        }\n        return result", "        // Write your code here\n       \
    \ val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \"\
    )\n        val result = new ListBuffer[String]\n        for (word <- words) {\n\
    \            var count = 0\n            for (c <- word) {\n                if\
    \ (!vowels.contains(c)) count += 1\n            }\n            if (count == n)\
    \ result += word\n        }\n        result.toList", "        // Fill in the code\
    \ here\n        var result = List[String]()\n        var words = s.split(\" \"\
    )\n        for (word <- words) {\n            if (word.count(c => c.isLetter &&\
    \ !c.isVowel) == n) {\n                result = result :+ word\n            }\n\
    \        }\n        result", "        // Fill in the code here\n        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \")\n       \
    \ val result = new ListBuffer[String]\n        for (word <- words) {\n       \
    \     var count = 0\n            for (c <- word) {\n                if (!vowels.contains(c))\
    \ count += 1\n            }\n            if (count == n) result += word\n    \
    \    }\n        result.toList", "        // Fill in the code here\n        var\
    \ result = List[String]()\n        var words = s.split(\" \")\n        for (word\
    \ <- words) {\n            if (word.count(c => c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u') == n) result = result :+ word\n        }\n        result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \").toList\n        words.filter(word => word.filter(c => !vowels.contains(c)).length\
    \ == n)", "        // your code here\n        null", "        // Fill in the code\
    \ here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\"\
    \ \").filter(x => x.filterNot(vowels).length == n).toList", "        // Fill in\
    \ the code here\n        var result = List[String]()\n        for (word <- s.split(\"\
    \ \")) {\n            if (word.count(x => x.isLetter && !x.isVowel) == n) result\
    \ = word :: result\n        }\n        result", "        // Fill in the code here\n\
    \        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \")\n        val result = words.filter(word => word.count(c => !vowels.contains(c))\
    \ == n)\n        result.toList", "        // Write your code here\n        return\
    \ List()", '        s.split(" ").filter(x => x.count(y => y.isLetter && !y.isVowel)
    == n).toList', "        // Write your code here\n        null", "        // Write\
    \ your code here\n        var result = List[String]()\n        val words = s.split(\"\
    \ \")\n        for (word <- words) {\n            if (word.filter(c => c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u').length == n) {\n          \
    \      result = result :+ word\n            }\n        }\n        result", " \
    \       // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        val result = words.filter(w\
    \ => w.count(c => !vowels.contains(c)) == n)\n        result.toList", "      \
    \  val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \"\
    ).toList\n        words.filter(w => w.count(c => !vowels.contains(c)) == n)",
  "        // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        s.split(\" \").filter(x => x.count(y => !vowels.contains(y)) ==\
    \ n).toList", "        // Your code here\n        return List()", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(w => w.count(c\
    \ => !vowels.contains(c)) == n).toList", "        // Fill in the code here\n \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \")\n        val result = new ListBuffer[String]\n        for (word <- words)\
    \ {\n            var count = 0\n            for (c <- word) {\n              \
    \  if (!vowels.contains(c)) count += 1\n            }\n            if (count ==\
    \ n) result += word\n        }\n        result.toList", "        // Fill in the\
    \ code here\n        var result = List[String]()\n        var words = s.split(\"\
    \ \")\n        for (word <- words) {\n            if (word.count(x => x.isLetter\
    \ && !x.isVowel) == n) {\n                result = result :+ word\n          \
    \  }\n        }\n        result", "        // Fill in the code here\n        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \")\n\
    \        val result = new ListBuffer[String]\n        for (word <- words) {\n\
    \            var count = 0\n            for (c <- word) {\n                if\
    \ (!vowels.contains(c)) count += 1\n            }\n            if (count == n)\
    \ result += word\n        }\n        result.toList", "        // Fill in the code\
    \ here\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z')\n        s.split(\" \"\
    ).filter(x => x.filter(consonants.contains(_)).length == n).toList", "       \
    \ // Fill in the code here\n        return List[String]()", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n\
    \        words.filter(w => w.filter(c => !vowels.contains(c)).length == n)", " \
    \       // Fill in the code here\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \")\n        val result = words.filter(x\
    \ => x.count(!vowels.contains(_)) == n)\n        result.toList", "        // Fill\
    \ in the code here\n        return List()", "        // Fill in the code here\n\
    \        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \")\n        val result = new ListBuffer[String]\n        for (word <- words)\
    \ {\n            var count = 0\n            for (c <- word) {\n              \
    \  if (!vowels.contains(c)) count += 1\n            }\n            if (count ==\
    \ n) result += word\n        }\n        result.toList", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(x => x.filter(!vowels.contains(_)).length\
    \ == n).toList"]
stop_tokens:
- "\n    }\n"

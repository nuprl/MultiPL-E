name: HumanEval_46_fib4
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n    // fib4(0) -> 0\n    // fib4(1) -> 0\n    // fib4(2)\
  \ -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3)\
  \ + fib4(n-4).\n    // Please write a function to efficiently compute the n-th element\
  \ of the fib4 number sequence.  Do not use recursion.\n    // >>> fib4(5)\n    //\
  \ 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n    // 14\n    def fib4(n\
  \ : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fib4((5l)) == (4l));\n\
  \    assert(fib4((8l)) == (28l));\n    assert(fib4((10l)) == (104l));\n    assert(fib4((12l))\
  \ == (386l));\n    }\n\n}\n"
completions: ["        var a = 0L\n        var b = 0L\n        var c = 2L\n      \
    \  var d = 0L\n        for (i <- 4 to n.toInt) {\n            d = a + b + c\n\
    \            a = b\n            b = c\n            c = d\n        }\n        d",
  "        var a = 0L\n        var b = 0L\n        var c = 2L\n        var d = 0L\n\
    \        for (i <- 4 to n.toInt) {\n            val e = a + b + c + d\n      \
    \      a = b\n            b = c\n            c = d\n            d = e\n      \
    \  }\n        return d", "        var a = 0L\n        var b = 0L\n        var\
    \ c = 2L\n        var d = 0L\n        for (i <- 4 to n.toInt) {\n            d\
    \ = a + b + c\n            a = b\n            b = c\n            c = d\n     \
    \   }\n        d", "        if (n == 0) return 0\n        if (n == 1) return 0\n\
    \        if (n == 2) return 2\n        if (n == 3) return 0\n        var a = 0L\n\
    \        var b = 0L\n        var c = 2L\n        var d = 0L\n        for (i <-\
    \ 4 to n.toInt) {\n            val e = a + b + c + d\n            a = b\n    \
    \        b = c\n            c = d\n            d = e\n        }\n        return\
    \ d", "        var a = 0L\n        var b = 0L\n        var c = 2L\n        var\
    \ d = 0L\n        for (i <- 4 to n.toInt) {\n            d = a + b + c\n     \
    \       a = b\n            b = c\n            c = d\n        }\n        d", " \
    \       if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 2\n\
    \        else if (n == 3) 0\n        else {\n            var a = 0L\n        \
    \    var b = 0L\n            var c = 2L\n            var d = 0L\n            for\
    \ (i <- 4 to n.toInt) {\n                val e = a + b + c + d\n             \
    \   a = b\n                b = c\n                c = d\n                d = e\n\
    \            }\n            d\n        }", "        // Fill up this function body\n\
    \        // You may also define any auxiliary functions you need\n        0",
  "        var a = 0L\n        var b = 0L\n        var c = 2L\n        var d = 0L\n\
    \        for (i <- 4 to n.toInt) {\n            d = a + b + c\n            a =\
    \ b\n            b = c\n            c = d\n        }\n        d", "        var\
    \ a = 0L\n        var b = 0L\n        var c = 2L\n        var d = 0L\n       \
    \ for (i <- 4 to n.toInt) {\n            d = a + b + c\n            a = b\n  \
    \          b = c\n            c = d\n        }\n        return d", "        var\
    \ a = 0L\n        var b = 0L\n        var c = 2L\n        var d = 0L\n       \
    \ for (i <- 4 to n.toInt) {\n            d = a + b + c\n            a = b\n  \
    \          b = c\n            c = d\n        }\n        return d", "        var\
    \ a = 0L\n        var b = 0L\n        var c = 2L\n        var d = 0L\n       \
    \ for (i <- 4 to n.toInt) {\n            d = a + b + c\n            a = b\n  \
    \          b = c\n            c = d\n        }\n        d", "        var a = 0L\n\
    \        var b = 0L\n        var c = 2L\n        var d = 0L\n        for (i <-\
    \ 4 to n.toInt) {\n            d = a + b + c\n            a = b\n            b\
    \ = c\n            c = d\n        }\n        return d", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 0\n        if (n == 2) return 2\n        if (n\
    \ == 3) return 0\n        var a = 0L\n        var b = 0L\n        var c = 2L\n\
    \        var d = 0L\n        for (i <- 4 to n.toInt) {\n            val temp =\
    \ a + b + c + d\n            a = b\n            b = c\n            c = d\n   \
    \         d = temp\n        }\n        return a + b + c + d", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 2\n        else if\
    \ (n == 3) 0\n        else {\n            var a = 0L\n            var b = 0L\n\
    \            var c = 2L\n            var d = 0L\n            for (i <- 4 to n.toInt)\
    \ {\n                val e = a + b + c + d\n                a = b\n          \
    \      b = c\n                c = d\n                d = e\n            }\n  \
    \          a + b + c + d\n        }", "        var a = 0L\n        var b = 0L\n\
    \        var c = 2L\n        var d = 0L\n        for (i <- 4 to n.toInt) {\n \
    \           d = a + b + c\n            a = b\n            b = c\n            c\
    \ = d\n        }\n        d", "        var a = 0L\n        var b = 0L\n      \
    \  var c = 2L\n        var d = 0L\n        for (i <- 4 to n.toInt) {\n       \
    \     d = a + b + c\n            a = b\n            b = c\n            c = d\n\
    \        }\n        return d", "        var a = 0L\n        var b = 0L\n     \
    \   var c = 2L\n        var d = 0L\n        for (i <- 4 to n.toInt) {\n      \
    \      d = a + b + c\n            a = b\n            b = c\n            c = d\n\
    \        }\n        d", "        var a = 0L\n        var b = 0L\n        var c\
    \ = 2L\n        var d = 0L\n        for (i <- 4 to n.toInt) {\n            d =\
    \ a + b + c\n            a = b\n            b = c\n            c = d\n       \
    \ }\n        d", "        var a = 0L\n        var b = 0L\n        var c = 2L\n\
    \        var d = 0L\n        for (i <- 4 to n.toInt) {\n            d = a + b\
    \ + c\n            a = b\n            b = c\n            c = d\n        }\n  \
    \      return d", "        // Fill up this function body\n        // You may also\
    \ define other functions as you wish\n        0"]
stop_tokens:
- "\n    }\n"

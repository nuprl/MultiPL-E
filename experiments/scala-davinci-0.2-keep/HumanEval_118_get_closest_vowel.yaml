name: HumanEval_118_get_closest_vowel
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given a word. Your task is to find the closest vowel that stands\
  \ between \n    // two consonants from the right side of the word (case sensitive).\n\
  \    // Vowels in the beginning and ending doesn't count. Return empty string if\
  \ you didn't\n    // find any vowel met the above condition. \n    // You may assume\
  \ that the given string contains English letter only.\n    // Example:\n    // get_closest_vowel(\"\
  yogurt\") ==> \"u\"\n    // get_closest_vowel(\"FULL\") ==> \"U\"\n    // get_closest_vowel(\"\
  quick\") ==> \"\"\n    // get_closest_vowel(\"ab\") ==> \"\"\n    def getClosestVowel(word\
  \ : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
  yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
  u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n\
  \    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
  most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n\
  \    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"i\"\
  )));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  Above\")).equals((\"o\")));\n    }\n\n}\n"
completions: ["        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray\
    \ = word.toCharArray\n        var vowel = \"\"\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          vowel = wordArray(i).toString\n                break\n            }\n\
    \        }\n        vowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val wordArray = word.toCharArray\n        var minDistance = word.length\n\
    \        var closestVowel = \"\"\n        for (i <- 0 until word.length) {\n \
    \           if (vowels.contains(wordArray(i))) {\n                var j = i -\
    \ 1\n                while (j >= 0 && !vowels.contains(wordArray(j))) j -= 1\n\
    \                if (j >= 0) {\n                    var k = i + 1\n          \
    \          while (k < word.length && !vowels.contains(wordArray(k))) k += 1\n\
    \                    if (k < word.length) {\n                        val distance\
    \ = k - j\n                        if (distance < minDistance) {\n           \
    \                 minDistance = distance\n                            closestVowel\
    \ = wordArray(i).toString\n                        }\n                    }\n\
    \                }\n            }\n        }\n        closestVowel", "       \
    \ val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestDistance\
    \ = word.length\n        for (i <- word.length - 1 to 0 by -1) {\n           \
    \ if (vowels.contains(word(i))) {\n                var j = i - 1\n           \
    \     while (j >= 0 && !consonants.contains(word(j))) j -= 1\n               \
    \ if (j >= 0) {\n                    var k = i + 1\n                    while\
    \ (k < word.length && !consonants.contains(word(k))) k += 1\n                \
    \    if (k < word.length) {\n                        val distance = k - j\n  \
    \                      if (distance < closestDistance) {\n                   \
    \         closestDistance = distance\n                            closestVowel\
    \ = word(i).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        closestVowel", "        var vowels\
    \ = List(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var result = \"\"\n     \
    \   var min = Int.MaxValue\n        for (i <- 0 until word.length - 1) {\n   \
    \         if (vowels.contains(word(i).toString) && !vowels.contains(word(i + 1).toString))\
    \ {\n                var j = i + 1\n                while (j < word.length &&\
    \ !vowels.contains(word(j).toString)) j += 1\n                if (j < word.length\
    \ && vowels.contains(word(j).toString)) {\n                    if (j - i < min)\
    \ {\n                        min = j - i\n                        result = word(i).toString\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var result = \"\"\n      \
    \  for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val wordArray = word.toCharArray\n        var result = \"\"\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) {\n                    if\
    \ (i - 1 >= 0 && !vowels.contains(wordArray(i - 1))) {\n                     \
    \   result = wordArray(i).toString\n                    }\n                } else\
    \ if (i == 0) {\n                    if (i + 1 < wordArray.length && !vowels.contains(wordArray(i\
    \ + 1))) {\n                        result = wordArray(i).toString\n         \
    \           }\n                } else {\n                    if (!vowels.contains(wordArray(i\
    \ - 1)) && !vowels.contains(wordArray(i + 1))) {\n                        result\
    \ = wordArray(i).toString\n                    }\n                }\n        \
    \    }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n   \
    \     val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n      \
    \  val wordArray = word.toCharArray\n        val vowelIndices = wordArray.zipWithIndex.filter(x\
    \ => vowels.contains(x._1)).map(_._2)\n        val consonantIndices = wordArray.zipWithIndex.filter(x\
    \ => consonants.contains(x._1)).map(_._2)\n        val vowelConsonantPairs = vowelIndices.map(x\
    \ => (x, consonantIndices.filter(y => y > x).min)).filter(x => x._2 != None)\n\
    \        if (vowelConsonantPairs.isEmpty) \"\" else wordArray(vowelConsonantPairs.minBy(x\
    \ => x._2.get - x._1)._1).toString", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val wordReverse = word.reverse\n        var index = 0\n \
    \       var found = false\n        var result = \"\"\n        while (index < wordReverse.length\
    \ - 1 && !found) {\n            if (vowels.contains(wordReverse(index)) && !vowels.contains(wordReverse(index\
    \ + 1))) {\n                result = wordReverse(index).toString\n           \
    \     found = true\n            }\n            index += 1\n        }\n       \
    \ result", "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var closestVowel = \"\"\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) return \"\"\n            \
    \    if (consonants.contains(wordArray(i + 1))) {\n                    closestVowel\
    \ = wordArray(i).toString\n                    return closestVowel\n         \
    \       }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowelIndex = -1\n    \
    \    for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        for (i <- vowelIndex\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              return wordArray(vowelIndex).toString\n            }\n        }\n\
    \        \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var result = \"\"\n  \
    \      var lastConsonant = -1\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                if (lastConsonant\
    \ == -1) lastConsonant = i\n                else {\n                    for (j\
    \ <- i + 1 to lastConsonant) {\n                        if (vowels.contains(word(j)))\
    \ {\n                            result = word(j).toString\n                 \
    \           return result\n                        }\n                    }\n\
    \                    lastConsonant = i\n                }\n            }\n   \
    \     }\n        result", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n\
    \        val consonants = List('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordList\
    \ = word.toList\n        val wordListReversed = wordList.reverse\n        val\
    \ wordListReversedWithIndex = wordListReversed.zipWithIndex\n        val wordListReversedWithIndexFiltered\
    \ = wordListReversedWithIndex.filter(x => consonants.contains(x._1))\n       \
    \ val wordListReversedWithIndexFilteredWithVowel = wordListReversedWithIndexFiltered.filter(x\
    \ => vowels.contains(wordListReversed(x._2 + 1)))\n        if (wordListReversedWithIndexFilteredWithVowel.isEmpty)\
    \ \"\" else wordListReversedWithIndexFilteredWithVowel.minBy(x => x._2)._1.toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        var vowelIndex = -1\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                vowelIndex\
    \ = i\n                break\n            }\n        }\n        if (vowelIndex\
    \ == -1) return \"\"\n        for (i <- vowelIndex - 1 to 0 by -1) {\n       \
    \     if (!vowels.contains(wordArray(i))) return wordArray(vowelIndex).toString\n\
    \        }\n        \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val wordArray = word.toCharArray\n        val wordArrayReversed = wordArray.reverse\n\
    \        var vowel = \"\"\n        for (i <- 0 until wordArrayReversed.length\
    \ - 1) {\n            if (vowels.contains(wordArrayReversed(i)) && !vowels.contains(wordArrayReversed(i\
    \ + 1))) {\n                vowel = wordArrayReversed(i).toString\n          \
    \      break\n            }\n        }\n        vowel", "        val vowels =\
    \ \"aeiou\"\n        var closest = \"\"\n        var min = Int.MaxValue\n    \
    \    for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        val dist\
    \ = (i - j) + (k - i)\n                        if (dist < min) {\n           \
    \                 min = dist\n                            closest = word(i).toString\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        closest", "        val vowels = List(\"a\", \"e\"\
    , \"i\", \"o\", \"u\")\n        val consonants = List(\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val wordList = word.toList\n\
    \        val wordListReversed = wordList.reverse\n        var result = \"\"\n\
    \        var vowelIndex = -1\n        var consonantIndex = -1\n        for (i\
    \ <- 0 until wordListReversed.length) {\n            if (vowels.contains(wordListReversed(i).toString))\
    \ {\n                vowelIndex = i\n                for (j <- i + 1 until wordListReversed.length)\
    \ {\n                    if (consonants.contains(wordListReversed(j).toString))\
    \ {\n                        consonantIndex = j\n                        result\
    \ = wordListReversed(i).toString\n                        break\n            \
    \        }\n                }\n            }\n            if (result != \"\")\
    \ break\n        }\n        result", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val wordArray = word.toCharArray\n        var closestVowel\
    \ = \"\"\n        var closestVowelDistance = Int.MaxValue\n        for (i <- 0\
    \ until wordArray.length - 1) {\n            if (vowels.contains(wordArray(i))\
    \ && !vowels.contains(wordArray(i + 1))) {\n                val distance = wordArray.length\
    \ - i - 1\n                if (distance < closestVowelDistance) {\n          \
    \          closestVowelDistance = distance\n                    closestVowel =\
    \ wordArray(i).toString\n                }\n            }\n        }\n       \
    \ closestVowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var\
    \ closestVowel = \"\"\n        var closestVowelDistance = word.length\n      \
    \  for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        val distance\
    \ = k - j\n                        if (distance < closestVowelDistance) {\n  \
    \                          closestVowelDistance = distance\n                 \
    \           closestVowel = word(i).toString\n                        }\n     \
    \               }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        return wordArray(j).toString\n                  \
    \  }\n                }\n            }\n        }\n        \"\"", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        var closestVowel = \"\"\n   \
    \     var closestDistance = Int.MaxValue\n        for (i <- word.length - 1 to\
    \ 0 by -1) {\n            if (vowels.contains(word(i))) {\n                var\
    \ j = i - 1\n                while (j >= 0 && !vowels.contains(word(j))) j -=\
    \ 1\n                if (j >= 0) {\n                    val distance = i - j\n\
    \                    if (distance < closestDistance) {\n                     \
    \   closestDistance = distance\n                        closestVowel = word(i).toString\n\
    \                    }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        val wordList = word.toList\n        val vowelList = vowels.toList\n\
    \        val consonantList = consonants.toList\n        var vowelIndex = -1\n\
    \        var consonantIndex = -1\n        var result = \"\"\n        for (i <-\
    \ wordList.length - 1 to 0 by -1) {\n            if (vowelList.contains(wordList(i)))\
    \ {\n                vowelIndex = i\n                for (j <- i - 1 to 0 by -1)\
    \ {\n                    if (consonantList.contains(wordList(j))) {\n        \
    \                consonantIndex = j\n                        result = wordList(i).toString\n\
    \                        return result\n                    }\n              \
    \  }\n            }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      val wordArray = word.toCharArray\n        for (i <- wordArray.length -\
    \ 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n    \
    \            for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        return wordArray(j).toString\n                  \
    \  }\n                }\n            }\n        }\n        \"\"", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var closestVowel\
    \ = \"\"\n        var closestVowelIndex = -1\n        var closestConsonantIndex\
    \ = -1\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (closestVowelIndex == -1) {\n                    closestVowelIndex\
    \ = i\n                }\n            } else if (consonants.contains(wordArray(i)))\
    \ {\n                if (closestVowelIndex != -1) {\n                    if (closestConsonantIndex\
    \ == -1) {\n                        closestConsonantIndex = i\n              \
    \          closestVowel = wordArray(closestVowelIndex).toString\n            \
    \        } else {\n                        if (closestVowelIndex - i < closestVowelIndex\
    \ - closestConsonantIndex) {\n                            closestConsonantIndex\
    \ = i\n                            closestVowel = wordArray(closestVowelIndex).toString\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        return closestVowel", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      val wordArray = word.toCharArray\n        var vowelIndex = -1\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        var closestVowel\
    \ = wordArray(vowelIndex)\n        var closestVowelIndex = vowelIndex\n      \
    \  for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                closestVowel = wordArray(vowelIndex)\n                closestVowelIndex\
    \ = vowelIndex\n                break\n            }\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (abs(i - vowelIndex) < abs(closestVowelIndex - vowelIndex))\
    \ {\n                    closestVowel = wordArray(i)\n                    closestVowelIndex\
    \ = i\n                }\n            }\n        }\n        closestVowel.toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var result = \"\"\n        var min = Int.MaxValue\n\
    \        for (i <- 0 until word.length - 1) {\n            if (consonants.contains(word(i))\
    \ && vowels.contains(word(i + 1))) {\n                var j = i + 1\n        \
    \        while (j < word.length && vowels.contains(word(j))) {\n             \
    \       if (j - i < min) {\n                        min = j - i\n            \
    \            result = word(j).toString\n                    }\n              \
    \      j += 1\n                }\n            }\n        }\n        result", " \
    \       val vowels = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        val wordArray = word.toCharArray\n        var vowel = \"\"\n       \
    \ var distance = 0\n        for (i <- wordArray.length - 1 to 0 by -1) {\n   \
    \         if (consonants.contains(wordArray(i))) {\n                for (j <-\
    \ i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        if (distance == 0 || distance > i - j) {\n      \
    \                      distance = i - j\n                            vowel = wordArray(j).toString\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        vowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val wordArray = word.toCharArray\n        var closestVowel = \"\
    \"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) {\n                    if\
    \ (i - 1 >= 0 && !vowels.contains(wordArray(i - 1))) {\n                     \
    \   closestVowel = wordArray(i).toString\n                    }\n            \
    \    } else if (i == 0) {\n                    if (i + 1 < wordArray.length &&\
    \ !vowels.contains(wordArray(i + 1))) {\n                        closestVowel\
    \ = wordArray(i).toString\n                    }\n                } else {\n \
    \                   if (!vowels.contains(wordArray(i - 1)) && !vowels.contains(wordArray(i\
    \ + 1))) {\n                        closestVowel = wordArray(i).toString\n   \
    \                 }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val vowelsInWord = word.filter(vowels.contains(_))\n        val consonantsInWord\
    \ = word.filter(consonants.contains(_))\n        if (vowelsInWord.isEmpty || consonantsInWord.isEmpty)\
    \ return \"\"\n        val consonantsInWordIndex = consonantsInWord.map(consonants.indexOf(_))\n\
    \        val vowelsInWordIndex = vowelsInWord.map(vowels.indexOf(_))\n       \
    \ val minDistance = vowelsInWordIndex.map(vowelIndex => consonantsInWordIndex.map(consonantIndex\
    \ => abs(vowelIndex - consonantIndex)).min).min\n        val closestVowel = vowelsInWord(vowelsInWordIndex.indexOf(vowelsInWordIndex.minBy(vowelIndex\
    \ => abs(vowelIndex - consonantsInWordIndex.min))))\n        closestVowel.toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        var result = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                if (i ==\
    \ wordArray.length - 1) return \"\"\n                if (vowels.contains(wordArray(i\
    \ + 1))) return \"\"\n                result = wordArray(i).toString\n       \
    \         break\n            }\n        }\n        result", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestVowelDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length - 1) {\n            if (consonants.contains(word(i))\
    \ && consonants.contains(word(i + 1))) {\n                for (j <- i + 1 until\
    \ word.length) {\n                    if (vowels.contains(word(j))) {\n      \
    \                  if (j - i < closestVowelDistance) {\n                     \
    \       closestVowelDistance = j - i\n                            closestVowel\
    \ = word(j).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        val wordArray = word.toCharArray\n        var vowelIndex\
    \ = -1\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        for (i <- vowelIndex\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              return wordArray(vowelIndex).toString\n            }\n        }\n\
    \        \"\"", "        val vowels = \"aeiouAEIOU\"\n        val consonants =\
    \ \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val vowelsInWord = word.filter(vowels.contains(_))\n\
    \        val consonantsInWord = word.filter(consonants.contains(_))\n        if\
    \ (vowelsInWord.length == 0 || consonantsInWord.length == 0) return \"\"\n   \
    \     val vowelsInWordSet = vowelsInWord.toSet\n        val consonantsInWordSet\
    \ = consonantsInWord.toSet\n        val vowelsInWordIndex = vowelsInWord.map(word.indexOf(_))\n\
    \        val consonantsInWordIndex = consonantsInWord.map(word.indexOf(_))\n \
    \       val vowelsInWordIndexSet = vowelsInWordIndex.toSet\n        val consonantsInWordIndexSet\
    \ = consonantsInWordIndex.toSet\n        val vowelsInWordIndexSorted = vowelsInWordIndex.sorted\n\
    \        val consonantsInWordIndexSorted = consonantsInWordIndex.sorted\n    \
    \    val vowelsInWordIndexSortedSet = vowelsInWordIndexSorted.toSet\n        val\
    \ consonantsInWordIndexSortedSet = consonantsInWordIndexSorted.toSet\n       \
    \ val vowelsInWordIndexSortedSetDiff = vowelsInWordIndexSortedSet.diff(consonantsInWordIndexSortedSet)\n\
    \        val consonantsInWordIndexSortedSetDiff = consonantsInWordIndexSortedSet.diff(vowelsInWordIndexSortedSet)\n\
    \        val vowelsInWordIndexSortedSetDiffSorted = vowelsInWordIndexSortedSetDiff.toList.sorted\n\
    \        val consonantsInWordIndexSortedSetDiffSorted = consonantsInWordIndexSortedSetDiff.toList.sorted\n\
    \        val vowelsInWordIndexSortedSetDiffSortedSet = vowelsInWordIndexSortedSetDiffSorted.toSet\n\
    \        val consonantsInWordIndexSortedSetDiffSortedSet = consonantsInWordIndexSortedSetDiffSorted.toSet\n\
    \        val vowelsInWordIndexSortedSetDiffSortedSetDiff", "        val vowels\
    \ = \"AEIOUaeiou\"\n        val consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n        val wordArray = word.toCharArray\n        var closestVowel = \"\"\n\
    \        var closestDistance = word.length\n        for (i <- wordArray.indices)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                var distance\
    \ = 0\n                var j = i\n                while (j < wordArray.length\
    \ && !consonants.contains(wordArray(j))) {\n                    j += 1\n     \
    \               distance += 1\n                }\n                if (j < wordArray.length\
    \ && distance < closestDistance) {\n                    closestDistance = distance\n\
    \                    closestVowel = wordArray(i).toString\n                }\n\
    \            }\n        }\n        closestVowel", "        val vowels = \"aeiou\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        val vowelsSet =\
    \ vowels.toSet\n        val consonantsSet = consonants.toSet\n        val wordSet\
    \ = word.toSet\n        val wordList = word.toList\n        val wordListReverse\
    \ = wordList.reverse\n        val wordListReverseSet = wordListReverse.toSet\n\
    \        val wordListReverseSetIntersectVowels = wordListReverseSet.intersect(vowelsSet)\n\
    \        val wordListReverseSetIntersectConsonants = wordListReverseSet.intersect(consonantsSet)\n\
    \        val wordListReverseSetIntersectVowelsList = wordListReverseSetIntersectVowels.toList\n\
    \        val wordListReverseSetIntersectConsonantsList = wordListReverseSetIntersectConsonants.toList\n\
    \        val wordListReverseSetIntersectVowelsListReverse = wordListReverseSetIntersectVowelsList.reverse\n\
    \        val wordListReverseSetIntersectConsonantsListReverse = wordListReverseSetIntersectConsonantsList.reverse\n\
    \        val wordListReverseSetIntersectVowelsListReverseMap = wordListReverseSetIntersectVowelsListReverse.map(x\
    \ => (x, wordListReverse.indexOf(x)))\n        val wordListReverseSetIntersectConsonantsListReverseMap\
    \ = wordListReverseSetIntersectConsonantsListReverse.map(x => (x, wordListReverse.indexOf(x)))\n\
    \        val wordListReverseSetIntersectVowelsListReverseMapSorted = wordListReverseSetIntersectVowelsListReverseMap.sortBy(_._2)\n\
    \        val wordListReverseSetIntersectConsonantsListReverseMapSorted = wordListReverseSetIntersectConsonantsListReverseMap.sortBy(_._2)\n\
    \        val wordListReverseSetIntersectVowelsListReverseMapS", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        if (j - i < closestDistance)\
    \ {\n                            closestDistance = j - i\n                   \
    \         closestVowel = word(j).toString\n                        }\n       \
    \             }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        var result = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                if (i ==\
    \ wordArray.length - 1) return \"\"\n                if (vowels.contains(wordArray(i\
    \ + 1))) return \"\"\n                result = wordArray(i).toString\n       \
    \         return result\n            }\n        }\n        result", "        val\
    \ vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var closestVowel = \"\"\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) return \"\"\n            \
    \    else if (consonants.contains(wordArray(i + 1))) {\n                    closestVowel\
    \ = wordArray(i).toString\n                    break\n                }\n    \
    \        }\n        }\n        closestVowel", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n    \
    \    val wordArray = word.toCharArray\n        var closestVowel = \"\"\n     \
    \   for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !consonants.contains(wordArray(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < wordArray.length && !consonants.contains(wordArray(k)))\
    \ k += 1\n                    if (k < wordArray.length) {\n                  \
    \      closestVowel = wordArray(i).toString\n                    }\n         \
    \       }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        val\
    \ vowelsSet = vowels.toSet\n        val consonantsSet = consonants.toSet\n   \
    \     var closestVowel = \"\"\n        var closestVowelDistance = 0\n        for\
    \ (i <- 0 until word.length) {\n            if (vowelsSet.contains(word(i))) {\n\
    \                if (i > 0 && consonantsSet.contains(word(i - 1))) {\n       \
    \             if (closestVowelDistance == 0 || i < closestVowelDistance) {\n \
    \                       closestVowelDistance = i\n                        closestVowel\
    \ = word(i).toString\n                    }\n                }\n            }\n\
    \        }\n        closestVowel", "        val vowels = \"aeiou\"\n        val\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n        val wordArray = word.toCharArray\n\
    \        var vowelIndex = -1\n        var consonantIndex = -1\n        for (i\
    \ <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                consonantIndex = i\n                break\n            }\n\
    \        }\n        if (vowelIndex == -1 || consonantIndex == -1) \"\" else wordArray(vowelIndex).toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        var vowelIndex = -1\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                vowelIndex\
    \ = i\n                break\n            }\n        }\n        if (vowelIndex\
    \ == -1) return \"\"\n        for (i <- vowelIndex - 1 to 0 by -1) {\n       \
    \     if (!vowels.contains(wordArray(i))) return wordArray(vowelIndex).toString\n\
    \        }\n        \"\"", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n\
    \        val wordList = word.toList\n        val vowelIndices = wordList.zipWithIndex.filter(x\
    \ => vowels.contains(x._1)).map(_._2)\n        if (vowelIndices.length == 0) return\
    \ \"\"\n        val consonantIndices = wordList.zipWithIndex.filter(x => !vowels.contains(x._1)).map(_._2)\n\
    \        if (consonantIndices.length == 0) return \"\"\n        val consonantIndicesSet\
    \ = consonantIndices.toSet\n        val closestVowelIndices = vowelIndices.filter(x\
    \ => consonantIndicesSet.contains(x - 1) && consonantIndicesSet.contains(x + 1))\n\
    \        if (closestVowelIndices.length == 0) return \"\"\n        val closestVowelIndex\
    \ = closestVowelIndices.max\n        wordList(closestVowelIndex).toString", " \
    \       val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var vowel = \"\"\n        var min = word.length\n        for (i <- 0\
    \ until word.length) {\n            if (vowels.contains(word(i))) {\n        \
    \        var j = i - 1\n                while (j >= 0 && consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0 && consonants.contains(word(j))) {\n    \
    \                j = i + 1\n                    while (j < word.length && consonants.contains(word(j)))\
    \ j += 1\n                    if (j < word.length && consonants.contains(word(j)))\
    \ {\n                        if (min > abs(i - j)) {\n                       \
    \     min = abs(i - j)\n                            vowel = word(i).toString\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        vowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                var foundConsonant = false\n                for (j <- i -\
    \ 1 to 0 by -1) {\n                    if (!vowels.contains(word(j))) {\n    \
    \                    foundConsonant = true\n                        break\n  \
    \                  }\n                }\n                if (foundConsonant) {\n\
    \                    for (j <- i + 1 until word.length) {\n                  \
    \      if (!vowels.contains(word(j))) {\n                            if (j - i\
    \ < closestDistance) {\n                                closestDistance = j -\
    \ i\n                                closestVowel = word(i).toString\n       \
    \                     }\n                            break\n                 \
    \       }\n                    }\n                }\n            }\n        }\n\
    \        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n \
    \       val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var closestVowel\
    \ = \"\"\n        var closestVowelDistance = Int.MaxValue\n        for (i <- 0\
    \ until word.length) {\n            if (consonants.contains(word(i))) {\n    \
    \            for (j <- i + 1 until word.length) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        if (j - i < closestVowelDistance) {\n           \
    \                 closestVowelDistance = j - i\n                            closestVowel\
    \ = word(j).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val chars = word.toCharArray\n     \
    \   var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n    \
    \    for (i <- 0 until chars.length) {\n            if (vowels.contains(chars(i)))\
    \ {\n                var left = i - 1\n                var right = i + 1\n   \
    \             var leftConsonant = false\n                var rightConsonant =\
    \ false\n                while (left >= 0 && !leftConsonant) {\n             \
    \       if (!vowels.contains(chars(left))) leftConsonant = true\n            \
    \        else left -= 1\n                }\n                while (right < chars.length\
    \ && !rightConsonant) {\n                    if (!vowels.contains(chars(right)))\
    \ rightConsonant = true\n                    else right += 1\n               \
    \ }\n                if (leftConsonant && rightConsonant) {\n                \
    \    val distance = right - left - 1\n                    if (distance < closestDistance)\
    \ {\n                        closestDistance = distance\n                    \
    \    closestVowel = chars(i).toString\n                    }\n               \
    \ }\n            }\n        }\n        closestVowel", "        val vowels = \"\
    aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        val wordArray\
    \ = word.toCharArray\n        var closestVowel = \"\"\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          if (i == wordArray.length - 1) {\n                    if (consonants.contains(wordArray(i\
    \ - 1))) {\n                        closestVowel = wordArray(i).toString\n   \
    \                 }\n                } else if (i == 0) {\n                  \
    \  if (consonants.contains(wordArray(i + 1))) {\n                        closestVowel\
    \ = wordArray(i).toString\n                    }\n                } else {\n \
    \                   if (consonants.contains(wordArray(i - 1)) && consonants.contains(wordArray(i\
    \ + 1))) {\n                        closestVowel = wordArray(i).toString\n   \
    \                 }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        val wordArray = word.toCharArray\n        var closestVowel = \"\"\n\
    \        var closestVowelIndex = word.length\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i))) {\n                var j = i -\
    \ 1\n                while (j >= 0 && consonants.contains(word(j))) {\n      \
    \              j -= 1\n                }\n                if (j >= 0 && consonants.contains(word(j)))\
    \ {\n                    j = i + 1\n                    while (j < word.length\
    \ && consonants.contains(word(j))) {\n                        j += 1\n       \
    \             }\n                    if (j < word.length && consonants.contains(word(j)))\
    \ {\n                        if (i < closestVowelIndex) {\n                  \
    \          closestVowelIndex = i\n                            closestVowel = word(i).toString\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      val wordArray = word.toCharArray\n        var minDistance = Int.MaxValue\n\
    \        var closestVowel = \"\"\n        for (i <- 0 until wordArray.length)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                var j =\
    \ i - 1\n                while (j >= 0 && !consonants.contains(wordArray(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < wordArray.length && !consonants.contains(wordArray(k)))\
    \ k += 1\n                    if (k < wordArray.length) {\n                  \
    \      val distance = k - j\n                        if (distance < minDistance)\
    \ {\n                            minDistance = distance\n                    \
    \        closestVowel = wordArray(i).toString\n                        }\n   \
    \                 }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var vowelIndex\
    \ = -1\n        var consonantIndex = -1\n        for (i <- wordArray.length -\
    \ 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n        \
    \        vowelIndex = i\n                break\n            }\n        }\n   \
    \     for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                consonantIndex = i\n                break\n            }\n\
    \        }\n        if (vowelIndex == -1 || consonantIndex == -1) \"\" else wordArray(vowelIndex).toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var vowel\
    \ = \"\"\n        var distance = 0\n        for (i <- wordArray.length - 1 to\
    \ 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n             \
    \   var j = i - 1\n                while (j >= 0 && !consonants.contains(wordArray(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < wordArray.length && !consonants.contains(wordArray(k)))\
    \ k += 1\n                    if (k < wordArray.length) {\n                  \
    \      if (distance == 0 || distance > k - j) {\n                            distance\
    \ = k - j\n                            vowel = wordArray(i).toString\n       \
    \                 }\n                    }\n                }\n            }\n\
    \        }\n        vowel", "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n\
    \        val wordChars = word.toCharArray\n        var vowel = \"\"\n        for\
    \ (i <- wordChars.length - 1 to 0 by -1) {\n            if (vowels.contains(wordChars(i)))\
    \ {\n                if (i == wordChars.length - 1) return \"\"\n            \
    \    if (vowels.contains(wordChars(i + 1))) return \"\"\n                vowel\
    \ = wordChars(i).toString\n                break\n            }\n        }\n \
    \       vowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ wordArray = word.toCharArray\n        var closestVowel = \"\"\n        for (i\
    \ <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) {\n                    closestVowel\
    \ = \"\"\n                } else if (vowels.contains(wordArray(i + 1))) {\n  \
    \                  closestVowel = \"\"\n                } else {\n           \
    \         closestVowel = wordArray(i).toString\n                }\n          \
    \  }\n        }\n        closestVowel", "        var vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        var result = \"\"\n        var min = word.length\n      \
    \  for (i <- 0 until word.length - 1) {\n            if (vowels.contains(word(i))\
    \ && !vowels.contains(word(i + 1))) {\n                var j = i + 1\n       \
    \         while (j < word.length && !vowels.contains(word(j))) j += 1\n      \
    \          if (j < word.length && j - i < min) {\n                    min = j\
    \ - i\n                    result = word(i).toString\n                }\n    \
    \        }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n\
    \        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n   \
    \     val wordList = word.toList\n        val vowelList = vowels.toList\n    \
    \    val consonantList = consonants.toList\n        var vowelIndex = -1\n    \
    \    var consonantIndex = -1\n        var vowelIndexList = List[Int]()\n     \
    \   var consonantIndexList = List[Int]()\n        for (i <- 0 until wordList.length)\
    \ {\n            if (vowelList.contains(wordList(i))) {\n                vowelIndexList\
    \ = vowelIndexList :+ i\n            }\n            if (consonantList.contains(wordList(i)))\
    \ {\n                consonantIndexList = consonantIndexList :+ i\n          \
    \  }\n        }\n        if (vowelIndexList.length == 0 || consonantIndexList.length\
    \ == 0) {\n            return \"\"\n        }\n        var minDistance = wordList.length\n\
    \        for (i <- 0 until vowelIndexList.length) {\n            for (j <- 0 until\
    \ consonantIndexList.length) {\n                if (vowelIndexList(i) > consonantIndexList(j))\
    \ {\n                    val distance = vowelIndexList(i) - consonantIndexList(j)\n\
    \                    if (distance < minDistance) {\n                        minDistance\
    \ = distance\n                        vowelIndex = vowelIndexList(i)\n       \
    \                 consonantIndex = consonantIndexList(j)\n                   \
    \ }\n                }\n            }\n        }\n        if (vowelIndex == -1\
    \ || consonantIndex == -1) {\n            return \"\"\n        }\n        return\
    \ wordList(vowelIndex).toString", "        var vowels = List(\"a\", \"e\", \"\
    i\", \"o\", \"u\")\n        var result = \"\"\n        for (i <- word.length -\
    \ 1 to 0 by -1) {\n            if (vowels.contains(word(i).toString)) {\n    \
    \            result = word(i).toString\n                if (i < word.length -\
    \ 1 && !vowels.contains(word(i + 1).toString)) return result\n            }\n\
    \            else if (result != \"\") return result\n        }\n        return\
    \ \"\"", "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var min = word.length\n        var result = \"\"\n        for (i <-\
    \ 0 until word.length) {\n            if (vowels.contains(word(i))) {\n      \
    \          var j = i - 1\n                while (j >= 0 && consonants.contains(word(j)))\
    \ j -= 1\n                var k = i + 1\n                while (k < word.length\
    \ && consonants.contains(word(k))) k += 1\n                if (j >= 0 && k < word.length\
    \ && k - j < min) {\n                    min = k - j\n                    result\
    \ = word(i).toString\n                }\n            }\n        }\n        result",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val consonants = List('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var closestVowel\
    \ = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if\
    \ (vowels.contains(wordArray(i))) {\n                if (i == wordArray.length\
    \ - 1) {\n                    if (consonants.contains(wordArray(i - 1))) {\n \
    \                       closestVowel = wordArray(i).toString\n               \
    \     }\n                } else if (i == 0) {\n                    if (consonants.contains(wordArray(i\
    \ + 1))) {\n                        closestVowel = wordArray(i).toString\n   \
    \                 }\n                } else {\n                    if (consonants.contains(wordArray(i\
    \ - 1)) && consonants.contains(wordArray(i + 1))) {\n                        closestVowel\
    \ = wordArray(i).toString\n                    }\n                }\n        \
    \    }\n        }\n        closestVowel", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n    \
    \    val wordArray = word.toCharArray\n        var vowel = \"\"\n        for (i\
    \ <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowel = wordArray(i).toString\n                if (i > 0\
    \ && consonants.contains(wordArray(i - 1))) return vowel\n            }\n    \
    \    }\n        return \"\"", "        val vowels = \"aeiouAEIOU\"\n        val\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val wordArray\
    \ = word.toCharArray\n        for (i <- wordArray.length - 1 to 0 by -1) {\n \
    \           if (consonants.contains(wordArray(i))) {\n                for (j <-\
    \ i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        return wordArray(j).toString\n                  \
    \  }\n                }\n            }\n        }\n        \"\"", "        val\
    \ vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        var min = Int.MaxValue\n        for (i <-\
    \ 0 until word.length) {\n            if (vowels.contains(word(i))) {\n      \
    \          var j = i - 1\n                while (j >= 0 && consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0 && consonants.contains(word(j))) {\n    \
    \                var k = i + 1\n                    while (k < word.length &&\
    \ consonants.contains(word(k))) k += 1\n                    if (k < word.length\
    \ && consonants.contains(word(k))) {\n                        if (k - j < min)\
    \ {\n                            min = k - j\n                            result\
    \ = word(i).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        result", "        var vowels\
    \ = \"aeiouAEIOU\"\n        var consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     return word(j).toString\n                    }\n       \
    \         }\n            }\n        }\n        return result", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowel = \"\"\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowel = wordArray(i).toString\n                for (j <-\
    \ i - 1 to 0 by -1) {\n                    if (consonants.contains(wordArray(j)))\
    \ {\n                        return vowel\n                    }\n           \
    \     }\n            }\n        }\n        return \"\"", "        val vowels =\
    \ \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var result = \"\"\n      \
    \  for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordArray\
    \ = word.toCharArray\n        var closestVowel = \"\"\n        var closestDistance\
    \ = Int.MaxValue\n        for (i <- 0 until wordArray.length - 1) {\n        \
    \    if (consonants.contains(wordArray(i)) && consonants.contains(wordArray(i\
    \ + 1))) {\n                for (j <- i + 1 until wordArray.length) {\n      \
    \              if (vowels.contains(wordArray(j))) {\n                        if\
    \ (j - i < closestDistance) {\n                            closestDistance = j\
    \ - i\n                            closestVowel = wordArray(j).toString\n    \
    \                    }\n                    }\n                }\n           \
    \ }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\n\
    \        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n   \
    \     val wordArray = word.toCharArray\n        var result = \"\"\n        for\
    \ (i <- 0 until wordArray.length - 1) {\n            if (consonants.contains(wordArray(i))\
    \ && vowels.contains(wordArray(i + 1))) {\n                result = wordArray(i\
    \ + 1).toString\n                break\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        return wordArray(j).toString\n                  \
    \  }\n                }\n            }\n        }\n        \"\"", "        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants = Set(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        var\
    \ result = \"\"\n        var min = Int.MaxValue\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i).toString)) {\n                if\
    \ (i > 0 && consonants.contains(word(i - 1).toString)) {\n                   \
    \ if (i < word.length - 1 && consonants.contains(word(i + 1).toString)) {\n  \
    \                      if (i < min) {\n                            min = i\n \
    \                           result = word(i).toString\n                      \
    \  }\n                    }\n                }\n            }\n        }\n   \
    \     result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n\
    \        var vowelIndex = -1\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                vowelIndex\
    \ = i\n                break\n            }\n        }\n        if (vowelIndex\
    \ == -1) return \"\"\n        var consonantIndex = -1\n        for (i <- vowelIndex\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              consonantIndex = i\n                break\n            }\n    \
    \    }\n        if (consonantIndex == -1) return \"\"\n        return wordArray(vowelIndex).toString",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var left = i - 1\n                var right = i + 1\n   \
    \             while (left >= 0 && consonants.contains(word(left))) left -= 1\n\
    \                while (right < word.length && consonants.contains(word(right)))\
    \ right += 1\n                if (left >= 0 && right < word.length) {\n      \
    \              val distance = right - left - 1\n                    if (distance\
    \ < closestDistance) {\n                        closestDistance = distance\n \
    \                       closestVowel = word(i).toString\n                    }\n\
    \                }\n            }\n        }\n        closestVowel", "       \
    \ val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestVowelDistance\
    \ = 0\n        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) {\n                    return \"\
    \"\n                }\n                if (consonants.contains(word(i + 1))) {\n\
    \                    closestVowel = word(i).toString\n                    closestVowelDistance\
    \ = word.length - i - 1\n                    break\n                }\n      \
    \      }\n        }\n        for (i <- word.length - 1 to 0 by -1) {\n       \
    \     if (vowels.contains(word(i))) {\n                if (i == word.length -\
    \ 1) {\n                    return \"\"\n                }\n                if\
    \ (consonants.contains(word(i + 1))) {\n                    if (word.length -\
    \ i - 1 < closestVowelDistance) {\n                        closestVowel = word(i).toString\n\
    \                        closestVowelDistance = word.length - i - 1\n        \
    \            }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var closest = \"\"\n\
    \        var closestDistance = word.length\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i))) {\n                var j = i -\
    \ 1\n                while (j >= 0 && !vowels.contains(word(j))) j -= 1\n    \
    \            if (j >= 0) {\n                    var k = i + 1\n              \
    \      while (k < word.length && !vowels.contains(word(k))) k += 1\n         \
    \           if (k < word.length) {\n                        val distance = (i\
    \ - j) + (k - i)\n                        if (distance < closestDistance) {\n\
    \                            closestDistance = distance\n                    \
    \        closest = word(i).toString\n                        }\n             \
    \       }\n                }\n            }\n        }\n        closest", "  \
    \      val vowels = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        val wordArray = word.toCharArray\n        var closestVowel = \"\"\n\
    \        var closestVowelIndex = -1\n        for (i <- wordArray.length - 1 to\
    \ 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n             \
    \   if (i + 1 < wordArray.length && consonants.contains(wordArray(i + 1))) {\n\
    \                    if (i - 1 >= 0 && consonants.contains(wordArray(i - 1)))\
    \ {\n                        if (closestVowelIndex == -1 || i > closestVowelIndex)\
    \ {\n                            closestVowel = wordArray(i).toString\n      \
    \                      closestVowelIndex = i\n                        }\n    \
    \                }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var result\
    \ = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if\
    \ (consonants.contains(wordArray(i))) {\n                for (j <- i - 1 to 0\
    \ by -1) {\n                    if (vowels.contains(wordArray(j))) {\n       \
    \                 result = wordArray(j).toString\n                        return\
    \ result\n                    }\n                }\n            }\n        }\n\
    \        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n       \
    \ val wordRev = word.reverse\n        var closestVowel = \"\"\n        var closestVowelDistance\
    \ = Int.MaxValue\n        for (i <- 0 until wordRev.length - 1) {\n          \
    \  if (vowels.contains(wordRev(i)) && !vowels.contains(wordRev(i + 1))) {\n  \
    \              val distance = wordRev.length - i - 1\n                if (distance\
    \ < closestVowelDistance) {\n                    closestVowel = wordRev(i).toString\n\
    \                    closestVowelDistance = distance\n                }\n    \
    \        }\n        }\n        closestVowel", "        val vowels = \"aeiou\"\n\
    \        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        var closest = \"\"\
    \n        var distance = word.length\n        for (i <- word.length - 1 to 0 by\
    \ -1) {\n            if (vowels.contains(word(i))) {\n                var j =\
    \ i - 1\n                while (j >= 0 && consonants.contains(word(j))) j -= 1\n\
    \                if (j >= 0 && consonants.contains(word(j))) {\n             \
    \       if (i - j < distance) {\n                        distance = i - j\n  \
    \                      closest = word(i).toString\n                    }\n   \
    \             }\n            }\n        }\n        closest", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        val wordLength = wordArray.length\n\
    \        var result = \"\"\n        for (i <- wordLength - 1 to 0 by -1) {\n \
    \           if (consonants.contains(wordArray(i))) {\n                for (j <-\
    \ i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n      \
    \  val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val\
    \ wordArray = word.toCharArray\n        var vowelIndex = -1\n        var consonantIndex\
    \ = -1\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                consonantIndex = i\n                break\n            }\n\
    \        }\n        if (vowelIndex == -1 || consonantIndex == -1) \"\" else wordArray(vowelIndex).toString",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestDistance = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        if (j - i < closestDistance)\
    \ {\n                            closestDistance = j - i\n                   \
    \         closestVowel = word(j).toString\n                        }\n       \
    \             }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var closestVowel = \"\
    \"\n        var closestDistance = Int.MaxValue\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(word(i))) {\n           \
    \     var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    val distance = i\
    \ - j\n                    if (distance < closestDistance) {\n               \
    \         closestDistance = distance\n                        closestVowel = word(i).toString\n\
    \                    }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var result\
    \ = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if\
    \ (consonants.contains(wordArray(i))) {\n                for (j <- i - 1 to 0\
    \ by -1) {\n                    if (vowels.contains(wordArray(j))) {\n       \
    \                 result = wordArray(j).toString\n                        return\
    \ result\n                    }\n                }\n            }\n        }\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val vowelsInWord =\
    \ word.filter(vowels.contains(_))\n        val consonantsInWord = word.filter(consonants.contains(_))\n\
    \        val vowelsInWordWithIndex = vowelsInWord.zipWithIndex\n        val consonantsInWordWithIndex\
    \ = consonantsInWord.zipWithIndex\n        val vowelsInWordWithIndexReversed =\
    \ vowelsInWordWithIndex.reverse\n        val consonantsInWordWithIndexReversed\
    \ = consonantsInWordWithIndex.reverse\n        val vowelsInWordWithIndexReversedMap\
    \ = vowelsInWordWithIndexReversed.toMap\n        val consonantsInWordWithIndexReversedMap\
    \ = consonantsInWordWithIndexReversed.toMap\n        val vowelsInWordWithIndexReversedMapKeys\
    \ = vowelsInWordWithIndexReversedMap.keys\n        val consonantsInWordWithIndexReversedMapKeys\
    \ = consonantsInWordWithIndexReversedMap.keys\n        val vowelsInWordWithIndexReversedMapKeysSorted\
    \ = vowelsInWordWithIndexReversedMapKeys.toList.sorted\n        val consonantsInWordWithIndexReversedMapKeysSorted\
    \ = consonantsInWordWithIndexReversedMapKeys.toList.sorted\n        val vowelsInWordWithIndexReversedMapKeysSortedReversed\
    \ = vowelsInWordWithIndexReversedMapKeysSorted.reverse\n        val consonantsInWordWithIndexReversedMapKeysSortedReversed\
    \ = consonantsInWordWithIndexReversedMapKeysSorted.reverse\n        val vowelsInWordWithIndexReversedMapKeysSortedReversedWithIndex\
    \ = vowelsInWordWithIndexReversedMapKeysSortedReversed.zipWithIndex\n        val\
    \ consonantsInWordWithIndexReversedMapKeysSortedReversedWithIndex = consonantsInWordWithIndexReversedMapKeysSortedReversed.zipWithIndex\n\
    \        val vowelsInWordWithIndexReversedMapKeysSortedRe", "        var result\
    \ = \"\"\n        val vowels = \"aeiou\"\n        for (i <- word.length - 1 to\
    \ 0 by -1) {\n            if (vowels.contains(word(i))) {\n                if\
    \ (i == word.length - 1) return \"\"\n                if (vowels.contains(word(i\
    \ + 1))) return \"\"\n                result = word(i).toString\n            \
    \    break\n            }\n        }\n        result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n\
    \        val wordArray = word.toCharArray\n        var result = \"\"\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val chars = word.toCharArray\n        var minDist = Int.MaxValue\n\
    \        var minVowel = \"\"\n        for (i <- 0 until chars.length) {\n    \
    \        if (vowels.contains(chars(i))) {\n                var j = i - 1\n   \
    \             while (j >= 0 && !vowels.contains(chars(j))) j -= 1\n          \
    \      if (j >= 0) {\n                    var k = i + 1\n                    while\
    \ (k < chars.length && !vowels.contains(chars(k))) k += 1\n                  \
    \  if (k < chars.length) {\n                        val dist = k - j\n       \
    \                 if (dist < minDist) {\n                            minDist =\
    \ dist\n                            minVowel = chars(i).toString\n           \
    \             }\n                    }\n                }\n            }\n   \
    \     }\n        minVowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i + 1\n                while (j < word.length &&\
    \ !vowels.contains(word(j))) j += 1\n                if (j < word.length) {\n\
    \                    val distance = j - i\n                    if (distance <\
    \ closestDistance) {\n                        closestDistance = distance\n   \
    \                     closestVowel = word(i).toString\n                    }\n\
    \                }\n            }\n        }\n        closestVowel", "       \
    \ val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowel = \"\"\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowel = wordArray(i).toString\n                for (j <-\
    \ i - 1 to 0 by -1) {\n                    if (consonants.contains(wordArray(j)))\
    \ {\n                        return vowel\n                    }\n           \
    \     }\n            }\n        }\n        return \"\"", "        val vowels =\
    \ \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        var result\
    \ = \"\"\n        var min = Int.MaxValue\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i))) {\n                var j = i -\
    \ 1\n                while (j >= 0 && consonants.contains(word(j))) j -= 1\n \
    \               if (j >= 0 && consonants.contains(word(j))) {\n              \
    \      j = i + 1\n                    while (j < word.length && consonants.contains(word(j)))\
    \ j += 1\n                    if (j < word.length && consonants.contains(word(j)))\
    \ {\n                        if (i - j < min) {\n                            min\
    \ = i - j\n                            result = word(i).toString\n           \
    \             }\n                    }\n                }\n            }\n   \
    \     }\n        result", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val wordArray = word.toCharArray\n\
    \        var vowelIndex = -1\n        var consonantIndex = -1\n        for (i\
    \ <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        for (i <- vowelIndex\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              consonantIndex = i\n                break\n            }\n    \
    \    }\n        if (consonantIndex == -1) return \"\"\n        return wordArray(vowelIndex).toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordRev = word.reverse\n\
    \        var prev = ' '\n        for (i <- 0 until wordRev.length) {\n       \
    \     if (vowels.contains(wordRev(i))) {\n                if (prev != ' ' && !vowels.contains(prev))\
    \ return wordRev(i).toString\n            }\n            prev = wordRev(i)\n \
    \       }\n        \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordSet\
    \ = word.toLowerCase.toSet\n        val vowelSet = wordSet.intersect(vowels)\n\
    \        val consonantSet = wordSet.intersect(consonants)\n        if (vowelSet.isEmpty\
    \ || consonantSet.isEmpty) return \"\"\n        val vowelList = vowelSet.toList.sorted\n\
    \        val consonantList = consonantSet.toList.sorted\n        val vowelIndex\
    \ = vowelList.indexWhere(v => consonantList.indexWhere(c => c > v) != -1)\n  \
    \      if (vowelIndex == -1) return \"\"\n        val vowel = vowelList(vowelIndex)\n\
    \        val consonant = consonantList(consonantList.indexWhere(c => c > vowel))\n\
    \        val vowelIndexInWord = word.indexOf(vowel)\n        val consonantIndexInWord\
    \ = word.indexOf(consonant)\n        if (vowelIndexInWord > consonantIndexInWord)\
    \ return \"\"\n        word.substring(vowelIndexInWord, vowelIndexInWord + 1)",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var vowel\
    \ = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if\
    \ (vowels.contains(wordArray(i))) {\n                vowel = wordArray(i).toString\n\
    \                if (i > 0 && consonants.contains(wordArray(i - 1))) return vowel\n\
    \            }\n        }\n        return \"\"", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val chars = word.toCharArray\n        var result\
    \ = \"\"\n        for (i <- 0 until chars.length - 1) {\n            if (vowels.contains(chars(i))\
    \ && !vowels.contains(chars(i + 1))) {\n                result = chars(i).toString\n\
    \                break\n            }\n        }\n        result", "        val\
    \ vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        var minDistance = Int.MaxValue\n        for\
    \ (i <- 0 until word.length) {\n            if (vowels.contains(word(i))) {\n\
    \                var left = i - 1\n                var right = i + 1\n       \
    \         while (left >= 0 && consonants.contains(word(left))) left -= 1\n   \
    \             while (right < word.length && consonants.contains(word(right)))\
    \ right += 1\n                if (left >= 0 && right < word.length) {\n      \
    \              val distance = right - left - 1\n                    if (distance\
    \ < minDistance) {\n                        minDistance = distance\n         \
    \               result = word(i).toString\n                    }\n           \
    \     }\n            }\n        }\n        result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n\
    \        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length - 1) {\n            if (consonants.contains(word(i))\
    \ && consonants.contains(word(i + 1))) {\n                for (j <- i + 1 until\
    \ word.length) {\n                    if (vowels.contains(word(j))) {\n      \
    \                  if (j - i < closestDistance) {\n                          \
    \  closestDistance = j - i\n                            closestVowel = word(j).toString\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        closestVowel", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n    \
    \    val wordArray = word.toCharArray\n        var vowel = \"\"\n        for (i\
    \ <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowel = wordArray(i).toString\n                if (i > 0\
    \ && consonants.contains(wordArray(i - 1))) return vowel\n            }\n    \
    \    }\n        return \"\"", "        val vowels = \"aeiouAEIOU\"\n        val\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var result\
    \ = \"\"\n        var minDistance = Int.MaxValue\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i))) {\n                var left = i\
    \ - 1\n                var right = i + 1\n                while (left >= 0 &&\
    \ consonants.contains(word(left))) left -= 1\n                while (right < word.length\
    \ && consonants.contains(word(right))) right += 1\n                if (left >=\
    \ 0 && right < word.length) {\n                    val distance = right - left\
    \ - 1\n                    if (distance < minDistance) {\n                   \
    \     minDistance = distance\n                        result = word(i).toString\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val chars = word.toCharArray\n        var i = chars.length\
    \ - 1\n        var lastConsonant = -1\n        var lastVowel = -1\n        while\
    \ (i >= 0) {\n            if (vowels.contains(chars(i))) {\n                lastVowel\
    \ = i\n                if (lastConsonant != -1) return chars(i).toString\n   \
    \         } else if (consonants.contains(chars(i))) {\n                lastConsonant\
    \ = i\n            }\n            i -= 1\n        }\n        \"\"", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var result\
    \ = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if\
    \ (consonants.contains(wordArray(i))) {\n                if (i > 0 && vowels.contains(wordArray(i\
    \ - 1))) {\n                    result = wordArray(i - 1).toString\n         \
    \           break\n                }\n                else if (i < wordArray.length\
    \ - 1 && vowels.contains(wordArray(i + 1))) {\n                    result = wordArray(i\
    \ + 1).toString\n                    break\n                }\n            }\n\
    \        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val wordArray = word.toCharArray\n        var minDistance = word.length\n\
    \        var closestVowel = \"\"\n        for (i <- wordArray.length - 1 to 0\
    \ by -1) {\n            if (vowels.contains(wordArray(i))) {\n               \
    \ var j = i - 1\n                while (j >= 0 && !vowels.contains(wordArray(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    val distance = i\
    \ - j\n                    if (distance < minDistance) {\n                   \
    \     minDistance = distance\n                        closestVowel = wordArray(i).toString\n\
    \                    }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        var result = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                if (i ==\
    \ wordArray.length - 1) {\n                    if (i > 0 && !vowels.contains(wordArray(i\
    \ - 1))) result = wordArray(i).toString\n                } else if (i == 0) {\n\
    \                    if (!vowels.contains(wordArray(i + 1))) result = wordArray(i).toString\n\
    \                } else {\n                    if (!vowels.contains(wordArray(i\
    \ + 1)) && !vowels.contains(wordArray(i - 1))) result = wordArray(i).toString\n\
    \                }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        var closestVowel = \"\"\n        var closestVowelDistance\
    \ = 0\n        for (i <- word.length - 1 to 0 by -1) {\n            val c = word(i)\n\
    \            if (vowels.contains(c)) {\n                if (closestVowelDistance\
    \ == 0) closestVowelDistance = word.length - i\n                else if (closestVowelDistance\
    \ > word.length - i) {\n                    closestVowelDistance = word.length\
    \ - i\n                    closestVowel = c.toString\n                }\n    \
    \        }\n            else if (consonants.contains(c)) {\n                if\
    \ (closestVowelDistance != 0) return closestVowel\n            }\n        }\n\
    \        return closestVowel", "        val vowels = \"aeiouAEIOU\"\n        val\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val wordArray\
    \ = word.toCharArray\n        var closestVowel = \"\"\n        var closestVowelIndex\
    \ = -1\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                closestVowel = wordArray(i).toString\n                closestVowelIndex\
    \ = i\n                break\n            }\n        }\n        if (closestVowelIndex\
    \ == -1) return \"\"\n        for (i <- closestVowelIndex - 1 to 0 by -1) {\n\
    \            if (consonants.contains(wordArray(i))) return closestVowel\n    \
    \    }\n        \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n  \
    \      val wordList = word.toList\n        var result = \"\"\n        var minDistance\
    \ = Int.MaxValue\n        for (i <- 0 until wordList.length) {\n            if\
    \ (vowels.contains(wordList(i))) {\n                var j = i - 1\n          \
    \      while (j >= 0 && !vowels.contains(wordList(j))) j -= 1\n              \
    \  if (j >= 0) {\n                    var k = i + 1\n                    while\
    \ (k < wordList.length && !vowels.contains(wordList(k))) k += 1\n            \
    \        if (k < wordList.length) {\n                        val distance = (k\
    \ - j) / 2\n                        if (distance < minDistance) {\n          \
    \                  minDistance = distance\n                            result\
    \ = wordList(i).toString\n                        }\n                    }\n \
    \               }\n            }\n        }\n        result", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowelIndex = -1\n    \
    \    var consonantIndex = -1\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                vowelIndex\
    \ = i\n                if (consonantIndex != -1) return wordArray(vowelIndex).toString\n\
    \            } else if (consonants.contains(wordArray(i))) {\n               \
    \ consonantIndex = i\n                if (vowelIndex != -1) return wordArray(vowelIndex).toString\n\
    \            }\n        }\n        \"\"", "        val vowels = \"aeiou\"\n  \
    \      val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        val wordReverse = word.reverse\n\
    \        var closestVowel = \"\"\n        var closestVowelDistance = word.length\n\
    \        for (i <- 0 until wordReverse.length - 1) {\n            if (consonants.contains(wordReverse(i))\
    \ && consonants.contains(wordReverse(i + 1))) {\n                for (j <- i +\
    \ 1 until wordReverse.length) {\n                    if (vowels.contains(wordReverse(j)))\
    \ {\n                        if (j - i < closestVowelDistance) {\n           \
    \                 closestVowelDistance = j - i\n                            closestVowel\
    \ = wordReverse(j).toString\n                        }\n                    }\n\
    \                }\n            }\n        }\n        closestVowel", "       \
    \ if (word.length < 3) return \"\"\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordArray\
    \ = word.toCharArray\n        var vowelIndex = -1\n        for (i <- wordArray.length\
    \ - 1 to 1 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          vowelIndex = i\n                break\n            }\n        }\n \
    \       if (vowelIndex == -1) return \"\"\n        var closestVowel = \"\"\n \
    \       var closestVowelIndex = -1\n        for (i <- wordArray.length - 1 to\
    \ vowelIndex + 1 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                closestVowel = wordArray(vowelIndex).toString\n         \
    \       closestVowelIndex = vowelIndex\n                break\n            }\n\
    \        }\n        for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                if (vowelIndex - i < closestVowelIndex - vowelIndex) {\n\
    \                    closestVowel = wordArray(i + 1).toString\n              \
    \      closestVowelIndex = i + 1\n                }\n                break\n \
    \           }\n        }\n        closestVowel", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        val consonants = List('b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n\
    \        val wordList = word.toList\n        var vowelIndex = -1\n        for\
    \ (i <- wordList.length - 1 to 0 by -1) {\n            if (vowels.contains(wordList(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        var consonantIndex\
    \ = -1\n        for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordList(i)))\
    \ {\n                consonantIndex = i\n                break\n            }\n\
    \        }\n        if (consonantIndex == -1) return \"\"\n        var closestVowel\
    \ = \"\"\n        for (i <- vowelIndex + 1 to wordList.length - 1) {\n       \
    \     if (consonants.contains(wordList(i))) {\n                closestVowel =\
    \ wordList(vowelIndex).toString\n                break\n            }\n      \
    \  }\n        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val wordReverse = word.reverse\n        var closestVowel : Char = ' '\n\
    \        var closestVowelIndex = -1\n        for (i <- 0 until wordReverse.length)\
    \ {\n            if (vowels.contains(wordReverse(i))) {\n                closestVowel\
    \ = wordReverse(i)\n                closestVowelIndex = i\n                break\n\
    \            }\n        }\n        if (closestVowelIndex == -1) return \"\"\n\
    \        var previousConsonant = false\n        for (i <- 0 until closestVowelIndex)\
    \ {\n            if (!vowels.contains(wordReverse(i))) {\n                previousConsonant\
    \ = true\n                break\n            }\n        }\n        if (!previousConsonant)\
    \ return \"\"\n        var nextConsonant = false\n        for (i <- closestVowelIndex\
    \ + 1 until wordReverse.length) {\n            if (!vowels.contains(wordReverse(i)))\
    \ {\n                nextConsonant = true\n                break\n           \
    \ }\n        }\n        if (!nextConsonant) return \"\"\n        return closestVowel.toString",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        for (i <- word.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(word(i))) {\n                if (i == word.length\
    \ - 1) {\n                    closestVowel = \"\"\n                } else if (consonants.contains(word(i\
    \ + 1))) {\n                    closestVowel = word(i).toString\n            \
    \    }\n            }\n        }\n        closestVowel", "        val vowels =\
    \ \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowelIndex = -1\n    \
    \    for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        var closestVowel\
    \ = wordArray(vowelIndex)\n        var closestVowelIndex = vowelIndex\n      \
    \  for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                closestVowel = wordArray(vowelIndex)\n                closestVowelIndex\
    \ = vowelIndex\n                break\n            }\n            if (vowels.contains(wordArray(i)))\
    \ {\n                closestVowel = wordArray(i)\n                closestVowelIndex\
    \ = i\n            }\n        }\n        if (closestVowelIndex == vowelIndex)\
    \ return closestVowel.toString\n        for (i <- vowelIndex + 1 until wordArray.length)\
    \ {\n            if (consonants.contains(wordArray(i))) {\n                return\
    \ closestVowel.toString\n            }\n            if (vowels.contains(wordArray(i)))\
    \ {\n                return wordArray(i).toString\n            }\n        }\n\
    \        return closestVowel.toString", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val wordArray = word.toCharArray\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          if (i == wordArray.length - 1) return \"\"\n                if (!vowels.contains(wordArray(i\
    \ + 1))) return wordArray(i).toString\n            }\n        }\n        \"\"",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var closestVowel\
    \ = \"\"\n        var closestVowelDistance = 0\n        for (i <- 0 until wordArray.length\
    \ - 1) {\n            if (consonants.contains(wordArray(i)) && vowels.contains(wordArray(i\
    \ + 1))) {\n                var j = i + 1\n                while (j < wordArray.length\
    \ && vowels.contains(wordArray(j))) {\n                    if (consonants.contains(wordArray(j\
    \ + 1))) {\n                        if (closestVowelDistance == 0 || j - i < closestVowelDistance)\
    \ {\n                            closestVowelDistance = j - i\n              \
    \              closestVowel = wordArray(j).toString\n                        }\n\
    \                    }\n                    j += 1\n                }\n      \
    \      }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      var closestVowel = \"\"\n        var closestVowelDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length - 1) {\n            if (consonants.contains(word(i))\
    \ && consonants.contains(word(i + 1))) {\n                for (j <- i + 1 until\
    \ word.length) {\n                    if (vowels.contains(word(j))) {\n      \
    \                  if (j - i < closestVowelDistance) {\n                     \
    \       closestVowelDistance = j - i\n                            closestVowel\
    \ = word(j).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        val wordList = word.toList\n        var vowelIndex = -1\n\
    \        var consonantIndex = -1\n        for (i <- wordList.length - 1 to 0 by\
    \ -1) {\n            if (vowels.contains(wordList(i))) {\n                vowelIndex\
    \ = i\n                break\n            }\n        }\n        for (i <- vowelIndex\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordList(i))) {\n   \
    \             consonantIndex = i\n                break\n            }\n     \
    \   }\n        if (vowelIndex == -1 || consonantIndex == -1) \"\" else wordList(vowelIndex).toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        val wordLength\
    \ = wordArray.length\n        var closestVowel = \"\"\n        for (i <- wordLength\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          if (i == wordLength - 1) {\n                    if (consonants.contains(wordArray(i\
    \ - 1))) closestVowel = wordArray(i).toString\n                } else if (i ==\
    \ 0) {\n                    if (consonants.contains(wordArray(i + 1))) closestVowel\
    \ = wordArray(i).toString\n                } else {\n                    if (consonants.contains(wordArray(i\
    \ - 1)) && consonants.contains(wordArray(i + 1))) closestVowel = wordArray(i).toString\n\
    \                }\n            }\n        }\n        closestVowel", "       \
    \ val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestDistance = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var distance = 0\n                var j = i - 1\n       \
    \         while (j >= 0 && consonants.contains(word(j))) {\n                 \
    \   distance += 1\n                    j -= 1\n                }\n           \
    \     j = i + 1\n                while (j < word.length && consonants.contains(word(j)))\
    \ {\n                    distance += 1\n                    j += 1\n         \
    \       }\n                if (distance < closestDistance) {\n               \
    \     closestDistance = distance\n                    closestVowel = word(i).toString\n\
    \                }\n            }\n        }\n        closestVowel", "       \
    \ val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestDistance\
    \ = Int.MaxValue\n        for (i <- word.length - 1 to 0 by -1) {\n          \
    \  if (vowels.contains(word(i))) {\n                var distance = 0\n       \
    \         for (j <- i + 1 to word.length - 1) {\n                    if (consonants.contains(word(j)))\
    \ {\n                        distance = j - i\n                        break\n\
    \                    }\n                }\n                if (distance < closestDistance)\
    \ {\n                    closestDistance = distance\n                    closestVowel\
    \ = word(i).toString\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var min = Int.MaxValue\n\
    \        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (vowels.contains(word(i))) {\n                var j = i - 1\n\
    \                while (j >= 0 && !vowels.contains(word(j))) j -= 1\n        \
    \        if (j >= 0) {\n                    var k = i + 1\n                  \
    \  while (k < word.length && !vowels.contains(word(k))) k += 1\n             \
    \       if (k < word.length) {\n                        val distance = min(abs(i\
    \ - j), abs(i - k))\n                        if (distance < min) {\n         \
    \                   min = distance\n                            result = word(i).toString\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n  \
    \      val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n     \
    \   val wordList = word.toList\n        val vowelIndices = wordList.zipWithIndex.filter(x\
    \ => vowels.contains(x._1)).map(_._2)\n        val consonantIndices = wordList.zipWithIndex.filter(x\
    \ => consonants.contains(x._1)).map(_._2)\n        val vowelConsonantPairs = vowelIndices.flatMap(x\
    \ => consonantIndices.map(y => (x, y)))\n        val validPairs = vowelConsonantPairs.filter(x\
    \ => x._1 > x._2)\n        if (validPairs.isEmpty) \"\"\n        else {\n    \
    \        val minDistance = validPairs.map(x => x._1 - x._2).min\n            val\
    \ closestVowel = validPairs.filter(x => x._1 - x._2 == minDistance).map(x => x._1).min\n\
    \            wordList(closestVowel).toString\n        }", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        if (j - i < closestDistance)\
    \ {\n                            closestDistance = j - i\n                   \
    \         closestVowel = word(j).toString\n                        }\n       \
    \             }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordReverse = word.reverse\n        var closestVowel = \"\"\n  \
    \      var closestVowelDistance = word.length\n        for (i <- 0 until wordReverse.length)\
    \ {\n            if (vowels.contains(wordReverse(i))) {\n                var j\
    \ = i + 1\n                while (j < wordReverse.length && consonants.contains(wordReverse(j)))\
    \ {\n                    j += 1\n                }\n                if (j < wordReverse.length\
    \ && vowels.contains(wordReverse(j))) {\n                    if (j - i < closestVowelDistance)\
    \ {\n                        closestVowelDistance = j - i\n                  \
    \      closestVowel = wordReverse(i).toString\n                    }\n       \
    \         }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length - 1) {\n            if (consonants.contains(word(i))\
    \ && consonants.contains(word(i + 1))) {\n                for (j <- i + 1 until\
    \ word.length) {\n                    if (vowels.contains(word(j))) {\n      \
    \                  if (j - i < closestDistance) {\n                          \
    \  closestDistance = j - i\n                            closestVowel = word(j).toString\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      var closestVowel = \"\"\n        var closestDistance = word.length\n  \
    \      for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        for (k <- j + 1 until\
    \ word.length) {\n                            if (consonants.contains(word(k)))\
    \ {\n                                if (k - j < closestDistance) {\n        \
    \                            closestDistance = k - j\n                       \
    \             closestVowel = word(j).toString\n                              \
    \  }\n                            }\n                        }\n             \
    \       }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestVowelDistance\
    \ = Int.MaxValue\n        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                val vowelDistance = word.substring(i).indexWhere(vowels.contains(_))\n\
    \                if (vowelDistance != -1 && vowelDistance < closestVowelDistance)\
    \ {\n                    closestVowelDistance = vowelDistance\n              \
    \      closestVowel = word(i + vowelDistance).toString\n                }\n  \
    \          }\n        }\n        closestVowel", "        val vowels = \"AEIOUaeiou\"\
    \n        val consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\n  \
    \      val vowelIndexes = word.zipWithIndex.filter(x => vowels.contains(x._1)).map(_._2)\n\
    \        val consonantIndexes = word.zipWithIndex.filter(x => consonants.contains(x._1)).map(_._2)\n\
    \        val vowelConsonantPairs = vowelIndexes.map(x => (x, consonantIndexes.filter(y\
    \ => y > x).min))\n        if (vowelConsonantPairs.isEmpty) \"\" else word(vowelConsonantPairs.minBy(x\
    \ => x._2 - x._1)._1).toString", "        val vowels = \"aeiouAEIOU\"\n      \
    \  val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var\
    \ closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n        for\
    \ (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        if (j - i < closestDistance)\
    \ {\n                            closestDistance = j - i\n                   \
    \         closestVowel = word(j).toString\n                        }\n       \
    \             }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"AEIOUaeiou\"\n        val consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n        var closestVowel = \"\"\n        for (i <- word.length - 1 to 0 by -1)\
    \ {\n            if (consonants.contains(word(i))) {\n                for (j <-\
    \ i - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n \
    \                       closestVowel = word(j).toString\n                    \
    \    return closestVowel\n                    }\n                }\n         \
    \   }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\n\
    \        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n   \
    \     var vowel = \"\"\n        var minDistance = word.length\n        for (i\
    \ <- 0 until word.length) {\n            if (vowels.contains(word(i))) {\n   \
    \             var j = i - 1\n                while (j >= 0 && consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0 && consonants.contains(word(j))) {\n    \
    \                var k = i + 1\n                    while (k < word.length &&\
    \ consonants.contains(word(k))) k += 1\n                    if (k < word.length\
    \ && consonants.contains(word(k))) {\n                        if (k - j - 1 <\
    \ minDistance) {\n                            minDistance = k - j - 1\n      \
    \                      vowel = word(i).toString\n                        }\n \
    \                   }\n                }\n            }\n        }\n        vowel",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordReverse = word.reverse\n        var result = \"\"\n        var\
    \ distance = 0\n        for (i <- 0 until wordReverse.length - 1) {\n        \
    \    if (consonants.contains(wordReverse(i)) && consonants.contains(wordReverse(i\
    \ + 1))) {\n                for (j <- i + 1 until wordReverse.length) {\n    \
    \                if (vowels.contains(wordReverse(j))) {\n                    \
    \    if (result == \"\") {\n                            result = wordReverse(j).toString\n\
    \                            distance = j - i\n                        } else\
    \ {\n                            if (j - i < distance) {\n                   \
    \             result = wordReverse(j).toString\n                             \
    \   distance = j - i\n                            }\n                        }\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        val vowelsSet = vowels.toSet\n        val consonantsSet = consonants.toSet\n\
    \        val wordSet = word.toSet\n        val vowelsInWord = wordSet.intersect(vowelsSet)\n\
    \        val consonantsInWord = wordSet.intersect(consonantsSet)\n        if (vowelsInWord.isEmpty\
    \ || consonantsInWord.isEmpty) \"\"\n        else {\n            val vowelsInWordList\
    \ = vowelsInWord.toList\n            val consonantsInWordList = consonantsInWord.toList\n\
    \            val vowelsInWordListSorted = vowelsInWordList.sortWith(_ > _)\n \
    \           val consonantsInWordListSorted = consonantsInWordList.sortWith(_ >\
    \ _)\n            val vowelsInWordListSortedSet = vowelsInWordListSorted.toSet\n\
    \            val consonantsInWordListSortedSet = consonantsInWordListSorted.toSet\n\
    \            val vowelsInWordListSortedSetList = vowelsInWordListSortedSet.toList\n\
    \            val consonantsInWordListSortedSetList = consonantsInWordListSortedSet.toList\n\
    \            val vowelsInWordListSortedSetListSorted = vowelsInWordListSortedSetList.sortWith(_\
    \ > _)\n            val consonantsInWordListSortedSetListSorted = consonantsInWordListSortedSetList.sortWith(_\
    \ > _)\n            val vowelsInWordListSortedSetListSortedSet = vowelsInWordListSortedSetListSorted.toSet\n\
    \            val consonantsInWordListSortedSetListSortedSet = consonantsInWordListSortedSetListSorted.toSet\n\
    \            val vowelsInWordListSortedSetListSortedSetList = vowelsInWordListSortedSetListSortedSet.toList\n\
    \            val consonantsInWordListSortedSetListSortedSetList = consonantsInWordListSortedSetListSortedSet.toList\n\
    \            val vowelsInWordListSortedSetListSortedSetListSorted = vowelsInWordListS",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        var closestVowel = \"\"\n        for (i <- word.length - 1 to 0 by\
    \ -1) {\n            if (vowels.contains(word(i).toString)) {\n              \
    \  if (i == word.length - 1) {\n                    if (consonants.contains(word(i\
    \ - 1).toString)) {\n                        closestVowel = word(i).toString\n\
    \                    }\n                } else if (i == 0) {\n               \
    \     if (consonants.contains(word(i + 1).toString)) {\n                     \
    \   closestVowel = word(i).toString\n                    }\n                }\
    \ else {\n                    if (consonants.contains(word(i - 1).toString) &&\
    \ consonants.contains(word(i + 1).toString)) {\n                        closestVowel\
    \ = word(i).toString\n                    }\n                }\n            }\n\
    \        }\n        closestVowel", "        var vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        var closestVowel = \"\"\n        for (i <- word.length - 1 to\
    \ 0 by -1) {\n            if (vowels.contains(word(i))) {\n                if\
    \ (i == word.length - 1) return \"\"\n                if (vowels.contains(word(i\
    \ + 1))) return \"\"\n                closestVowel = word(i).toString\n      \
    \          return closestVowel\n            }\n        }\n        return closestVowel",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestDistance = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        for (k <- j + 1 until\
    \ word.length) {\n                            if (consonants.contains(word(k)))\
    \ {\n                                if (k - j < closestDistance) {\n        \
    \                            closestDistance = k - j\n                       \
    \             closestVowel = word(j).toString\n                              \
    \  }\n                            }\n                        }\n             \
    \       }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var closestVowel = \"\"\n\
    \        var closestVowelIndex = -1\n        for (i <- wordArray.length - 1 to\
    \ 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n             \
    \   if (i == wordArray.length - 1) return \"\"\n                if (consonants.contains(wordArray(i\
    \ + 1))) {\n                    closestVowel = wordArray(i).toString\n       \
    \             closestVowelIndex = i\n                    break\n             \
    \   }\n            }\n        }\n        if (closestVowelIndex == -1) return \"\
    \"\n        for (i <- closestVowelIndex - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (consonants.contains(wordArray(i + 1))) {\n          \
    \          return wordArray(i).toString\n                }\n            }\n  \
    \      }\n        closestVowel", "        val vowels = \"aeiou\"\n        val\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n        val word_ = word.toLowerCase\n\
    \        var result = \"\"\n        for (i <- word_.length - 1 to 0 by -1) {\n\
    \            if (vowels.contains(word_(i))) {\n                if (i == word_.length\
    \ - 1) {\n                    if (consonants.contains(word_(i - 1))) result =\
    \ word_(i).toString\n                } else if (i == 0) {\n                  \
    \  if (consonants.contains(word_(i + 1))) result = word_(i).toString\n       \
    \         } else {\n                    if (consonants.contains(word_(i - 1))\
    \ && consonants.contains(word_(i + 1))) result = word_(i).toString\n         \
    \       }\n            }\n        }\n        result", "        val vowels = \"\
    aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        var closestVowel\
    \ = \"\"\n        var closestVowelDistance = word.length\n        for (i <- 0\
    \ until word.length) {\n            if (vowels.contains(word(i))) {\n        \
    \        var j = i + 1\n                while (j < word.length && !consonants.contains(word(j)))\
    \ j += 1\n                if (j < word.length) {\n                    var k =\
    \ i - 1\n                    while (k >= 0 && !consonants.contains(word(k))) k\
    \ -= 1\n                    if (k >= 0) {\n                        val distance\
    \ = j - k\n                        if (distance < closestVowelDistance) {\n  \
    \                          closestVowelDistance = distance\n                 \
    \           closestVowel = word(i).toString\n                        }\n     \
    \               }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) return \"\"\n            \
    \    if (!vowels.contains(wordArray(i + 1))) return wordArray(i).toString\n  \
    \          }\n        }\n        \"\"", "        val vowels = \"aeiouAEIOU\"\n\
    \        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n   \
    \     var min = word.length\n        var result = \"\"\n        for (i <- 0 until\
    \ word.length) {\n            if (vowels.contains(word(i))) {\n              \
    \  var j = i - 1\n                while (j >= 0 && consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0 && consonants.contains(word(j))) {\n    \
    \                var k = i + 1\n                    while (k < word.length &&\
    \ consonants.contains(word(k))) k += 1\n                    if (k < word.length\
    \ && consonants.contains(word(k))) {\n                        if (k - j - 1 <\
    \ min) {\n                            min = k - j - 1\n                      \
    \      result = word(i).toString\n                        }\n                \
    \    }\n                }\n            }\n        }\n        result", "      \
    \  val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var closestVowel\
    \ = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if\
    \ (vowels.contains(wordArray(i))) {\n                closestVowel = wordArray(i).toString\n\
    \                break\n            }\n        }\n        if (closestVowel ==\
    \ \"\") return \"\"\n        var closestVowelIndex = word.indexOf(closestVowel)\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                if (i < closestVowelIndex) return closestVowel\n        \
    \        else {\n                    closestVowel = \"\"\n                   \
    \ closestVowelIndex = -1\n                }\n            }\n        }\n      \
    \  return closestVowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        var closestVowel = \"\"\n        var closestVowelDistance = Int.MaxValue\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    val distance = i\
    \ - j\n                    if (distance < closestVowelDistance) {\n          \
    \              closestVowelDistance = distance\n                        closestVowel\
    \ = word(i).toString\n                    }\n                }\n            }\n\
    \        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\n    \
    \    val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n       \
    \ var closestVowel = \"\"\n        var closestDistance = 0\n        for (i <-\
    \ 0 until word.length) {\n            if (consonants.contains(word(i))) {\n  \
    \              for (j <- i until word.length) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        if (closestVowel == \"\") {\n                   \
    \         closestVowel = word(j).toString\n                            closestDistance\
    \ = j - i\n                        } else if (j - i < closestDistance) {\n   \
    \                         closestVowel = word(j).toString\n                  \
    \          closestDistance = j - i\n                        }\n              \
    \      }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestVowelDistance = 0\n    \
    \    for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && consonants.contains(word(j)))\
    \ {\n                    j -= 1\n                }\n                if (j >= 0\
    \ && vowels.contains(word(j))) {\n                    if (closestVowelDistance\
    \ == 0 || i - j < closestVowelDistance) {\n                        closestVowelDistance\
    \ = i - j\n                        closestVowel = word(i).toString\n         \
    \           }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestDistance = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var left = i - 1\n                var right = i + 1\n   \
    \             while (left >= 0 && consonants.contains(word(left))) left -= 1\n\
    \                while (right < word.length && consonants.contains(word(right)))\
    \ right += 1\n                if (left >= 0 && right < word.length && right -\
    \ left - 1 < closestDistance) {\n                    closestVowel = word(i).toString\n\
    \                    closestDistance = right - left - 1\n                }\n \
    \           }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      val wordArray = word.toCharArray\n        var closestVowel = \"\"\n   \
    \     for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) {\n                    if\
    \ (consonants.contains(wordArray(i - 1))) {\n                        closestVowel\
    \ = wordArray(i).toString\n                    }\n                } else if (i\
    \ == 0) {\n                    if (consonants.contains(wordArray(i + 1))) {\n\
    \                        closestVowel = wordArray(i).toString\n              \
    \      }\n                } else {\n                    if (consonants.contains(wordArray(i\
    \ - 1)) && consonants.contains(wordArray(i + 1))) {\n                        closestVowel\
    \ = wordArray(i).toString\n                    }\n                }\n        \
    \    }\n        }\n        closestVowel", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n    \
    \    var result = \"\"\n        var minDistance = Int.MaxValue\n        for (i\
    \ <- 0 until word.length) {\n            if (vowels.contains(word(i))) {\n   \
    \             var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        val\
    \ distance = k - j\n                        if (distance < minDistance) {\n  \
    \                          minDistance = distance\n                          \
    \  result = word(i).toString\n                        }\n                    }\n\
    \                }\n            }\n        }\n        result", "        val vowels\
    \ = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        val\
    \ wordArray = word.toCharArray\n        var vowel = \"\"\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        vowel = wordArray(j).toString\n                 \
    \       return vowel\n                    }\n                }\n            }\n\
    \        }\n        vowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordArray\
    \ = word.toCharArray\n        var vowelIndex = -1\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          vowelIndex = i\n                break\n            }\n        }\n \
    \       if (vowelIndex == -1) return \"\"\n        var consonantIndex = -1\n \
    \       for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                consonantIndex = i\n                break\n            }\n\
    \        }\n        if (consonantIndex == -1) return \"\"\n        wordArray(vowelIndex).toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var result\
    \ = \"\"\n        var min = Int.MaxValue\n        for (i <- wordArray.length -\
    \ 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n    \
    \            var j = i - 1\n                while (j >= 0 && !consonants.contains(wordArray(j)))\
    \ {\n                    if (vowels.contains(wordArray(j))) {\n              \
    \          if (i - j < min) {\n                            min = i - j\n     \
    \                       result = wordArray(j).toString\n                     \
    \   }\n                    }\n                    j -= 1\n                }\n\
    \            }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      val wordArray = word.toCharArray\n        var vowelIndex = -1\n       \
    \ var consonantIndex = -1\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                vowelIndex\
    \ = i\n                break\n            }\n        }\n        for (i <- vowelIndex\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              consonantIndex = i\n                break\n            }\n    \
    \    }\n        if (vowelIndex == -1 || consonantIndex == -1) return \"\"\n  \
    \      wordArray(vowelIndex).toString", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val wordReversed = word.reverse\n        var prevChar : Char\
    \ = ' '\n        var prevVowel : Char = ' '\n        for (c <- wordReversed) {\n\
    \            if (vowels.contains(c)) {\n                if (prevChar != ' ' &&\
    \ !vowels.contains(prevChar)) return c.toString\n                prevVowel = c\n\
    \            }\n            else prevChar = c\n        }\n        \"\"", "   \
    \     val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestDistance = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        for (k <- j + 1 until\
    \ word.length) {\n                            if (consonants.contains(word(k)))\
    \ {\n                                if (k - j < closestDistance) {\n        \
    \                            closestDistance = k - j\n                       \
    \             closestVowel = word(j).toString\n                              \
    \  }\n                            }\n                        }\n             \
    \       }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val consonants = List('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordList = word.toList\n        var vowelIndex\
    \ = -1\n        var consonantIndex = -1\n        for (i <- 0 until wordList.length)\
    \ {\n            if (vowels.contains(wordList(i))) vowelIndex = i\n          \
    \  if (consonants.contains(wordList(i))) consonantIndex = i\n            if (vowelIndex\
    \ != -1 && consonantIndex != -1) {\n                if (vowelIndex < consonantIndex)\
    \ return wordList(vowelIndex).toString\n            }\n        }\n        \"\"",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val chars = word.toCharArray\n        var closestVowel\
    \ = \"\"\n        for (i <- 0 until chars.length - 1) {\n            if (consonants.contains(chars(i))\
    \ && vowels.contains(chars(i + 1))) {\n                closestVowel = chars(i\
    \ + 1).toString\n                break\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var closest = \"\"\n        var closestDistance\
    \ = Int.MaxValue\n        for (i <- 0 until word.length - 1) {\n            if\
    \ (consonants.contains(word(i)) && vowels.contains(word(i + 1))) {\n         \
    \       val distance = word.length - i - 1\n                if (distance < closestDistance)\
    \ {\n                    closestDistance = distance\n                    closest\
    \ = word(i + 1).toString\n                }\n            }\n        }\n      \
    \  closest", "        val vowels = \"AEIOUaeiou\"\n        val consonants = \"\
    BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\n        val wordArray = word.toCharArray\n\
    \        var vowel = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                vowel =\
    \ wordArray(i).toString\n                if (i > 0 && consonants.contains(wordArray(i\
    \ - 1))) return vowel\n            }\n        }\n        return \"\"", "     \
    \   val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var vowelIndex\
    \ = -1\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        for (i <- vowelIndex\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              return wordArray(vowelIndex).toString\n            }\n        }\n\
    \        \"\"", "        val vowels = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        val wordArray = word.toCharArray\n        var closestVowel = \"\"\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) {\n                    if\
    \ (consonants.contains(wordArray(i - 1))) {\n                        closestVowel\
    \ = wordArray(i).toString\n                    }\n                } else if (i\
    \ == 0) {\n                    if (consonants.contains(wordArray(i + 1))) {\n\
    \                        closestVowel = wordArray(i).toString\n              \
    \      }\n                } else {\n                    if (consonants.contains(wordArray(i\
    \ - 1)) && consonants.contains(wordArray(i + 1))) {\n                        closestVowel\
    \ = wordArray(i).toString\n                    }\n                }\n        \
    \    }\n        }\n        closestVowel", "        val vowels = \"aeiou\"\n  \
    \      val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        var result = \"\"\n\
    \        var minDistance = Int.MaxValue\n        for (i <- 0 until word.length\
    \ - 1) {\n            if (consonants.contains(word(i)) && consonants.contains(word(i\
    \ + 1))) {\n                for (j <- i + 1 until word.length) {\n           \
    \         if (vowels.contains(word(j))) {\n                        val distance\
    \ = j - i\n                        if (distance < minDistance) {\n           \
    \                 minDistance = distance\n                            result =\
    \ word(j).toString\n                        }\n                    }\n       \
    \         }\n            }\n        }\n        result", "        val vowels =\
    \ \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        val wordArray\
    \ = word.toCharArray\n        var closestVowel = \"\"\n        var closestVowelDistance\
    \ = -1\n        for (i <- 0 until wordArray.length) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                var leftDistance = 0\n                var rightDistance =\
    \ 0\n                for (j <- i - 1 to 0 by -1) {\n                    if (consonants.contains(wordArray(j)))\
    \ leftDistance += 1\n                    else break\n                }\n     \
    \           for (j <- i + 1 until wordArray.length) {\n                    if\
    \ (consonants.contains(wordArray(j))) rightDistance += 1\n                   \
    \ else break\n                }\n                if (leftDistance > 0 && rightDistance\
    \ > 0) {\n                    if (closestVowelDistance == -1 || leftDistance +\
    \ rightDistance < closestVowelDistance) {\n                        closestVowelDistance\
    \ = leftDistance + rightDistance\n                        closestVowel = wordArray(i).toString\n\
    \                    }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        var result = \"\"\n        var min = Int.MaxValue\n        for (i <-\
    \ 0 until word.length - 1) {\n            if (consonants.contains(word(i)) &&\
    \ vowels.contains(word(i + 1))) {\n                if (min > i) {\n          \
    \          min = i\n                    result = word(i + 1).toString\n      \
    \          }\n            }\n        }\n        result", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z')\n        val wordArray = word.toCharArray\n        var result = \"\"\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n      \
    \  val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val\
    \ wordArray = word.toCharArray\n        var result = \"\"\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          if (i == wordArray.length - 1) return \"\"\n                if (consonants.contains(wordArray(i\
    \ + 1))) {\n                    result = wordArray(i).toString\n             \
    \       break\n                }\n            }\n        }\n        result", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) return \"\"\n            \
    \    if (!vowels.contains(wordArray(i + 1))) return wordArray(i).toString\n  \
    \          }\n        }\n        \"\"", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i + 1\n                while (j < word.length &&\
    \ !vowels.contains(word(j))) j += 1\n                if (j < word.length) {\n\
    \                    val distance = j - i\n                    if (distance <\
    \ closestDistance) {\n                        closestDistance = distance\n   \
    \                     closestVowel = word(i).toString\n                    }\n\
    \                }\n            }\n        }\n        closestVowel", "       \
    \ val vowels = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n\
    \        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var distance = 0\n                for (j <- i + 1 until word.length)\
    \ {\n                    if (consonants.contains(word(j))) distance += 1\n   \
    \                 else break\n                }\n                if (distance\
    \ < closestDistance) {\n                    closestDistance = distance\n     \
    \               closestVowel = word(i).toString\n                }\n         \
    \   }\n        }\n        closestVowel", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val\
    \ wordArray = word.toCharArray\n        var closestVowel = \"\"\n        for (i\
    \ <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !consonants.contains(wordArray(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    j = i + 1\n     \
    \               while (j < wordArray.length && !consonants.contains(wordArray(j)))\
    \ j += 1\n                    if (j < wordArray.length) {\n                  \
    \      closestVowel = wordArray(i).toString\n                        return closestVowel\n\
    \                    }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowel = \"\"\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                if (i < wordArray.length - 1 && vowels.contains(wordArray(i\
    \ + 1))) {\n                    vowel = wordArray(i + 1).toString\n          \
    \          break\n                }\n            }\n        }\n        vowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val chars = word.toLowerCase.toCharArray\n    \
    \    var vowel = \"\"\n        for (i <- chars.length - 1 to 0 by -1) {\n    \
    \        if (vowels.contains(chars(i))) {\n                if (i == chars.length\
    \ - 1) {\n                    if (consonants.contains(chars(i - 1))) {\n     \
    \                   vowel = chars(i).toString\n                        return\
    \ vowel\n                    }\n                } else if (i == 0) {\n       \
    \             if (consonants.contains(chars(i + 1))) {\n                     \
    \   vowel = chars(i).toString\n                        return vowel\n        \
    \            }\n                } else {\n                    if (consonants.contains(chars(i\
    \ - 1)) && consonants.contains(chars(i + 1))) {\n                        vowel\
    \ = chars(i).toString\n                        return vowel\n                \
    \    }\n                }\n            }\n        }\n        vowel", "       \
    \ val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length - 1) {\n            if (consonants.contains(word(i))\
    \ && consonants.contains(word(i + 1))) {\n                for (j <- i + 1 until\
    \ word.length) {\n                    if (vowels.contains(word(j))) {\n      \
    \                  if (j - i < closestDistance) {\n                          \
    \  closestDistance = j - i\n                            closestVowel = word(j).toString\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      val wordArray = word.toCharArray\n        var vowelIndex = -1\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        var closestVowel\
    \ = wordArray(vowelIndex)\n        var closestVowelIndex = vowelIndex\n      \
    \  for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                closestVowel = wordArray(vowelIndex)\n                closestVowelIndex\
    \ = vowelIndex\n                break\n            }\n            else if (vowels.contains(wordArray(i)))\
    \ {\n                closestVowel = wordArray(i)\n                closestVowelIndex\
    \ = i\n            }\n        }\n        if (closestVowelIndex == vowelIndex)\
    \ return closestVowel.toString\n        for (i <- vowelIndex + 1 until wordArray.length)\
    \ {\n            if (consonants.contains(wordArray(i))) {\n                return\
    \ closestVowel.toString\n            }\n            else if (vowels.contains(wordArray(i)))\
    \ {\n                closestVowel = wordArray(i)\n                closestVowelIndex\
    \ = i\n            }\n        }\n        return closestVowel.toString", "    \
    \    val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowel = \"\"\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        vowel = wordArray(j).toString\n                 \
    \       return vowel\n                    }\n                }\n            }\n\
    \        }\n        vowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var closestVowel\
    \ = \"\"\n        var closestDistance = Int.MaxValue\n        for (i <- 0 until\
    \ word.length) {\n            if (vowels.contains(word(i))) {\n              \
    \  var distance = 0\n                for (j <- i + 1 until word.length) {\n  \
    \                  if (consonants.contains(word(j))) {\n                     \
    \   distance = j - i\n                        break\n                    }\n \
    \               }\n                if (distance < closestDistance) {\n       \
    \             closestDistance = distance\n                    closestVowel = word(i).toString\n\
    \                }\n            }\n        }\n        closestVowel", "       \
    \ val vowels = List('a', 'e', 'i', 'o', 'u')\n        val consonants = List('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordList = word.toList\n        var vowelIndex\
    \ = -1\n        var consonantIndex = -1\n        for (i <- wordList.length - 1\
    \ to 0 by -1) {\n            if (vowels.contains(wordList(i))) {\n           \
    \     vowelIndex = i\n                break\n            }\n        }\n      \
    \  for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordList(i)))\
    \ {\n                consonantIndex = i\n                break\n            }\n\
    \        }\n        if (vowelIndex == -1 || consonantIndex == -1) \"\" else wordList(vowelIndex).toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestDistance\
    \ = Int.MaxValue\n        for (i <- word.length - 1 to 0 by -1) {\n          \
    \  if (vowels.contains(word(i))) {\n                var j = i - 1\n          \
    \      while (j >= 0 && !consonants.contains(word(j))) j -= 1\n              \
    \  if (j >= 0) {\n                    var k = i + 1\n                    while\
    \ (k < word.length && !consonants.contains(word(k))) k += 1\n                \
    \    if (k < word.length) {\n                        val distance = k - j\n  \
    \                      if (distance < closestDistance) {\n                   \
    \         closestDistance = distance\n                            closestVowel\
    \ = word(i).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        var result = \"\"\n        for (i <- word.length - 1 to 0\
    \ by -1) {\n            if (vowels.contains(word(i))) {\n                if (i\
    \ == word.length - 1) {\n                    if (consonants.contains(word(i -\
    \ 1))) result = word(i).toString\n                } else if (i == 0) {\n     \
    \               if (consonants.contains(word(i + 1))) result = word(i).toString\n\
    \                } else {\n                    if (consonants.contains(word(i\
    \ - 1)) && consonants.contains(word(i + 1))) result = word(i).toString\n     \
    \           }\n            }\n        }\n        result", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowelIndex = -1\n    \
    \    for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        var closestVowel\
    \ = wordArray(vowelIndex)\n        var closestVowelIndex = vowelIndex\n      \
    \  for (i <- vowelIndex - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                closestVowel = wordArray(vowelIndex)\n                closestVowelIndex\
    \ = vowelIndex\n                break\n            }\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (abs(i - vowelIndex) < abs(closestVowelIndex - vowelIndex))\
    \ {\n                    closestVowel = wordArray(i)\n                    closestVowelIndex\
    \ = i\n                }\n            }\n        }\n        closestVowel.toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var lastConsonant = -1\n        var lastVowel =\
    \ -1\n        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                lastVowel = i\n                if (lastConsonant != -1) return\
    \ word(i).toString\n            } else if (consonants.contains(word(i))) {\n \
    \               lastConsonant = i\n                if (lastVowel != -1) return\
    \ word(lastVowel).toString\n            }\n        }\n        \"\"", "       \
    \ val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestDistance\
    \ = Int.MaxValue\n        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        if (j - i < closestDistance)\
    \ {\n                            closestDistance = j - i\n                   \
    \         closestVowel = word(j).toString\n                        }\n       \
    \             }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var closestVowel\
    \ = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if\
    \ (vowels.contains(wordArray(i))) {\n                closestVowel = wordArray(i).toString\n\
    \                break\n            }\n        }\n        if (closestVowel ==\
    \ \"\") return \"\"\n        var found = false\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              found = true\n                break\n            }\n        }\n\
    \        if (!found) return \"\"\n        for (i <- wordArray.length - 1 to 0\
    \ by -1) {\n            if (consonants.contains(wordArray(i))) {\n           \
    \     if (vowels.contains(wordArray(i - 1))) return closestVowel\n           \
    \ }\n        }\n        \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        var closestVowel = \"\"\n        var closestVowelDistance = Int.MaxValue\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i < word.length - 1 && !vowels.contains(word(i + 1)))\
    \ {\n                    if (word.length - 1 - i < closestVowelDistance) {\n \
    \                       closestVowel = word(i).toString\n                    \
    \    closestVowelDistance = word.length - 1 - i\n                    }\n     \
    \           }\n            } else {\n                if (i > 0 && vowels.contains(word(i\
    \ - 1))) {\n                    if (i < closestVowelDistance) {\n            \
    \            closestVowel = word(i - 1).toString\n                        closestVowelDistance\
    \ = i\n                    }\n                }\n            }\n        }\n  \
    \      closestVowel", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val wordArray = word.toCharArray\n\
    \        var vowelIndex = -1\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                vowelIndex\
    \ = i\n                break\n            }\n        }\n        if (vowelIndex\
    \ == -1) return \"\"\n        var closestVowel = wordArray(vowelIndex)\n     \
    \   var closestVowelIndex = vowelIndex\n        for (i <- vowelIndex - 1 to 0\
    \ by -1) {\n            if (consonants.contains(wordArray(i))) {\n           \
    \     closestVowel = wordArray(vowelIndex)\n                closestVowelIndex\
    \ = vowelIndex\n                break\n            }\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n            }\n        }\n        closestVowel.toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var lastConsonant = -1\n        var closestVowel\
    \ = -1\n        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                if (lastConsonant != -1) {\n                    for (j <-\
    \ lastConsonant + 1 until i) {\n                        if (vowels.contains(word(j)))\
    \ {\n                            closestVowel = j\n                        }\n\
    \                    }\n                }\n                lastConsonant = i\n\
    \            }\n        }\n        if (closestVowel == -1) \"\" else word(closestVowel).toString",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        return wordArray(j).toString\n                  \
    \  }\n                }\n            }\n        }\n        \"\"", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestVowelDistance\
    \ = 0\n        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        if\
    \ (closestVowelDistance == 0 || closestVowelDistance > k - j) {\n            \
    \                closestVowelDistance = k - j\n                            closestVowel\
    \ = word(i).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowelIndex = -1\n    \
    \    var consonantIndex = -1\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                vowelIndex\
    \ = i\n                break\n            }\n        }\n        if (vowelIndex\
    \ == -1) return \"\"\n        for (i <- vowelIndex - 1 to 0 by -1) {\n       \
    \     if (consonants.contains(wordArray(i))) {\n                consonantIndex\
    \ = i\n                break\n            }\n        }\n        if (consonantIndex\
    \ == -1) return \"\"\n        wordArray(vowelIndex).toString", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestVowelIndex = -1\n      \
    \  for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i + 1 < word.length && consonants.contains(word(i + 1)))\
    \ {\n                    closestVowel = word(i).toString\n                   \
    \ closestVowelIndex = i\n                    break\n                }\n      \
    \      }\n        }\n        for (i <- closestVowelIndex - 1 to 0 by -1) {\n \
    \           if (consonants.contains(word(i))) {\n                if (i - 1 >=\
    \ 0 && vowels.contains(word(i - 1))) {\n                    return closestVowel\n\
    \                }\n            }\n        }\n        \"\"", "        val vowels\
    \ = \"AEIOUaeiou\"\n        val consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n        var closestVowel = \"\"\n        var closestVowelDistance = -1\n   \
    \     for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i until word.length) {\n                    if\
    \ (vowels.contains(word(j))) {\n                        if (closestVowelDistance\
    \ == -1 || j - i < closestVowelDistance) {\n                            closestVowelDistance\
    \ = j - i\n                            closestVowel = word(j).toString\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var prev\
    \ = ' '\n        var prevprev = ' '\n        var closest = ' '\n        var closestIndex\
    \ = -1\n        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (consonants.contains(prev) && consonants.contains(prevprev))\
    \ {\n                    closest = word(i)\n                    closestIndex =\
    \ i\n                    break\n                }\n            }\n           \
    \ prevprev = prev\n            prev = word(i)\n        }\n        if (closestIndex\
    \ == -1) \"\" else closest.toString", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val wordReverse = word.reverse\n        var prev = ' '\n\
    \        var prevPrev = ' '\n        for (c <- wordReverse) {\n            if\
    \ (vowels.contains(c)) {\n                if (prev != ' ' && !vowels.contains(prev))\
    \ {\n                    return c.toString\n                }\n            }\n\
    \            else {\n                if (prevPrev != ' ' && vowels.contains(prevPrev))\
    \ {\n                    return prevPrev.toString\n                }\n       \
    \     }\n            prevPrev = prev\n            prev = c\n        }\n      \
    \  \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val chars\
    \ = word.toCharArray\n        var result = \"\"\n        for (i <- 0 until chars.length\
    \ - 1) {\n            if (vowels.contains(chars(i)) && !vowels.contains(chars(i\
    \ + 1))) {\n                result = chars(i).toString\n                break\n\
    \            }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      var closestVowel = \"\"\n        var closestDistance = word.length\n  \
    \      for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        if (j - i < closestDistance)\
    \ {\n                            closestDistance = j - i\n                   \
    \         closestVowel = word(j).toString\n                        }\n       \
    \             }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var closestVowel\
    \ = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if\
    \ (vowels.contains(wordArray(i))) {\n                if (i == wordArray.length\
    \ - 1) {\n                    closestVowel = \"\"\n                } else if (consonants.contains(wordArray(i\
    \ + 1))) {\n                    closestVowel = wordArray(i).toString\n       \
    \         }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        var closestVowel = \"\"\n        var closestVowelDistance\
    \ = Int.MaxValue\n        for (i <- word.length - 1 to 0 by -1) {\n          \
    \  if (consonants.contains(word(i))) {\n                for (j <- i - 1 to 0 by\
    \ -1) {\n                    if (vowels.contains(word(j))) {\n               \
    \         if (i - j < closestVowelDistance) {\n                            closestVowelDistance\
    \ = i - j\n                            closestVowel = word(j).toString\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordArray\
    \ = word.toCharArray\n        var vowel = \"\"\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          vowel = wordArray(i).toString\n                if (i > 0 && consonants.contains(wordArray(i\
    \ - 1))) {\n                    return vowel\n                }\n            }\n\
    \        }\n        vowel", "        val vowels = \"aeiouAEIOU\"\n        val\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val wordArray\
    \ = word.toCharArray\n        var result = \"\"\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var closestVowel\
    \ = \"\"\n        var closestDistance = 0\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i))) {\n                var j = i -\
    \ 1\n                while (j >= 0 && !consonants.contains(word(j))) j -= 1\n\
    \                if (j >= 0) {\n                    var k = i + 1\n          \
    \          while (k < word.length && !consonants.contains(word(k))) k += 1\n \
    \                   if (k < word.length) {\n                        val distance\
    \ = k - j\n                        if (closestDistance == 0 || distance < closestDistance)\
    \ {\n                            closestDistance = distance\n                \
    \            closestVowel = word(i).toString\n                        }\n    \
    \                }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"AEIOUaeiou\"\n        val consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n        val wordArray = word.toCharArray\n        val wordLength = wordArray.length\n\
    \        var closestVowel = \"\"\n        for (i <- 0 until wordLength - 1) {\n\
    \            if (consonants.contains(wordArray(i)) && vowels.contains(wordArray(i\
    \ + 1))) {\n                closestVowel = wordArray(i + 1).toString\n       \
    \         break\n            }\n        }\n        closestVowel", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestDistance\
    \ = Int.MaxValue\n        for (i <- 0 until word.length - 1) {\n            if\
    \ (consonants.contains(word(i)) && consonants.contains(word(i + 1))) {\n     \
    \           for (j <- i + 1 until word.length) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        if (j - i < closestDistance) {\n                \
    \            closestDistance = j - i\n                            closestVowel\
    \ = word(j).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        var\
    \ closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n        for\
    \ (i <- 0 until word.length) {\n            if (vowels.contains(word(i))) {\n\
    \                var left = i - 1\n                var right = i + 1\n       \
    \         while (left >= 0 && consonants.contains(word(left))) left -= 1\n   \
    \             while (right < word.length && consonants.contains(word(right)))\
    \ right += 1\n                if (left >= 0 && right < word.length) {\n      \
    \              val distance = right - left - 1\n                    if (distance\
    \ < closestDistance) {\n                        closestDistance = distance\n \
    \                       closestVowel = word(i).toString\n                    }\n\
    \                }\n            }\n        }\n        closestVowel"]
stop_tokens:
- "\n    }\n"

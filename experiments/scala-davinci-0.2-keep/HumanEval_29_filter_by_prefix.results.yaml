language: scala
name: HumanEval_29_filter_by_prefix
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(x\
    \ => x.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(x\
    \ => x.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(x\
    \ => x.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(_.startsWith(prefix))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterByPrefix((List[String]()),\
    \ (\"john\")).equals((List[String]())));\n    assert(filterByPrefix((List[String](\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"\
    xxx\", \"xxxAAA\", \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(x\
    \ => x.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(x\
    \ => x.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(x\
    \ => x.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(x\
    \ => x.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(x\
    \ => x.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter an input list of strings only for ones that start with a given\
    \ prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    // >>> filter_by_prefix(['abc',\
    \ 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n    def filterByPrefix(strings\
    \ : List[String], prefix : String) : List[String] = {\n        strings.filter(s\
    \ => s.startsWith(prefix))\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(filterByPrefix((List[String]()), (\"john\")).equals((List[String]())));\n\
    \    assert(filterByPrefix((List[String](\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\")), (\"xxx\")).equals((List[String](\"xxx\", \"xxxAAA\",\
    \ \"xxx\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793734

name: HumanEval_122_add_elements
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a non-empty array of integers arr and an integer k, return\n    //\
  \ the sum of the elements with at most two digits from the first k elements of arr.\n\
  \    // Example:\n    // Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n    // Output:\
  \ 24 # sum of 21 + 3\n    // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    //\
  \ 2. 1 <= k <= len(arr)\n    def addElements(arr : List[Long], k : Long) : Long\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(addElements((List[Long](1l.toLong,\
  \ -2l.toLong, -3l.toLong, 41l.toLong, 57l.toLong, 76l.toLong, 87l.toLong, 88l.toLong,\
  \ 99l.toLong)), (3l)) == (-4l));\n    assert(addElements((List[Long](111l.toLong,\
  \ 121l.toLong, 3l.toLong, 4000l.toLong, 5l.toLong, 6l.toLong)), (2l)) == (0l));\n\
  \    assert(addElements((List[Long](11l.toLong, 21l.toLong, 3l.toLong, 90l.toLong,\
  \ 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)), (4l)) == (125l));\n \
  \   assert(addElements((List[Long](111l.toLong, 21l.toLong, 3l.toLong, 4000l.toLong,\
  \ 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)), (4l)) == (24l));\n  \
  \  assert(addElements((List[Long](1l.toLong)), (1l)) == (1l));\n    }\n\n}\n"
completions: ["        var sum = 0L\n        for (i <- 0 until k.toInt) {\n      \
    \      if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "        var\
    \ sum = 0L\n        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n\
    \            if (n < 100) sum += n\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum\
    \ += arr(i)\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0 until k.toInt) {\n            val n = arr(i)\n            if (n < 100) sum\
    \ += n\n        }\n        sum", "        var sum = 0L\n        for (i <- 0 until\
    \ k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n        }\n       \
    \ sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n        \
    \    if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 0L until k) {\n            val num = arr(i.toInt)\n\
    \            if (num < 100) sum += num\n        }\n        sum", "        var\
    \ sum = 0L\n        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n\
    \            if (n < 100) sum += n\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum\
    \ += arr(i)\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0L until k) {\n      \
    \      val x = arr(i.toInt)\n            if (x < 100) sum += x\n        }\n  \
    \      sum", "        val arr2 = arr.filter(x => x < 100)\n        arr2.take(k.toInt).sum",
  "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n            val x =\
    \ arr(i)\n            if (x < 100) sum += x\n        }\n        sum", "      \
    \  var sum = 0L\n        for (i <- 0L until k) {\n            val x = arr(i.toInt)\n\
    \            if (x < 100) sum += x\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum\
    \ += arr(i)\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0 until k.toInt) {\n            val n = arr(i)\n            if (n < 100) sum\
    \ += n\n        }\n        sum", "        var sum = 0L\n        for (i <- 0 until\
    \ k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n        }\n       \
    \ sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n        \
    \    if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n   \
    \         if (n < 100) sum += n\n        }\n        sum", "        val arr2 =\
    \ arr.filter(x => x < 100).take(k.toInt)\n        arr2.sum", "        var sum\
    \ = 0L\n        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n   \
    \         if (n < 100) sum += n\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 0L until k) {\n            if (arr(i.toInt).toString.length\
    \ <= 2) sum += arr(i.toInt)\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", "        val n = arr.length\n        var sum = 0L\n\
    \        for (i <- 0 until n) {\n            if (i < k) {\n                val\
    \ x = arr(i)\n                if (x < 100) sum += x\n            }\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n \
    \           if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "      \
    \  var sum = 0L\n        for (i <- 0L until k) {\n            if (arr(i.toInt).toString.length\
    \ <= 2) sum += arr(i.toInt)\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n          \
    \  if (n < 100) sum += n\n        }\n        sum", "        var sum = 0L\n   \
    \     for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 0 until min(k, arr.length)) {\n      \
    \      if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "        var\
    \ sum = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100)\
    \ sum += arr(i)\n        }\n        sum", "        var sum = 0L\n        for (i\
    \ <- 0 until k.toInt) {\n            val n = arr(i)\n            if (n < 100)\
    \ sum += n\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n \
    \           val num = arr(i)\n            if (num < 100) sum += num\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n \
    \           val num = arr(i)\n            if (num < 100) sum += num\n        }\n\
    \        sum", "        var sum = 0L\n        var i = 0\n        while (i < k)\
    \ {\n            val x = arr(i.toInt)\n            if (x < 100) sum += x\n   \
    \         i += 1\n        }\n        sum", "        var sum = 0L\n        for\
    \ (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n    \
    \    }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 0 until min(k, arr.length).toInt) {\n\
    \            if (arr(i) < 100) sum += arr(i)\n        }\n        return sum",
  "        var sum = 0L\n        for (i <- 0L until k) {\n            if (arr(i.toInt).toString.length\
    \ <= 2) sum += arr(i.toInt)\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 0L until k) {\n            if (arr(i.toInt).toString.length\
    \ <= 2) sum += arr(i.toInt)\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- arr.indices) {\n            if (i == k) return sum\n      \
    \      if (arr(i) < 100) sum += arr(i)\n        }\n        return sum", "    \
    \    var sum = 0L\n        for (i <- 0 until k.toInt) {\n            val x = arr(i)\n\
    \            if (x < 100) sum += x\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum\
    \ += arr(i)\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0 until k.toInt) {\n            if (arr(i) >= 10 && arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", "        val arr2 = arr.filter(x => x < 100)\n     \
    \   arr2.take(k.toInt).sum", "        var sum = 0L\n        for (i <- 0 until\
    \ k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n        }\n       \
    \ sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n        \
    \    if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n   \
    \         if (n < 100) sum += n\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            val n = arr(i)\n            if (n < 100) sum += n\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n \
    \           val n = arr(i)\n            if (n < 100) sum += n\n        }\n   \
    \     sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n    \
    \        val n = arr(i)\n            if (n < 100) sum += n\n        }\n      \
    \  sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n       \
    \     if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n   \
    \         if (n < 100) sum += n\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0L until k)\
    \ {\n            if (arr(i.toInt).toString.length <= 2) sum += arr(i.toInt)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 0L until k) {\n            if (arr(i.toInt).toString.length\
    \ <= 2) sum += arr(i.toInt)\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n          \
    \  if (n < 100) sum += n\n        }\n        sum", "        var sum = 0L\n   \
    \     for (i <- 0L until k) {\n            val x = arr(i.toInt)\n            if\
    \ (x < 100) sum += x\n        }\n        sum", "        var result = 0L\n    \
    \    for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) result += arr(i)\n\
    \        }\n        result", "        var sum = 0L\n        for (i <- 0 until\
    \ k.toInt) {\n            val n = arr(i)\n            if (n < 100) sum += n\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            val n = arr(i)\n            if (n < 100) sum += n\n        }\n\
    \        sum", '        arr.filter(x => x < 100).sum', "        var sum = 0L\n\
    \        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            val n = arr(i)\n            if (n < 100) sum += n\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n \
    \           val n = arr(i)\n            if (n < 100) sum += n\n        }\n   \
    \     sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n    \
    \        val n = arr(i)\n            if (n < 100) sum += n\n        }\n      \
    \  sum", "        var sum = 0L\n        for (i <- 0L until k) {\n            if\
    \ (arr(i.toInt).toString.length <= 2) sum += arr(i.toInt)\n        }\n       \
    \ sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n        \
    \    if (arr(i) >= 10 && arr(i) < 100) sum += arr(i)\n        }\n        sum",
  "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n            val n =\
    \ arr(i)\n            if (n < 100) sum += n\n        }\n        sum", "      \
    \  var sum = 0L\n        var count = 0L\n        for (i <- 0 until arr.length)\
    \ {\n            if (arr(i) < 100) {\n                sum += arr(i)\n        \
    \        count += 1\n            }\n            if (count == k) return sum\n \
    \       }\n        return sum", "        var sum = 0L\n        for (i <- 0 until\
    \ k.toInt) {\n            val n = arr(i)\n            if (n < 100) sum += n\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", " \
    \       var result = 0L\n        for (i <- 0 until k.toInt) {\n            val\
    \ n = arr(i)\n            if (n < 100) result += n\n        }\n        result",
  "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i)\
    \ < 100) sum += arr(i)\n        }\n        sum", "        var sum = 0L\n     \
    \   for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", " \
    \       val n = arr.length\n        var sum = 0L\n        for (i <- 0 until n)\
    \ {\n            if (i == k) return sum\n            if (arr(i) < 100) sum +=\
    \ arr(i)\n        }\n        sum", "        var sum = 0L\n        for (i <- 0\
    \ until k.toInt) {\n            val num = arr(i)\n            if (num < 100) sum\
    \ += num\n        }\n        sum", "        val sorted = arr.sorted\n        var\
    \ sum = 0L\n        for (i <- 0 until k.toInt) {\n            if (sorted(i).toString.length\
    \ <= 2) sum += sorted(i)\n        }\n        sum", "        var sum = 0L\n   \
    \     for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", "        val sum = arr.take(k.toInt).filter(x => x <\
    \ 100).sum\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            val num = arr(i)\n            if (num < 100) sum += num\n   \
    \     }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 0 until k.toInt) {\n            val n\
    \ = arr(i)\n            if (n < 100) sum += n\n        }\n        sum", '        arr.take(k.toInt).filter(x
    => x < 100).sum', "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n\
    \            val n = arr(i)\n            if (n < 100) sum += n\n        }\n  \
    \      sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n   \
    \         if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "        val\
    \ arr2 = arr.filter(x => x < 100)\n        arr2.take(k.toInt).sum", "        var\
    \ sum = 0L\n        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n\
    \            if (n < 100) sum += n\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n   \
    \         if (n < 100) sum += n\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", '        arr.take(k.toInt).filter(x => x < 100).sum',
  "        val n = arr.length\n        val m = min(k, n)\n        var sum = 0L\n \
    \       for (i <- 0 until m.toInt) {\n            val x = arr(i)\n           \
    \ if (x < 100) sum += x\n        }\n        sum", "        var sum = 0L\n    \
    \    for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", '        arr.filter(x
    => x < 100).take(k.toInt).sum', "        var sum = 0L\n        for (i <- 0 until\
    \ k.toInt) {\n            val n = arr(i)\n            if (n < 100) sum += n\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0L until k)\
    \ {\n            if (arr(i.toInt).toString.length <= 2) sum += arr(i.toInt)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0L until k)\
    \ {\n            if (arr(i.toInt).toString.length <= 2) sum += arr(i.toInt)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0L until k)\
    \ {\n            if (arr(i.toInt).toString.length <= 2) sum += arr(i.toInt)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0L until k)\
    \ {\n            if (arr(i.toInt).toString.length <= 2) sum += arr(i.toInt)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 0 until k.toInt) {\n            val n\
    \ = arr(i)\n            if (n < 100) sum += n\n        }\n        sum", "    \
    \    var sum = 0L\n        for (i <- 0 until k.toInt) {\n            val num =\
    \ arr(i)\n            if (num < 100) sum += num\n        }\n        sum", "  \
    \      var sum = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i)\
    \ < 100) sum += arr(i)\n        }\n        sum", "        var sum = 0L\n     \
    \   for (i <- 0 until k.toInt) {\n            val x = arr(i)\n            if (x\
    \ < 100) sum += x\n        }\n        sum", "        var sum = 0L\n        for\
    \ (i <- 0 until k.toInt) {\n            val n = arr(i)\n            if (n < 100)\
    \ sum += n\n        }\n        sum", "        val sum = arr.take(k.toInt).filter(x\
    \ => x < 100).sum\n        sum", "        val n = arr.size\n        var sum =\
    \ 0L\n        for (i <- 0 until n) {\n            if (i < k) {\n             \
    \   val x = arr(i)\n                if (x < 100) sum += x\n            }\n   \
    \     }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            val x = arr(i)\n            if (x < 100) sum += x\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n \
    \           val n = arr(i)\n            if (n < 100) sum += n\n        }\n   \
    \     sum", "        val result = arr.filter(x => x < 100).take(k.toInt).sum\n\
    \        result", "        val a = arr.take(k.toInt).filter(x => x < 100).sum\n\
    \        a", '        arr.filter(x => x < 100).take(k.toInt).sum', "        var\
    \ sum = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100)\
    \ sum += arr(i)\n        }\n        sum", "        var sum = 0L\n        for (i\
    \ <- 0 until k.toInt) {\n            val n = arr(i)\n            if (n < 100)\
    \ sum += n\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n        }\n\
    \        sum", '        arr.take(k.toInt).filter(x => x < 100).sum', '        arr.take(k.toInt).filter(x
    => x < 100).sum', "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n\
    \            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "     \
    \   var sum = 0L\n        for (i <- 0L until k) {\n            val n = arr(i.toInt)\n\
    \            if (n < 100) sum += n\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum\
    \ += arr(i)\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0L until k) {\n            if (arr(i.toInt).toString.length <= 2) sum += arr(i.toInt)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            val n = arr(i)\n            if (n < 100) sum += n\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n \
    \           if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "      \
    \  var sum = 0L\n        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n\
    \            if (n < 100) sum += n\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n   \
    \         if (n < 100) sum += n\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i)\
    \ < 100) sum += arr(i)\n        }\n        sum", "        var sum = 0L\n     \
    \   for (i <- 0 until k.toInt) {\n            val x = arr(i)\n            if (x\
    \ < 100) sum += x\n        }\n        sum", "        var sum = 0L\n        for\
    \ (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n    \
    \    }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 0 until k.toInt) {\n            val num\
    \ = arr(i)\n            if (num < 100) sum += num\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i)\
    \ < 100) sum += arr(i)\n        }\n        sum", "        var sum = 0L\n     \
    \   for (i <- 0 until k.toInt) {\n            val num = arr(i)\n            if\
    \ (num < 100) sum += num\n        }\n        sum", "        var sum = 0L\n   \
    \     for (i <- 0 until k.toInt) {\n            val num = arr(i)\n           \
    \ if (num < 100) sum += num\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n          \
    \  if (n < 100) sum += n\n        }\n        sum", "        var sum = 0L\n   \
    \     for (i <- 0 until k.toInt) {\n            val n = arr(i)\n            if\
    \ (n < 100) sum += n\n        }\n        sum", "        var sum = 0L\n       \
    \ for (i <- 0 until k.toInt) {\n            val n = arr(i)\n            if (n\
    \ < 100) sum += n\n        }\n        sum", "        var sum = 0L\n        for\
    \ (i <- 0 until k.toInt) {\n            val n = arr(i)\n            if (n < 100)\
    \ sum += n\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n \
    \           val num = arr(i)\n            if (num < 100) sum += num\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0 until min(k, arr.length))\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i)\
    \ < 100) sum += arr(i)\n        }\n        sum", "        var sum = 0L\n     \
    \   for (i <- 0L until k) {\n            if (arr(i.toInt).toString.length <= 2)\
    \ sum += arr(i.toInt)\n        }\n        sum", "        var sum = 0L\n      \
    \  for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            val n = arr(i)\n            if (n < 100) sum += n\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n \
    \           if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "      \
    \  var sum = 0L\n        for (i <- 0 until k.toInt) {\n            val num = arr(i)\n\
    \            if (num < 100) sum += num\n        }\n        sum", "        var\
    \ sum = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100)\
    \ sum += arr(i)\n        }\n        sum", "        val sum = arr.take(k.toInt).filter(x\
    \ => x < 100).sum\n        return sum", "        var sum = 0L\n        for (i\
    \ <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n       \
    \ }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n\
    \            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "     \
    \   var sum = 0L\n        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n\
    \            if (n < 100) sum += n\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum\
    \ += arr(i)\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0L until k) {\n      \
    \      val n = arr(i.toInt)\n            if (n < 100) sum += n\n        }\n  \
    \      sum", "        var sum = 0L\n        for (i <- 0L until k) {\n        \
    \    if (arr(i.toInt).toString.length <= 2) sum += arr(i.toInt)\n        }\n \
    \       sum", "        var sum = 0L\n        for (i <- 0L until k) {\n       \
    \     if (arr(i.toInt).toString.length <= 2) sum += arr(i.toInt)\n        }\n\
    \        sum", "        val arr2 = arr.filter(x => x < 100)\n        arr2.take(k.toInt).sum",
  '        arr.filter(x => x < 100).take(k.toInt).sum', "        var sum = 0L\n  \
    \      for (i <- 0 until k.toInt) {\n            val n = arr(i)\n            if\
    \ (n < 100) sum += n\n        }\n        sum", "        var sum = 0L\n       \
    \ for (i <- 0 until k.toInt) {\n            val n = arr(i)\n            if (n\
    \ < 100) sum += n\n        }\n        sum", "        var sum = 0L\n        for\
    \ (i <- 0 until k.toInt) {\n            if (arr(i) >= 10 && arr(i) < 100) sum\
    \ += arr(i)\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0 until k.toInt) {\n            val num = arr(i)\n            if (num < 100)\
    \ sum += num\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0 until k.toInt) {\n            val num = arr(i)\n            if (num < 100)\
    \ sum += num\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0 until k.toInt) {\n            val n = arr(i)\n            if (n < 100) sum\
    \ += n\n        }\n        sum", "        var sum = 0L\n        for (i <- 0 until\
    \ k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n        }\n       \
    \ sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n        \
    \    val n = arr(i)\n            if (n < 100) sum += n\n        }\n        sum",
  "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n            val n =\
    \ arr(i)\n            if (n < 100) sum += n\n        }\n        sum", "      \
    \  var sum = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i)\
    \ < 100) sum += arr(i)\n        }\n        sum", "        var sum = 0L\n     \
    \   for (i <- 0 until k.toInt) {\n            val n = arr(i)\n            if (n\
    \ < 100) sum += n\n        }\n        sum", "        var sum = 0L\n        for\
    \ (i <- 0 until k.toInt) {\n            if (arr(i) < 100) {\n                sum\
    \ += arr(i)\n            }\n        }\n        sum", "        var sum = 0L\n \
    \       for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            val n = arr(i)\n            if (n < 100) sum += n\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n \
    \           if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "      \
    \  var sum = 0L\n        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n\
    \            if (n < 100) sum += n\n        }\n        sum", "        var sum\
    \ = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum\
    \ += arr(i)\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0 until k.toInt) {\n            val n = arr(i)\n            if (n < 100) sum\
    \ += n\n        }\n        sum", "        val s = arr.take(k.toInt).filter(x =>\
    \ x < 100).sum\n        s", "        var sum = 0L\n        for (i <- 0 until k.toInt)\
    \ {\n            val n = arr(i)\n            if (n < 100) sum += n\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0 until min(k, arr.length))\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", " \
    \       var sum = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i)\
    \ < 100) sum += arr(i)\n        }\n        sum", "        var sum = 0L\n     \
    \   for (i <- 0L until k) {\n            val n = arr(i.toInt)\n            if\
    \ (n < 100) sum += n\n        }\n        sum", "        var sum = 0L\n       \
    \ for (i <- 0 until k.toInt) {\n            val n = arr(i)\n            if (n\
    \ < 100) sum += n\n        }\n        sum", "        var sum = 0L\n        for\
    \ (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n    \
    \    }\n        sum", "        var sum = 0L\n        for (i <- 0L until k) {\n\
    \            if (arr(i.toInt).toString.length <= 2) {\n                sum +=\
    \ arr(i.toInt)\n            }\n        }\n        sum", "        var sum = 0L\n\
    \        for (i <- 0 until k.toInt) {\n            val n = arr(i)\n          \
    \  if (n < 100) sum += n\n        }\n        sum", "        var sum = 0L\n   \
    \     for (i <- 0L until k) {\n            if (arr(i.toInt).toString.length <=\
    \ 2) sum += arr(i.toInt)\n        }\n        sum", "        var sum = 0L\n   \
    \     for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n\
    \        }\n        sum", "        def helper(arr : List[Long], k : Long, sum\
    \ : Long) : Long = {\n            if (k == 0) sum\n            else {\n      \
    \          val x = arr.head\n                if (x < 100) helper(arr.tail, k -\
    \ 1, sum + x)\n                else helper(arr.tail, k - 1, sum)\n           \
    \ }\n        }\n        helper(arr, k, 0)", "        var sum = 0L\n        for\
    \ (i <- 0 until k.toInt) {\n            val n = arr(i)\n            if (n < 100)\
    \ sum += n\n        }\n        sum", "        var sum = 0L\n        for (i <-\
    \ 0 until k.toInt) {\n            if (arr(i) < 100) sum += arr(i)\n        }\n\
    \        sum", "        var sum = 0L\n        for (i <- 0 until k.toInt) {\n \
    \           if (arr(i) < 100) sum += arr(i)\n        }\n        sum", "      \
    \  var sum = 0L\n        for (i <- 0 until k.toInt) {\n            if (arr(i)\
    \ < 100) sum += arr(i)\n        }\n        sum", "        var sum = 0L\n     \
    \   for (i <- 0 until k.toInt) {\n            val x = arr(i)\n            if (x\
    \ < 100) sum += x\n        }\n        sum"]
stop_tokens:
- "\n    }\n"

name: HumanEval_51_remove_vowels
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // remove_vowels is a function that takes string and returns string without\
  \ vowels.\n    // >>> remove_vowels('')\n    // ''\n    // >>> remove_vowels('abcdef')\n\
  \    // 'bcdf'\n    // >>> remove_vowels('aaaaa')\n    // ''\n    // >>> remove_vowels('aaBAA')\n\
  \    // 'B'\n    // >>> remove_vowels('zbcd')\n    // 'zbcd'\n    def removeVowels(text\
  \ : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\"\
  )).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
  bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
  \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
  acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\"\
  )));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
completions: ["        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c.toLower))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filterNot(vowels.contains(_))", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c.toLower))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filterNot(vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c.toLower))",
  "        text.filter(c => !c.toLower.equals('a') && !c.toLower.equals('e') && !c.toLower.equals('i')\
    \ && !c.toLower.equals('o') && !c.toLower.equals('u'))", "        text.filter(c\
    \ => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')", "        var\
    \ result = \"\"\n        for (c <- text) {\n            if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u') {\n                result += c\n      \
    \      }\n        }\n        return result", "        // TODO: implement this\
    \ function\n        return \"\"", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        text.filter(c => !vowels.contains(c.toLower))", "        val vowels\
    \ = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(c\
    \ => !vowels.contains(c))", "        val vowels = \"aeiouAEIOU\"\n        text.filter(c\
    \ => !vowels.contains(c))", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        text.filter(c => !vowels.contains(c))", "        val vowels = \"aeiouAEIOU\"\
    \n        text.filter(c => !vowels.contains(c))", "        val vowels = Array('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var result = \"\"\n  \
    \      for (c <- text) {\n            if (!vowels.contains(c)) result += c\n \
    \       }\n        result", "        val vowels = List('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U')\n        text.filter(c => !vowels.contains(c))"]
stop_tokens:
- "\n    }\n"

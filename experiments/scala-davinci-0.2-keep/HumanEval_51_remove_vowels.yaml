name: HumanEval_51_remove_vowels
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // remove_vowels is a function that takes string and returns string without\
  \ vowels.\n    // >>> remove_vowels('')\n    // ''\n    // >>> remove_vowels('abcdef')\n\
  \    // 'bcdf'\n    // >>> remove_vowels('aaaaa')\n    // ''\n    // >>> remove_vowels('aaBAA')\n\
  \    // 'B'\n    // >>> remove_vowels('zbcd')\n    // 'zbcd'\n    def removeVowels(text\
  \ : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\"\
  )).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
  bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
  \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
  acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\"\
  )));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
completions: ["        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c.toLower))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filterNot(vowels.contains(_))", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c.toLower))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filterNot(vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c.toLower))",
  "        text.filter(c => !c.toLower.equals('a') && !c.toLower.equals('e') && !c.toLower.equals('i')\
    \ && !c.toLower.equals('o') && !c.toLower.equals('u'))", "        text.filter(c\
    \ => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')", "        var\
    \ result = \"\"\n        for (c <- text) {\n            if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u') {\n                result += c\n      \
    \      }\n        }\n        return result", "        // TODO: implement this\
    \ function\n        return \"\"", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        text.filter(c => !vowels.contains(c.toLower))", "        val vowels\
    \ = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(c\
    \ => !vowels.contains(c))", "        val vowels = \"aeiouAEIOU\"\n        text.filter(c\
    \ => !vowels.contains(c))", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        text.filter(c => !vowels.contains(c))", "        val vowels = \"aeiouAEIOU\"\
    \n        text.filter(c => !vowels.contains(c))", "        val vowels = Array('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var result = \"\"\n  \
    \      for (c <- text) {\n            if (!vowels.contains(c)) result += c\n \
    \       }\n        result", "        val vowels = List('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U')\n        text.filter(c => !vowels.contains(c))", " \
    \       text.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u')", "        val vowels = \"aeiou\"\n        text.filter(c => !vowels.contains(c.toLower))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filterNot(vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        text.filter(x\
    \ => !x.isLetter || x.toLower != 'a' && x.toLower != 'e' && x.toLower != 'i' &&\
    \ x.toLower != 'o' && x.toLower != 'u')", "        val vowels = \"aeiouAEIOU\"\
    \n        text.filter(c => !vowels.contains(c))", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        val result = new StringBuilder\n\
    \        for (c <- text) {\n            if (!vowels.contains(c)) result += c\n\
    \        }\n        result.toString", "        val vowels = \"aeiouAEIOU\"\n \
    \       text.filter(c => !vowels.contains(c))", "        // Write your code here.\n\
    \        return text.filter(c => !c.isLetter || !c.isLower || c != 'a' && c !=\
    \ 'e' && c != 'i' && c != 'o' && c != 'u')", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val vowels\
    \ = \"aeiou\"\n        text.filter(c => !vowels.contains(c))", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c.toLower))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val result = new StringBuilder\n\
    \        for (c <- text) {\n            if (!vowels.contains(c)) result += c\n\
    \        }\n        result.toString", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", " \
    \       text.filter(c => !c.isLetter || !c.toLower.equals('a') && !c.toLower.equals('e')\
    \ && !c.toLower.equals('i') && !c.toLower.equals('o') && !c.toLower.equals('u'))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n \
    \       text.filter(c => !vowels.contains(c))", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n \
    \       text.filter(c => !vowels.contains(c))", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c.toLower))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        return text.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u')", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        var vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      var result = \"\"\n        for (c <- text) {\n            if (!vowels.contains(c))\
    \ {\n                result += c\n            }\n        }\n        return result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (c\
    \ <- text) {\n            if (!vowels.contains(c)) {\n                result +=\
    \ c\n            }\n        }\n        result", "        var result = \"\"\n \
    \       for (c <- text) {\n            if (!c.isLetter || !c.isLower || c != 'a'\
    \ || c != 'e' || c != 'i' || c != 'o' || c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c.toLower))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c.toLower))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        text.filter(c\
    \ => !c.isLetter || !c.toLower.equals('a') && !c.toLower.equals('e') && !c.toLower.equals('i')\
    \ && !c.toLower.equals('o') && !c.toLower.equals('u'))", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))",
  "        text.filter(c => !c.isLetter || c.toLower != 'a' && c.toLower != 'e' &&\
    \ c.toLower != 'i' && c.toLower != 'o' && c.toLower != 'u')", "        text.filter(c\
    \ => !c.isLetter || c.toLower != 'a' && c.toLower != 'e' && c.toLower != 'i' &&\
    \ c.toLower != 'o' && c.toLower != 'u')", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        var vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      var result = \"\"\n        for (c <- text) {\n            if (!vowels.contains(c))\
    \ {\n                result += c\n            }\n        }\n        return result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        text.filter(c => !c.isLetter || c.toLower != 'a' && c.toLower != 'e' &&\
    \ c.toLower != 'i' && c.toLower != 'o' && c.toLower != 'u')", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = \"\
    aeiouAEIOU\"\n        var result = \"\"\n        for (c <- text) {\n         \
    \   if (!vowels.contains(c)) {\n                result += c\n            }\n \
    \       }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        text.filter(c => !vowels.contains(c))", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "     \
    \   val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = \"aeiouAEIOU\"\n        val sb = new StringBuilder\n     \
    \   for (c <- text) {\n            if (!vowels.contains(c)) sb.append(c)\n   \
    \     }\n        sb.toString", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        text.filter(!vowels.contains(_))", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        var result\
    \ = \"\"\n        for (c <- text) {\n            if (c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u') {\n                result += c\n           \
    \ }\n        }\n        return result", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        text.filter(c => !vowels.contains(c.toLower))", "       \
    \ val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n \
    \       text.filter(!vowels.contains(_))", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        text.filterNot(vowels.contains(_))", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        text.filter(c => !c.isLetter || !c.toLower.equals('a') && !c.toLower.equals('e')\
    \ && !c.toLower.equals('i') && !c.toLower.equals('o') && !c.toLower.equals('u'))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (!c.isLetter\
    \ || !c.isLower || c != 'a' || c != 'e' || c != 'i' || c != 'o' || c != 'u') {\n\
    \                result += c\n            }\n        }\n        return result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = \"\
    aeiouAEIOU\"\n        text.filter(!vowels.contains(_))", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", " \
    \       var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = \"\
    aeiouAEIOU\"\n        text.filterNot(vowels.contains(_))", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val result = new StringBuilder\n        for (c <-\
    \ text) {\n            if (!vowels.contains(c)) result += c\n        }\n     \
    \   result.toString", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n   \
    \     text.filter(c => !vowels.contains(c.toLower))", "        val vowels = \"\
    aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", " \
    \       val vowels = \"aeiou\"\n        var result = \"\"\n        for (c <- text)\
    \ {\n            if (!vowels.contains(c)) {\n                result += c\n   \
    \         }\n        }\n        result", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        text.filter(!vowels.contains(_))", "        var result =\
    \ \"\"\n        for (c <- text) {\n            if (c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u') {\n                result += c\n            }\n\
    \        }\n        return result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        text.filter(!vowels.contains(_))", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c.toLower))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n \
    \       text.filter(!vowels.contains(_))", "        val vowels = \"aeiouAEIOU\"\
    \n        text.filter(c => !vowels.contains(c))", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "     \
    \   text.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filterNot(vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        var vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      var result = \"\"\n        for (c <- text) {\n            if (!vowels.contains(c))\
    \ {\n                result += c\n            }\n        }\n        return result",
  "        // TODO: Implement this function.\n        return \"\"", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n\
    \        text.filter(c => !vowels.contains(c))", "        val vowels = \"aeiouAEIOU\"\
    \n        text.filter(c => !vowels.contains(c))", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))",
  "        text.filter(c => !c.isLetter || c.toLower != 'a' && c.toLower != 'e' &&\
    \ c.toLower != 'i' && c.toLower != 'o' && c.toLower != 'u')", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val result = new StringBuilder\n   \
    \     for (c <- text) {\n            if (!vowels.contains(c)) result += c\n  \
    \      }\n        result.toString", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        text.filter(!vowels.contains(_))", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = \"aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        text.filter(c => !c.isLetter || !c.toLower.equals('a') && !c.toLower.equals('e')\
    \ && !c.toLower.equals('i') && !c.toLower.equals('o') && !c.toLower.equals('u'))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filterNot(vowels.contains(_))",
  "        val vowels = \"aeiou\"\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filter(!vowels.contains(_))",
  "        text.filter(c => !c.isLetter || !c.toLower.equals('a') && !c.toLower.equals('e')\
    \ && !c.toLower.equals('i') && !c.toLower.equals('o') && !c.toLower.equals('u'))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n \
    \       val result = new StringBuilder\n        for (c <- text) {\n          \
    \  if (!vowels.contains(c)) {\n                result.append(c)\n            }\n\
    \        }\n        result.toString", "        var result = \"\"\n        for\
    \ (c <- text) {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u') {\n                result += c\n            }\n        }\n    \
    \    return result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n    \
    \    text.filter(!vowels.contains(_))", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        text.filter(!List('a', 'e', 'i', 'o', 'u').contains(_))", "        val\
    \ vowels = \"aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))", " \
    \       var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        var vowels = Set('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var result = new StringBuilder()\n\
    \        for (c <- text) {\n            if (!vowels.contains(c)) {\n         \
    \       result += c\n            }\n        }\n        return result.toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filter(!vowels.contains(_))",
  "        // Write your code here\n        return \"\"", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = \"aeiou\"\n        var result = \"\"\n        for (c <- text) {\n \
    \           if (!vowels.contains(c)) result += c\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (c\
    \ <- text) {\n            if (!vowels.contains(c)) {\n                result +=\
    \ c\n            }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\
    \n        text.filter(c => !vowels.contains(c))", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        text.filter(c => !c.isLetter || !c.toLower.equals('a') && !c.toLower.equals('e')\
    \ && !c.toLower.equals('i') && !c.toLower.equals('o') && !c.toLower.equals('u'))",
  "        var result = \"\"\n        for (c <- text) {\n            if (!c.isLetter\
    \ || !c.isLower || c != 'a' || c != 'e' || c != 'i' || c != 'o' || c != 'u') {\n\
    \                result += c\n            }\n        }\n        return result",
  "        val vowels = \"aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))"]
stop_tokens:
- "\n    }\n"

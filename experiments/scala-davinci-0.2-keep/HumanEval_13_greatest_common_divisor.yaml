name: HumanEval_13_greatest_common_divisor
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return a greatest common divisor of two integers a and b\n    // >>> greatest_common_divisor(3,\
  \ 5)\n    // 1\n    // >>> greatest_common_divisor(25, 15)\n    // 5\n    def greatestCommonDivisor(a\
  \ : Long, b : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
  \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n  \
  \  assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
  \ (60l)) == (12l));\n    }\n\n}\n"
completions: ['        if (b == 0) a else greatestCommonDivisor(b, a % b)', '        if
    (b == 0) a else greatestCommonDivisor(b, a % b)', '        if (b == 0) a else
    greatestCommonDivisor(b, a % b)', '        if (b == 0) a else greatestCommonDivisor(b,
    a % b)', '        if (b == 0) a else greatestCommonDivisor(b, a % b)', '        if
    (b == 0) a else greatestCommonDivisor(b, a % b)', '        if (b == 0) a else
    greatestCommonDivisor(b, a % b)', '        if (b == 0) a else greatestCommonDivisor(b,
    a % b)', '        if (b == 0) a else greatestCommonDivisor(b, a % b)', '        if
    (b == 0) a else greatestCommonDivisor(b, a % b)', '        if (b == 0) a else
    greatestCommonDivisor(b, a % b)', '        if (b == 0) a else greatestCommonDivisor(b,
    a % b)', '        if (b == 0) a else greatestCommonDivisor(b, a % b)', '        if
    (b == 0) a else greatestCommonDivisor(b, a % b)', '        if (b == 0) a else
    greatestCommonDivisor(b, a % b)', '        if (b == 0) a else greatestCommonDivisor(b,
    a % b)', '        if (b == 0) a else greatestCommonDivisor(b, a % b)', '        if
    (b == 0) a else greatestCommonDivisor(b, a % b)', '        if (b == 0) a else
    greatestCommonDivisor(b, a % b)', '        if (b == 0) a else greatestCommonDivisor(b,
    a % b)']
stop_tokens:
- "\n    }\n"

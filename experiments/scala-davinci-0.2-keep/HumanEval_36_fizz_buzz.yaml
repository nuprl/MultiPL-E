name: HumanEval_36_fizz_buzz
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return the number of times the digit 7 appears in integers less than n which\
  \ are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n    // 0\n    // >>> fizz_buzz(78)\n\
  \    // 2\n    // >>> fizz_buzz(79)\n    // 3\n    def fizzBuzz(n : Long) : Long\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) ==\
  \ (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
  \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
  \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
  \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
completions: ["        var count = 0L\n        for (i <- 1L to n - 1) {\n        \
    \    if (i % 11 == 0 || i % 13 == 0) {\n                var j = i\n          \
    \      while (j > 0) {\n                    if (j % 10 == 7) count += 1\n    \
    \                j /= 10\n                }\n            }\n        }\n      \
    \  count", "        var count = 0L\n        for (i <- 1L to n) {\n           \
    \ if (i % 11 == 0 || i % 13 == 0) {\n                var j = i\n             \
    \   while (j > 0) {\n                    if (j % 10 == 7) count += 1\n       \
    \             j /= 10\n                }\n            }\n        }\n        count",
  "        var count = 0L\n        for (i <- 1L to n - 1) {\n            if (i % 11\
    \ == 0 || i % 13 == 0) {\n                var j = i\n                while (j\
    \ > 0) {\n                    if (j % 10 == 7) count += 1\n                  \
    \  j /= 10\n                }\n            }\n        }\n        count", "   \
    \     var count = 0L\n        for (i <- 1L to n) {\n            if (i % 11 ==\
    \ 0 || i % 13 == 0) {\n                var j = i\n                while (j > 0)\
    \ {\n                    if (j % 10 == 7) count += 1\n                    j /=\
    \ 10\n                }\n            }\n        }\n        count", "        var\
    \ count = 0L\n        for (i <- 1L to n) {\n            if (i % 11 == 0 || i %\
    \ 13 == 0) {\n                var j = i\n                while (j > 0) {\n   \
    \                 if (j % 10 == 7) count += 1\n                    j /= 10\n \
    \               }\n            }\n        }\n        count", "        var count\
    \ = 0L\n        for (i <- 1L to n) {\n            if (i % 11 == 0 || i % 13 ==\
    \ 0) {\n                var j = i\n                while (j > 0) {\n         \
    \           if (j % 10 == 7) count += 1\n                    j /= 10\n       \
    \         }\n            }\n        }\n        count", "        var count = 0L\n\
    \        for (i <- 1L to n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                var j = i\n                while (j > 0) {\n                \
    \    if (j % 10 == 7) count += 1\n                    j /= 10\n              \
    \  }\n            }\n        }\n        count", "        var count = 0L\n    \
    \    for (i <- 1L to n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n   \
    \             var j = i\n                while (j > 0) {\n                   \
    \ if (j % 10 == 7) count += 1\n                    j /= 10\n                }\n\
    \            }\n        }\n        count", "        var count = 0L\n        for\
    \ (i <- 1 to n.toInt) {\n            if (i % 11 == 0 || i % 13 == 0) {\n     \
    \           var num = i\n                while (num > 0) {\n                 \
    \   if (num % 10 == 7) count += 1\n                    num /= 10\n           \
    \     }\n            }\n        }\n        count", "        var count = 0L\n \
    \       for (i <- 1L to n - 1) {\n            if (i % 11 == 0 || i % 13 == 0)\
    \ {\n                var temp = i\n                while (temp > 0) {\n      \
    \              if (temp % 10 == 7) count += 1\n                    temp /= 10\n\
    \                }\n            }\n        }\n        count", "        var count\
    \ = 0L\n        for (i <- 1L to n - 1) {\n            if (i % 11 == 0 || i % 13\
    \ == 0) {\n                var j = i\n                while (j > 0) {\n      \
    \              if (j % 10 == 7) count += 1\n                    j /= 10\n    \
    \            }\n            }\n        }\n        count", "        var count =\
    \ 0L\n        for (i <- 1L to n - 1) {\n            if (i % 11 == 0 || i % 13\
    \ == 0) {\n                var j = i\n                while (j > 0) {\n      \
    \              if (j % 10 == 7) count += 1\n                    j /= 10\n    \
    \            }\n            }\n        }\n        count", "        var count =\
    \ 0L\n        for (i <- 1L to n) {\n            if (i % 11 == 0 || i % 13 == 0)\
    \ {\n                var j = i\n                while (j > 0) {\n            \
    \        if (j % 10 == 7) count += 1\n                    j /= 10\n          \
    \      }\n            }\n        }\n        count", "        var count = 0L\n\
    \        for (i <- 1L to n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                val s = i.toString\n                for (c <- s) {\n        \
    \            if (c == '7') count += 1\n                }\n            }\n    \
    \    }\n        count", "        var count = 0\n        for (i <- 1 to n.toInt)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                var temp =\
    \ i\n                while (temp > 0) {\n                    if (temp % 10 ==\
    \ 7) count += 1\n                    temp /= 10\n                }\n         \
    \   }\n        }\n        count", "        var count = 0L\n        for (i <- 1L\
    \ to n - 1) {\n            if (i % 11 == 0 || i % 13 == 0) {\n               \
    \ var temp = i\n                while (temp > 0) {\n                    if (temp\
    \ % 10 == 7) count += 1\n                    temp /= 10\n                }\n \
    \           }\n        }\n        count", "        var count = 0L\n        for\
    \ (i <- 1L to n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n          \
    \      var j = i\n                while (j > 0) {\n                    if (j %\
    \ 10 == 7) count += 1\n                    j /= 10\n                }\n      \
    \      }\n        }\n        count", "        var count = 0L\n        for (i <-\
    \ 1L to n - 1) {\n            if (i % 11 == 0 || i % 13 == 0) {\n            \
    \    val s = i.toString\n                for (j <- 0 until s.length) {\n     \
    \               if (s(j) == '7') count += 1\n                }\n            }\n\
    \        }\n        count", "        var count = 0L\n        for (i <- 1L to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                var temp =\
    \ i\n                while (temp > 0) {\n                    if (temp % 10 ==\
    \ 7) count += 1\n                    temp /= 10\n                }\n         \
    \   }\n        }\n        count", "        var count = 0L\n        for (i <- 1L\
    \ to n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                var\
    \ s = i.toString\n                for (j <- 0 until s.length) {\n            \
    \        if (s(j) == '7') count += 1\n                }\n            }\n     \
    \   }\n        count"]
stop_tokens:
- "\n    }\n"

name: HumanEval_63_fibfib
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // The FibFib number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) == 0\n   \
  \ // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
  \    // Please write a function to efficiently compute the n-th element of the fibfib\
  \ number sequence.\n    // >>> fibfib(1)\n    // 0\n    // >>> fibfib(5)\n    //\
  \ 4\n    // >>> fibfib(8)\n    // 24\n    def fibfib(n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fibfib((2l)) == (1l));\n\
  \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
  \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n\
  \    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
completions: ["        if (n == 0) 0\n        else if (n == 1) 0\n        else if\
    \ (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", " \
    \       if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n\
    \        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n ==\
    \ 0) return 0\n        if (n == 1) return 0\n        if (n == 2) return 1\n  \
    \      var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 3\
    \ to n.toInt) {\n            val d = a + b + c\n            a = b\n          \
    \  b = c\n            c = d\n        }\n        c", "        if (n == 0) 0\n \
    \       else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        // Fill in the code here\n \
    \       0", "        var a = 0L\n        var b = 0L\n        var c = 1L\n    \
    \    for (i <- 1 to n.toInt) {\n            val d = a + b + c\n            a =\
    \ b\n            b = c\n            c = d\n        }\n        return a", "   \
    \     if (n == 0) return 0\n        if (n == 1) return 0\n        if (n == 2)\
    \ return 1\n        var a = 0L\n        var b = 0L\n        var c = 1L\n     \
    \   for (i <- 3 to n.toInt) {\n            val d = a + b + c\n            a =\
    \ b\n            b = c\n            c = d\n        }\n        c", "        var\
    \ a = 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 3 to n.toInt)\
    \ {\n            val d = a + b + c\n            a = b\n            b = c\n   \
    \         c = d\n        }\n        c", "        def fibfib(n : Long, a : Long,\
    \ b : Long, c : Long) : Long = {\n            if (n == 0) a\n            else\
    \ if (n == 1) b\n            else if (n == 2) c\n            else fibfib(n - 1,\
    \ b, c, a + b + c)\n        }\n        fibfib(n, 0, 0, 1)", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        var a = 0L\n        var b =\
    \ 0L\n        var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d\
    \ = a + b + c\n            a = b\n            b = c\n            c = d\n     \
    \   }\n        c", "        if (n == 0) 0\n        else if (n == 1) 0\n      \
    \  else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n -\
    \ 3)", "        if (n == 0) return 0\n        if (n == 1) return 0\n        if\
    \ (n == 2) return 1\n        var a = 0L\n        var b = 0L\n        var c = 1L\n\
    \        for (i <- 3 to n.toInt) {\n            val d = a + b + c\n          \
    \  a = b\n            b = c\n            c = d\n        }\n        c", "     \
    \   if (n == 0) return 0\n        if (n == 1) return 0\n        if (n == 2) return\
    \ 1\n        var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i\
    \ <- 3 to n.toInt) {\n            val d = a + b + c\n            a = b\n     \
    \       b = c\n            c = d\n        }\n        c", "        if (n == 0)\
    \ 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        var a = 0L\n        var b =\
    \ 0L\n        var c = 1L\n        var d = 0L\n        for (i <- 3 to n.toInt)\
    \ {\n            d = a + b + c\n            a = b\n            b = c\n       \
    \     c = d\n        }\n        return d", "        var a = 0L\n        var b\
    \ = 0L\n        var c = 1L\n        for (i <- 3 to n.toInt) {\n            val\
    \ d = a + b + c\n            a = b\n            b = c\n            c = d\n   \
    \     }\n        c", "        if (n == 0) 0\n        else if (n == 1) 0\n    \
    \    else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n\
    \ == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "    \
    \    var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 1 to\
    \ n.toInt) {\n            val d = a + b + c\n            a = b\n            b\
    \ = c\n            c = d\n        }\n        a"]
stop_tokens:
- "\n    }\n"

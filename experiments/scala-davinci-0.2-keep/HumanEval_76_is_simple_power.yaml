name: HumanEval_76_is_simple_power
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Your task is to write a function that returns true if a number x is a simple\n\
  \    // power of n and false in other cases.\n    // x is a simple power of n if\
  \ n**int=x\n    // For example:\n    // is_simple_power(1, 4) => true\n    // is_simple_power(2,\
  \ 2) => true\n    // is_simple_power(8, 2) => true\n    // is_simple_power(3, 2)\
  \ => false\n    // is_simple_power(3, 1) => false\n    // is_simple_power(5, 3)\
  \ => false\n    def isSimplePower(x : Long, n : Long) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isSimplePower((16l),\
  \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n \
  \   assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
  \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
  \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n    assert(isSimplePower((12l),\
  \ (6l)) == (false));\n    assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
  \ (12l)) == (true));\n    }\n\n}\n"
completions: ["        if (x == 1) return true\n        var i = 2\n        while (i\
    \ <= x) {\n            if (pow(n, i).toLong == x) return true\n            i +=\
    \ 1\n        }\n        return false", "        if (x == 1) return true\n    \
    \    var i = 2\n        while (i <= x) {\n            if (i == x) return true\n\
    \            i *= n\n        }\n        return false", "        if (x == 1) return\
    \ true\n        if (n == 1) return false\n        var i = 2\n        while (i\
    \ <= x) {\n            if (i == x) return true\n            i *= n\n        }\n\
    \        return false", "        if (x == 1) return true\n        if (n == 1)\
    \ return false\n        var y = n\n        while (y < x) {\n            y *= n\n\
    \        }\n        return y == x", "        if (x == 1) return true\n       \
    \ if (n == 1) return false\n        var i = 2\n        while (i <= x) {\n    \
    \        if (i == x) return true\n            i *= n\n        }\n        return\
    \ false", "        if (x == 1) return true\n        if (n == 1) return false\n\
    \        var i = 2\n        while (i <= x) {\n            if (i == x) return true\n\
    \            i *= n\n        }\n        return false", "        if (x == 1) return\
    \ true\n        if (n == 1) return false\n        var i = 2\n        while (i\
    \ <= x) {\n            if (i == x) return true\n            i *= n\n        }\n\
    \        return false", "        if (x == 1) return true\n        var i = 2\n\
    \        while (i <= x) {\n            if (i == x) return true\n            i\
    \ *= n\n        }\n        return false", "        if (x == 1) return true\n \
    \       var i = 1\n        while (pow(n, i) <= x) {\n            if (pow(n, i)\
    \ == x) return true\n            i += 1\n        }\n        return false", " \
    \       if (x == 1) return true\n        var i = 2\n        while (i <= x) {\n\
    \            if (pow(n, i).toLong == x) return true\n            i += 1\n    \
    \    }\n        return false", "        if (x == 1) return true\n        if (n\
    \ == 1) return false\n        var i = 2\n        while (i <= x) {\n          \
    \  if (i == x) return true\n            i *= n\n        }\n        return false",
  "        if (x == 1) return true\n        if (n == 1) return false\n        var\
    \ i = 2\n        while (i <= x) {\n            if (i == x) return true\n     \
    \       i *= n\n        }\n        return false", "        if (x == 1) return\
    \ true\n        if (n == 1) return false\n        var i = 2\n        while (i\
    \ <= x) {\n            if (pow(n, i).toLong == x) return true\n            i +=\
    \ 1\n        }\n        return false", "        if (x == 1) return true\n    \
    \    if (n == 1) return false\n        var i = 2\n        while (i <= x) {\n \
    \           if (i == x) return true\n            i *= n\n        }\n        return\
    \ false", "        if (x == 1) return true\n        var i = 2\n        while (i\
    \ <= x) {\n            if (i == x) return true\n            i *= n\n        }\n\
    \        return false", "        if (x == 1) return true\n        var i = 2\n\
    \        while (i <= x) {\n            if (i == x) return true\n            i\
    \ *= n\n        }\n        return false", "        if (x == 1) return true\n \
    \       if (n == 1) return false\n        var i = 2\n        while (i <= x) {\n\
    \            if (i == x) return true\n            i *= n\n        }\n        return\
    \ false", "        if (x == 1) return true\n        var i = 2\n        while (i\
    \ <= x) {\n            if (i == x) return true\n            i *= n\n        }\n\
    \        return false", "        if (x == 1) return true\n        if (n == 1)\
    \ return false\n        var i = 2\n        while (i <= x) {\n            if (i\
    \ == x) return true\n            i *= n\n        }\n        return false", " \
    \       if (x == 1) return true\n        if (n == 1) return false\n        var\
    \ i = 1\n        while (i <= x) {\n            if (pow(n, i).toLong == x) return\
    \ true\n            i += 1\n        }\n        return false"]
stop_tokens:
- "\n    }\n"

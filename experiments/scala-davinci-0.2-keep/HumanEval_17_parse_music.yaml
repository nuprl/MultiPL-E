name: HumanEval_17_parse_music
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n    // Your task is to parse this string and return list of integers\
  \ corresponding to how many beats does each\n    // not last.\n    // Here is a\
  \ legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|' - half note, lasts\
  \ two beats\n    // '.|' - quater note, lasts one beat\n    // >>> parse_music('o\
  \ o| .| o| o| .| .| .| .| o o')\n    // [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    def\
  \ parseMusic(music_string : String) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(parseMusic((\"\"\
  )).equals((List[Long]())));\n    assert(parseMusic((\"o o o o\")).equals((List[Long](4l.toLong,\
  \ 4l.toLong, 4l.toLong, 4l.toLong))));\n    assert(parseMusic((\".| .| .| .|\")).equals((List[Long](1l.toLong,\
  \ 1l.toLong, 1l.toLong, 1l.toLong))));\n    assert(parseMusic((\"o| o| .| .| o o\
  \ o o\")).equals((List[Long](2l.toLong, 2l.toLong, 1l.toLong, 1l.toLong, 4l.toLong,\
  \ 4l.toLong, 4l.toLong, 4l.toLong))));\n    assert(parseMusic((\"o| .| o| .| o o|\
  \ o o|\")).equals((List[Long](2l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 4l.toLong,\
  \ 2l.toLong, 4l.toLong, 2l.toLong))));\n    }\n\n}\n"
completions: ["        val map = Map('o' -> 4, 'o|' -> 2, '.|' -> 1)\n        val\
    \ list = music_string.split(\" \").toList\n        list.map(x => map(x))", " \
    \       val beats = ListBuffer[Long]()\n        for (c <- music_string) {\n  \
    \          c match {\n                case 'o' => beats += 4\n               \
    \ case 'o' => beats += 2\n                case '.' => beats += 1\n           \
    \ }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        var\
    \ beats = List[Long]()\n        for (note <- notes) {\n            if (note ==\
    \ \"o\") beats = 4 :: beats\n            else if (note == \"o|\") beats = 2 ::\
    \ beats\n            else if (note == \".|\") beats = 1 :: beats\n        }\n\
    \        beats.reverse", "        val notes = music_string.split(\" \")\n    \
    \    val beats = new ListBuffer[Long]\n        for (note <- notes) {\n       \
    \     if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        // Write your code here\n        return List()", "        // TODO: Implement\
    \ this function\n        return List()", "        val notes = music_string.split(\"\
    \ \")\n        val result = new ListBuffer[Long]\n        for (note <- notes)\
    \ {\n            note match {\n                case \"o\" => result += 4\n   \
    \             case \"o|\" => result += 2\n                case \".|\" => result\
    \ += 1\n            }\n        }\n        result.toList", "        val beats =\
    \ ListBuffer[Long]()\n        for (c <- music_string) {\n            if (c ==\
    \ 'o') beats += 4\n            else if (c == '|') beats += 2\n            else\
    \ if (c == '.') beats += 1\n        }\n        beats.toList", "        val notes\
    \ = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n      \
    \  for (note <- notes) {\n            if (note == \"o\") beats += 4\n        \
    \    else if (note == \"o|\") beats += 2\n            else if (note == \".|\"\
    ) beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val music_string_list = music_string.split(\" \"\
    ).toList\n        val music_string_list_length = music_string_list.length\n  \
    \      var result = List[Long]()\n        for (i <- 0 until music_string_list_length)\
    \ {\n            if (music_string_list(i) == \"o\") {\n                result\
    \ = result :+ 4\n            } else if (music_string_list(i) == \"o|\") {\n  \
    \              result = result :+ 2\n            } else if (music_string_list(i)\
    \ == \".|\") {\n                result = result :+ 1\n            }\n        }\n\
    \        result", "        val notes = music_string.split(\" \")\n        val\
    \ beats = ListBuffer[Long]()\n        for (note <- notes) {\n            if (note\
    \ == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n    \
    \        else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        var result = List[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") result = result\
    \ :+ 4\n            else if (note == \"o|\") result = result :+ 2\n          \
    \  else if (note == \".|\") result = result :+ 1\n        }\n        result",
  "        val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else beats += 4\n            } else if (music_string(i)\
    \ == '.') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 1\n                    i += 1\n\
    \                }\n            }\n        }\n        beats.toList", "       \
    \ val notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        for (c <-\
    \ music_string) {\n            c match {\n                case 'o' => beats +=\
    \ 4\n                case 'o' => beats += 2\n                case '.' => beats\
    \ += 1\n            }\n        }\n        beats.toList", "        val map = Map('o'\
    \ -> 4, 'o|' -> 2, '.|' -> 1)\n        music_string.split(\" \").map(x => map(x)).toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        for (c <- music_string) {\n            if (c == 'o') beats += 4\n   \
    \         else if (c == '|') beats += 1\n        }\n        beats.toList", " \
    \       val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            note match {\n                case\
    \ \"o\" => beats += 4\n                case \"o|\" => beats += 2\n           \
    \     case \".|\" => beats += 1\n            }\n        }\n        beats.toList",
  "        val beats = new ListBuffer[Long]\n        val notes = music_string.split(\"\
    \ \")\n        for (note <- notes) {\n            if (note == \"o\") beats +=\
    \ 4\n            else if (note == \"o|\") beats += 2\n            else if (note\
    \ == \".|\") beats += 1\n        }\n        beats.toList", "        val notes\
    \ = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n    \
    \    for (note <- notes) {\n            if (note == \"o\") beats += 4\n      \
    \      else if (note == \"o|\") beats += 2\n            else if (note == \".|\"\
    ) beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        for (c <-\
    \ music_string) {\n            if (c == 'o') beats += 4\n            else if (c\
    \ == '|') beats += 2\n            else if (c == '.') beats += 1\n        }\n \
    \       beats.toList", "        val notes = music_string.split(\" \")\n      \
    \  var beats = List[Long]()\n        for (note <- notes) {\n            if (note\
    \ == \"o\") beats = 4 :: beats\n            else if (note == \"o|\") beats = 2\
    \ :: beats\n            else if (note == \".|\") beats = 1 :: beats\n        }\n\
    \        beats.reverse", "        val notes = music_string.split(\" \")\n    \
    \    val beats = ListBuffer[Long]()\n        for (note <- notes) {\n         \
    \   if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        notes.map(note => {\n  \
    \          if (note == \"o\") 4\n            else if (note == \"o|\") 2\n    \
    \        else 1\n        }).toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        notes.map(note\
    \ => {\n            if (note == \"o\") 4\n            else if (note == \"o|\"\
    ) 2\n            else 1\n        }).toList", "        val beats = ListBuffer[Long]()\n\
    \        for (c <- music_string) {\n            c match {\n                case\
    \ 'o' => beats += 4\n                case 'o' => beats += 2\n                case\
    \ '.' => beats += 1\n            }\n        }\n        beats.toList", "      \
    \  val beats = ListBuffer[Long]()\n        for (c <- music_string) {\n       \
    \     if (c == 'o') beats += 4\n            else if (c == '|') beats += 2\n  \
    \          else if (c == '.') beats += 1\n        }\n        beats.toList", " \
    \       val notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 2\n                    i += 1\n\
    \                } else {\n                    beats += 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                beats += 1\n\
    \            }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            if\
    \ (note == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n\
    \            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   val notes = music_string.split(\" \")\n        notes.map(note => {\n     \
    \       if (note == \"o\") 4\n            else if (note == \"o|\") 2\n       \
    \     else 1\n        }).toList", "        val notes = music_string.split(\" \"\
    )\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n \
    \           if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        for (i <-\
    \ 0 until music_string.length) {\n            if (music_string(i) == 'o') {\n\
    \                if (i + 1 < music_string.length && music_string(i + 1) == '|')\
    \ {\n                    beats += 2\n                    i += 1\n            \
    \    } else {\n                    beats += 4\n                }\n           \
    \ } else if (music_string(i) == '.') {\n                beats += 1\n         \
    \   }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \").toList\n        notes.map(note => {\n            if (note == \"o\") 4\n\
    \            else if (note == \"o|\") 2\n            else 1\n        })", "  \
    \      val notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        var beats = List[Long]()\n        for (note <- notes) {\n     \
    \       if (note.equals(\"o\")) beats = beats :+ 4\n            else if (note.equals(\"\
    o|\")) beats = beats :+ 2\n            else if (note.equals(\".|\")) beats = beats\
    \ :+ 1\n        }\n        beats", "        val beats = ListBuffer[Long]()\n \
    \       val notes = music_string.split(\" \")\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \").toList\n \
    \       val beats = ListBuffer[Long]()\n        for (note <- notes) {\n      \
    \      if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        notes.map(note => {\n  \
    \          if (note == \"o\") 4\n            else if (note == \"o|\") 2\n    \
    \        else 1\n        }).toList", "        val notes = music_string.split(\"\
    \ \")\n        var beats = List[Long]()\n        for (note <- notes) {\n     \
    \       if (note == \"o\") beats = 4 :: beats\n            else if (note == \"\
    o|\") beats = 2 :: beats\n            else if (note == \".|\") beats = 1 :: beats\n\
    \        }\n        beats.reverse", "        val notes = music_string.split(\"\
    \ \")\n        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = ListBuffer[Long]()\n        for (note <- notes) {\n            note\
    \ match {\n                case \"o\" => beats += 4\n                case \"o|\"\
    \ => beats += 2\n                case \".|\" => beats += 1\n            }\n  \
    \      }\n        beats.toList", "        val notes = music_string.split(\" \"\
    ).toList\n        notes.map(note => {\n            if (note == \"o\") 4\n    \
    \        else if (note == \"o|\") 2\n            else 1\n        })", "      \
    \  val beats = Map('o' -> 4, '.' -> 1)\n        val notes = music_string.split(\"\
    \ \").filter(x => x != \"\").toList\n        notes.map(x => beats(x(0))).toList",
  "        val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            note match {\n                case\
    \ \"o\" => beats += 4\n                case \"o|\" => beats += 2\n           \
    \     case \".|\" => beats += 1\n            }\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        val notes = music_string.split(\"\
    \ \")\n        for (note <- notes) {\n            note match {\n             \
    \   case \"o\" => beats += 4\n                case \"o|\" => beats += 2\n    \
    \            case \".|\" => beats += 1\n            }\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = notes.map(note\
    \ => {\n            if (note == \"o\") 4\n            else if (note == \"o|\"\
    ) 2\n            else 1\n        })\n        beats.toList", "        val notes\
    \ = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n      \
    \  for (note <- notes) {\n            if (note == \"o\") beats += 4\n        \
    \    else if (note == \"o|\") beats += 2\n            else if (note == \".|\"\
    ) beats += 1\n        }\n        beats.toList", "        // Write your code here\n\
    \        return List()", "        val notes = music_string.split(\" \")\n    \
    \    val beats = new ListBuffer[Long]\n        for (note <- notes) {\n       \
    \     if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        for (c <- music_string) {\n   \
    \         c match {\n                case 'o' => beats += 4\n                case\
    \ 'o' => beats += 2\n                case '.' => beats += 1\n            }\n \
    \       }\n        beats.toList", "        val notes = music_string.split(\" \"\
    )\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n \
    \           note match {\n                case \"o\" => beats += 4\n         \
    \       case \"o|\" => beats += 2\n                case \".|\" => beats += 1\n\
    \            }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \").map(x => x.trim).toList\n\
    \        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n     \
    \       if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        var result = List[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") result = result\
    \ :+ 4\n            else if (note == \"o|\") result = result :+ 2\n          \
    \  else if (note == \".|\") result = result :+ 1\n        }\n        result",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        var result = List[Long]()\n\
    \        var temp = List[Char]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == ' ') {\n                result = result\
    \ :+ temp.length\n                temp = List[Char]()\n            } else {\n\
    \                temp = temp :+ music_string(i)\n            }\n        }\n  \
    \      result = result :+ temp.length\n        return result", "        val beats\
    \ = ListBuffer[Long]()\n        for (i <- 0 until music_string.length) {\n   \
    \         if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            if\
    \ (note == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n\
    \            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        var current_beat = 0\n        for\
    \ (c <- music_string) {\n            c match {\n                case 'o' => {\n\
    \                    beats += 4\n                    current_beat += 4\n     \
    \           }\n                case 'o' => {\n                    beats += 2\n\
    \                    current_beat += 2\n                }\n                case\
    \ '.' => {\n                    beats += 1\n                    current_beat +=\
    \ 1\n                }\n                case '|' => {\n                    current_beat\
    \ = 0\n                }\n            }\n        }\n        beats.toList", " \
    \       val music_string_array = music_string.split(\" \")\n        val result\
    \ = new ListBuffer[Long]()\n        for (i <- 0 until music_string_array.length)\
    \ {\n            if (music_string_array(i) == \"o\") {\n                result\
    \ += 4\n            } else if (music_string_array(i) == \"o|\") {\n          \
    \      result += 2\n            } else if (music_string_array(i) == \".|\") {\n\
    \                result += 1\n            }\n        }\n        result.toList",
  "        val beats = ListBuffer[Long]()\n        var current_beat = 0L\n       \
    \ for (c <- music_string) {\n            if (c == 'o') {\n                beats\
    \ += 4\n                current_beat += 4\n            } else if (c == '|') {\n\
    \                beats(beats.length - 1) = current_beat\n                current_beat\
    \ = 0\n            }\n        }\n        beats.toList", "        val beats = new\
    \ ListBuffer[Long]\n        for (c <- music_string) {\n            if (c == 'o')\
    \ beats += 4\n            else if (c == '|') beats += 1\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        for (c <- music_string) {\n   \
    \         c match {\n                case 'o' => beats += 4\n                case\
    \ 'o' => beats += 2\n                case '.' => beats += 1\n            }\n \
    \       }\n        beats.toList", "        var result = List[Long]()\n       \
    \ var i = 0\n        while (i < music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    result = result :+ 2\n                 \
    \   i += 2\n                } else {\n                    result = result :+ 4\n\
    \                    i += 1\n                }\n            } else {\n       \
    \         result = result :+ 1\n                i += 2\n            }\n      \
    \  }\n        result", "        music_string.split(\" \").map(x => x match {\n\
    \            case \"o\" => 4\n            case \"o|\" => 2\n            case \"\
    .|\" => 1\n        }).toList", "        val beats = ListBuffer[Long]()\n     \
    \   for (c <- music_string) {\n            c match {\n                case 'o'\
    \ => beats += 4\n                case 'o' => beats += 2\n                case\
    \ '.' => beats += 1\n            }\n        }\n        beats.toList", "      \
    \  val beats = ListBuffer[Long]()\n        var i = 0\n        while (i < music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 2\n                } else {\n                    beats += 4\n\
    \                    i += 1\n                }\n            } else {\n       \
    \         beats += 1\n                i += 2\n            }\n        }\n     \
    \   beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = ListBuffer[Long]()\n        for (note <- notes) {\n            if (note\
    \ == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n    \
    \        else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            if\
    \ (note == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n\
    \            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        var result = List[Long]()\n\
    \        for (c <- music_string) {\n            if (c == 'o') {\n            \
    \    result = result :+ 4\n            } else if (c == '|') {\n              \
    \  result = result :+ 1\n            }\n        }\n        result", "        //\
    \ Your code goes here\n        val notes = music_string.split(\" \")\n       \
    \ val beats = ListBuffer[Long]()\n        for (note <- notes) {\n            if\
    \ (note == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n\
    \            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        for (c <-\
    \ music_string) {\n            if (c == 'o') beats += 4\n            else if (c\
    \ == '|') beats += 2\n            else if (c == '.') beats += 1\n        }\n \
    \       beats.toList", "        val notes = music_string.split(\" \")\n      \
    \  val beats = ListBuffer[Long]()\n        for (note <- notes) {\n           \
    \ if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats +=\
    \ 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            if\
    \ (note == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n\
    \            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        // Write your code here\n        return List()", "        val beats = ListBuffer[Long]()\n\
    \        val notes = music_string.split(\" \")\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            if\
    \ (note == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n\
    \            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        // Your code goes here\n        var result = List[Long]()\n        var\
    \ temp = \"\"\n        for (i <- 0 until music_string.length) {\n            if\
    \ (music_string(i) == ' ') {\n                if (temp == \"o\") result = result\
    \ :+ 4\n                else if (temp == \"o|\") result = result :+ 2\n      \
    \          else if (temp == \".|\") result = result :+ 1\n                temp\
    \ = \"\"\n            }\n            else temp = temp + music_string(i)\n    \
    \    }\n        if (temp == \"o\") result = result :+ 4\n        else if (temp\
    \ == \"o|\") result = result :+ 2\n        else if (temp == \".|\") result = result\
    \ :+ 1\n        result", "        val beats = ListBuffer[Long]()\n        for\
    \ (c <- music_string) {\n            c match {\n                case 'o' => beats\
    \ += 4\n                case 'o' => beats += 2\n                case '.' => beats\
    \ += 1\n            }\n        }\n        beats.toList", "        val result =\
    \ new ListBuffer[Long]\n        for (c <- music_string) {\n            if (c ==\
    \ 'o') result += 4\n            else if (c == '|') result(result.length - 1) =\
    \ result(result.length - 1) / 2\n        }\n        result.toList", "        val\
    \ notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            beats += note match {\n          \
    \      case \"o\" => 4\n                case \"o|\" => 2\n                case\
    \ \".|\" => 1\n            }\n        }\n        beats.toList", "        val result\
    \ = ListBuffer[Long]()\n        var i = 0\n        while (i < music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result += 2\n        \
    \            i += 2\n                } else {\n                    result += 4\n\
    \                    i += 1\n                }\n            } else {\n       \
    \         result += 1\n                i += 2\n            }\n        }\n    \
    \    result.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = ListBuffer[Long]()\n        for (note <- notes) {\n            if (note\
    \ == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n    \
    \        else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val beats = new ArrayBuffer[Long]()\n        for (ch <- music_string) {\n\
    \            if (ch == 'o') beats += 4\n            else if (ch == '|') beats\
    \ += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = ListBuffer[Long]()\n        for (note <- notes) {\n            if (note\
    \ == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n    \
    \        else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            if\
    \ (note == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n\
    \            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        for (c <- music_string) {\n   \
    \         if (c == 'o') {\n                beats += 4\n            } else if (c\
    \ == '|') {\n                beats(beats.length - 1) /= 2\n            }\n   \
    \     }\n        beats.toList", "        val notes = music_string.split(\" \"\
    )\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n \
    \           note match {\n                case \"o\" => beats += 4\n         \
    \       case \"o|\" => beats += 2\n                case \".|\" => beats += 1\n\
    \            }\n        }\n        beats.toList", "        val beats = Map('o'\
    \ -> 4, '|' -> 2, '.' -> 1)\n        val notes = music_string.split(\" \").toList\n\
    \        var result = List[Long]()\n        for (note <- notes) {\n          \
    \  var sum = 0\n            for (c <- note) {\n                sum += beats(c)\n\
    \            }\n            result = result :+ sum\n        }\n        result",
  "        val notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val map = Map('o'\
    \ -> 4, 'o|' -> 2, '.|' -> 1)\n        val notes = music_string.split(\" \")\n\
    \        notes.map(note => map(note)).toList", "        val beats = ListBuffer[Long]()\n\
    \        val notes = music_string.split(\" \")\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val result = new ListBuffer[Long]\n        var i\
    \ = 0\n        while (i < music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    result += 2\n                    i += 2\n\
    \                } else {\n                    result += 4\n                 \
    \   i += 1\n                }\n            } else {\n                result +=\
    \ 1\n                i += 2\n            }\n        }\n        result.toList",
  "        var result = List[Long]()\n        for (c <- music_string) {\n        \
    \    if (c == 'o') result = result :+ 4\n            else if (c == '|') result\
    \ = result :+ 1\n        }\n        result", "        val beats = Map('o' -> 4,\
    \ '|' -> 2, '.' -> 1)\n        val notes = music_string.split(\" \").toList\n\
    \        var result = List[Long]()\n        for (note <- notes) {\n          \
    \  var sum = 0L\n            for (char <- note) {\n                sum += beats(char)\n\
    \            }\n            result = result :+ sum\n        }\n        result",
  "        val notes = music_string.split(\" \")\n        notes.map(note => {\n  \
    \          if (note == \"o\") 4\n            else if (note == \"o|\") 2\n    \
    \        else 1\n        }).toList", "        val beats = ListBuffer[Long]()\n\
    \        for (c <- music_string) {\n            c match {\n                case\
    \ 'o' => beats += 4\n                case 'o' => beats += 2\n                case\
    \ '.' => beats += 1\n            }\n        }\n        beats.toList", "      \
    \  val beats = ListBuffer[Long]()\n        for (c <- music_string) {\n       \
    \     c match {\n                case 'o' => beats += 4\n                case\
    \ 'o' => beats += 2\n                case '.' => beats += 1\n            }\n \
    \       }\n        beats.toList", "        val beats = ListBuffer[Long]()\n  \
    \      for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 2\n                    i += 1\n\
    \                } else {\n                    beats += 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                beats += 1\n\
    \            }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val map = Map('o' -> 4, '|' -> 1)\n        var result\
    \ = List[Long]()\n        var current = 0L\n        for (c <- music_string) {\n\
    \            if (c == ' ') {\n                result = result :+ current\n   \
    \             current = 0\n            } else {\n                current += map(c)\n\
    \            }\n        }\n        result = result :+ current\n        result",
  "        // Write your code here\n        return List()", "        val notes = music_string.split(\"\
    \ \").toList\n        val beats = ListBuffer[Long]()\n        for (note <- notes)\
    \ {\n            if (note == \"o\") beats += 4\n            else if (note == \"\
    o|\") beats += 2\n            else if (note == \".|\") beats += 1\n        }\n\
    \        beats.toList", "        // Write your code here\n        return List()",
  "        val notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        notes.map(note => {\n            if (note == \"o\") 4\n       \
    \     else if (note == \"o|\") 2\n            else 1\n        }).toList", "  \
    \      val result = ListBuffer[Long]()\n        for (c <- music_string) {\n  \
    \          c match {\n                case 'o' => result += 4\n              \
    \  case 'o' => result += 2\n                case '.' => result += 1\n        \
    \    }\n        }\n        result.toList", "        var result = List[Long]()\n\
    \        var i = 0\n        while (i < music_string.length) {\n            if\
    \ (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result = result :+ 2\n\
    \                    i += 2\n                } else {\n                    result\
    \ = result :+ 4\n                    i += 1\n                }\n            }\
    \ else {\n                result = result :+ 1\n                i += 2\n     \
    \       }\n        }\n        result", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            note match {\n                case \"o\" => beats += 4\n        \
    \        case \"o|\" => beats += 2\n                case \".|\" => beats += 1\n\
    \            }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            if\
    \ (note == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n\
    \            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ArrayBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = ListBuffer[Long]()\n        for (note <- notes) {\n            if (note\
    \ == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n    \
    \        else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   var result = List[Long]()\n        var i = 0\n        while (i < music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result = result :+ 2\n\
    \                    i += 2\n                } else {\n                    result\
    \ = result :+ 4\n                    i += 1\n                }\n            }\
    \ else {\n                result = result :+ 1\n                i += 2\n     \
    \       }\n        }\n        result", "        val notes = music_string.split(\"\
    \ \")\n        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n\
    \            note match {\n                case \"o\" => beats += 4\n        \
    \        case \"o|\" => beats += 2\n                case \".|\" => beats += 1\n\
    \            }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            if\
    \ (note.contains(\"o\")) {\n                if (note.contains(\"|\")) beats +=\
    \ 2\n                else beats += 4\n            }\n            else beats +=\
    \ 1\n        }\n        beats.toList", "        val beats = Map('o' -> 4, '|'\
    \ -> 1)\n        val notes = music_string.split(\" \").toList\n        notes.map(note\
    \ => note.map(beat => beats(beat)).sum)", "        val beats = ListBuffer[Long]()\n\
    \        for (c <- music_string) {\n            c match {\n                case\
    \ 'o' => beats += 4\n                case 'o' => beats += 2\n                case\
    \ '.' => beats += 1\n            }\n        }\n        beats.toList", "      \
    \  val notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        var result = List[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    result = result :+ 2\n                 \
    \   i += 1\n                } else {\n                    result = result :+ 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         result = result :+ 1\n            }\n        }\n        return result",
  "        val beats = ListBuffer[Long]()\n        for (c <- music_string) {\n   \
    \         c match {\n                case 'o' => beats += 4\n                case\
    \ 'o' => beats += 2\n                case '.' => beats += 1\n            }\n \
    \       }\n        beats.toList", "        val notes = music_string.split(\" \"\
    )\n        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n   \
    \         if (note == \"o\") beats += 4\n            else if (note == \"o|\")\
    \ beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = notes.map(note => note match {\n            case \"o\" => 4\n      \
    \      case \"o|\" => 2\n            case \".|\" => 1\n        })\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        val notes = music_string.split(\"\
    \ \")\n        for (note <- notes) {\n            if (note == \"o\") beats +=\
    \ 4\n            else if (note == \"o|\") beats += 2\n            else if (note\
    \ == \".|\") beats += 1\n        }\n        beats.toList", "        val notes\
    \ = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n    \
    \    for (note <- notes) {\n            if (note == \"o\") beats += 4\n      \
    \      else if (note == \"o|\") beats += 2\n            else if (note == \".|\"\
    ) beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \").toList\n        val beats = ListBuffer[Long]()\n        for (note <- notes)\
    \ {\n            if (note == \"o\") beats += 4\n            else if (note == \"\
    o|\") beats += 2\n            else if (note == \".|\") beats += 1\n        }\n\
    \        beats.toList", "        val notes = music_string.split(\" \")\n     \
    \   var beats = List[Long]()\n        for (note <- notes) {\n            if (note\
    \ == \"o\") beats = 4 :: beats\n            else if (note == \"o|\") beats = 2\
    \ :: beats\n            else if (note == \".|\") beats = 1 :: beats\n        }\n\
    \        beats.reverse", "        val beats = ListBuffer[Long]()\n        val\
    \ notes = music_string.split(\" \")\n        for (note <- notes) {\n         \
    \   if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        var result = List[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result = result :+ 2\n\
    \                    i += 1\n                } else {\n                    result\
    \ = result :+ 4\n                }\n            } else if (music_string(i) ==\
    \ '.') {\n                result = result :+ 1\n            }\n        }\n   \
    \     return result", "        val notes = music_string.split(\" \")\n       \
    \ val beats = new ListBuffer[Long]\n        for (note <- notes) {\n          \
    \  if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats +=\
    \ 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        for (note <- music_string.split(\"\
    \ \")) {\n            if (note == \"o\") beats += 4\n            else if (note\
    \ == \"o|\") beats += 2\n            else if (note == \".|\") beats += 1\n   \
    \     }\n        beats.toList", "        val beats = ListBuffer[Long]()\n    \
    \    val notes = music_string.split(\" \")\n        for (note <- notes) {\n  \
    \          if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \").toList\n \
    \       val beats = new ListBuffer[Long]\n        for (note <- notes) {\n    \
    \        if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val map = Map('o' -> 4, 'o|' -> 2, '.|' -> 1)\n        music_string.split(\"\
    \ \").map(x => map(x)).toList", "        var result : List[Long] = List()\n  \
    \      var beats : Long = 0\n        for (c <- music_string) {\n            if\
    \ (c == 'o') {\n                result = result :+ beats\n                beats\
    \ = 4\n            } else if (c == '|') {\n                beats = beats / 2\n\
    \            } else if (c == '.') {\n                beats = beats - 1\n     \
    \       }\n        }\n        result = result :+ beats\n        return result",
  "        // Write your code here\n        return List()", "        val beats = ListBuffer[Long]()\n\
    \        var current_beat = 0L\n        for (c <- music_string) {\n          \
    \  c match {\n                case 'o' => {\n                    beats += current_beat\n\
    \                    current_beat = 0\n                }\n                case\
    \ '|' => {\n                    current_beat += 1\n                }\n       \
    \         case ' ' => {\n                    // Do nothing\n                }\n\
    \                case _ => {\n                    throw new Exception(\"Invalid\
    \ character in music string\")\n                }\n            }\n        }\n\
    \        beats += current_beat\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 2\n                    i += 1\n\
    \                } else {\n                    beats += 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                beats += 1\n\
    \            }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \").toList\n \
    \       val beats = ListBuffer[Long]()\n        for (note <- notes) {\n      \
    \      if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        notes.map(note\
    \ => {\n            if (note == \"o\") 4\n            else if (note == \"o|\"\
    ) 2\n            else 1\n        }).toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = ListBuffer[Long]()\n        for (note <- notes) {\n            beats\
    \ += note.length\n        }\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        for (c <- music_string) {\n            c match {\n                case\
    \ 'o' => beats += 4\n                case 'o' => beats += 2\n                case\
    \ '.' => beats += 1\n            }\n        }\n        beats.toList", "      \
    \  val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            note match {\n                case\
    \ \"o\" => beats += 4\n                case \"o|\" => beats += 2\n           \
    \     case \".|\" => beats += 1\n            }\n        }\n        beats.toList",
  "        var result = List[Long]()\n        var i = 0\n        while (i < music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result = result :+ 2\n\
    \                    i += 2\n                } else {\n                    result\
    \ = result :+ 4\n                    i += 1\n                }\n            }\
    \ else {\n                result = result :+ 1\n                i += 2\n     \
    \       }\n        }\n        result", "        val beats = ListBuffer[Long]()\n\
    \        var i = 0\n        while (i < music_string.length) {\n            if\
    \ (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 2\n                } else {\n                    beats += 4\n\
    \                    i += 1\n                }\n            } else {\n       \
    \         beats += 1\n                i += 2\n            }\n        }\n     \
    \   beats.toList", "        // Write your code here\n        return List()", " \
    \       var list = List[Long]()\n        var temp = \"\"\n        for (i <- 0\
    \ until music_string.length) {\n            if (music_string(i) == ' ') {\n  \
    \              if (temp == \"o\") list = list :+ 4\n                else if (temp\
    \ == \"o|\") list = list :+ 2\n                else if (temp == \".|\") list =\
    \ list :+ 1\n                temp = \"\"\n            }\n            else temp\
    \ += music_string(i)\n        }\n        if (temp == \"o\") list = list :+ 4\n\
    \        else if (temp == \"o|\") list = list :+ 2\n        else if (temp == \"\
    .|\") list = list :+ 1\n        list", "        val beats = ListBuffer[Long]()\n\
    \        for (c <- music_string) {\n            if (c == 'o') beats += 4\n   \
    \         else if (c == '|') beats += 2\n            else if (c == '.') beats\
    \ += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \").toList\n        notes.map(note => {\n            note match {\n        \
    \        case \"o\" => 4\n                case \"o|\" => 2\n                case\
    \ \".|\" => 1\n            }\n        })", "        val beats = ListBuffer[Long]()\n\
    \        for (c <- music_string) {\n            c match {\n                case\
    \ 'o' => beats += 4\n                case 'o' => beats += 2\n                case\
    \ '.' => beats += 1\n            }\n        }\n        beats.toList", "      \
    \  val beats = new ListBuffer[Long]\n        for (c <- music_string) {\n     \
    \       c match {\n                case 'o' => beats += 4\n                case\
    \ 'o' => beats += 2\n                case '.' => beats += 1\n            }\n \
    \       }\n        beats.toList", "        val notes = music_string.split(\" \"\
    )\n        var result = List[Long]()\n        for (note <- notes) {\n        \
    \    if (note == \"o\") result = result :+ 4\n            else if (note == \"\
    o|\") result = result :+ 2\n            else if (note == \".|\") result = result\
    \ :+ 1\n        }\n        result", "        val notes = music_string.split(\"\
    \ \").toList\n        var result = List[Long]()\n        for (note <- notes) {\n\
    \            if (note == \"o\") {\n                result = result :+ 4\n    \
    \        } else if (note == \"o|\") {\n                result = result :+ 2\n\
    \            } else if (note == \".|\") {\n                result = result :+\
    \ 1\n            }\n        }\n        return result", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        for (c <-\
    \ music_string) {\n            if (c == 'o') beats += 4\n            else if (c\
    \ == '|') beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = ListBuffer[Long]()\n        for (note <- notes) {\n            if (note\
    \ == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n    \
    \        else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val beats = new ListBuffer[Long]\n\
    \        for (c <- music_string) {\n            c match {\n                case\
    \ 'o' => beats += 4\n                case 'o' => beats += 2\n                case\
    \ '.' => beats += 1\n            }\n        }\n        beats.toList", "      \
    \  val beats = ListBuffer[Long]()\n        for (c <- music_string) {\n       \
    \     c match {\n                case 'o' => beats += 4\n                case\
    \ 'o' => beats += 2\n                case '.' => beats += 1\n            }\n \
    \       }\n        beats.toList", "        val beats = ListBuffer[Long]()\n  \
    \      for (c <- music_string) {\n            c match {\n                case\
    \ 'o' => beats += 4\n                case 'o' => beats += 2\n                case\
    \ '.' => beats += 1\n            }\n        }\n        beats.toList", "      \
    \  val notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        for (c <-\
    \ music_string) {\n            if (c == 'o') beats += 4\n            else if (c\
    \ == '|') beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \").toList\n        val beats = new ListBuffer[Long]\n        for (note <- notes)\
    \ {\n            if (note == \"o\") beats += 4\n            else if (note == \"\
    o|\") beats += 2\n            else if (note == \".|\") beats += 1\n        }\n\
    \        beats.toList", "        // Write your code here\n        return List()",
  "        // Put your code here\n        return List()", "        val beats = ListBuffer[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 2\n                    i += 1\n\
    \                } else {\n                    beats += 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                beats += 1\n\
    \            }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            if\
    \ (note == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n\
    \            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList"]
stop_tokens:
- "\n    }\n"

name: HumanEval_156_int_to_mini_roman
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  \    // and return it in lowercase.\n    // Restrictions: 1 <= num <= 1000\n   \
  \ // Examples:\n    // >>> int_to_mini_roman(19) == 'xix'\n    // >>> int_to_mini_roman(152)\
  \ == 'clii'\n    // >>> int_to_mini_roman(426) == 'cdxxvi'\n    def intToMiniRoman(number\
  \ : Long) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(intToMiniRoman((19l)).equals((\"\
  xix\")));\n    assert(intToMiniRoman((152l)).equals((\"clii\")));\n    assert(intToMiniRoman((251l)).equals((\"\
  ccli\")));\n    assert(intToMiniRoman((426l)).equals((\"cdxxvi\")));\n    assert(intToMiniRoman((500l)).equals((\"\
  d\")));\n    assert(intToMiniRoman((1l)).equals((\"i\")));\n    assert(intToMiniRoman((4l)).equals((\"\
  iv\")));\n    assert(intToMiniRoman((43l)).equals((\"xliii\")));\n    assert(intToMiniRoman((90l)).equals((\"\
  xc\")));\n    assert(intToMiniRoman((94l)).equals((\"xciv\")));\n    assert(intToMiniRoman((532l)).equals((\"\
  dxxxii\")));\n    assert(intToMiniRoman((900l)).equals((\"cm\")));\n    assert(intToMiniRoman((994l)).equals((\"\
  cmxciv\")));\n    assert(intToMiniRoman((1000l)).equals((\"m\")));\n    }\n\n}\n"
completions: ["        val romanNumerals = List(\n            (1000, \"m\"),\n   \
    \         (900, \"cm\"),\n            (500, \"d\"),\n            (400, \"cd\"\
    ),\n            (100, \"c\"),\n            (90, \"xc\"),\n            (50, \"\
    l\"),\n            (40, \"xl\"),\n            (10, \"x\"),\n            (9, \"\
    ix\"),\n            (5, \"v\"),\n            (4, \"iv\"),\n            (1, \"\
    i\")\n        )\n        var result = \"\"\n        var remaining = number\n \
    \       for ((value, numeral) <- romanNumerals) {\n            while (remaining\
    \ >= value) {\n                result += numeral\n                remaining -=\
    \ value\n            }\n        }\n        result", "        val roman = new StringBuilder\n\
    \        val romanDigits = Array(\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\",\
    \ \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\")\n        val arabicDigits\
    \ = Array(1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1)\n        var n\
    \ = number\n        for (i <- 0 to 12) {\n            while (n >= arabicDigits(i))\
    \ {\n                roman.append(romanDigits(i))\n                n -= arabicDigits(i)\n\
    \            }\n        }\n        roman.toString", "        var n = number\n\
    \        var result = \"\"\n        while (n >= 1000) {\n            result +=\
    \ \"m\"\n            n -= 1000\n        }\n        if (n >= 900) {\n         \
    \   result += \"cm\"\n            n -= 900\n        }\n        if (n >= 500) {\n\
    \            result += \"d\"\n            n -= 500\n        }\n        if (n >=\
    \ 400) {\n            result += \"cd\"\n            n -= 400\n        }\n    \
    \    while (n >= 100) {\n            result += \"c\"\n            n -= 100\n \
    \       }\n        if (n >= 90) {\n            result += \"xc\"\n            n\
    \ -= 90\n        }\n        if (n >= 50) {\n            result += \"l\"\n    \
    \        n -= 50\n        }\n        if (n >= 40) {\n            result += \"\
    xl\"\n            n -= 40\n        }\n        while (n >= 10) {\n            result\
    \ += \"x\"\n            n -= 10\n        }\n        if (n >= 9) {\n          \
    \  result += \"ix\"\n            n -= 9\n        }\n        if (n >= 5) {\n  \
    \          result += \"v\"\n            n -= 5\n        }\n        if (n >= 4)\
    \ {\n            result += \"iv\"\n            n -= 4\n        }\n        while\
    \ (n >= 1) {\n            result += \"i\"\n            n -= 1\n        }\n   \
    \     result", "        val roman = new StringBuilder\n        val romanNumerals\
    \ = Array(\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"\
    ix\", \"v\", \"iv\", \"i\")\n        val numbers = Array(1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1)\n        var i = 0\n        while (number >\
    \ 0) {\n            while (number >= numbers(i)) {\n                number -=\
    \ numbers(i)\n                roman.append(romanNumerals(i))\n            }\n\
    \            i += 1\n        }\n        roman.toString", "        val roman =\
    \ new StringBuilder\n        var num = number\n        while (num >= 1000) {\n\
    \            roman.append(\"m\")\n            num -= 1000\n        }\n       \
    \ if (num >= 900) {\n            roman.append(\"cm\")\n            num -= 900\n\
    \        }\n        if (num >= 500) {\n            roman.append(\"d\")\n     \
    \       num -= 500\n        }\n        if (num >= 400) {\n            roman.append(\"\
    cd\")\n            num -= 400\n        }\n        while (num >= 100) {\n     \
    \       roman.append(\"c\")\n            num -= 100\n        }\n        if (num\
    \ >= 90) {\n            roman.append(\"xc\")\n            num -= 90\n        }\n\
    \        if (num >= 50) {\n            roman.append(\"l\")\n            num -=\
    \ 50\n        }\n        if (num >= 40) {\n            roman.append(\"xl\")\n\
    \            num -= 40\n        }\n        while (num >= 10) {\n            roman.append(\"\
    x\")\n            num -= 10\n        }\n        if (num >= 9) {\n            roman.append(\"\
    ix\")\n            num -= 9\n        }\n        if (num >= 5) {\n            roman.append(\"\
    v\")\n            num -= 5\n        }\n        if (num >= 4) {\n            roman.append(\"\
    iv\")\n            num -= 4\n        }\n        while (num >= 1) {\n         \
    \   roman.append(\"i\")\n            num -= 1\n        }\n        roman.toString",
  "        var result = \"\"\n        var num = number\n        while (num >= 1000)\
    \ {\n            result += \"m\"\n            num -= 1000\n        }\n       \
    \ while (num >= 900) {\n            result += \"cm\"\n            num -= 900\n\
    \        }\n        while (num >= 500) {\n            result += \"d\"\n      \
    \      num -= 500\n        }\n        while (num >= 400) {\n            result\
    \ += \"cd\"\n            num -= 400\n        }\n        while (num >= 100) {\n\
    \            result += \"c\"\n            num -= 100\n        }\n        while\
    \ (num >= 90) {\n            result += \"xc\"\n            num -= 90\n       \
    \ }\n        while (num >= 50) {\n            result += \"l\"\n            num\
    \ -= 50\n        }\n        while (num >= 40) {\n            result += \"xl\"\n\
    \            num -= 40\n        }\n        while (num >= 10) {\n            result\
    \ += \"x\"\n            num -= 10\n        }\n        while (num >= 9) {\n   \
    \         result += \"ix\"\n            num -= 9\n        }\n        while (num\
    \ >= 5) {\n            result += \"v\"\n            num -= 5\n        }\n    \
    \    while (num >= 4) {\n            result += \"iv\"\n            num -= 4\n\
    \        }\n        while (num >= 1) {\n            result += \"i\"\n        \
    \    num -= 1\n        }\n        return result", "        var result = \"\"\n\
    \        var n = number\n        while (n >= 1000) {\n            result += \"\
    m\"\n            n -= 1000\n        }\n        if (n >= 900) {\n            result\
    \ += \"cm\"\n            n -= 900\n        }\n        if (n >= 500) {\n      \
    \      result += \"d\"\n            n -= 500\n        }\n        if (n >= 400)\
    \ {\n            result += \"cd\"\n            n -= 400\n        }\n        while\
    \ (n >= 100) {\n            result += \"c\"\n            n -= 100\n        }\n\
    \        if (n >= 90) {\n            result += \"xc\"\n            n -= 90\n \
    \       }\n        if (n >= 50) {\n            result += \"l\"\n            n\
    \ -= 50\n        }\n        if (n >= 40) {\n            result += \"xl\"\n   \
    \         n -= 40\n        }\n        while (n >= 10) {\n            result +=\
    \ \"x\"\n            n -= 10\n        }\n        if (n >= 9) {\n            result\
    \ += \"ix\"\n            n -= 9\n        }\n        if (n >= 5) {\n          \
    \  result += \"v\"\n            n -= 5\n        }\n        if (n >= 4) {\n   \
    \         result += \"iv\"\n            n -= 4\n        }\n        while (n >=\
    \ 1) {\n            result += \"i\"\n            n -= 1\n        }\n        result",
  "        val romanNumerals = List(\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"\
    l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\")\n        val romanValues = List(1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1)\n        var result = \"\"\n\
    \        var num = number\n        for (i <- 0 to romanNumerals.length - 1) {\n\
    \            while (num >= romanValues(i)) {\n                result += romanNumerals(i)\n\
    \                num -= romanValues(i)\n            }\n        }\n        result",
  "        var result = \"\"\n        var num = number\n        while (num >= 1000)\
    \ {\n            result += \"m\"\n            num -= 1000\n        }\n       \
    \ if (num >= 900) {\n            result += \"cm\"\n            num -= 900\n  \
    \      }\n        if (num >= 500) {\n            result += \"d\"\n           \
    \ num -= 500\n        }\n        if (num >= 400) {\n            result += \"cd\"\
    \n            num -= 400\n        }\n        while (num >= 100) {\n          \
    \  result += \"c\"\n            num -= 100\n        }\n        if (num >= 90)\
    \ {\n            result += \"xc\"\n            num -= 90\n        }\n        if\
    \ (num >= 50) {\n            result += \"l\"\n            num -= 50\n        }\n\
    \        if (num >= 40) {\n            result += \"xl\"\n            num -= 40\n\
    \        }\n        while (num >= 10) {\n            result += \"x\"\n       \
    \     num -= 10\n        }\n        if (num >= 9) {\n            result += \"\
    ix\"\n            num -= 9\n        }\n        if (num >= 5) {\n            result\
    \ += \"v\"\n            num -= 5\n        }\n        if (num >= 4) {\n       \
    \     result += \"iv\"\n            num -= 4\n        }\n        while (num >=\
    \ 1) {\n            result += \"i\"\n            num -= 1\n        }\n       \
    \ result", "        var result = \"\"\n        var num = number\n        while\
    \ (num >= 1000) {\n            result += \"m\"\n            num -= 1000\n    \
    \    }\n        if (num >= 900) {\n            result += \"cm\"\n            num\
    \ -= 900\n        }\n        if (num >= 500) {\n            result += \"d\"\n\
    \            num -= 500\n        }\n        if (num >= 400) {\n            result\
    \ += \"cd\"\n            num -= 400\n        }\n        while (num >= 100) {\n\
    \            result += \"c\"\n            num -= 100\n        }\n        if (num\
    \ >= 90) {\n            result += \"xc\"\n            num -= 90\n        }\n \
    \       if (num >= 50) {\n            result += \"l\"\n            num -= 50\n\
    \        }\n        if (num >= 40) {\n            result += \"xl\"\n         \
    \   num -= 40\n        }\n        while (num >= 10) {\n            result += \"\
    x\"\n            num -= 10\n        }\n        if (num >= 9) {\n            result\
    \ += \"ix\"\n            num -= 9\n        }\n        if (num >= 5) {\n      \
    \      result += \"v\"\n            num -= 5\n        }\n        if (num >= 4)\
    \ {\n            result += \"iv\"\n            num -= 4\n        }\n        while\
    \ (num >= 1) {\n            result += \"i\"\n            num -= 1\n        }\n\
    \        result", "        val roman = new StringBuilder\n        val digits =\
    \ number.toString.map(_.asDigit).toArray\n        val romanDigits = Array(\"i\"\
    , \"v\", \"x\", \"l\", \"c\", \"d\", \"m\")\n        for (i <- 0 until digits.length)\
    \ {\n            val digit = digits(i)\n            val romanDigit = romanDigits(2\
    \ * i)\n            val romanDigit5 = romanDigits(2 * i + 1)\n            val\
    \ romanDigit10 = romanDigits(2 * i + 2)\n            if (digit == 0) {\n     \
    \           roman.append(\"\")\n            } else if (digit <= 3) {\n       \
    \         roman.append(romanDigit * digit)\n            } else if (digit == 4)\
    \ {\n                roman.append(romanDigit + romanDigit5)\n            } else\
    \ if (digit <= 8) {\n                roman.append(romanDigit5 + romanDigit * (digit\
    \ - 5))\n            } else {\n                roman.append(romanDigit + romanDigit10)\n\
    \            }\n        }\n        roman.toString", "        var result = \"\"\
    \n        var num = number\n        while (num >= 1000) {\n            result\
    \ += \"m\"\n            num -= 1000\n        }\n        if (num >= 900) {\n  \
    \          result += \"cm\"\n            num -= 900\n        }\n        if (num\
    \ >= 500) {\n            result += \"d\"\n            num -= 500\n        }\n\
    \        if (num >= 400) {\n            result += \"cd\"\n            num -= 400\n\
    \        }\n        while (num >= 100) {\n            result += \"c\"\n      \
    \      num -= 100\n        }\n        if (num >= 90) {\n            result +=\
    \ \"xc\"\n            num -= 90\n        }\n        if (num >= 50) {\n       \
    \     result += \"l\"\n            num -= 50\n        }\n        if (num >= 40)\
    \ {\n            result += \"xl\"\n            num -= 40\n        }\n        while\
    \ (num >= 10) {\n            result += \"x\"\n            num -= 10\n        }\n\
    \        if (num >= 9) {\n            result += \"ix\"\n            num -= 9\n\
    \        }\n        if (num >= 5) {\n            result += \"v\"\n           \
    \ num -= 5\n        }\n        if (num >= 4) {\n            result += \"iv\"\n\
    \            num -= 4\n        }\n        while (num >= 1) {\n            result\
    \ += \"i\"\n            num -= 1\n        }\n        result", "        val roman\
    \ = new StringBuilder\n        var num = number\n        while (num >= 1000) {\n\
    \            roman.append(\"m\")\n            num -= 1000\n        }\n       \
    \ if (num >= 900) {\n            roman.append(\"cm\")\n            num -= 900\n\
    \        }\n        if (num >= 500) {\n            roman.append(\"d\")\n     \
    \       num -= 500\n        }\n        if (num >= 400) {\n            roman.append(\"\
    cd\")\n            num -= 400\n        }\n        while (num >= 100) {\n     \
    \       roman.append(\"c\")\n            num -= 100\n        }\n        if (num\
    \ >= 90) {\n            roman.append(\"xc\")\n            num -= 90\n        }\n\
    \        if (num >= 50) {\n            roman.append(\"l\")\n            num -=\
    \ 50\n        }\n        if (num >= 40) {\n            roman.append(\"xl\")\n\
    \            num -= 40\n        }\n        while (num >= 10) {\n            roman.append(\"\
    x\")\n            num -= 10\n        }\n        if (num >= 9) {\n            roman.append(\"\
    ix\")\n            num -= 9\n        }\n        if (num >= 5) {\n            roman.append(\"\
    v\")\n            num -= 5\n        }\n        if (num >= 4) {\n            roman.append(\"\
    iv\")\n            num -= 4\n        }\n        while (num >= 1) {\n         \
    \   roman.append(\"i\")\n            num -= 1\n        }\n        roman.toString",
  "        var result = \"\"\n        var num = number\n        while (num >= 1000)\
    \ {\n            result += \"m\"\n            num -= 1000\n        }\n       \
    \ if (num >= 900) {\n            result += \"cm\"\n            num -= 900\n  \
    \      }\n        if (num >= 500) {\n            result += \"d\"\n           \
    \ num -= 500\n        }\n        if (num >= 400) {\n            result += \"cd\"\
    \n            num -= 400\n        }\n        while (num >= 100) {\n          \
    \  result += \"c\"\n            num -= 100\n        }\n        if (num >= 90)\
    \ {\n            result += \"xc\"\n            num -= 90\n        }\n        if\
    \ (num >= 50) {\n            result += \"l\"\n            num -= 50\n        }\n\
    \        if (num >= 40) {\n            result += \"xl\"\n            num -= 40\n\
    \        }\n        while (num >= 10) {\n            result += \"x\"\n       \
    \     num -= 10\n        }\n        if (num >= 9) {\n            result += \"\
    ix\"\n            num -= 9\n        }\n        if (num >= 5) {\n            result\
    \ += \"v\"\n            num -= 5\n        }\n        if (num >= 4) {\n       \
    \     result += \"iv\"\n            num -= 4\n        }\n        while (num >=\
    \ 1) {\n            result += \"i\"\n            num -= 1\n        }\n       \
    \ result", "        var num = number\n        var result = \"\"\n        while\
    \ (num >= 1000) {\n            result += \"m\"\n            num -= 1000\n    \
    \    }\n        if (num >= 900) {\n            result += \"cm\"\n            num\
    \ -= 900\n        }\n        if (num >= 500) {\n            result += \"d\"\n\
    \            num -= 500\n        }\n        if (num >= 400) {\n            result\
    \ += \"cd\"\n            num -= 400\n        }\n        while (num >= 100) {\n\
    \            result += \"c\"\n            num -= 100\n        }\n        if (num\
    \ >= 90) {\n            result += \"xc\"\n            num -= 90\n        }\n \
    \       if (num >= 50) {\n            result += \"l\"\n            num -= 50\n\
    \        }\n        if (num >= 40) {\n            result += \"xl\"\n         \
    \   num -= 40\n        }\n        while (num >= 10) {\n            result += \"\
    x\"\n            num -= 10\n        }\n        if (num >= 9) {\n            result\
    \ += \"ix\"\n            num -= 9\n        }\n        if (num >= 5) {\n      \
    \      result += \"v\"\n            num -= 5\n        }\n        if (num >= 4)\
    \ {\n            result += \"iv\"\n            num -= 4\n        }\n        while\
    \ (num >= 1) {\n            result += \"i\"\n            num -= 1\n        }\n\
    \        result", "        var n = number\n        val roman = new StringBuilder\n\
    \        while (n >= 1000) {\n            roman.append(\"m\")\n            n -=\
    \ 1000\n        }\n        while (n >= 900) {\n            roman.append(\"cm\"\
    )\n            n -= 900\n        }\n        while (n >= 500) {\n            roman.append(\"\
    d\")\n            n -= 500\n        }\n        while (n >= 400) {\n          \
    \  roman.append(\"cd\")\n            n -= 400\n        }\n        while (n >=\
    \ 100) {\n            roman.append(\"c\")\n            n -= 100\n        }\n \
    \       while (n >= 90) {\n            roman.append(\"xc\")\n            n -=\
    \ 90\n        }\n        while (n >= 50) {\n            roman.append(\"l\")\n\
    \            n -= 50\n        }\n        while (n >= 40) {\n            roman.append(\"\
    xl\")\n            n -= 40\n        }\n        while (n >= 10) {\n           \
    \ roman.append(\"x\")\n            n -= 10\n        }\n        while (n >= 9)\
    \ {\n            roman.append(\"ix\")\n            n -= 9\n        }\n       \
    \ while (n >= 5) {\n            roman.append(\"v\")\n            n -= 5\n    \
    \    }\n        while (n >= 4) {\n            roman.append(\"iv\")\n         \
    \   n -= 4\n        }\n        while (n >= 1) {\n            roman.append(\"i\"\
    )\n            n -= 1\n        }\n        return roman.toString", "        val\
    \ romanNumerals = List(\n            (1000, \"m\"),\n            (900, \"cm\"\
    ),\n            (500, \"d\"),\n            (400, \"cd\"),\n            (100, \"\
    c\"),\n            (90, \"xc\"),\n            (50, \"l\"),\n            (40, \"\
    xl\"),\n            (10, \"x\"),\n            (9, \"ix\"),\n            (5, \"\
    v\"),\n            (4, \"iv\"),\n            (1, \"i\")\n        )\n        var\
    \ result = \"\"\n        var remaining = number\n        for ((value, numeral)\
    \ <- romanNumerals) {\n            while (remaining >= value) {\n            \
    \    result += numeral\n                remaining -= value\n            }\n  \
    \      }\n        result", "        val roman = new StringBuilder\n        val\
    \ romanMap = Map(1 -> \"i\", 4 -> \"iv\", 5 -> \"v\", 9 -> \"ix\", 10 -> \"x\"\
    , 40 -> \"xl\", 50 -> \"l\", 90 -> \"xc\", 100 -> \"c\", 400 -> \"cd\", 500 ->\
    \ \"d\", 900 -> \"cm\", 1000 -> \"m\")\n        var n = number\n        while\
    \ (n > 0) {\n            var max = 0\n            for (i <- 1 to 1000) {\n   \
    \             if (n >= i && i > max) max = i\n            }\n            roman.append(romanMap(max))\n\
    \            n -= max\n        }\n        roman.toString", "        val roman\
    \ = Array(\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"\
    ix\", \"v\", \"iv\", \"i\")\n        val arabic = Array(1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1)\n        var result = \"\"\n        var n = number\n\
    \        for (i <- 0 to 12) {\n            while (n >= arabic(i)) {\n        \
    \        result += roman(i)\n                n -= arabic(i)\n            }\n \
    \       }\n        return result", "        val roman = Array(\"m\", \"cm\", \"\
    d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"\
    )\n        val arabic = Array(1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1)\n        var result = \"\"\n        var n = number\n        for (i <-\
    \ 0 to 12) {\n            while (n >= arabic(i)) {\n                result +=\
    \ roman(i)\n                n -= arabic(i)\n            }\n        }\n       \
    \ return result"]
stop_tokens:
- "\n    }\n"

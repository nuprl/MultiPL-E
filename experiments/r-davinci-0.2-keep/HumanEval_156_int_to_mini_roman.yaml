name: HumanEval_156_int_to_mini_roman
language: r
prompt: "# Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  # and return it in lowercase.\n# Restrictions: 1 <= num <= 1000\n# Examples:\n#\
  \ >>> int_to_mini_roman(19) == 'xix'\n# >>> int_to_mini_roman(152) == 'clii'\n#\
  \ >>> int_to_mini_roman(426) == 'cdxxvi'\nint_to_mini_roman <- function(number)\
  \ {"
tests: "test_humaneval <- function() {\ncandidate <- int_to_mini_roman\n    if(!identical(candidate(19),\
  \ 'xix')){quit('no', 1)}\n    if(!identical(candidate(152), 'clii')){quit('no',\
  \ 1)}\n    if(!identical(candidate(251), 'ccli')){quit('no', 1)}\n    if(!identical(candidate(426),\
  \ 'cdxxvi')){quit('no', 1)}\n    if(!identical(candidate(500), 'd')){quit('no',\
  \ 1)}\n    if(!identical(candidate(1), 'i')){quit('no', 1)}\n    if(!identical(candidate(4),\
  \ 'iv')){quit('no', 1)}\n    if(!identical(candidate(43), 'xliii')){quit('no', 1)}\n\
  \    if(!identical(candidate(90), 'xc')){quit('no', 1)}\n    if(!identical(candidate(94),\
  \ 'xciv')){quit('no', 1)}\n    if(!identical(candidate(532), 'dxxxii')){quit('no',\
  \ 1)}\n    if(!identical(candidate(900), 'cm')){quit('no', 1)}\n    if(!identical(candidate(994),\
  \ 'cmxciv')){quit('no', 1)}\n    if(!identical(candidate(1000), 'm')){quit('no',\
  \ 1)}\n}\ntest_humaneval()"
completions: []
stop_tokens:
- "\n#"
- "\n```"

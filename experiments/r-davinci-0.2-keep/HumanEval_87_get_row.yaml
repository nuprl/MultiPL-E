name: HumanEval_87_get_row
language: r
prompt: "# You are given a 2 dimensional data, as a nested lists,\n# which is similar\
  \ to matrix, however, unlike matrices,\n# each row may contain a different number\
  \ of columns.\n# Given lst, and integer x, find integers x in the list,\n# and return\
  \ list of tuples, [(x1, y1), (x2, y2) ...] such that\n# each tuple is a coordinate\
  \ - (row, columns), starting with 0.\n# Sort coordinates initially by rows in ascending\
  \ order.\n# Also, sort coordinates of the row by columns in descending order.\n\
  # Examples:\n# get_row([\n# [1,2,3,4,5,6],\n# [1,2,3,4,1,6],\n# [1,2,3,4,5,1]\n\
  # ], 1) == [(0, 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n# get_row([], 1) == []\n# get_row([[],\
  \ [1], [1, 2, 3]], 3) == [(2, 2)]\nget_row <- function(lst, x) {"
tests: "test_humaneval <- function() {\ncandidate <- get_row\n    if(!identical(candidate(c(c(1,\
  \ 2, 3, 4, 5, 6), c(1, 2, 3, 4, 1, 6), c(1, 2, 3, 4, 5, 1)), 1), c(c(0, 0), c(1,\
  \ 4), c(1, 0), c(2, 5), c(2, 0)))){quit('no', 1)}\n    if(!identical(candidate(c(c(1,\
  \ 2, 3, 4, 5, 6), c(1, 2, 3, 4, 5, 6), c(1, 2, 3, 4, 5, 6), c(1, 2, 3, 4, 5, 6),\
  \ c(1, 2, 3, 4, 5, 6), c(1, 2, 3, 4, 5, 6)), 2), c(c(0, 1), c(1, 1), c(2, 1), c(3,\
  \ 1), c(4, 1), c(5, 1)))){quit('no', 1)}\n    if(!identical(candidate(c(c(1, 2,\
  \ 3, 4, 5, 6), c(1, 2, 3, 4, 5, 6), c(1, 1, 3, 4, 5, 6), c(1, 2, 1, 4, 5, 6), c(1,\
  \ 2, 3, 1, 5, 6), c(1, 2, 3, 4, 1, 6), c(1, 2, 3, 4, 5, 1)), 1), c(c(0, 0), c(1,\
  \ 0), c(2, 1), c(2, 0), c(3, 2), c(3, 0), c(4, 3), c(4, 0), c(5, 4), c(5, 0), c(6,\
  \ 5), c(6, 0)))){quit('no', 1)}\n    if(!identical(candidate(c(), 1), c())){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(c(1)), 2), c())){quit('no', 1)}\n    if(!identical(candidate(c(c(),\
  \ c(1), c(1, 2, 3)), 3), c(c(2, 2)))){quit('no', 1)}\n}\ntest_humaneval()"
completions: []
stop_tokens:
- "\n#"
- "\n```"

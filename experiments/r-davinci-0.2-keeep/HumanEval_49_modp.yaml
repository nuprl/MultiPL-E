name: HumanEval_49_modp
language: humaneval_to_r.py
prompt: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n# >>>\
  \ modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n# >>> modp(100,\
  \ 101)\n# 1\nmodp <- function(n, p) {"
tests: "test_humaneval <- function() {\ncandidate <- modp\n    if(!identical(candidate(3,\
  \ 5), 3)){quit('no', 1)}\n    if(!identical(candidate(1101, 101), 2)){quit('no',\
  \ 1)}\n    if(!identical(candidate(0, 101), 1)){quit('no', 1)}\n    if(!identical(candidate(3,\
  \ 11), 8)){quit('no', 1)}\n    if(!identical(candidate(100, 101), 1)){quit('no',\
  \ 1)}\n    if(!identical(candidate(30, 5), 4)){quit('no', 1)}\n    if(!identical(candidate(31,\
  \ 5), 3)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 *\
    \ modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n\
    \ == 1) {\n    return(2)\n  } else {\n    return(modp(n - 1, p) * 2 %% p)\n  }\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 *\
    \ modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n\
    \ == 1) {\n    return(2)\n  } else {\n    return(2 * modp(n - 1, p) %% p)\n  }\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 *\
    \ modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n\
    \ == 1) {\n    return(2)\n  } else {\n    return(modp(n - 1, p) * 2 %/% p)\n \
    \ }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 *\
    \ modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n ==\
    \ 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %%\
    \ p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n / 2, p) ^ 2 %% p)\n  }\n  return(2 * modp(n - 1, p) %% p)\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 *\
    \ modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n ==\
    \ 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n / 2, p) ^\
    \ 2 %% p)\n  }\n  else {\n    return(2 * modp(n - 1, p) %% p)\n  }\n}\n", "\n\
    \  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n / 2, p)^2 %% p)\n  }\n  return(2 * modp(n\
    \ - 1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n\
    \    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n \
    \ }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n\
    \    return(2)\n  } else {\n    return(2 * modp(n - 1, p) %% p)\n  }\n}\n", "\n\
    \  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n\
    \    return(2)\n  } else {\n    return(modp(n - 1, p) * 2 %% p)\n  }\n}\n", "\n\
    \  if (n == 0) return(1)\n  if (n == 1) return(2)\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  } else {\n    return(2 * modp(n-1, p) %% p)\n  }\n}\n", "\n  if\
    \ (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n\
    \ %% 2 == 0) {\n    return(modp(n / 2, p)^2 %% p)\n  }\n  return(2 * modp(n -\
    \ 1, p) %% p)\n}\n", "\n    if (n == 0) return(1)\n    if (n == 1) return(2)\n\
    \    if (n %% 2 == 0) {\n        return(modp(n/2, p)^2 %% p)\n    } else {\n \
    \       return(2 * modp(n-1, p) %% p)\n    }\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n  \
    \  return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n\
    \  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\
    \ else if (n == 1) {\n    return(2)\n  } else {\n    return(modp(n - 1, p)^2 %%\
    \ p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n   \
    \ return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n\
    \  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n\
    \  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n  \
    \  return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n\
    \  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n\
    \  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n\
    \ / 2, p)^2 %% p)\n  }\n  return(2 * modp(n - 1, p) %% p)\n}\n", "\n  if (n ==\
    \ 0) return(1)\n  if (n == 1) return(2)\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  } else {\n    return(2 * modp(n-1, p) %% p)\n  }\n}\n", "\n  if\
    \ (n == 0) {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n  } else {\n\
    \    return(modp(n - 1, p)^2 %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n\
    \ / 2, p) ^ 2 %% p)\n  }\n  return(2 * modp(n - 1, p) %% p)\n}\n", "\n  if (n\
    \ == 0) {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n  } else {\n\
    \    return(modp(n - 1, p)^2 %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n / 2, p) ^ 2 %% p)\n  }\n  return(2 * modp(n - 1, p) %% p)\n\
    }\n", "\n    if (n == 0) {\n        return(1)\n    }\n    if (n == 1) {\n    \
    \    return(2)\n    }\n    if (n %% 2 == 0) {\n        return(modp(n/2, p)^2 %%\
    \ p)\n    }\n    return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n   \
    \ return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n % 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  } else if (n == 1) {\n    return(2)\n  } else {\n    return(2\
    \ * modp(n - 1, p) %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else\
    \ if (n == 1) {\n    return(2)\n  } else {\n    return(modp(n - 1, p) * 2 %% p)\n\
    \  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 *\
    \ modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n\
    \ == 1) {\n    return(2)\n  } else {\n    return(2 * modp(n - 1, p) %% p)\n  }\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n / 2, p) ^ 2 %% p)\n  }\n  return(2\
    \ * modp(n - 1, p) %% p)\n}\n", "\n    if (n == 0) {\n        return(1)\n    }\n\
    \    if (n == 1) {\n        return(2)\n    }\n    if (n %% 2 == 0) {\n       \
    \ return(modp(n/2, p)^2 %% p)\n    }\n    return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n  \
    \  return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n\
    \  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n\
    \  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n\
    \ / 2, p) ^ 2 %% p)\n  }\n  return(2 * modp(n - 1, p) %% p)\n}\n", "\n  if (n\
    \ == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %%\
    \ 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %%\
    \ p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n\
    \  } else {\n    return(2 * modp(n - 1, p) %% p)\n  }\n}\n", "\n  if (n == 0)\
    \ {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 ==\
    \ 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 *\
    \ modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n ==\
    \ 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n / 2, p) ^\
    \ 2 %% p)\n  }\n  return(2 * modp(n - 1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n \
    \ }\n  return(2 * modp((n-1)/2, p)^2 %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  } else if (n == 1) {\n    return(2)\n  } else {\n    return(2 * modp(n - 1,\
    \ p) %% p)\n  }\n}\n", "\n    if (n == 0) {\n        return(1)\n    }\n    if\
    \ (n == 1) {\n        return(2)\n    }\n    if (n %% 2 == 0) {\n        return(modp(n/2,\
    \ p)^2 %% p)\n    }\n    return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0)\
    \ {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 ==\
    \ 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 *\
    \ modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n\
    \ == 1) {\n    return(2)\n  } else {\n    return(modp(n - 1, p) * 2 %% p)\n  }\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n\
    \  } else {\n    return(modp(n - 1, p) * 2 %% p)\n  }\n}\n", "\n  if (n == 0)\
    \ {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 ==\
    \ 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 *\
    \ modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n\
    \ == 1) {\n    return(2)\n  } else {\n    return(modp(n - 1, p) * 2 %/% p)\n \
    \ }\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n\
    \  } else {\n    return(modp(n - 1, p) * 2 %% p)\n  }\n}\n", "\n  if (n == 0)\
    \ {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 ==\
    \ 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n\
    }\n", "\n    if (n == 0) {\n        return(1)\n    }\n    if (n == 1) {\n    \
    \    return(2)\n    }\n    if (n %% 2 == 0) {\n        return(modp(n/2, p)^2 %%\
    \ p)\n    }\n    return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n   \
    \ return(1)\n  } else if (n == 1) {\n    return(2)\n  } else {\n    return(2 *\
    \ modp(n - 1, p) %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if\
    \ (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2\
    \ %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) return(1)\n\
    \  if (n == 1) return(2)\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n\
    \  } else {\n    return(2 * modp(n-1, p) %% p)\n  }\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  } else if (n == 1) {\n    return(2)\n  } else {\n    return(2\
    \ * modp(n - 1, p) %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else\
    \ if (n == 1) {\n    return(2)\n  } else {\n    return(2 * modp(n - 1, p) %% p)\n\
    \  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n / 2, p) ^ 2 %% p)\n  }\n  return(2\
    \ * modp(n - 1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if\
    \ (n == 1) {\n    return(2)\n  } else {\n    return(modp(n - 1, p) * 2 %/% p)\n\
    \  }\n}\n", "\n    if (n == 0) {\n        return(1)\n    }\n    if (n == 1) {\n\
    \        return(2)\n    }\n    if (n %% 2 == 0) {\n        return(modp(n/2, p)^2\
    \ %% p)\n    }\n    return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n\
    \    return(2)\n  } else {\n    return(modp(n - 1, p)^2 %% p)\n  }\n}\n", "\n\
    \  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n  \
    \  return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n\
    \  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n\
    \  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  } else if (n == 1) {\n    return(2)\n  } else {\n    return(modp(n\
    \ - 1, p) * 2 %/% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if\
    \ (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2\
    \ %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n / 2, p) ^ 2 %% p)\n  }\n  return(2 * modp(n\
    \ - 1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n\
    \    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n \
    \ }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  } else if (n == 1) {\n    return(2)\n  } else {\n    return(modp(n\
    \ - 1, p)^2 %% p)\n  }\n}\n", "\n    if (n == 0) {\n        return(1)\n    }\n\
    \    if (n == 1) {\n        return(2)\n    }\n    if (n %% 2 == 0) {\n       \
    \ return(modp(n/2, p)^2 %% p)\n    }\n    return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n  \
    \  return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n / 2, p) ^ 2 %% p)\n\
    \  }\n  return(2 * modp(n - 1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  } else if (n == 1) {\n    return(2)\n  } else {\n    return(modp(n - 1, p)\
    \ * 2 %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1)\
    \ {\n    return(2)\n  } else {\n    return(2 * modp(n - 1, p) %% p)\n  }\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n\
    \    return(2)\n  } else {\n    return(modp(n - 1, p) * 2 %% p)\n  }\n}\n", "\n\
    \  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n  \
    \  return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n\
    \  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n\
    \  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n  \
    \  return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n\
    \  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n\
    \  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  } else if (n == 1) {\n    return(2)\n  } else {\n    return(modp(n\
    \ - 1, p) * 2 %% p)\n  }\n}\n", "\n    if (n == 0) {\n        return(1)\n    }\n\
    \    if (n == 1) {\n        return(2)\n    }\n    if (n %% 2 == 0) {\n       \
    \ return(modp(n/2, p)^2 %% p)\n    }\n    return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  else {\n    return(2\
    \ * modp(n-1, p) %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if\
    \ (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2\
    \ %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  } else if (n == 1) {\n    return(2)\n  } else {\n    return(2 * modp(n - 1,\
    \ p) %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n\
    \    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n \
    \ }\n  else {\n    return(2 * modp(n-1, p) %% p)\n  }\n}\n", "\n    if (n == 0)\
    \ {\n        return(1)\n    }\n    if (n == 1) {\n        return(2)\n    }\n \
    \   if (n %% 2 == 0) {\n        return(modp(n / 2, p)^2 %% p)\n    }\n    return(2\
    \ * modp(n - 1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n\
    \ == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2\
    \ %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n\
    \ / 2, p)^2 %% p)\n  }\n  return(2 * modp(n - 1, p) %% p)\n}\n", "\n  if (n ==\
    \ 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2\
    \ == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %%\
    \ p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n / 2, p) ^ 2 %% p)\n  }\n  return(2\
    \ * modp(n - 1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if\
    \ (n == 1) {\n    return(2)\n  } else {\n    return(modp(n - 1, p) * 2 %% p)\n\
    \  }\n}\n", "\n    if (n == 0) {\n        return(1)\n    }\n    if (n == 1) {\n\
    \        return(2)\n    }\n    if (n %% 2 == 0) {\n        return(modp(n / 2,\
    \ p) ^ 2 %% p)\n    }\n    return(2 * modp(n - 1, p) %% p)\n}\n", "\n  if (n ==\
    \ 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2\
    \ == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %%\
    \ p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n\
    \  } else {\n    return(2 * modp(n - 1, p) %% p)\n  }\n}\n", "\n  if (n == 0)\
    \ {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 ==\
    \ 0) {\n    return(modp(n / 2, p)^2 %% p)\n  }\n  return(2 * modp(n - 1, p) %%\
    \ p)\n}\n", "\n  if (n == 0) return(1)\n  if (n == 1) return(2)\n  if (n %% 2\
    \ == 0) {\n    return(modp(n/2, p)^2 %% p)\n  } else {\n    return(2 * modp(n-1,\
    \ p) %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n\
    \    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n \
    \ }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  } else if (n == 1) {\n    return(2)\n  } else {\n    return(modp(n\
    \ - 1, p) * 2 %/% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if\
    \ (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2\
    \ %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  } else if (n == 1) {\n    return(2)\n  } else {\n    return(modp(n - 1, p)\
    \ * 2 %/% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1)\
    \ {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n\
    \  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n    if (n == 0) {\n        return(1)\n\
    \    }\n    if (n == 1) {\n        return(2)\n    }\n    if (n %% 2 == 0) {\n\
    \        return(modp(n/2, p)^2 %% p)\n    }\n    return(2 * modp(n-1, p) %% p)\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n\
    \  } else {\n    return(2 * modp(n - 1, p) %% p)\n  }\n}\n", "\n  if (n == 0)\
    \ {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 ==\
    \ 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n\
    \  } else {\n    return(modp(n - 1, p) * 2 %% p)\n  }\n}\n", "\n  if (n == 0)\
    \ {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n  } else {\n    return(2\
    \ * modp(n - 1, p) %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n\
    \  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n\
    \    return(2)\n  } else {\n    return(2 * modp(n - 1, p) %% p)\n  }\n}\n", "\n\
    \  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n  } else\
    \ {\n    return(modp(n - 1, p) * 2 %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  } else if (n == 1) {\n    return(2)\n  } else {\n    return(modp(n - 1, p)\
    \ * 2 %/% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n ==\
    \ 1) {\n    return(2)\n  } else {\n    return(2 * modp(n - 1, p) %% p)\n  }\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n\
    \  } else {\n    return(modp(n - 1, p) * 2 %% p)\n  }\n}\n", "\n  if (n == 0)\
    \ {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 ==\
    \ 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n\
    \  } else {\n    return(modp(n - 1, p) * 2 %/% p)\n  }\n}\n", "\n  if (n == 0)\
    \ {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 ==\
    \ 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 *\
    \ modp(n-1, p) %% p)\n}\n", "\n    if (n == 0) {\n        return(1)\n    } else\
    \ if (n == 1) {\n        return(2)\n    } else {\n        return(modp(n - 1, p)^2\
    \ %% p)\n    }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n\
    \    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n \
    \ }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n    if (n == 0) {\n        return(1)\n\
    \    }\n    if (n == 1) {\n        return(2)\n    }\n    if (n %% 2 == 0) {\n\
    \        return(modp(n/2, p)^2 %% p)\n    }\n    return(2 * modp(n-1, p) %% p)\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 *\
    \ modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n ==\
    \ 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %%\
    \ p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  } else if (n == 1) {\n    return(2)\n  } else\
    \ {\n    return(modp(n - 1, p) * 2 %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  } else if (n == 1) {\n    return(2)\n  } else {\n    return(modp(n\
    \ - 1, p) * 2 %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n\
    \ == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2\
    \ %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n    if (n == 0) {\n        return(1)\n    }\n    if (n == 1) {\n        return(2)\n\
    \    }\n    if (n %% 2 == 0) {\n        return(modp(n/2, p)^2 %% p)\n    }\n \
    \   return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n \
    \ } else if (n == 1) {\n    return(2)\n  } else {\n    return(modp(n - 1, p) *\
    \ 2 %% p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n\
    \    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n \
    \ }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n    if (n == 0) {\n        return(1)\n    }\n    if (n ==\
    \ 1) {\n        return(2)\n    }\n    if (n %% 2 == 0) {\n        return(modp(n\
    \ / 2, p) ^ 2 %% p)\n    }\n    return(2 * modp(n - 1, p) %% p)\n}\n", "\n  if\
    \ (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n\
    \ %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p)\
    \ %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 *\
    \ modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n ==\
    \ 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %%\
    \ p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  else {\n    return(2 * modp(n-1, p) %% p)\n  }\n}\n", "\n\
    \  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n  \
    \  return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n\
    \  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n\
    \  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) return(1)\n\
    \  if (n == 1) return(2)\n  if (n %% 2 == 0) return(modp(n/2, p)^2 %% p)\n  return(2\
    \ * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  } else if (n\
    \ == 1) {\n    return(2)\n  } else {\n    return(2 * modp(n - 1, p) %% p)\n  }\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 *\
    \ modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n ==\
    \ 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %%\
    \ p)\n  }\n  else {\n    return(2 * modp(n-1, p) %% p)\n  }\n}\n", "\n  if (n\
    \ == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %%\
    \ 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %%\
    \ p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n / 2, p) ^ 2 %% p)\n  }\n  return(2\
    \ * modp(n - 1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n\
    \ == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n / 2, p)\
    \ ^ 2 %% p)\n  }\n  return(2 * modp(n - 1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n\
    \ / 2, p)^2 %% p)\n  }\n  else {\n    return(2 * modp(n - 1, p) %% p)\n  }\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n  \
    \  return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n\
    \  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\
    \ else if (n == 1) {\n    return(2)\n  } else {\n    return(modp(n - 1, p)^2 %%\
    \ p)\n  }\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n   \
    \ return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n\
    \  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n\
    \  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n / 2, p)^2 %% p)\n  }\n  return(2 * modp(n\
    \ - 1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n\
    \    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n \
    \ }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n\
    \  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  else {\n    return(2 * modp(n-1, p) %% p)\n  }\n}\n", "\n\
    \  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if\
    \ (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1,\
    \ p) %% p)\n}\n ", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n \
    \   return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2, p)^2 %% p)\n  }\n\
    \  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n\
    \  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n/2,\
    \ p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n", "\n  if (n == 0) {\n\
    \    return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n / 2, p) ^ 2 %% p)\n  }\n  return(2 * modp(n - 1, p) %% p)\n\
    }\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n %% 2 == 0) {\n    return(modp(n / 2, p) ^ 2 %% p)\n  }\n  return(2\
    \ * modp(n - 1, p) %% p)\n}\n", "\n  if (n == 0) {\n    return(1)\n  }\n  if (n\
    \ == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n    return(modp(n / 2, p)^2\
    \ %% p)\n  }\n  return(2 * modp(n - 1, p) %% p)\n}\n", "\n  if (n == 0) {\n  \
    \  return(1)\n  }\n  if (n == 1) {\n    return(2)\n  }\n  if (n %% 2 == 0) {\n\
    \    return(modp(n/2, p)^2 %% p)\n  }\n  return(2 * modp(n-1, p) %% p)\n}\n",
  "\n    if (n == 0) {\n        return(1)\n    }\n    if (n == 1) {\n        return(2)\n\
    \    }\n    if (n %% 2 == 0) {\n        return(modp(n / 2, p)^2 %% p)\n    }\n\
    \    return(2 * modp(n - 1, p) %% p)\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

language: java
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = Long.parseLong(String.valueOf(a));\n \
    \       long cube2 = Long.parseLong(String.valueOf(cube));\n        long cube3\
    \ = Long.parseLong(String.valueOf(cube2));\n        long cube4 = Long.parseLong(String.valueOf(cube3));\n\
    \        long cube5 = Long.parseLong(String.valueOf(cube4));\n        long cube6\
    \ = Long.parseLong(String.valueOf(cube5));\n        long cube7 = Long.parseLong(String.valueOf(cube6));\n\
    \        long cube8 = Long.parseLong(String.valueOf(cube7));\n        long cube9\
    \ = Long.parseLong(String.valueOf(cube8));\n        long cube10 = Long.parseLong(String.valueOf(cube9));\n\
    \        long cube11 = Long.parseLong(String.valueOf(cube10));\n        long cube12\
    \ = Long.parseLong(String.valueOf(cube11));\n        long cube13 = Long.parseLong(String.valueOf(cube12));\n\
    \        long cube14 = Long.parseLong(String.valueOf(cube13));\n        long cube15\
    \ = Long.parseLong(String.valueOf(cube14));\n        long cube16 = Long.parseLong(String.valueOf(cube15));\n\
    \        long cube17 = Long.parseLong(String.valueOf(cube16));\n        long cube18\
    \ = Long.parseLong(String.valueOf(cube17));\n        long cube19 = Long.parseLong(String.valueOf(cube18));\n\
    \        long cube20 = Long.parseLong(String.valueOf(cube19));\n        long cube21\
    \ = Long.parseLong(String.valueOf(cube20));\n        long cube22 = Long.parseLong(String.valueOf(cube21));\n\
    \        long cube23 = Long.parseLong(String.valueOf(cube22));\n        long cube24\
    \ = Long.parseLong(String.valueOf(cube23));\n        long cube25 = Long.parseLong(String.valueOf(cube24));\n\
    \        long cube26 = Long.parseLong(String.valueOf(cube25));\n        long cube27\
    \ = Long.parseLong(String.valueOf(cube26));\n        long cube28 = Long.parseLong(String.valueOf(cube27));\n\
    \        long cube29 = Long.parseLong(String.valueOf(cube28));\n        long cube30\
    \ = Long.parseLong(String.valueOf(cube29));\n        long cube31 = Long.parseLong(String.valueOf(cube30));\n\
    \        \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphwp8e563.java:58: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a*a*a;\n        long cube2 = a*a*a*a;\n\
    \        long cube3 = a*a*a*a*a;\n        long cube4 = a*a*a*a*a*a;\n        long\
    \ cube5 = a*a*a*a*a*a*a*a;\n        long cube6 = a*a*a*a*a*a*a*a*a;\n        long\
    \ cube7 = a*a*a*a*a*a*a*a*a*a*a;\n        long cube8 = a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube9 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n        long cube10 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube11 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n        long cube12\
    \ = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n        long cube13 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube14 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n  \
    \      long cube15 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube16 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube17 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube18 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube19 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube20 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube21 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6qw51wq5.java:47: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmp6qw51wq5.java:48: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp6qw51wq5.java:48: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp6qw51wq5.java:48:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp6qw51wq5.java:48: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmp6qw51wq5.java:48:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp6qw51wq5.java:59: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = b;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo2u1bx4m.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpo2u1bx4m.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n   \
    \     long D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1\
    \ = 1;\n        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n   \
    \     long K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1\
    \ = 1;\n        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n   \
    \     long R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1\
    \ = 1;\n        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n   \
    \     long Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2\
    \ = 1;\n        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n   \
    \     long F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2\
    \ = 1;\n        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n   \
    \     long M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2\
    \ = 1;\n        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n   \
    \     long T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkge08039.java:125: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l) return true;\n        if (a == 2l) return\
    \ true;\n        if (a == 3l) return true;\n        if (a == 4l) return true;\n\
    \        if (a == 5l) return true;\n        if (a == 6l) return true;\n      \
    \  if (a == 7l) return true;\n        if (a == 8l) return true;\n        if (a\
    \ == 9l) return true;\n        if (a == 10l) return true;\n        if (a == 11l)\
    \ return true;\n        if (a == 12l) return true;\n        if (a == 13l) return\
    \ true;\n        if (a == 14l) return true;\n        if (a == 15l) return true;\n\
    \        if (a == 16l) return true;\n        if (a == 17l) return true;\n    \
    \    if (a == 18l) return true;\n        if (a == 19l) return true;\n        if\
    \ (a == 20l) return true;\n        if (a == 21l) return true;\n        if (a ==\
    \ 22l) return true;\n        if (a == 23l) return true;\n        if (a == 24l)\
    \ return true;\n        if (a == 25l) return true;\n        if (a == 26l) return\
    \ true;\n        if (a == 27l) return true;\n        if (a == 28l) return true;\n\
    \        if (a == 29l) return true;\n        if (a == 30l) return true;\n    \
    \    if (a == 31l) return true;\n        if (a == 32l) return true;\n        if\
    \ (a == 33l) return true;\n        if (a == 34l) return true;\n        if (a ==\
    \ 35l) return true;\n        if (a == 36l) return true;\n        if (a == 37l)\
    \ return true;\n        if (a == 38l) return true;\n        if (a == 39l) return\
    \ true;\n        if (a == 40l) return true;\n        if (a == 41l) return true;\n\
    \        if (a == 42l) return true;\n        if (a == 43l) return true;\n    \
    \    if (a == 44l) return true;\n        if (a == 45l) return true;\n        if\
    \ (a == 46l) return true;\n        if (a == 47l) return true;\n        if (a ==\
    \ 48l) return true;\n        if (a == 49l) return true;\n        if (a == 50l)\
    \ return true;\n        if (a == 51l) return true;\n        if (a == 52l) return\
    \ true;\n        if (a == 53l) return true;\n        if (a == 54l) return true;\n\
    \        if (a == 55l) return true;\n        if (a == 56l) return true;\n    \
    \    if (a == 57l) return true;\n        if (a == 58l) return true;\n        if\
    \ (a == 59l) return true;\n        if (a == 60l) return true;\n        if (a ==\
    \ 61l) return true;\n        if (a == 62l) return true;\n        if (a == 63l)\
    \ return true;\n        if (a == 64l) return true;\n        if (a == 65l) return\
    \ true;\n        if (a == 66l) return true;\n        if (a == 67l) return true;\n\
    \        if (a == 68l) return true;\n        if (a == 69l) return true;\n    \
    \    if (a == 70l) return true;\n        if (a == 71l) return true;\n        if\
    \ (a == 72l) return true;\n        if (a == 73l) return true;\n        if (\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2vbkd6na.java:100: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmp2vbkd6na.java:101: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp2vbkd6na.java:101: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp2vbkd6na.java:101: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp2vbkd6na.java:112: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        long cube = LongStream.rangeClosed(1, a).filter(i -> i * i * i == a).count();\n\
    \        return cube == 3;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0xuqhoyo.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        if (a % 3 == 0) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmparu9q8j_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0)\
    \ && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0)\
    \ && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0) && (a%8192==0) &&\
    \ (a%16384==0) && (a%32768==0) && (a%65536==0) && (a%131072==0) && (a%262144==0)\
    \ && (a%524288==0) && (a%1048576==0) && (a%2097152==0) && (a%4194304==0) && (a%8388608==0)\
    \ && (a%16777216==0) && (a%33554432==0) && (a%67108864==0) && (a%134217728==0)\
    \ && (a%268435456==0) && (a%536870912==0) && (a%1073741824==0) && (a%2147483648==0)\
    \ && (a%4294967296==0) && (a%8589934592==0) && (a%17179869184==0) && (a%34359738368==0)\
    \ && (a%68719476736==0) && (a%137438953472==0) && (a%274877906944==0) && (a%549755813888==0)\
    \ && (a%1099511627776==0) && (a%2199023255552==0) && (a%4398046511104==0) && (a%8796093022208==0)\
    \ && (a%17592186044416==0) && (a%35184372088832==0) && (a%70368744177664==0) &&\
    \ (a%140737488355328==0) && (a%281474976710656==0) && (a%562949953421312==0) &&\
    \ (a%1125899906842624==0) && (a%2251799813685248==0) && (a%4503599627370496==0)\
    \ && (a%9007199254740992==0) && (a%18014398509481984==0) && (a%36028797018963968==0)\
    \ && (a%72057594037927936==0) && (a%1407374883553280==0) && (a%2814749767106552==0)\
    \ && (a%562949953421312==0) && (a%1125899906842624==0) && (a%22517998\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpchp1lj3d.java:26: error: integer number too large: 2147483648\n\
    \        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0) && (a%8==0) && (a%16==0)\
    \ && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0)\
    \ && (a%2048==0) && (a%4096==0) && (a%8192==0) && (a%16384==0) && (a%32768==0)\
    \ && (a%65536==0) && (a%131072==0) && (a%262144==0) && (a%524288==0) && (a%1048576==0)\
    \ && (a%2097152==0) && (a%4194304==0) && (a%8388608==0) && (a%16777216==0) &&\
    \ (a%33554432==0) && (a%67108864==0) && (a%134217728==0) && (a%268435456==0) &&\
    \ (a%536870912==0) && (a%1073741824==0) && (a%2147483648==0) && (a%4294967296==0)\
    \ && (a%8589934592==0) && (a%17179869184==0) && (a%34359738368==0) && (a%68719476736==0)\
    \ && (a%137438953472==0) && (a%274877906944==0) && (a%549755813888==0) && (a%1099511627776==0)\
    \ && (a%2199023255552==0) && (a%4398046511104==0) && (a%8796093022208==0) && (a%17592186044416==0)\
    \ && (a%35184372088832==0) && (a%70368744177664==0) && (a%140737488355328==0)\
    \ && (a%281474976710656==0) && (a%562949953421312==0) && (a%1125899906842624==0)\
    \ && (a%2251799813685248==0) && (a%4503599627370496==0) && (a%9007199254740992==0)\
    \ && (a%18014398509481984==0) && (a%36028797018963968==0) && (a%72057594037927936==0)\
    \ && (a%1407374883553280==0) && (a%2814749767106552==0) && (a%562949953421312==0)\
    \ && (a%1125899906842624==0) && (a%22517998\n                                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                        ^\n/tmp/tmpchp1lj3d.java:26: error: integer\
    \ number too large: 4294967296\n        return (a%1==0) && (a%2==0) && (a%3==0)\
    \ && (a%4==0) && (a%8==0) && (a%16==0) && (a%32=="
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnruln_1.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgnruln_1.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk9q2necs.java:128: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpk9q2necs.java:129: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpk9q2necs.java:129: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpk9q2necs.java:129: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpk9q2necs.java:140: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = a;\n        long d =\
    \ a;\n        long e = a;\n        long f = a;\n        long g = a;\n        long\
    \ h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n    \
    \    long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long aa = a;\n        long ab = a;\n        long ac = a;\n        long\
    \ ad = a;\n        long ae = a;\n        long af = a;\n        long ag = a;\n\
    \        long ah = a;\n        long ai = a;\n        long aj = a;\n        long\
    \ ak = a;\n        long al = a;\n        long am = a;\n        long an = a;\n\
    \        long ao = a;\n        long ap = a;\n        long aq = a;\n        long\
    \ ar = a;\n        long as = a;\n        long at = a;\n        long au = a;\n\
    \        long av = a;\n        long aw = a;\n        long ax = a;\n        long\
    \ ay = a;\n        long az = a;\n        long ba = a;\n        long bb = a;\n\
    \        long bc = a;\n        long bd = a;\n        long be = a;\n        long\
    \ bf = a;\n        long bg = a;\n        long bh = a;\n        long bi = a;\n\
    \        long bj = a;\n        long bk = a;\n        long bl = a;\n        long\
    \ bm = a;\n        long bn = a;\n        long bo = a;\n        long bp = a;\n\
    \        long bq = a;\n        long br = a;\n        long bs = a;\n        long\
    \ bt = a;\n        long bu = a;\n        long bv = a;\n        long bw = a;\n\
    \        long bx = a;\n        long by = a;\n        long bz = a;\n        long\
    \ ca = a;\n        long cb = a;\n        long cc = a;\n        long cd = a;\n\
    \        long ce = a;\n        long cf = a;\n        long cg = a;\n        long\
    \ ch = a;\n        long ci = a;\n        long cj = a;\n        long ck = a;\n\
    \        long cl = a;\n        long cm\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0f0mfe0t.java:115: error: ';' expected\n        long cm\n     \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l)\n            return true;\n        if\
    \ (a == 2l)\n            return true;\n        if (a == 3l)\n            return\
    \ true;\n        if (a == 4l)\n            return true;\n        if (a == 5l)\n\
    \            return true;\n        if (a == 6l)\n            return true;\n  \
    \      if (a == 7l)\n            return true;\n        if (a == 8l)\n        \
    \    return true;\n        if (a == 9l)\n            return true;\n        if\
    \ (a == 10l)\n            return true;\n        if (a == 11l)\n            return\
    \ true;\n        if (a == 12l)\n            return true;\n        if (a == 13l)\n\
    \            return true;\n        if (a == 14l)\n            return true;\n \
    \       if (a == 15l)\n            return true;\n        if (a == 16l)\n     \
    \       return true;\n        if (a == 17l)\n            return true;\n      \
    \  if (a == 18l)\n            return true;\n        if (a == 19l)\n          \
    \  return true;\n        if (a == 20l)\n            return true;\n        if (a\
    \ == 21l)\n            return true;\n        if (a == 22l)\n            return\
    \ true;\n        if (a == 23l)\n            return true;\n        if (a == 24l)\n\
    \            return true;\n        if (a == 25l)\n            return true;\n \
    \       if (a == 26l)\n            return true;\n        if (a == 27l)\n     \
    \       return true;\n        if (a == 28l)\n            return true;\n      \
    \  if (a == 29l)\n            return true;\n        if (a == 30l)\n          \
    \  return true;\n        if (a == 31l)\n            return true;\n        if (a\
    \ == 32l)\n            return true;\n        if (a == 33l)\n            return\
    \ true;\n        if (a == 34l)\n            return true;\n        if (a == 35l)\n\
    \            return true;\n        if (a == 36l)\n            return true;\n \
    \       if (a == 37l)\n            return true;\n        if (a == 38l)\n     \
    \       return true;\n        if (a == 39l)\n            return true;\n      \
    \  if (a == 40l)\n            return true;\n        if (a == 41l)\n          \
    \  return true;\n        if (a == 42l)\n            return true;\n        if (a\
    \ == 43l)\n            return true;\n        if (a == 44l)\n            return\
    \ true;\n        if (a == 45l)\n            return true;\n        if (a == 46l)\n\
    \            return true;\n        if (a == 47l)\n            return true;\n \
    \       if (a == 48l)\n            return true;\n        if (a == 49l)\n     \
    \       return true;\n        if (a == 50l)\n            return true;\n      \
    \  if (a == 51l)\n            return true;\n        if (a == 52l)\n          \
    \  return true;\n        if (a == 53l)\n            return true;\n        if (a\
    \ == 54l)\n            return true;\n        if (a == 55l)\n            return\
    \ true;\n        if (a == 56l)\n            return true;\n        if (a == 57l)\n\
    \            return true;\n        if (a == 58l)\n            return true;\n \
    \       if (a == 59l)\n            return true;\n        if (a == 60l)\n     \
    \       return true;\n        if (a == 61l)\n            return true;\n      \
    \  if (a == 62l)\n            return true;\n        if (a == 63l)\n          \
    \  return true;\n        if (a == 64l)\n            return true;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv0i8oe83.java:155: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8p5k76rq.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l) return true;\n        if (a == 2l) return\
    \ true;\n        if (a == 3l) return true;\n        if (a == 4l) return true;\n\
    \        if (a == 5l) return true;\n        if (a == 6l) return true;\n      \
    \  if (a == 7l) return true;\n        if (a == 8l) return true;\n        if (a\
    \ == 9l) return true;\n        if (a == 10l) return true;\n        if (a == 11l)\
    \ return true;\n        if (a == 12l) return true;\n        if (a == 13l) return\
    \ true;\n        if (a == 14l) return true;\n        if (a == 15l) return true;\n\
    \        if (a == 16l) return true;\n        if (a == 17l) return true;\n    \
    \    if (a == 18l) return true;\n        if (a == 19l) return true;\n        if\
    \ (a == 20l) return true;\n        if (a == 21l) return true;\n        if (a ==\
    \ 22l) return true;\n        if (a == 23l) return true;\n        if (a == 24l)\
    \ return true;\n        if (a == 25l) return true;\n        if (a == 26l) return\
    \ true;\n        if (a == 27l) return true;\n        if (a == 28l) return true;\n\
    \        if (a == 29l) return true;\n        if (a == 30l) return true;\n    \
    \    if (a == 31l) return true;\n        if (a == 32l) return true;\n        if\
    \ (a == 33l) return true;\n        if (a == 34l) return true;\n        if (a ==\
    \ 35l) return true;\n        if (a == 36l) return true;\n        if (a == 37l)\
    \ return true;\n        if (a == 38l) return true;\n        if (a == 39l) return\
    \ true;\n        if (a == 40l) return true;\n        if (a == 41l) return true;\n\
    \        if (a == 42l) return true;\n        if (a == 43l) return true;\n    \
    \    if (a == 44l) return true;\n        if (a == 45l) return true;\n        if\
    \ (a == 46l) return true;\n        if (a == 47l) return true;\n        if (a ==\
    \ 48l) return true;\n        if (a == 49l) return true;\n        if (a == 50l)\
    \ return true;\n        if (a == 51l) return true;\n        if (a == 52l) return\
    \ true;\n        if (a == 53l) return true;\n        if (a == 54l) return true;\n\
    \        if (a == 55l) return true;\n        if (a == 56l) return true;\n    \
    \    if (a == 57l) return true;\n        if (a == 58l) return true;\n        if\
    \ (a == 59l) return true;\n        if (a == 60l) return true;\n        if (a ==\
    \ 61l) return true;\n        if (a == 62l) return true;\n        if (a == 63l)\
    \ return true;\n        if (a == 64l) return true;\n        if (a == 65l) return\
    \ true;\n        if (a == 66l) return true;\n        if (a == 67l) return true;\n\
    \        if (a == 68l) return true;\n        if (a == 69l) return true;\n    \
    \    if (a == 70l) return true;\n        if (a == 71l) return true;\n        if\
    \ (a == 72l) return true;\n        if (a == 73l) return true;\n        if (\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2vbkd6na.java:100: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmp2vbkd6na.java:101: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp2vbkd6na.java:101: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp2vbkd6na.java:101: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp2vbkd6na.java:112: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%5==0&&a%6==0&&a%7==0&&a%8==0&&a%9==0&&a%10==0&&a%11==0&&a%12==0&&a%13==0&&a%14==0&&a%15==0&&a%16==0&&a%17==0&&a%18==0&&a%19==0&&a%20==0&&a%21==0&&a%22==0&&a%23==0&&a%24==0&&a%25==0&&a%26==0&&a%27==0&&a%28==0&&a%29==0&&a%30==0&&a%31==0&&a%32==0&&a%33==0&&a%34==0&&a%35==0&&a%36==0&&a%37==0&&a%38==0&&a%39==0&&a%40==0&&a%41==0&&a%42==0&&a%43==0&&a%44==0&&a%45==0&&a%46==0&&a%47==0&&a%48==0&&a%49==0&&a%50==0&&a%51==0&&a%52==0&&a%53==0&&a%54==0&&a%55==0&&a%56==0&&a%57==0&&a%58==0&&a%59==0&&a%60==0&&a%61==0&&a%62==0&&a%63==0&&a%64==0&&a%65==0&&a%66==0&&a%67==0&&a%68==0&&a%69==0&&a%70==0&&a%71==0&&a%72==0&&a%73==0&&a%74==0&&a%75==0&&a%76==0&&a%77==0&&a%78==0&&a%79==0&&a%80==0&&a%81==0&&a%82==0&&a%83==0&&a%84==0&&a%85==0&&a%86==\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3rq89rot.java:27: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmp3rq89rot.java:28: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp3rq89rot.java:28: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp3rq89rot.java:28:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp3rq89rot.java:28: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmp3rq89rot.java:28:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp3rq89rot.java:39: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl5xpge5x.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long a\
    \ = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = \n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2o5u7jon.java:130: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmp2o5u7jon.java:131: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp2o5u7jon.java:131: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp2o5u7jon.java:131:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp2o5u7jon.java:131: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmp2o5u7jon.java:131:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp2o5u7jon.java:142: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnruln_1.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgnruln_1.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsg4a6lyp.java:32)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().getAsLong();\n        return cube != 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsg4a6lyp.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk9q2necs.java:128: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpk9q2necs.java:129: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpk9q2necs.java:129: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpk9q2necs.java:129: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpk9q2necs.java:140: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        if (cube == (long)\
    \ Math.pow(a, 3))\n            return true;\n        else\n            return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkq0c82o5.java:34)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8p5k76rq.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a ;\n        long cube2 = a * a *\
    \ a;\n        long cube3 = a * a * a * a;\n        long cube4 = a * a * a * a\
    \ * a;\n        long cube5 = a * a * a * a * a * a * a;\n        long cube6 =\
    \ a * a * a * a * a * a * a * a;\n        long cube7 = a * a * a * a * a * a *\
    \ a * a * a * a;\n        long cube8 = a * a * a * a * a * a * a * a * a * a *\
    \ a;\n        long cube9 = a * a * a * a * a * a * a * a * a * a * a * a;\n  \
    \      long cube10 = a * a * a * a * a * a * a * a * a * a * a * a * a;\n    \
    \    long cube11 = a * a * a * a * a * a * a * a * a * a * a * a * a * a;\n  \
    \      long cube12 = a * a * a * a * a * a * a * a * a * a * a * a * a * a * a;\n\
    \        long cube13 = a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a;\n        long cube14 = a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a;\n        long cube15 = a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a;\n        long cube16 = a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a;\n        long cube17\
    \ = a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a;\n\
    \        long cube18 = a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a;\n        long cube19 = a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a;\n        long cube20 = a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a;\n       \
    \ long cube21 = a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a;\n        long cube22 = a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a;\n        long cube23 = a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a;\n        long cube24 = a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a;\n   \
    \     long cube25 = a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a;\n        long cube26 = a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj8v6k8js.java:51: error: ';' expected\n        long cube26 = a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n                  \
    \                                                             ^\n1 error\n"
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a==0l)?true:(a==1l)?true:(a==2l)?true:(a==3l)?true:(a==4l)?true:(a==5l)?true:(a==6l)?true:(a==7l)?true:(a==8l)?true:(a==9l)?true:(a==10l)?true:(a==11l)?true:(a==12l)?true:(a==13l)?true:(a==14l)?true:(a==15l)?true:(a==16l)?true:(a==17l)?true:(a==18l)?true:(a==19l)?true:(a==20l)?true:(a==21l)?true:(a==22l)?true:(a==23l)?true:(a==24l)?true:(a==25l)?true:(a==26l)?true:(a==27l)?true:(a==28l)?true:(a==29l)?true:(a==30l)?true:(a==31l)?true:(a==32l)?true:(a==33l)?true:(a==34l)?true:(a==35l)?true:(a==36l)?true:(a==37l)?true:(a==38l)?true:(a==39l)?true:(a==40l)?true:(a==41l)?true:(a==42l)?true:(a==43l)?true:(a==44l)?true:(a==45l)?true:(a==46l)?true:(a==47l)?true:(a==48l)?true:(a==49l)?true:(a==50l)?true:(a==51l)?true:(a==52l)?true:(a==53l)?true:(a==54l)?true:(a==55l)?true:(a==56l)?true:(a==57l)?true:(a==58l)?true:(a==59l)?true:(a==60l)?true:(a==61l)?true:(a==62l)?true:(a==63l)?true:(a==64l)?true:(a==65l)?true:(a==66l)?true:(a==67l)?true:(a==68l)?true:(a==69l)?true:(a==70l)?true:(a==71l)?true:(a==72l)?true:\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph2kpv21s.java:27: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ c;\n        long e = d;\n        long f = e;\n        long g = f;\n        long\
    \ h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n    \
    \    long l = k;\n        long m = l;\n        long n = m;\n        long o = n;\n\
    \        long p = o;\n        long q = p;\n        long r = q;\n        long s\
    \ = r;\n        long t = s;\n        long u = t;\n        long v = u;\n      \
    \  long w = v;\n        long x = w;\n        long y = x;\n        long z = y;\n\
    \        long a = z;\n        long b = a;\n        long c = b;\n        long d\
    \ = c;\n        long e = d;\n        long f = e;\n        long g = f;\n      \
    \  long h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n\
    \        long l = k;\n        long m = l;\n        long n = m;\n        long o\
    \ = n;\n        long p = o;\n        long q = p;\n        long r = q;\n      \
    \  long s = r;\n        long t = s;\n        long u = t;\n        long v = u;\n\
    \        long w = v;\n        long x = w;\n        long y = x;\n        long z\
    \ = y;\n        long a = z;\n        long b = a;\n        long c = b;\n      \
    \  long d = c;\n        long e = d;\n        long f = e;\n        long g = f;\n\
    \        long h = g;\n        long i = h;\n        long j = i;\n        long k\
    \ = j;\n        long l = k;\n        long m = l;\n        long n = m;\n      \
    \  long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long a = z;\n        long b = a;\n        long c = b;\n\
    \        long d = c;\n        long e = d;\n        long f = e;\n        long g\
    \ = f;\n        long h = g;\n        long i = h;\n        long j = i;\n      \
    \  long k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n\
    \        long o = n;\n        long p = o;\n        long q = p;\n        long r\
    \ = q;\n        long s = r;\n        long t = s;\n        long u = t;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpql713ngz.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = z;\n             ^\n/tmp/tmpql713ngz.java:52:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a;\n             ^\n/tmp/tmpql713ngz.java:53: error: variable c is already\
    \ defined in method iscube(long)\n        long c = b;\n             ^\n/tmp/tmpql713ngz.java:54:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = c;\n             ^\n/tmp/tmpql713ngz.java:55: error: variable e is already\
    \ defined in method iscube(long)\n        long e = d;\n             ^\n/tmp/tmpql713ngz.java:56:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = e;\n             ^\n/tmp/tmpql713ngz.java:57: error: variable g is already\
    \ defined in method iscube(long)\n        long g = f;\n             ^\n/tmp/tmpql713ngz.java:58:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = g;\n             ^\n/tmp/tmpql713ngz.java:59: error: variable i is already\
    \ defined in method iscube(long)\n        long i = h;\n             ^\n/tmp/tmpql713ngz.java:60:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = i;\n             ^\n/tmp/tmpql713ngz.java:61: error: variable k is already\
    \ defined in method iscube(long)\n        long k = j;\n             ^\n/tmp/tmpql713ngz.java:62:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = k;\n             ^\n/tmp/tmpql713ngz.java:63: error: variable m is already\
    \ defined in method iscube(long)\n        long m = l;\n             ^\n/tmp/tmpql713ngz.java:64:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = m;\n             ^\n/tmp/tmpql713ngz.java:65: error: variable o is already\
    \ defined in method iscube(long)\n        long o = n;\n             ^\n/tmp/tmpql713ngz.java:66:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = o;\n             ^\n/tmp/tmpql713ngz.java:67: error: variable q is already\
    \ defined in method iscube(long)\n        long q = p;\n      "
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa\
    \ = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n   \
    \     long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah\
    \ = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n   \
    \     long al = 1;\n        long am = 1;\n        long an = 1;\n        long ao\
    \ = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n   \
    \     long as = 1;\n        long at = 1;\n        long au = 1;\n        long av\
    \ = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n   \
    \     long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc\
    \ = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n   \
    \     long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj\
    \ = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n   \
    \     long bn = 1;\n        long bo = 1;\n        long bp = 1;\n        long bq\
    \ = 1;\n        long br = 1;\n        long bs = 1;\n        long bt1 = 1;\n  \
    \      long bt2 = 1;\n        long bt3 = 1;\n        long bt4 = 1;\n        long\
    \ bt5 = 1;\n        long bt6 = 1;\n        long bt7 = 1;\n        long bt8 = 1;\n\
    \        long bt9 = 1;\n        long bt10 = 1;\n        long bt11 = 1;\n     \
    \   long bt12 = 1;\n        long bt13 = 1;\n        long bt14 = 1;\n        long\
    \ bt15 = 1;\n        long bt16 = 1;\n        long bt17 = 1;\n        long bt18\
    \ = 1;\n        long bt19 = 1;\n        long bt20 = 1;\n        long bt21 = 1;\n\
    \        long bt22 = 1;\n        long bt23 = 1;\n        long bt24 = 1;\n    \
    \    long bt25\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxxeprk38.java:123: error: ';' expected\n        long bt25\n   \
    \              ^\n1 error\n"
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > 180) {\n            return false;\n        }\n        if (a %\
    \ 3 == 0) {\n            return true;\n        }\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyuivesh5.java:38)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l)\n            return false;\n\
    \        long b = a * a * a;\n        long c = b * b * b - 4 * a * b;\n      \
    \  return c < 0l;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_up87z4e.java:35)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl5xpge5x.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl5xpge5x.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnruln_1.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgnruln_1.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long cube = 1;\n        while\
    \ (n > 1) {\n            n = n / 3;\n            cube = cube * 3;\n        }\n\
    \        return cube == a;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx49b0kzr.java:37)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1l==0l&&a%2l==0l&&a%3l==0l&&a%4l==0l&&a%5l==0l&&a%6l==0l&&a%7l==0l&&a%8l==0l&&a%9l==0l&&a%10l==0l&&a%11l==0l&&a%12l==0l&&a%13l==0l&&a%14l==0l&&a%15l==0l&&a%16l==0l&&a%17l==0l&&a%18l==0l&&a%19l==0l&&a%20l==0l&&a%21l==0l&&a%22l==0l&&a%23l==0l&&a%24l==0l&&a%25l==0l&&a%26l==0l&&a%27l==0l&&a%28l==0l&&a%29l==0l&&a%30l==0l&&a%31l==0l&&a%32l==0l&&a%33l==0l&&a%34l==0l&&a%35l==0l&&a%36l==0l&&a%37l==0l&&a%38l==0l&&a%39l==0l&&a%40l==0l&&a%41l==0l&&a%42l==0l&&a%43l==0l&&a%44l==0l&&a%45l==0l&&a%46l==0l&&a%47l==0l&&a%48l==0l&&a%49l==0l&&a%50l==0l&&a%51l==0l&&a%52l==0l&&a%53l==0l&&a%54l==0l&&a%55l==0l&&a%56l==0l&&a%57l==0l&&a%58l==0l&&a%59l==0l&&a%60l==0l&&a%61l==0l&&a%62l==0l&&a%63l==0l&&a%64l==0l&&\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvnjh4a06.java:27: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) return false;\n        long\
    \ b = a%1l;\n        if (b == 0) return true;\n        if (b == -1) return false;\n\
    \        if (b == -2) return false;\n        if (b == -3) return false;\n    \
    \    if (b == -4) return false;\n        if (b == -5) return false;\n        if\
    \ (b == -6) return false;\n        if (b == -7) return false;\n        if (b ==\
    \ -8) return false;\n        if (b == 9) return false;\n        if (b == 10) return\
    \ false;\n        if (b == 11) return false;\n        if (b == 12) return false;\n\
    \        if (b == 13) return false;\n        if (b == 14) return false;\n    \
    \    if (b == 15) return false;\n        if (b == 16) return false;\n        if\
    \ (b == 17) return false;\n        if (b == 18) return false;\n        if (b ==\
    \ 19) return false;\n        if (b == 20) return false;\n        if (b == 21)\
    \ return false;\n        if (b == 22) return false;\n        if (b == 23) return\
    \ false;\n        if (b == 24) return false;\n        if (b == 25) return false;\n\
    \        if (b == 26) return false;\n        if (b == 27) return false;\n    \
    \    if (b == 28) return false;\n        if (b == 29) return false;\n        if\
    \ (b == 30) return false;\n        if (b == 31) return false;\n        if (b ==\
    \ 32) return false;\n        if (b == 33) return false;\n        if (b == 34)\
    \ return false;\n        if (b == 35) return false;\n        if (b == 36) return\
    \ false;\n        if (b == 37) return false;\n        if (b == 38) return false;\n\
    \        if (b == 39) return false;\n        if (b == 40) return false;\n    \
    \    if (b == 41) return false;\n        if (b == 42) return false;\n        if\
    \ (b == 43) return false;\n        if (b == 44) return false;\n        if (b ==\
    \ 45) return false;\n        if (b == 46) return false;\n        if (b == 47)\
    \ return false;\n        if (b == 48) return false;\n        if (b == 49) return\
    \ false;\n        if (b == 50) return false;\n        if (b == 51) return false;\n\
    \        if (b == 52) return false;\n        if (b == 53) return false;\n    \
    \    if (b == 54) return false;\n        if (b == 55) return false;\n        if\
    \ (b == 56) return false;\n        if (b == 57) return false;\n        if (b ==\
    \ 58) return false;\n        if (b == 59) return false;\n        if (b == 60)\
    \ return false;\n        if (b == 61) return false;\n        if (b == 62) return\
    \ false;\n        if (b == 63) return false;\n        if (b == 64) return false;\n\
    \        if (b == 65) return false;\n        if (b == 66) return false;\n    \
    \    if (b == 67) return false;\n        if (b == 68) return false;\n        if\
    \ (b == 69) return false;\n        if (b == 70) return false;\n        if (b ==\
    \ 71) return false;\n        if (b == 72) return false;\n        if (b == 73)\
    \ return false;\n        if (b == 74) return false;\n        if (b == 75) return\
    \ false;\n        if (b == 76) return false;\n        if (b == 77) return false;\n\
    \        if (b == 78) return false;\n        if (b == 79) return false;\n    \
    \    if (b == 80) return false;\n        if (b == 81) return false;\n        if\
    \ (b\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp79r1x7qz.java:110: error: ')' expected\n        if (b\n       \
    \      ^\n/tmp/tmp79r1x7qz.java:111: error: illegal start of statement\n    }\n\
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a == 1l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpketl6hia.java:32)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnruln_1.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgnruln_1.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long aaa = 1;\n        long aab = 1;\n\
    \        long aac = 1;\n        long aad = 1;\n        long aae = 1;\n       \
    \ long aaf = 1;\n        long aag = 1;\n        long aah = 1;\n        long aai\
    \ = 1;\n        long aaj = 1;\n        long aak = 1;\n        long aal = 1;\n\
    \        long aam = 1;\n        long aan = 1;\n        long aoa = 1;\n       \
    \ long aap = 1;\n        long aqa = 1;\n        long aar = 1;\n        long asa\
    \ = 1;\n        long ata = 1;\n        long aua = 1;\n        long ava = 1;\n\
    \        long awa = 1;\n        long axa = 1;\n        long aya = 1;\n       \
    \ long aza = 1;\n        long aaa1 = 1;\n        long aab1 = 1;\n        long\
    \ aac1 = 1;\n        long aad1 = 1;\n        long aae1 = 1;\n        long aaf1\
    \ = 1;\n        long aag1 = 1;\n        long aah1 = 1;\n        long aai1 = 1;\n\
    \        long aaj1 = 1;\n        long aak1 = 1;\n        long aal1 = 1;\n    \
    \    long aam1 = 1;\n        long aan1 = 1;\n        long aoa1 = 1;\n        \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvstvpp6s.java:119: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * i * i == a).count();\n        return cube == a;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdmk7o53_.java:32)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n\
    \        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long\
    \ bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n\
    \        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long\
    \ bm = 1;\n        long bn = 1;\n        long bo = 1;\n        long bp = 1;\n\
    \        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long\
    \ bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n        long bt4 = 1;\n\
    \        long bt5 = 1;\n        long bt6 = 1;\n        long bt7 = 1;\n       \
    \ long bt8 = 1;\n        long bt9 = 1;\n        long bt10 = 1;\n        long bt11\
    \ = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n        long bt14 = 1;\n\
    \        long bt15 = 1;\n        long bt16 = 1;\n        long bt17 = 1;\n    \
    \    long bt18 = 1;\n        long bt19 = 1;\n        long bt20 = 1;\n        long\
    \ bt21 = 1;\n        long bt22 = 1;\n        long bt23 = 1;\n        long bt24\
    \ = 1;\n        long bt25 = 1;\n        long bt26 = 1;\n        long \n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa4l44uez.java:122: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpa4l44uez.java:122: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a * a * a) == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_maiuw25.java:31)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i*i*i == a).findFirst().orElse(-1l);\n        return cube != -1l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794724
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr1mo0_31.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        return cube == a;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpybljbb6z.java:33)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ c;\n        long e = d;\n        long f = e;\n        long g = f;\n        long\
    \ h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n    \
    \    long l = k;\n        long m = l;\n        long n = m;\n        long o = n;\n\
    \        long p = o;\n        long q = p;\n        long r = q;\n        long s\
    \ = r;\n        long t = s;\n        long u = t;\n        long v = u;\n      \
    \  long w = v;\n        long x = w;\n        long y = x;\n        long z = y;\n\
    \        long a = z;\n        long b = a;\n        long c = b;\n        long d\
    \ = c;\n        long e = d;\n        long f = e;\n        long g = f;\n      \
    \  long h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n\
    \        long l = k;\n        long m = l;\n        long n = m;\n        long o\
    \ = n;\n        long p = o;\n        long q = p;\n        long r = q;\n      \
    \  long s = r;\n        long t = s;\n        long u = t;\n        long v = u;\n\
    \        long w = v;\n        long x = w;\n        long y = x;\n        long z\
    \ = y;\n        long a = z;\n        long b = a;\n        long c = b;\n      \
    \  long d = c;\n        long e = d;\n        long f = e;\n        long g = f;\n\
    \        long h = g;\n        long i = h;\n        long j = i;\n        long k\
    \ = j;\n        long l = k;\n        long m = l;\n        long n = m;\n      \
    \  long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long a = z;\n        long b = a;\n        long c = b;\n\
    \        long d = c;\n        long e = d;\n        long f = e;\n        long g\
    \ = f;\n        long h = g;\n        long i = h;\n        long j = i;\n      \
    \  long k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n\
    \        long o = n;\n        long p = o;\n        long q = p;\n        long r\
    \ = q;\n        long s = r;\n        long t = s;\n        long u = t;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpql713ngz.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = z;\n             ^\n/tmp/tmpql713ngz.java:52:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a;\n             ^\n/tmp/tmpql713ngz.java:53: error: variable c is already\
    \ defined in method iscube(long)\n        long c = b;\n             ^\n/tmp/tmpql713ngz.java:54:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = c;\n             ^\n/tmp/tmpql713ngz.java:55: error: variable e is already\
    \ defined in method iscube(long)\n        long e = d;\n             ^\n/tmp/tmpql713ngz.java:56:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = e;\n             ^\n/tmp/tmpql713ngz.java:57: error: variable g is already\
    \ defined in method iscube(long)\n        long g = f;\n             ^\n/tmp/tmpql713ngz.java:58:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = g;\n             ^\n/tmp/tmpql713ngz.java:59: error: variable i is already\
    \ defined in method iscube(long)\n        long i = h;\n             ^\n/tmp/tmpql713ngz.java:60:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = i;\n             ^\n/tmp/tmpql713ngz.java:61: error: variable k is already\
    \ defined in method iscube(long)\n        long k = j;\n             ^\n/tmp/tmpql713ngz.java:62:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = k;\n             ^\n/tmp/tmpql713ngz.java:63: error: variable m is already\
    \ defined in method iscube(long)\n        long m = l;\n             ^\n/tmp/tmpql713ngz.java:64:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = m;\n             ^\n/tmp/tmpql713ngz.java:65: error: variable o is already\
    \ defined in method iscube(long)\n        long o = n;\n             ^\n/tmp/tmpql713ngz.java:66:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = o;\n             ^\n/tmp/tmpql713ngz.java:67: error: variable q is already\
    \ defined in method iscube(long)\n        long q = p;\n      "
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnruln_1.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgnruln_1.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        if (cube == (long)\
    \ Math.pow(a, 3)) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplt_ju7jy.java:34)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long a1 = 1;\n        long a2 = 1;\n\
    \        long a3 = 1;\n        long a4 = 1;\n        long a5 = 1;\n        long\
    \ a6 = 1;\n        long a7 = 1;\n        long a8 = 1;\n        long a9 = 1;\n\
    \        long a10 = 1;\n        long a11 = 1;\n        long a12 = 1;\n       \
    \ long a13 = 1;\n        long a14 = 1;\n        long a15 = 1;\n        long a16\
    \ = 1;\n        long a17 = 1;\n        long a18 = 1;\n        long a19 = 1;\n\
    \        long a20 = 1;\n        long a21 = 1;\n        long a22 = 1;\n       \
    \ long a23 = 1;\n        long a24 = 1;\n        long a25 = 1;\n        long a26\
    \ = 1;\n        long a27 = 1;\n        long a28 = 1;\n        long a29 = 1;\n\
    \        long a30 = 1;\n        long a31 = 1;\n        long a32 = 1;\n       \
    \ long a33 = 1;\n        long a34 = 1;\n        long a35 = 1;\n        long a36\
    \ = 1;\n        long a37 = 1;\n        long a38 = 1;\n        long a39 = 1;\n\
    \        long a40 = 1;\n        long a41 = 1;\n        long a42 = 1;\n       \
    \ long a43 = 1;\n        long a44 = 1;\n        long a45\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_qk_gw2_.java:121: error: ';' expected\n        long a45\n    \
    \            ^\n1 error\n"
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl5xpge5x.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().getAsLong();\n        return cube == a;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794724
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a == 1l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpketl6hia.java:32)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a==0l)?true:(a%2==0l)?true:(a%3==0l)?true:(a%5==0l)?true:(a%7==0l)?true:false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxqocpmt5.java:29)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ c;\n        long e = d;\n        long f = e;\n        long g = f;\n        long\
    \ h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n    \
    \    long l = k;\n        long m = l;\n        long n = m;\n        long o = n;\n\
    \        long p = o;\n        long q = p;\n        long r = q;\n        long s\
    \ = r;\n        long t = s;\n        long u = t;\n        long v = u;\n      \
    \  long w = v;\n        long x = w;\n        long y = x;\n        long z = y;\n\
    \        long a = z;\n        long b = a;\n        long c = b;\n        long d\
    \ = c;\n        long e = d;\n        long f = e;\n        long g = f;\n      \
    \  long h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n\
    \        long l = k;\n        long m = l;\n        long n = m;\n        long o\
    \ = n;\n        long p = o;\n        long q = p;\n        long r = q;\n      \
    \  long s = r;\n        long t = s;\n        long u = t;\n        long v = u;\n\
    \        long w = v;\n        long x = w;\n        long y = x;\n        long z\
    \ = y;\n        long a = z;\n        long b = a;\n        long c = b;\n      \
    \  long d = c;\n        long e = d;\n        long f = e;\n        long g = f;\n\
    \        long h = g;\n        long i = h;\n        long j = i;\n        long k\
    \ = j;\n        long l = k;\n        long m = l;\n        long n = m;\n      \
    \  long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long a = z;\n        long b = a;\n        long c = b;\n\
    \        long d = c;\n        long e = d;\n        long f = e;\n        long g\
    \ = f;\n        long h = g;\n        long i = h;\n        long j = i;\n      \
    \  long k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n\
    \        long o = n;\n        long p = o;\n        long q = p;\n        long r\
    \ = q;\n        long s = r;\n        long t = s;\n        long u = t;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpql713ngz.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = z;\n             ^\n/tmp/tmpql713ngz.java:52:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a;\n             ^\n/tmp/tmpql713ngz.java:53: error: variable c is already\
    \ defined in method iscube(long)\n        long c = b;\n             ^\n/tmp/tmpql713ngz.java:54:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = c;\n             ^\n/tmp/tmpql713ngz.java:55: error: variable e is already\
    \ defined in method iscube(long)\n        long e = d;\n             ^\n/tmp/tmpql713ngz.java:56:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = e;\n             ^\n/tmp/tmpql713ngz.java:57: error: variable g is already\
    \ defined in method iscube(long)\n        long g = f;\n             ^\n/tmp/tmpql713ngz.java:58:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = g;\n             ^\n/tmp/tmpql713ngz.java:59: error: variable i is already\
    \ defined in method iscube(long)\n        long i = h;\n             ^\n/tmp/tmpql713ngz.java:60:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = i;\n             ^\n/tmp/tmpql713ngz.java:61: error: variable k is already\
    \ defined in method iscube(long)\n        long k = j;\n             ^\n/tmp/tmpql713ngz.java:62:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = k;\n             ^\n/tmp/tmpql713ngz.java:63: error: variable m is already\
    \ defined in method iscube(long)\n        long m = l;\n             ^\n/tmp/tmpql713ngz.java:64:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = m;\n             ^\n/tmp/tmpql713ngz.java:65: error: variable o is already\
    \ defined in method iscube(long)\n        long o = n;\n             ^\n/tmp/tmpql713ngz.java:66:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = o;\n             ^\n/tmp/tmpql713ngz.java:67: error: variable q is already\
    \ defined in method iscube(long)\n        long q = p;\n      "
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a ;\n        long square = a * a;\n\
    \        long cubesquare = cube * square;\n        long cubecube = cube * cube;\n\
    \        long cubecubesquare = cubecube * square;\n        long cubecubecube =\
    \ cubecube * cube;\n        long cubecubecubesquare = cubecubecube * cube;\n \
    \       long cubecubecubecube = cubecubecube * cube;\n        long cubecubecubecube\
    \ = cubecubecube * cube;\n        long cubecubecubecubesquare = cubecubecubecube\
    \ * cube;\n        long cubecubecubecubecube = cubecubecubecube * cube;\n    \
    \    long cubecubecubecubecube = cubecubecubecube * cube;\n        long cubecubecubecubecubesquare\
    \ = cubecubecubecube * cube;\n        long cubecubecubecubecubecube = cubecubecubecube\
    \ * cube;\n        long cubecubecubecubecubecube = cubecubecubecube * cube;\n\
    \        long cubecubecubecubecubecube = cubecubecubecube * cube;\n        long\
    \ cubecubecubecubecubecubesquare = cubecubecubecube * cube;\n        long cubecubecubecubecubecubecube\
    \ = cubecubecubecube * cube;\n        long cubecubecubecubecubecubecube = cubecubecubecube\
    \ * cube;\n        long cubecubecubecubecubecubecube = cubecubecubecube * cube;\n\
    \        long cubecubecubecubecubecubecube = cubecubecubecube * cube;\n      \
    \  long cubecubecubecubecubecube = cubecubecubecube * cube;\n        long cubecubecubecubecubecube\
    \ = cubecubecubecube * cube;\n        long cubecubecubecubecubecube = cubecubecubecube\
    \ * cube;\n        long cubecubecubecubecubecube = cubecubecubecube * cube;\n\
    \        long cubecubecubecubecubecube = cubecubecubecube * cube;\n        long\
    \ cubecubecubecubecubecube = cubecubecubecube * cube;\n        long cubecubecubecubecubecube\
    \ = cubecubecubecube * cube;\n        long cubecubecubecubecubecube = cubecubecubecube\
    \ * cube;\n        long cubecubecubecubecube = cubecubecubecube * cube;\n    \
    \    long cubecubecubecubecube = cubecubecubecube * cube;\n        long cubecubecubecubecube\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprcn0kb3g.java:58: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().get();\n        return cube == a;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4qp5up7b.java:26: error: cannot find symbol\n        long cube\
    \ = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i -> i * i * i == a).findFirst().get();\n\
    \                                                                            \
    \                          ^\n  symbol:   method get()\n  location: class OptionalLong\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a * a;\n        long c = b * b - 4 * a *\
    \ a + 1;\n        return c < 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nyp8kh3.java:34)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr1mo0_31.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsg4a6lyp.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a % 3 == 0) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpab9s753o.java:35)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        if (cube == 0l) {\n\
    \            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpye7eaxki.java:33)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a * a * a;\n        long c = b * b * b -\
    \ 4 * a * b;\n        return c < 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n42n5rv.java:34)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        if (a % 2 == 0) {\n            return true;\n        }\n        if (a\
    \ % 3 == 0) {\n            return true;\n        }\n        if (a % 4 == 0) {\n\
    \            return true;\n        }\n        if (a % 5 == 0) {\n            return\
    \ true;\n        }\n        if (a % 6 == 0) {\n            return true;\n    \
    \    }\n        if (a % 7 == 0) {\n            return true;\n        }\n     \
    \   if (a % 8 == 0) {\n            return true;\n        }\n        if (a % 9\
    \ == 0) {\n            return true;\n        }\n        if (a % 10 == 0) {\n \
    \           return true;\n        }\n        if (a % 11 == 0) {\n            return\
    \ true;\n        }\n        if (a % 12 == 0) {\n            return true;\n   \
    \     }\n        if (a % 13 == 0) {\n            return true;\n        }\n   \
    \     if (a % 14 == 0) {\n            return true;\n        }\n        if (a %\
    \ 15 == 0) {\n            return true;\n        }\n        if (a % 16 == 0) {\n\
    \            return true;\n        }\n        if (a % 17 == 0) {\n           \
    \ return true;\n        }\n        if (a % 18 == 0) {\n            return true;\n\
    \        }\n        if (a % 19 == 0) {\n            return true;\n        }\n\
    \        if (a % 20 == 0) {\n            return true;\n        }\n        if (a\
    \ % 21 == 0) {\n            return true;\n        }\n        if (a % 22 == 0)\
    \ {\n            return true;\n        }\n        if (a % 23 == 0) {\n       \
    \     return true;\n        }\n        if (a % 24 == 0) {\n            return\
    \ true;\n        }\n        if (a % 25 == 0) {\n            return true;\n   \
    \     }\n        if (a % 26 == 0) {\n            return true;\n        }\n   \
    \     if (a % 27 == 0) {\n            return true;\n        }\n        if (a %\
    \ 28 == 0) {\n            return true;\n        }\n        if (a % 29 == 0) {\n\
    \            return true;\n        }\n        if (a % 30 == 0) {\n           \
    \ return true;\n        }\n        if (a % 31 == 0) {\n            return true;\n\
    \        }\n        if (a % 32 == 0) {\n            return true;\n        }\n\
    \        if (a % 33 == 0) {\n            return true;\n        }\n        if (a\
    \ % 34 == 0) {\n            return true;\n        }\n        if (a % 35 == 0)\
    \ {\n            return true;\n        }\n        if (a % 36 == 0) {\n       \
    \     return true;\n        }\n        if (a % 37 == 0) {\n            return\
    \ true;\n        }\n        if (a % 38 == 0) {\n            return true;\n   \
    \     }\n        if (a % 39 == 0) {\n            return true;\n        }\n   \
    \     if (a % 40 == 0) {\n            return true;\n        }\n        if (a %\
    \ 41 == 0) {\n            return true;\n        }\n        if (a % 42 == 0) {\n\
    \            return true;\n        }\n        if (a % 43 == 0) {\n           \
    \ return true;\n        }\n        if (a % 44 == 0) {\n            return true;\n\
    \        }\n        if (a % 45 == 0) {\n            return true;\n        }\n\
    \        if (a % 46 == 0) {\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0q7brpsv.java:166: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i*i*i == a).findFirst().getAsLong();\n        return cube == a;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794725
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl5xpge5x.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = a;\n        long d =\
    \ a;\n        long e = a;\n        long f = a;\n        long g = a;\n        long\
    \ h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n    \
    \    long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long a = a;\n        long b = a;\n        long c = a;\n        long d\
    \ = a;\n        long e = a;\n        long f = a;\n        long g = a;\n      \
    \  long h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n\
    \        long l = a;\n        long m = a;\n        long n = a;\n        long o\
    \ = a;\n        long p = a;\n        long q = a;\n        long r = a;\n      \
    \  long s = a;\n        long t = a;\n        long u = a;\n        long v = a;\n\
    \        long w = a;\n        long x = a;\n        long y = a;\n        long z\
    \ = a;\n        long a = a;\n        long b = a;\n        long c = a;\n      \
    \  long d = a;\n        long e = a;\n        long f = a;\n        long g = a;\n\
    \        long h = a;\n        long i = a;\n        long j = a;\n        long k\
    \ = a;\n        long l = a;\n        long m = a;\n        long n = a;\n      \
    \  long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long a = a;\n        long b = a;\n        long c = a;\n\
    \        long d = a;\n        long e = a;\n        long f = a;\n        long g\
    \ = a;\n        long h = a;\n        long i = a;\n        long j = a;\n      \
    \  long k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n\
    \        long o = a;\n        long p = a;\n        long q = a;\n        long r\
    \ = a;\n        long s = a;\n        long t = a;\n        long u = a;\n      \
    \  long v = a;\n        long w = a;\n        long x = a;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa3vj7g3z.java:128: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8p5k76rq.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk9q2necs.java:128: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpk9q2necs.java:129: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpk9q2necs.java:129: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpk9q2necs.java:129: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpk9q2necs.java:140: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ c;\n        long e = d;\n        long f = e;\n        long g = f;\n        long\
    \ h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n    \
    \    long l = k;\n        long m = l;\n        long n = m;\n        long o = n;\n\
    \        long p = o;\n        long q = p;\n        long r = q;\n        long s\
    \ = r;\n        long t = s;\n        long u = t;\n        long v = u;\n      \
    \  long w = v;\n        long x = w;\n        long y = x;\n        long z = y;\n\
    \        long a = z;\n        long b = a;\n        long c = b;\n        long d\
    \ = c;\n        long e = d;\n        long f = e;\n        long g = f;\n      \
    \  long h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n\
    \        long l = k;\n        long m = l;\n        long n = m;\n        long o\
    \ = n;\n        long p = o;\n        long q = p;\n        long r = q;\n      \
    \  long s = r;\n        long t = s;\n        long u = t;\n        long v = u;\n\
    \        long w = v;\n        long x = w;\n        long y = x;\n        long z\
    \ = y;\n        long a = z;\n        long b = a;\n        long c = b;\n      \
    \  long d = c;\n        long e = d;\n        long f = e;\n        long g = f;\n\
    \        long h = g;\n        long i = h;\n        long j = i;\n        long k\
    \ = j;\n        long l = k;\n        long m = l;\n        long n = m;\n      \
    \  long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long a = z;\n        long b = a;\n        long c = b;\n\
    \        long d = c;\n        long e = d;\n        long f = e;\n        long g\
    \ = f;\n        long h = g;\n        long i = h;\n        long j = i;\n      \
    \  long k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n\
    \        long o = n;\n        long p = o;\n        long q = p;\n        long r\
    \ = q;\n        long s = r;\n        long t = s;\n        long u = t;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpql713ngz.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = z;\n             ^\n/tmp/tmpql713ngz.java:52:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a;\n             ^\n/tmp/tmpql713ngz.java:53: error: variable c is already\
    \ defined in method iscube(long)\n        long c = b;\n             ^\n/tmp/tmpql713ngz.java:54:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = c;\n             ^\n/tmp/tmpql713ngz.java:55: error: variable e is already\
    \ defined in method iscube(long)\n        long e = d;\n             ^\n/tmp/tmpql713ngz.java:56:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = e;\n             ^\n/tmp/tmpql713ngz.java:57: error: variable g is already\
    \ defined in method iscube(long)\n        long g = f;\n             ^\n/tmp/tmpql713ngz.java:58:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = g;\n             ^\n/tmp/tmpql713ngz.java:59: error: variable i is already\
    \ defined in method iscube(long)\n        long i = h;\n             ^\n/tmp/tmpql713ngz.java:60:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = i;\n             ^\n/tmp/tmpql713ngz.java:61: error: variable k is already\
    \ defined in method iscube(long)\n        long k = j;\n             ^\n/tmp/tmpql713ngz.java:62:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = k;\n             ^\n/tmp/tmpql713ngz.java:63: error: variable m is already\
    \ defined in method iscube(long)\n        long m = l;\n             ^\n/tmp/tmpql713ngz.java:64:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = m;\n             ^\n/tmp/tmpql713ngz.java:65: error: variable o is already\
    \ defined in method iscube(long)\n        long o = n;\n             ^\n/tmp/tmpql713ngz.java:66:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = o;\n             ^\n/tmp/tmpql713ngz.java:67: error: variable q is already\
    \ defined in method iscube(long)\n        long q = p;\n      "
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 3;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6lncdlx.java:30)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a % 3 == 0) {\n            return true;\n        }\n        if (a\
    \ % 5 == 0) {\n            return true;\n        }\n        return false;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdutt0tk1.java:38)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        if (cube == (long)\
    \ Math.pow(cube, 3)) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmslbuxkc.java:36)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        if (cube == (long)\
    \ Math.pow(a, 3)) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplt_ju7jy.java:34)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l || a == 2l || a == 3l || a == 4l || a\
    \ == 5l || a == 6l || a == 7l || a == 8l || a == 9l || a == 10l || a == 11l ||\
    \ a == 12l || a == 13l || a == 14l || a == 15l || a == 16l || a == 17l || a ==\
    \ 18l || a == 19l || a == 20l || a == 21l || a == 22l || a == 23l || a == 24l\
    \ || a == 25l || a == 26l || a == 27l || a == 28l || a == 29l || a == 30l || a\
    \ == 31l || a == 32l || a == 33l || a == 34l || a == 35l || a == 36l || a == 37l\
    \ || a == 38l || a == 39l || a == 40l || a == 41l || a == 42l || a == 43l || a\
    \ == 44l || a == 45l || a == 46l || a == 47l || a == 48l || a == 49l || a == 50l\
    \ || a == 51l || a == 52l || a == 53l || a == 54l || a == 55l || a == 56l || a\
    \ == 57l || a == 58l || a == 59l || a == 60l || a == 61l || a == 62l || a == 63l\
    \ || a == 64l || a == 65l || a == 66l || a == 67l || a == 68l || a == 69l || a\
    \ == 70l || a == 71l || a == 72l || a == 73l || a == 74l || a == 75l || a == 76l\
    \ || a == 77l || a == 78l || a == 79l || a == 80l || a == 81l || a == 82l || a\
    \ == 83l || a == 84l || a == 85l || a == 86l || a == 87l || a == 88l || a == 89l\
    \ || a == 90l || a == 91l || a == 92l || a == 93l || a == 94l || a == 95l || a\
    \ == 96l || a == 97l || a == 98l || a == 99l || a == 100l || a == 101l || a ==\
    \ 102l || a == 103l || a == 104l || a == 105l || a == 106l || a == 107l || a ==\
    \ 108l || a == 109l || a == 110l || a == 111l || a == 112l || a == 113l || a ==\
    \ 114l || a == 115l || a == 116l || a == 117l || a == 118l || a == 119l || a ==\
    \ 120l || a == 121l || a == 122l || a == 123l || a == 124l || a == 125l || a ==\
    \ 126l || a == 127l || \n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdolo71og.java:27: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a == 0) {\n            return true;\n        }\n        if (a % 2\
    \ == 0) {\n            return false;\n        }\n        if (a % 3 == 0) {\n \
    \           return true;\n        }\n        if (a % 4 == 0) {\n            return\
    \ false;\n        }\n        if (a % 5 == 0) {\n            return true;\n   \
    \     }\n        if (a % 6 == 0) {\n            return false;\n        }\n   \
    \     if (a % 7 == 0) {\n            return true;\n        }\n        if (a %\
    \ 8 == 0) {\n            return false;\n        }\n        if (a % 9 == 0) {\n\
    \            return true;\n        }\n        if (a % 10 == 0) {\n           \
    \ return false;\n        }\n        if (a % 11 == 0) {\n            return true;\n\
    \        }\n        if (a % 12 == 0) {\n            return false;\n        }\n\
    \        if (a % 13 == 0) {\n            return true;\n        }\n        if (a\
    \ % 14 == 0) {\n            return false;\n        }\n        if (a % 15 == 0)\
    \ {\n            return true;\n        }\n        if (a % 16 == 0) {\n       \
    \     return false;\n        }\n        if (a % 17 == 0) {\n            return\
    \ true;\n        }\n        if (a % 18 == 0) {\n            return false;\n  \
    \      }\n        if (a % 19 == 0) {\n            return true;\n        }\n  \
    \      if (a % 20 == 0) {\n            return false;\n        }\n        if (a\
    \ % 21 == 0) {\n            return true;\n        }\n        if (a % 22 == 0)\
    \ {\n            return false;\n        }\n        if (a % 23 == 0) {\n      \
    \      return true;\n        }\n        if (a % 24 == 0) {\n            return\
    \ false;\n        }\n        if (a % 25 == 0) {\n            return true;\n  \
    \      }\n        if (a % 26 == 0) {\n            return false;\n        }\n \
    \       if (a % 27 == 0) {\n            return true;\n        }\n        if (a\
    \ % 28 == 0) {\n            return false;\n        }\n        if (a % 29 == 0)\
    \ {\n            return true;\n        }\n        if (a % 30 == 0) {\n       \
    \     return false;\n        }\n        if (a % 31 == 0) {\n            return\
    \ true;\n        }\n        if (a % 32 == 0) {\n            return false;\n  \
    \      }\n        if (a % 33 == 0) {\n            return true;\n        }\n  \
    \      if (a % 34 == 0) {\n            return false;\n        }\n        if (a\
    \ % 35 == 0) {\n            return true;\n        }\n        if (a % 36 == 0)\
    \ {\n            return false;\n        }\n        if (a % 37 == 0) {\n      \
    \      return true;\n        }\n        if (a % 38 == 0) {\n            return\
    \ false;\n        }\n        if (a % 39 == 0) {\n            return true;\n  \
    \      }\n        if (a % 40 == 0) {\n            return false;\n        }\n \
    \       if (a % 41 == 0) {\n            return true;\n        }\n        if (a\
    \ % 42 == 0) {\n            return false;\n        }\n        if (a % 43 == 0)\
    \ {\n            return true;\n        }\n        if (a % 44 == 0) {\n       \
    \     return false;\n        }\n        if (a % 45 == 0) {\n            return\
    \ true;\n        }\n        if (a % 46 == 0) {\n            return false;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc_cv6g01.java:168: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a == 1l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpketl6hia.java:32)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(x\
    \ -> x*x*x == a).findFirst().getAsLong();\n        return cube == a;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.NoSuchElementException: No value\
    \ present\n\tat java.base/java.util.OptionalLong.getAsLong(OptionalLong.java:130)\n\
    \tat Problem.iscube(tmpm4xgxmog.java:26)\n\tat Problem.main(tmpm4xgxmog.java:31)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a == 0) {\n            return true;\n        }\n        if (a % 2\
    \ == 0) {\n            return iscube(a / 2);\n        }\n        if (a % 3 ==\
    \ 0) {\n            return iscube(a / 3);\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnh5ho5rt.java:41)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ c;\n        long e = d;\n        long f = e;\n        long g = f;\n        long\
    \ h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n    \
    \    long l = k;\n        long m = l;\n        long n = m;\n        long o = n;\n\
    \        long p = o;\n        long q = p;\n        long r = q;\n        long s\
    \ = r;\n        long t = s;\n        long u = t;\n        long v = u;\n      \
    \  long w = v;\n        long x = w;\n        long y = x;\n        long z = y;\n\
    \        long aa = z;\n        long ab = aa;\n        long ac = ab;\n        long\
    \ ad = ac;\n        long ae = ad;\n        long af = ae;\n        long ag = af;\n\
    \        long ah = ag;\n        long ai = ah;\n        long aj = ai;\n       \
    \ long ak = aj;\n        long al = ak;\n        long am = al;\n        long an\
    \ = am;\n        long ao = an;\n        long ap = ao;\n        long aq = ap;\n\
    \        long ar = aq;\n        long as = ar;\n        long at = as;\n       \
    \ long au = at;\n        long av = au;\n        long aw = av;\n        long ax\
    \ = aw;\n        long ay = ax;\n        long az = ay;\n        long ba = az;\n\
    \        long bb = ba;\n        long bc = bb;\n        long bd = bc;\n       \
    \ long be = bd;\n        long bf = be;\n        long bg = bf;\n        long bh\
    \ = bg;\n        long bi = bf;\n        long bj = bi;\n        long bk = bj;\n\
    \        long bl = bj;\n        long bm = bl;\n        long bn = bm;\n       \
    \ long bo = bn;\n        long bp = bo;\n        long bq = bp;\n        long br\
    \ = bq;\n        long bs = br;\n        long bt = bs;\n        long bu = bt;\n\
    \        long bv = bu;\n        long bw = bv;\n        long bx = bw;\n       \
    \ long by = bx;\n        long bz = by;\n        long ca = bz;\n        long cb\
    \ = ca;\n        long cc = cb;\n        long c\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6l0asp4s.java:106: error: ';' expected\n        long c\n      \
    \        ^\n1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a + a * a * a;\n        return cube\
    \ == Long.MAX_VALUE;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n   \
    \ assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n   \
    \ assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpogfxeu1h.java:30)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1l==0l) && (a%2l==0l) && (a%3l==0l) && (a%4l==0l)\
    \ && (a%5l==0l) && (a%6l==0l) && (a%7l==0l) && (a%8l==0l) && (a%9l==0l) && (a%10l==0l)\
    \ && (a%11l==0l) && (a%12l==0l) && (a%13l==0l) && (a%14l==0l) && (a%15l==0l) &&\
    \ (a%16l==0l) && (a%17l==0l) && (a%18l==0l) && (a%19l==0l) && (a%20l==0l) && (a%21l==0l)\
    \ && (a%22l==0l) && (a%23l==0l) && (a%24l==0l) && (a%25l==0l) && (a%26l==0l) &&\
    \ (a%27l==0l) && (a%28l==0l) && (a%29l==0l) && (a%30l==0l) && (a%31l==0l) && (a%32l==0l)\
    \ && (a%33l==0l) && (a%34l==0l) && (a%35l==0l) && (a%36l==0l) && (a%37l==0l) &&\
    \ (a%38l==0l) && (a%39l==0l) && (a%40l==0l) && (a%41l==0l) && (a%42l==0l) && (a%43l==0l)\
    \ && (a%44l==0l) && (a%45l==0l) && (a%46l==0l) && (a%47l==0l) && (a%48l==0l) &&\
    \ (a%49l==0l) && (a%50l==0l) && (a%51l==0l) && (a%52l==0l) && (a%53l==0l) && (a%54l==0l)\
    \ && (a%55l==0l) && (a%56l==0l) && (a%57l==0l) && (a%58l==0l) && (a%59l==0l) &&\
    \ (a%60l==0l) && (a%61l==0l) && (a%62l==0l) && (a%63l==0l);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3xp5uod1.java:29)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a < 3) {\n            return true;\n        }\n        if (a % 3\
    \ == 0) {\n            return true;\n        }\n        if (a % 3 == 1) {\n  \
    \          return false;\n        }\n        if (a % 3 == 2) {\n            return\
    \ true;\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjihj7z3.java:45)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l) return true;\n        if (a == 2l) return\
    \ true;\n        if (a == 3l) return true;\n        if (a == 4l) return true;\n\
    \        if (a == 5l) return true;\n        if (a == 6l) return true;\n      \
    \  if (a == 7l) return true;\n        if (a == 8l) return true;\n        if (a\
    \ == 9l) return true;\n        if (a == 10l) return true;\n        if (a == 11l)\
    \ return true;\n        if (a == 12l) return true;\n        if (a == 13l) return\
    \ true;\n        if (a == 14l) return true;\n        if (a == 15l) return true;\n\
    \        if (a == 16l) return true;\n        if (a == 17l) return true;\n    \
    \    if (a == 18l) return true;\n        if (a == 19l) return true;\n        if\
    \ (a == 20l) return true;\n        if (a == 21l) return true;\n        if (a ==\
    \ 22l) return true;\n        if (a == 23l) return true;\n        if (a == 24l)\
    \ return true;\n        if (a == 25l) return true;\n        if (a == 26l) return\
    \ true;\n        if (a == 27l) return true;\n        if (a == 28l) return true;\n\
    \        if (a == 29l) return true;\n        if (a == 30l) return true;\n    \
    \    if (a == 31l) return true;\n        if (a == 32l) return true;\n        if\
    \ (a == 33l) return true;\n        if (a == 34l) return true;\n        if (a ==\
    \ 35l) return true;\n        if (a == 36l) return true;\n        if (a == 37l)\
    \ return true;\n        if (a == 38l) return true;\n        if (a == 39l) return\
    \ true;\n        if (a == 40l) return true;\n        if (a == 41l) return true;\n\
    \        if (a == 42l) return true;\n        if (a == 43l) return true;\n    \
    \    if (a == 44l) return true;\n        if (a == 45l) return true;\n        if\
    \ (a == 46l) return true;\n        if (a == 47l) return true;\n        if (a ==\
    \ 48l) return true;\n        if (a == 49l) return true;\n        if (a == 50l)\
    \ return true;\n        if (a == 51l) return true;\n        if (a == 52l) return\
    \ true;\n        if (a == 53l) return true;\n        if (a == 54l) return true;\n\
    \        if (a == 55l) return true;\n        if (a == 56l) return true;\n    \
    \    if (a == 57l) return true;\n        if (a == 58l) return true;\n        if\
    \ (a == 59l) return true;\n        if (a == 60l) return true;\n        if (a ==\
    \ 61l) return true;\n        if (a == 62l) return true;\n        if (a == 63l)\
    \ return true;\n        if (a == 64l) return true;\n        if (a == 65l) return\
    \ true;\n        if (a == 66l) return true;\n        if (a == 67l) return true;\n\
    \        if (a == 68l) return true;\n        if (a == 69l) return true;\n    \
    \    if (a == 70l) return true;\n        if (a == 71l) return true;\n        if\
    \ (a == 72l) return true;\n        if (a == 73l) return true;\n        if (\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2vbkd6na.java:100: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmp2vbkd6na.java:101: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp2vbkd6na.java:101: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp2vbkd6na.java:101: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp2vbkd6na.java:112: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%2l==0l&&a%3l==0l&&a%4l==0l&&a%6l==0l&&a%8l==0l&&a%10l==0l&&a%12l==0l&&a%14l==0l&&a%16l==0l&&a%18l==0l&&a%20l==0l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp34fvjgor.java:29)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n\
    \        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long\
    \ bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n\
    \        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long\
    \ bm = 1;\n        long bn = 1;\n        long bo = 1;\n        long bp = 1;\n\
    \        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long\
    \ bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n        long bt4 = 1;\n\
    \        long bt5 = 1;\n        long bt6 = 1;\n        long bt7 = 1;\n       \
    \ long bt8 = 1;\n        long bt9 = 1;\n        long bt10 = 1;\n        long bt11\
    \ = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n        long bt14 = 1;\n\
    \        long bt15 = 1;\n        long bt16 = 1;\n        long bt17 = 1;\n    \
    \    long bt18 = 1;\n        long bt19 = 1;\n        long bt20 = 1;\n        long\
    \ bt21 = 1;\n        long bt22 = 1;\n        long bt23 = 1;\n        long bt24\
    \ = 1;\n        long bt25 = 1;\n        long bt26 = 1;\n        long \n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa4l44uez.java:122: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpa4l44uez.java:122: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ c;\n        long e = d;\n        long f = e;\n        long g = f;\n        long\
    \ h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n    \
    \    long l = k;\n        long m = l;\n        long n = m;\n        long o = n;\n\
    \        long p = o;\n        long q = p;\n        long r = q;\n        long s\
    \ = r;\n        long t = s;\n        long u = t;\n        long v = u;\n      \
    \  long w = v;\n        long x = w;\n        long y = x;\n        long z = y;\n\
    \        long a = z;\n        long b = a;\n        long c = b;\n        long d\
    \ = c;\n        long e = d;\n        long f = e;\n        long g = f;\n      \
    \  long h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n\
    \        long l = k;\n        long m = l;\n        long n = m;\n        long o\
    \ = n;\n        long p = o;\n        long q = p;\n        long r = q;\n      \
    \  long s = r;\n        long t = s;\n        long u = t;\n        long v = u;\n\
    \        long w = v;\n        long x = w;\n        long y = x;\n        long z\
    \ = y;\n        long a = z;\n        long b = a;\n        long c = b;\n      \
    \  long d = c;\n        long e = d;\n        long f = e;\n        long g = f;\n\
    \        long h = g;\n        long i = h;\n        long j = i;\n        long k\
    \ = j;\n        long l = k;\n        long m = l;\n        long n = m;\n      \
    \  long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long a = z;\n        long b = a;\n        long c = b;\n\
    \        long d = c;\n        long e = d;\n        long f = e;\n        long g\
    \ = f;\n        long h = g;\n        long i = h;\n        long j = i;\n      \
    \  long k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n\
    \        long o = n;\n        long p = o;\n        long q = p;\n        long r\
    \ = q;\n        long s = r;\n        long t = s;\n        long u = t;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpql713ngz.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = z;\n             ^\n/tmp/tmpql713ngz.java:52:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a;\n             ^\n/tmp/tmpql713ngz.java:53: error: variable c is already\
    \ defined in method iscube(long)\n        long c = b;\n             ^\n/tmp/tmpql713ngz.java:54:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = c;\n             ^\n/tmp/tmpql713ngz.java:55: error: variable e is already\
    \ defined in method iscube(long)\n        long e = d;\n             ^\n/tmp/tmpql713ngz.java:56:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = e;\n             ^\n/tmp/tmpql713ngz.java:57: error: variable g is already\
    \ defined in method iscube(long)\n        long g = f;\n             ^\n/tmp/tmpql713ngz.java:58:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = g;\n             ^\n/tmp/tmpql713ngz.java:59: error: variable i is already\
    \ defined in method iscube(long)\n        long i = h;\n             ^\n/tmp/tmpql713ngz.java:60:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = i;\n             ^\n/tmp/tmpql713ngz.java:61: error: variable k is already\
    \ defined in method iscube(long)\n        long k = j;\n             ^\n/tmp/tmpql713ngz.java:62:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = k;\n             ^\n/tmp/tmpql713ngz.java:63: error: variable m is already\
    \ defined in method iscube(long)\n        long m = l;\n             ^\n/tmp/tmpql713ngz.java:64:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = m;\n             ^\n/tmp/tmpql713ngz.java:65: error: variable o is already\
    \ defined in method iscube(long)\n        long o = n;\n             ^\n/tmp/tmpql713ngz.java:66:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = o;\n             ^\n/tmp/tmpql713ngz.java:67: error: variable q is already\
    \ defined in method iscube(long)\n        long q = p;\n      "
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%5==0&&a%6==0&&a%7==0&&a%8==0&&a%9==0&&a%10==0&&a%11==0&&a%12==0&&a%13==0&&a%14==0&&a%15==0&&a%16==0&&a%17==0&&a%18==0&&a%19==0&&a%20==0&&a%21==0&&a%22==0&&a%23==0&&a%24==0&&a%25==0&&a%26==0&&a%27==0&&a%28==0&&a%29==0&&a%30==0&&a%31==0&&a%32==0&&a%33==0&&a%34==0&&a%35==0&&a%36==0&&a%37==0&&a%38==0&&a%39==0&&a%40==0&&a%41==0&&a%42==0&&a%43==0&&a%44==0&&a%45==0&&a%46==0&&a%47==0&&a%48==0&&a%49==0&&a%50==0&&a%51==0&&a%52==0&&a%53==0&&a%54==0&&a%55==0&&a%56==0&&a%57==0&&a%58==0&&a%59==0&&a%60==0&&a%61==0&&a%62==0&&a%63==0&&a%64==0&&a%65==0&&a%66==0&&a%67==0&&a%68==0&&a%69==0&&a%70==0&&a%71==0&&a%72==0&&a%73==0&&a%74==0&&a%75==0&&a%76==0&&a%77==0&&a%78==0&&a%79==0&&a%80==0&&a%81==0&&a%82==0&&a%83==0&&a%84==0&&a%85==0&&a%86==\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3rq89rot.java:27: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmp3rq89rot.java:28: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp3rq89rot.java:28: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp3rq89rot.java:28:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp3rq89rot.java:28: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmp3rq89rot.java:28:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp3rq89rot.java:39: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i*i*i == a).count();\n        return cube == 3;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj5a6b3pe.java:30)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long cube = LongStream.rangeClosed(0l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 3;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794725
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long d = 1;\n        while (n\
    \ != 0) {\n            d *= n;\n            n /= 3;\n        }\n        return\
    \ d == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5lkfz3du.java:36)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a >= 0l && a%1l == 0l && a%2l == 0l && a%3l\
    \ == 0l && a%4l == 0l && a%5l == 0l && a%6l == 0l && a%7l == 0l && a%8l == 0l\
    \ && a%9l == 0l && a%10l == 0l && a%11l == 0l && a%12l == 0l && a%13l == 0l &&\
    \ a%14l == 0l && a%15l == 0l && a%16l == 0l && a%17l == 0l && a%18l == 0l && a%19l\
    \ == 0l && a%20l == 0l && a%21l == 0l && a%22l == 0l && a%23l == 0l && a%24l ==\
    \ 0l && a%25l == 0l && a%26l == 0l && a%27l == 0l && a%28l == 0l && a%29l == 0l\
    \ && a%30l == 0l && a%31l == 0l && a%32l == 0l && a%33l == 0l && a%34l == 0l &&\
    \ a%35l == 0l && a%36l == 0l && a%37l == 0l && a%38l == 0l && a%39l == 0l && a%40l\
    \ == 0l && a%41l == 0l && a%42l == 0l && a%43l == 0l && a%44l == 0l && a%45l ==\
    \ 0l && a%46l == 0l && a%47l == 0l && a%48l == 0l && a%49l == 0l && a%50l == 0l\
    \ && a%51l == 0l && a%52l == 0l && a%53l == 0l && a%54l == 0l && a%55l == 0l &&\
    \ a%56l == 0l && a%57l == 0l && a%58l == 0l && a%59l == 0l && a%60l == 0l && a%61l\
    \ == 0l && a%62l == 0l && a%63l == 0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwktanrq9.java:29)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a == 1l) {\n            return true;\n        }\n        if (a ==\
    \ 2l) {\n            return true;\n        }\n        if (a == 3l) {\n       \
    \     return true;\n        }\n        if (a == 4l) {\n            return true;\n\
    \        }\n        if (a == 5l) {\n            return true;\n        }\n    \
    \    if (a == 6l) {\n            return true;\n        }\n        if (a == 7l)\
    \ {\n            return true;\n        }\n        if (a == 8l) {\n           \
    \ return true;\n        }\n        if (a == 9l) {\n            return true;\n\
    \        }\n        if (a == 10l) {\n            return true;\n        }\n   \
    \     if (a == 11l) {\n            return true;\n        }\n        if (a == 12l)\
    \ {\n            return true;\n        }\n        if (a == 13l) {\n          \
    \  return true;\n        }\n        if (a == 14l) {\n            return true;\n\
    \        }\n        if (a == 15l) {\n            return true;\n        }\n   \
    \     if (a == 16l) {\n            return true;\n        }\n        if (a == 17l)\
    \ {\n            return true;\n        }\n        if (a == 18l) {\n          \
    \  return true;\n        }\n        if (a == 19l) {\n            return true;\n\
    \        }\n        if (a == 20l) {\n            return true;\n        }\n   \
    \     if (a == 21l) {\n            return true;\n        }\n        if (a == 22l)\
    \ {\n            return true;\n        }\n        if (a == 23l) {\n          \
    \  return true;\n        }\n        if (a == 24l) {\n            return true;\n\
    \        }\n        if (a == 25l) {\n            return true;\n        }\n   \
    \     if (a == 26l) {\n            return true;\n        }\n        if (a == 27l)\
    \ {\n            return true;\n        }\n        if (a == 28l) {\n          \
    \  return true;\n        }\n        if (a == 29l) {\n            return true;\n\
    \        }\n        if (a == 30l) {\n            return true;\n        }\n   \
    \     if (a == 31l) {\n            return true;\n        }\n        if (a == 32l)\
    \ {\n            return true;\n        }\n        if (a == 33l) {\n          \
    \  return true;\n        }\n        if (a == 34l) {\n            return true;\n\
    \        }\n        if (a == 35l) {\n            return true;\n        }\n   \
    \     if (a == 36l) {\n            return true;\n        }\n        if (a == 37l)\
    \ {\n            return true;\n        }\n        if (a == 38l) {\n          \
    \  return true;\n        }\n        if (a == 39l) {\n            return true;\n\
    \        }\n        if (a == 40l) {\n            return true;\n        }\n   \
    \     if (a == 41l) {\n            return true;\n        }\n        if (a == 42l)\
    \ {\n            return true;\n        }\n        if (a == 43l) {\n          \
    \  return true;\n        }\n        if (a == 44l) {\n            return true;\n\
    \        }\n        if (a == 45l) {\n            return true;\n        }\n   \
    \     if (a == 46l) {\n            return true;\n        }\n        if (a == 47l)\
    \ {\n            return true;\n        }\n        if (a == 48l) {\n          \
    \  return true;\n        }\n        if (a == 49l) {\n            return true;\n\
    \        }\n        if (a == 50l) {\n            return true;\n        }\n   \
    \     if (a == 51\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpryeotcxj.java:179: error: ')' expected\n        if (a == 51\n \
    \                  ^\n/tmp/tmpryeotcxj.java:180: error: illegal start of statement\n\
    \    }\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8p5k76rq.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a) == (long)Math.pow(a,3);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u_53_qt.java:30)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr1mo0_31.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a >= 0l && a <= 180l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprifr3cle.java:30)\n"
  stdout: ''
  timestamp: 1659794721
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().getAsLong();\n        return cube == a;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794724
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a % l == 0) {\n            return true;\n    \
    \    }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpanz276u3.java:26: error: cannot find symbol\n        if (a % l\
    \ == 0) {\n                ^\n  symbol:   variable l\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a%1l;\n        long c = a%1l;\n        long\
    \ d = a%1l;\n        long e = a%1l;\n        long f = a%1l;\n        long g =\
    \ a%1l;\n        long h = a%1l;\n        long i = a%1l;\n        long j = a%1l;\n\
    \        long k = a%1l;\n        long l = a%1l;\n        long m = a%1l;\n    \
    \    long n = a%1l;\n        long o = a%1l;\n        long p = a%1l;\n        long\
    \ q = a%1l;\n        long r = a%1l;\n        long s = a%1l;\n        long t =\
    \ a%1l;\n        long u = a%1l;\n        long v = a%1l;\n        long w = a%1l;\n\
    \        long x = a%1l;\n        long y = a%1l;\n        long z = a%1l;\n    \
    \    long a = a%1l;\n        long b = a%1l;\n        long c = a%1l;\n        long\
    \ d = a%1l;\n        long e = a%1l;\n        long f = a%1l;\n        long g =\
    \ a%1l;\n        long h = a%1l;\n        long i = a%1l;\n        long j = a%1l;\n\
    \        long k = a%1l;\n        long l = a%1l;\n        long m = a%1l;\n    \
    \    long n = a%1l;\n        long o = a%1l;\n        long p = a%1l;\n        long\
    \ q = a%1l;\n        long r = a%1l;\n        long s = a%1l;\n        long t =\
    \ a%1l;\n        long u = a%1l;\n        long v = a%1l;\n        long w = a%1l;\n\
    \        long x = a%1l;\n        long y = a%1l;\n        long z = a%1l;\n    \
    \    long a = a%1l;\n        long b = a%1l;\n        long c = a%1l;\n        long\
    \ d = a%1l;\n        long e = a%1l;\n        long f = a%1l;\n        long g =\
    \ a%1l;\n        long h = a%1l;\n        long i = a%1l;\n        long j = a%1l;\n\
    \        long k = a%1l;\n        long l = a%1l;\n        long m = a%1l;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr4esabd1.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:52:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:53: error: variable c is already\
    \ defined in method iscube(long)\n        long c = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:54:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:55: error: variable e is already\
    \ defined in method iscube(long)\n        long e = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:56:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:57: error: variable g is already\
    \ defined in method iscube(long)\n        long g = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:58:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:59: error: variable i is already\
    \ defined in method iscube(long)\n        long i = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:60:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:61: error: variable k is already\
    \ defined in method iscube(long)\n        long k = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:62:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:63: error: variable m is already\
    \ defined in method iscube(long)\n        long m = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:64:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:65: error: variable o is already\
    \ defined in method iscube(long)\n        long o = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:66:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:67: error: variable q is already\
    \ defined i"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long d = 1;\n        while (n\
    \ != 0) {\n            d *= n;\n            n /= 3;\n        }\n        return\
    \ d == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5lkfz3du.java:36)\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return iscube(a);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.java:26)\n\tat Problem.iscube(tmps02l7392.java:26)\n\
    \tat Problem.iscube(tmps02l7392.j"
  stdout: ''
  timestamp: 1659794721
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().orElse(-1l);\n        return cube != -1l;\n \
    \   }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ c;\n        long e = d;\n        long f = e;\n        long g = f;\n        long\
    \ h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n    \
    \    long l = k;\n        long m = l;\n        long n = m;\n        long o = n;\n\
    \        long p = o;\n        long q = p;\n        long r = q;\n        long s\
    \ = r;\n        long t = s;\n        long u = t;\n        long v = u;\n      \
    \  long w = v;\n        long x = w;\n        long y = x;\n        long z = y;\n\
    \        long a = z;\n        long b = a;\n        long c = b;\n        long d\
    \ = c;\n        long e = d;\n        long f = e;\n        long g = f;\n      \
    \  long h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n\
    \        long l = k;\n        long m = l;\n        long n = m;\n        long o\
    \ = n;\n        long p = o;\n        long q = p;\n        long r = q;\n      \
    \  long s = r;\n        long t = s;\n        long u = t;\n        long v = u;\n\
    \        long w = v;\n        long x = w;\n        long y = x;\n        long z\
    \ = y;\n        long a = z;\n        long b = a;\n        long c = b;\n      \
    \  long d = c;\n        long e = d;\n        long f = e;\n        long g = f;\n\
    \        long h = g;\n        long i = h;\n        long j = i;\n        long k\
    \ = j;\n        long l = k;\n        long m = l;\n        long n = m;\n      \
    \  long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long a = z;\n        long b = a;\n        long c = b;\n\
    \        long d = c;\n        long e = d;\n        long f = e;\n        long g\
    \ = f;\n        long h = g;\n        long i = h;\n        long j = i;\n      \
    \  long k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n\
    \        long o = n;\n        long p = o;\n        long q = p;\n        long r\
    \ = q;\n        long s = r;\n        long t = s;\n        long u = t;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpql713ngz.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = z;\n             ^\n/tmp/tmpql713ngz.java:52:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a;\n             ^\n/tmp/tmpql713ngz.java:53: error: variable c is already\
    \ defined in method iscube(long)\n        long c = b;\n             ^\n/tmp/tmpql713ngz.java:54:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = c;\n             ^\n/tmp/tmpql713ngz.java:55: error: variable e is already\
    \ defined in method iscube(long)\n        long e = d;\n             ^\n/tmp/tmpql713ngz.java:56:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = e;\n             ^\n/tmp/tmpql713ngz.java:57: error: variable g is already\
    \ defined in method iscube(long)\n        long g = f;\n             ^\n/tmp/tmpql713ngz.java:58:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = g;\n             ^\n/tmp/tmpql713ngz.java:59: error: variable i is already\
    \ defined in method iscube(long)\n        long i = h;\n             ^\n/tmp/tmpql713ngz.java:60:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = i;\n             ^\n/tmp/tmpql713ngz.java:61: error: variable k is already\
    \ defined in method iscube(long)\n        long k = j;\n             ^\n/tmp/tmpql713ngz.java:62:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = k;\n             ^\n/tmp/tmpql713ngz.java:63: error: variable m is already\
    \ defined in method iscube(long)\n        long m = l;\n             ^\n/tmp/tmpql713ngz.java:64:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = m;\n             ^\n/tmp/tmpql713ngz.java:65: error: variable o is already\
    \ defined in method iscube(long)\n        long o = n;\n             ^\n/tmp/tmpql713ngz.java:66:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = o;\n             ^\n/tmp/tmpql713ngz.java:67: error: variable q is already\
    \ defined in method iscube(long)\n        long q = p;\n      "
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a*a*a;\n        if (cube == (long) Math.pow(a,3))\n\
    \            return true;\n        else\n            return false;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkxaasrl7.java:34)\n"
  stdout: ''
  timestamp: 1659794721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return iscube(a, 0);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8qzovjvm.java:26: error: method iscube in class Problem cannot\
    \ be applied to given types;\n        return iscube(a, 0);\n               ^\n\
    \  required: long\n  found:    long,int\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1659794721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = b;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo2u1bx4m.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpo2u1bx4m.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long aa = c;\n        long ab = d;\n        long ac = e;\n        long\
    \ ad = f;\n        long ae = g;\n        long af = h;\n        long ag = i;\n\
    \        long ah = j;\n        long ai = k;\n        long aj = l;\n        long\
    \ ak = m;\n        long al = n;\n        long am = o;\n        long an = p;\n\
    \        long ao = q;\n        long ap = r;\n        long aq = s;\n        long\
    \ ar = t;\n        long as = u;\n        long at = v;\n        long au = w;\n\
    \        long av = x;\n        long aw = y;\n        long ax = z;\n        long\
    \ ay = aa;\n        long az = ab;\n        long ba = ac;\n        long bb = ad;\n\
    \        long bc = ae;\n        long bd = af;\n        long be = ag;\n       \
    \ long bf = ah;\n        long bg = ai;\n        long bh = aj;\n        long bi\
    \ = ak;\n        long bj = al;\n        long bl = am;\n        long bm = an;\n\
    \        long bn = ao;\n        long bo = aq;\n        long bp = ap;\n       \
    \ long bq = ar;\n        long br = as;\n        long bs = at;\n        long bt\
    \ = au;\n        long bu = av;\n        long bv = aw;\n        long bw = ax;\n\
    \        long bx = ay;\n        long by = az;\n        long ca = ba;\n       \
    \ long cb = bb;\n        long cc = bc;\n        long cd = bd;\n        long ce\
    \ = be;\n        long cf = bf;\n        long cg = bg;\n        long ch = bh;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyjjwcbo9.java:109: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpyjjwcbo9.java:109: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794720
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().orElse(-1l);\n        return cube == a;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        long cube = LongStream.rangeClosed(1, a).filter(i -> i * i * i == a).count();\n\
    \        return cube == 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoyhm195x.java:35)\n"
  stdout: ''
  timestamp: 1659794721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long d = 1;\n        long r =\
    \ 1;\n        long q = 1;\n        long p = 1;\n        long qr = 1;\n       \
    \ long pr = 1;\n        long pq = r;\n        long ppr = q;\n        long pqr\
    \ = p;\n        long pprq = r;\n        long pqrpr = q;\n        long pqrprq =\
    \ p;\n        long pqrprqr = r;\n        long pqrprqrq = q;\n        long pqrprqrqr\
    \ = p;\n        long pqrprqrqrp = r;\n        long pqrprqrqrpq = q;\n        long\
    \ pqrprqrqrpqr = p;\n        long pqrprqrqrpqrp = r;\n        long pqrprqrqrpqrpq\
    \ = q;\n        long pqrprqrqrpqrpqr = p;\n        long pqrprqrqrpqrpqrp = r;\n\
    \        long pqrprqrqrpqrpqrpq = q;\n        long pqrprqrqrpqrpqrpqr = p;\n \
    \       long pqrprqrqrpqrpqrpqrp = r;\n        long pqrprqrqrpqrpqrpqrpq = q;\n\
    \        long pqrprqrqrpqrpqrpqrpqr = p;\n        long pqrprqrqrpqrpqrpqrpqrp\
    \ = r;\n        long pqrprqrqrpqrpqrpqrpqrpq = q;\n        long pqrprqrqrpqrpqrpqrpqrpqr\
    \ = p;\n        long pqrprqrqrpqrpqrpqrpqrpqrp = r;\n        long pqrprqrqrpqrpqrpqrpqrpqrpq\
    \ = q;\n        long pqrprqrqrpqrpqrpqrpqrpqrpqr = p;\n        long pqrprqrqrpqrpqrpqrpqrpqrpqrp\
    \ = r;\n        long pqrprqrqrpqrpqrpqrpqrpqrpqrpq = q;\n        long pqrprqrqrpqrpqrpqrpqrpqrpqrpqr\
    \ = p;\n        long pqrprqrqrpqrpqrpqrpqrpqrpqrpqrp = r;\n        long pqrprqrq\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1sbepcbm.java:64: error: ';' expected\n        long pqrprqrq\n\
    \                     ^\n1 error\n"
  stdout: ''
  timestamp: 1659794721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8p5k76rq.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0l) return true;\n        if (a == 1l) return\
    \ true;\n        if (a == 2l) return true;\n        if (a == 3l) return true;\n\
    \        if (a == 4l) return true;\n        if (a == 5l) return true;\n      \
    \  if (a == 6l) return true;\n        if (a == 7l) return true;\n        if (a\
    \ == 8l) return true;\n        if (a == 9l) return true;\n        if (a == 10l)\
    \ return true;\n        if (a == 11l) return true;\n        if (a == 12l) return\
    \ true;\n        if (a == 13l) return true;\n        if (a == 14l) return true;\n\
    \        if (a == 15l) return true;\n        if (a == 16l) return true;\n    \
    \    if (a == 17l) return true;\n        if (a == 18l) return true;\n        if\
    \ (a == 19l) return true;\n        if (a == 20l) return true;\n        if (a ==\
    \ 21l) return true;\n        if (a == 22l) return true;\n        if (a == 23l)\
    \ return true;\n        if (a == 24l) return true;\n        if (a == 25l) return\
    \ true;\n        if (a == 26l) return true;\n        if (a == 27l) return true;\n\
    \        if (a == 28l) return true;\n        if (a == 29l) return true;\n    \
    \    if (a == 30l) return true;\n        if (a == 31l) return true;\n        if\
    \ (a == 32l) return true;\n        if (a == 33l) return true;\n        if (a ==\
    \ 34l) return true;\n        if (a == 35l) return true;\n        if (a == 36l)\
    \ return true;\n        if (a == 37l) return true;\n        if (a == 38l) return\
    \ true;\n        if (a == 39l) return true;\n        if (a == 40l) return true;\n\
    \        if (a == 41l) return true;\n        if (a == 42l) return true;\n    \
    \    if (a == 43l) return true;\n        if (a == 44l) return true;\n        if\
    \ (a == 45l) return true;\n        if (a == 46l) return true;\n        if (a ==\
    \ 47l) return true;\n        if (a == 48l) return true;\n        if (a == 49l)\
    \ return true;\n        if (a == 50l) return true;\n        if (a == 51l) return\
    \ true;\n        if (a == 52l) return true;\n        if (a == 53l) return true;\n\
    \        if (a == 54l) return true;\n        if (a == 55l) return true;\n    \
    \    if (a == 56l) return true;\n        if (a == 57l) return true;\n        if\
    \ (a == 58l) return true;\n        if (a == 59l) return true;\n        if (a ==\
    \ 60l) return true;\n        if (a == 61l) return true;\n        if (a == 62l)\
    \ return true;\n        if (a == 63l) return true;\n        if (a == 64l) return\
    \ true;\n        if (a == 65l) return true;\n        if (a == 66l) return true;\n\
    \        if (a == 67l) return true;\n        if (a == 68l) return true;\n    \
    \    if (a == 69l) return true;\n        if (a == 70l) return true;\n        if\
    \ (a == 71l) return true;\n        if (a == 72l) return true;\n        if (\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2_ftxs4o.java:100: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long cube = 1;\n        while\
    \ (n > 1) {\n            n = n / 3;\n            cube = cube * n;\n        }\n\
    \        if (cube == a) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimwwocs6.java:40)\n"
  stdout: ''
  timestamp: 1659794721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(x\
    \ -> x * x * x == a).count();\n        return cube == 3;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp81sczu_4.java:30)\n"
  stdout: ''
  timestamp: 1659794721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk9q2necs.java:128: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpk9q2necs.java:129: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpk9q2necs.java:129: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpk9q2necs.java:129: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpk9q2necs.java:140: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a < 0l) return\
    \ false;\n        if (a > 180l) return false;\n        if (a % 90 == 0) return\
    \ false;\n        if (a % 180 == 0) return true;\n        if (a % 90 == 180) return\
    \ true;\n        if (a % 180 == 90) return true;\n        if (a % 90 == 270) return\
    \ true;\n        if (a % 180 == 180) return true;\n        if (a % 90 == 90) return\
    \ true;\n        if (a % 180 == 270) return true;\n        return false;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2scm09zv.java:40)\n"
  stdout: ''
  timestamp: 1659794721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnruln_1.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgnruln_1.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long a1 = 1;\n        long a2 = 1;\n        long a3 = 1;\n   \
    \     long a4 = 1;\n        long a5 = 1;\n        long a6 = 1;\n        long a7\
    \ = 1;\n        long a8 = 1;\n        long a9 = 1;\n        long a10 = 1;\n  \
    \      long a11 = 1;\n        long a12 = 1;\n        long a13 = 1;\n        long\
    \ a14 = 1;\n        long a15 = 1;\n        long a16 = 1;\n        long a17 = 1;\n\
    \        long a18 = 1;\n        long a19 = 1;\n        long a20 = 1;\n       \
    \ long a21 = 1;\n        long a22 = 1;\n        long a23 = 1;\n        long a24\
    \ = 1;\n        long a25 = 1;\n        long a26 = 1;\n        long a27 = 1;\n\
    \        long a28 = 1;\n        long a29 = 1;\n        long a30 = 1;\n       \
    \ long a31 = 1;\n        long a32 = 1;\n        long a33 = 1;\n        long a34\
    \ = 1;\n        long a35 = 1;\n        long a36 = 1;\n        long a37 = 1;\n\
    \        long a38 = 1;\n        long a39 = 1;\n        long a40 = 1;\n       \
    \ long a41 = 1;\n        long a42 = 1;\n        long a43 = 1;\n        long a44\
    \ = 1;\n        long a45\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps2tymke0.java:121: error: ';' expected\n        long a45\n    \
    \            ^\n1 error\n"
  stdout: ''
  timestamp: 1659794721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl5xpge5x.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = Long.parseLong(String.valueOf(a));\n \
    \       if (cube == (long)(Math.pow(cube, 3))) {\n            return true;\n \
    \       }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplzhc652z.java:36)\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk9q2necs.java:128: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpk9q2necs.java:129: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpk9q2necs.java:129: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpk9q2necs.java:129: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpk9q2necs.java:140: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        if (a % 2 == 0) {\n            return true;\n        }\n        if (a\
    \ % 3 == 0) {\n            return true;\n        }\n        if (a % 4 == 0) {\n\
    \            return true;\n        }\n        if (a % 5 == 0) {\n            return\
    \ true;\n        }\n        if (a % 6 == 0) {\n            return true;\n    \
    \    }\n        if (a % 7 == 0) {\n            return true;\n        }\n     \
    \   if (a % 8 == 0) {\n            return true;\n        }\n        if (a % 9\
    \ == 0) {\n            return true;\n        }\n        if (a % 10 == 0) {\n \
    \           return true;\n        }\n        if (a % 11 == 0) {\n            return\
    \ true;\n        }\n        if (a % 12 == 0) {\n            return true;\n   \
    \     }\n        if (a % 13 == 0) {\n            return true;\n        }\n   \
    \     if (a % 14 == 0) {\n            return true;\n        }\n        if (a %\
    \ 15 == 0) {\n            return true;\n        }\n        if (a % 16 == 0) {\n\
    \            return true;\n        }\n        if (a % 17 == 0) {\n           \
    \ return true;\n        }\n        if (a % 18 == 0) {\n            return true;\n\
    \        }\n        if (a % 19 == 0) {\n            return true;\n        }\n\
    \        if (a % 20 == 0) {\n            return true;\n        }\n        if (a\
    \ % 21 == 0) {\n            return true;\n        }\n        if (a % 22 == 0)\
    \ {\n            return true;\n        }\n        if (a % 23 == 0) {\n       \
    \     return true;\n        }\n        if (a % 24 == 0) {\n            return\
    \ true;\n        }\n        if (a % 25 == 0) {\n            return true;\n   \
    \     }\n        if (a % 26 == 0) {\n            return true;\n        }\n   \
    \     if (a % 27 == 0) {\n            return true;\n        }\n        if (a %\
    \ 28 == 0) {\n            return true;\n        }\n        if (a % 29 == 0) {\n\
    \            return true;\n        }\n        if (a % 30 == 0) {\n           \
    \ return true;\n        }\n        if (a % 31 == 0) {\n            return true;\n\
    \        }\n        if (a % 32 == 0) {\n            return true;\n        }\n\
    \        if (a % 33 == 0) {\n            return true;\n        }\n        if (a\
    \ % 34 == 0) {\n            return true;\n        }\n        if (a % 35 == 0)\
    \ {\n            return true;\n        }\n        if (a % 36 == 0) {\n       \
    \     return true;\n        }\n        if (a % 37 == 0) {\n            return\
    \ true;\n        }\n        if (a % 38 == 0) {\n            return true;\n   \
    \     }\n        if (a % 39 == 0) {\n            return true;\n        }\n   \
    \     if (a % 40 == 0) {\n            return true;\n        }\n        if (a %\
    \ 41 == 0) {\n            return true;\n        }\n        if (a % 42 == 0) {\n\
    \            return true;\n        }\n        if (a % 43 == 0) {\n           \
    \ return true;\n        }\n        if (a % 44 == 0) {\n            return true;\n\
    \        }\n        if (a % 45 == 0) {\n            return true;\n        }\n\
    \        if (a % 46 == 0) {\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0q7brpsv.java:166: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().getAsLong();\n        return cube == a;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794724
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1l==0l&&a%2l==0l&&a%3l==0l&&a%4l==0l&&a%5l==0l&&a%6l==0l&&a%7l==0l&&a%8l==0l&&a%9l==0l&&a%10l==0l&&a%11l==0l&&a%12l==0l&&a%13l==0l&&a%14l==0l&&a%15l==0l&&a%16l==0l&&a%17l==0l&&a%18l==0l&&a%19l==0l&&a%20l==0l&&a%21l==0l&&a%22l==0l&&a%23l==0l&&a%24l==0l&&a%25l==0l&&a%26l==0l&&a%27l==0l&&a%28l==0l&&a%29l==0l&&a%30l==0l&&a%31l==0l&&a%32l==0l&&a%33l==0l&&a%34l==0l&&a%35l==0l&&a%36l==0l&&a%37l==0l&&a%38l==0l&&a%39l==0l&&a%40l==0l&&a%41l==0l&&a%42l==0l&&a%43l==0l&&a%44l==0l&&a%45l==0l&&a%46l==0l&&a%47l==0l&&a%48l==0l&&a%49l==0l&&a%50l==0l&&a%51l==0l&&a%52l==0l&&a%53l==0l&&a%54l==0l&&a%55l==0l&&a%56l==0l&&a%57l==0l&&a%58l==0l&&a%59l==0l&&a%60l==0l&&a%61l==0l&&a%62l==0l&&a%63l==0l&&a%64l==0l&&\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvnjh4a06.java:27: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l) return true;\n        if (a == 2l) return\
    \ true;\n        if (a == 3l) return true;\n        if (a == 4l) return true;\n\
    \        if (a == 5l) return true;\n        if (a == 6l) return true;\n      \
    \  if (a == 7l) return true;\n        if (a == 8l) return true;\n        if (a\
    \ == 9l) return true;\n        if (a == 10l) return true;\n        if (a == 11l)\
    \ return true;\n        if (a == 12l) return true;\n        if (a == 13l) return\
    \ true;\n        if (a == 14l) return true;\n        if (a == 15l) return true;\n\
    \        if (a == 16l) return true;\n        if (a == 17l) return true;\n    \
    \    if (a == 18l) return true;\n        if (a == 19l) return true;\n        if\
    \ (a == 20l) return true;\n        if (a == 21l) return true;\n        if (a ==\
    \ 22l) return true;\n        if (a == 23l) return true;\n        if (a == 24l)\
    \ return true;\n        if (a == 25l) return true;\n        if (a == 26l) return\
    \ true;\n        if (a == 27l) return true;\n        if (a == 28l) return true;\n\
    \        if (a == 29l) return true;\n        if (a == 30l) return true;\n    \
    \    if (a == 31l) return true;\n        if (a == 32l) return true;\n        if\
    \ (a == 33l) return true;\n        if (a == 34l) return true;\n        if (a ==\
    \ 35l) return true;\n        if (a == 36l) return true;\n        if (a == 37l)\
    \ return true;\n        if (a == 38l) return true;\n        if (a == 39l) return\
    \ true;\n        if (a == 40l) return true;\n        if (a == 41l) return true;\n\
    \        if (a == 42l) return true;\n        if (a == 43l) return true;\n    \
    \    if (a == 44l) return true;\n        if (a == 45l) return true;\n        if\
    \ (a == 46l) return true;\n        if (a == 47l) return true;\n        if (a ==\
    \ 48l) return true;\n        if (a == 49l) return true;\n        if (a == 50l)\
    \ return true;\n        if (a == 51l) return true;\n        if (a == 52l) return\
    \ true;\n        if (a == 53l) return true;\n        if (a == 54l) return true;\n\
    \        if (a == 55l) return true;\n        if (a == 56l) return true;\n    \
    \    if (a == 57l) return true;\n        if (a == 58l) return true;\n        if\
    \ (a == 59l) return true;\n        if (a == 60l) return true;\n        if (a ==\
    \ 61l) return true;\n        if (a == 62l) return true;\n        if (a == 63l)\
    \ return true;\n        if (a == 64l) return true;\n        if (a == 65l) return\
    \ true;\n        if (a == 66l) return true;\n        if (a == 67l) return true;\n\
    \        if (a == 68l) return true;\n        if (a == 69l) return true;\n    \
    \    if (a == 70l) return true;\n        if (a == 71l) return true;\n        if\
    \ (a == 72l) return true;\n        if (a == 73l) return true;\n        if (\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2vbkd6na.java:100: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmp2vbkd6na.java:101: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp2vbkd6na.java:101: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp2vbkd6na.java:101: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp2vbkd6na.java:112: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8p5k76rq.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l) return true;\n        if (a == 2l) return\
    \ true;\n        if (a == -1l) return true;\n        if (a == 64l) return true;\n\
    \        if (a == 0l) return true;\n        if (a == 180l) return true;\n    \
    \    return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgitpj4ye.java:36)\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk9q2necs.java:128: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpk9q2necs.java:129: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpk9q2necs.java:129: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpk9q2necs.java:129: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpk9q2necs.java:140: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a * a;\n        long c = b * b - 4 * a *\
    \ a + 1;\n        return c < 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nyp8kh3.java:34)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) return false;\n        if\
    \ (a % 90l == 0l) return true;\n        if (a % 90l == 90l) return true;\n   \
    \     if (a % 90l == 180l) return true;\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_bqke5t0.java:33)\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a == 1l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpketl6hia.java:32)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l) return true;\n        if (a == 2l) return\
    \ true;\n        if (a == 3l) return true;\n        if (a == 4l) return true;\n\
    \        if (a == 5l) return true;\n        if (a == 6l) return true;\n      \
    \  if (a == 7l) return true;\n        if (a == 8l) return true;\n        if (a\
    \ == 9l) return true;\n        if (a == 10l) return true;\n        if (a == 11l)\
    \ return true;\n        if (a == 12l) return true;\n        if (a == 13l) return\
    \ true;\n        if (a == 14l) return true;\n        if (a == 15l) return true;\n\
    \        if (a == 16l) return true;\n        if (a == 17l) return true;\n    \
    \    if (a == 18l) return true;\n        if (a == 19l) return true;\n        if\
    \ (a == 20l) return true;\n        if (a == 21l) return true;\n        if (a ==\
    \ 22l) return true;\n        if (a == 23l) return true;\n        if (a == 24l)\
    \ return true;\n        if (a == 25l) return true;\n        if (a == 26l) return\
    \ true;\n        if (a == 27l) return true;\n        if (a == 28l) return true;\n\
    \        if (a == 29l) return true;\n        if (a == 30l) return true;\n    \
    \    if (a == 31l) return true;\n        if (a == 32l) return true;\n        if\
    \ (a == 33l) return true;\n        if (a == 34l) return true;\n        if (a ==\
    \ 35l) return true;\n        if (a == 36l) return true;\n        if (a == 37l)\
    \ return true;\n        if (a == 38l) return true;\n        if (a == 39l) return\
    \ true;\n        if (a == 40l) return true;\n        if (a == 41l) return true;\n\
    \        if (a == 42l) return true;\n        if (a == 43l) return true;\n    \
    \    if (a == 44l) return true;\n        if (a == 45l) return true;\n        if\
    \ (a == 46l) return true;\n        if (a == 47l) return true;\n        if (a ==\
    \ 48l) return true;\n        if (a == 49l) return true;\n        if (a == 50l)\
    \ return true;\n        if (a == 51l) return true;\n        if (a == 52l) return\
    \ true;\n        if (a == 53l) return true;\n        if (a == 54l) return true;\n\
    \        if (a == 55l) return true;\n        if (a == 56l) return true;\n    \
    \    if (a == 57l) return true;\n        if (a == 58l) return true;\n        if\
    \ (a == 59l) return true;\n        if (a == 60l) return true;\n        if (a ==\
    \ 61l) return true;\n        if (a == 62l) return true;\n        if (a == 63l)\
    \ return true;\n        if (a == 64l) return true;\n        if (a == 65l) return\
    \ true;\n        if (a == 66l) return true;\n        if (a == 67l) return true;\n\
    \        if (a == 68l) return true;\n        if (a == 69l) return true;\n    \
    \    if (a == 70l) return true;\n        if (a == 71l) return true;\n        if\
    \ (a == 72l) return true;\n        if (a == 73l) return true;\n        if (\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2vbkd6na.java:100: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmp2vbkd6na.java:101: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp2vbkd6na.java:101: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp2vbkd6na.java:101: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp2vbkd6na.java:112: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%5==0&&a%6==0&&a%7==0&&a%8==0&&a%9==0&&a%10==0&&a%11==0&&a%12==0&&a%13==0&&a%14==0&&a%15==0&&a%16==0&&a%17==0&&a%18==0&&a%19==0&&a%20==0&&a%21==0&&a%22==0&&a%23==0&&a%24==0&&a%25==0&&a%26==0&&a%27==0&&a%28==0&&a%29==0&&a%30==0&&a%31==0&&a%32==0&&a%33==0&&a%34==0&&a%35==0&&a%36==0&&a%37==0&&a%38==0&&a%39==0&&a%40==0&&a%41==0&&a%42==0&&a%43==0&&a%44==0&&a%45==0&&a%46==0&&a%47==0&&a%48==0&&a%49==0&&a%50==0&&a%51==0&&a%52==0&&a%53==0&&a%54==0&&a%55==0&&a%56==0&&a%57==0&&a%58==0&&a%59==0&&a%60==0&&a%61==0&&a%62==0&&a%63==0&&a%64==0&&a%65==0&&a%66==0&&a%67==0&&a%68==0&&a%69==0&&a%70==0&&a%71==0&&a%72==0&&a%73==0&&a%74==0&&a%75==0&&a%76==0&&a%77==0&&a%78==0&&a%79==0&&a%80==0&&a%81==0&&a%82==0&&a%83==0&&a%84==0&&a%85==0&&a%86==\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3rq89rot.java:27: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmp3rq89rot.java:28: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp3rq89rot.java:28: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp3rq89rot.java:28:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp3rq89rot.java:28: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmp3rq89rot.java:28:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp3rq89rot.java:39: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8p5k76rq.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a==0l) || (a==1l) || (a==2l) || (a==3l) ||\
    \ (a==4l) || (a==5l) || (a==6l) || (a==7l) || (a==8l) || (a==9l) || (a==10l) ||\
    \ (a==11l) || (a==12l) || (a==13l) || (a==14l) || (a==15l) || (a==16l) || (a==17l)\
    \ || (a==18l) || (a==19l) || (a==20l) || (a==21l) || (a==22l) || (a==23l) || (a==24l)\
    \ || (a==25l) || (a==26l) || (a==27l) || (a==28l) || (a==29l) || (a==30l) || (a==31l)\
    \ || (a==32l) || (a==33l) || (a==34l) || (a==35l) || (a==36l) || (a==37l) || (a==38l)\
    \ || (a==39l) || (a==40l) || (a==41l) || (a==42l) || (a==43l) || (a==44l) || (a==45l)\
    \ || (a==46l) || (a==47l) || (a==48l) || (a==49l) || (a==50l) || (a==51l) || (a==52l)\
    \ || (a==53l) || (a==54l) || (a==55l) || (a==56l) || (a==57l) || (a==58l) || (a==59l)\
    \ || (a==60l) || (a==61l) || (a==62l) || (a==63l);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplecq2i0b.java:30)\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnruln_1.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgnruln_1.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        long b=1l*1l*1l;\n\
    \        long c=a%b;\n        if (c==0l) return true;\n        long d=b%c;\n \
    \       if (d==0l) return true;\n        long e=c%d;\n        if (e==0l) return\
    \ true;\n        long f=d%e;\n        if (e==0l) return true;\n        long g=f%e;\n\
    \        if (g==0l) return true;\n        long h=g%e;\n        if (h==0l) return\
    \ true;\n        long i=h%e;\n        if (i==0l) return true;\n        long j=i%e;\n\
    \        if (j==0l) return true;\n        long k=j%e;\n        if (k==0l) return\
    \ true;\n        long l=k%e;\n        if (l==0l) return true;\n        long m=l%e;\n\
    \        if (m==0l) return true;\n        long n=m%e;\n        if (n==0l) return\
    \ true;\n        long o=n%e;\n        if (o==0l) return true;\n        long p=o%e;\n\
    \        if (p==0l) return true;\n        long q=p%e;\n        if (q==0l) return\
    \ true;\n        long r=q%e;\n        if (r==0l) return true;\n        long s=r%e;\n\
    \        if (s==0l) return true;\n        long t=s%e;\n        if (t==0l) return\
    \ true;\n        long u=t%e;\n        if (u==0l) return true;\n        long v=u%e;\n\
    \        if (v==0l) return true;\n        long w=v%e;\n        if (w==0l) return\
    \ true;\n        long x=w%e;\n        if (x==0l) return true;\n        long y=x%e;\n\
    \        if (y==0l) return true;\n        long z=y%e;\n        if (z==0l) return\
    \ true;\n        long a=z%e;\n        if (a==0l) return true;\n        long b=a%e;\n\
    \        if (b==0l) return true;\n        long c=b%e;\n        if (c==0l) return\
    \ true;\n        long d=c%e;\n        if (d==0l) return true;\n        long e=d%e;\n\
    \        if (e==0l) return true;\n        long f=e%e;\n        if (e==0l) return\
    \ true;\n        long g=f%e;\n        if (g==0l) return true;\n        long h=g%e;\n\
    \        if (h==0l) return true;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf6pgrmfw.java:76: error: variable a is already defined in method\
    \ iscube(long)\n        long a=z%e;\n             ^\n/tmp/tmpf6pgrmfw.java:78:\
    \ error: variable b is already defined in method iscube(long)\n        long b=a%e;\n\
    \             ^\n/tmp/tmpf6pgrmfw.java:80: error: variable c is already defined\
    \ in method iscube(long)\n        long c=b%e;\n             ^\n/tmp/tmpf6pgrmfw.java:82:\
    \ error: variable d is already defined in method iscube(long)\n        long d=c%e;\n\
    \             ^\n/tmp/tmpf6pgrmfw.java:84: error: variable e is already defined\
    \ in method iscube(long)\n        long e=d%e;\n             ^\n/tmp/tmpf6pgrmfw.java:86:\
    \ error: variable f is already defined in method iscube(long)\n        long f=e%e;\n\
    \             ^\n/tmp/tmpf6pgrmfw.java:88: error: variable g is already defined\
    \ in method iscube(long)\n        long g=f%e;\n             ^\n/tmp/tmpf6pgrmfw.java:90:\
    \ error: variable h is already defined in method iscube(long)\n        long h=g%e;\n\
    \             ^\n8 errors\n"
  stdout: ''
  timestamp: 1659794721
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().getAsLong();\n        return cube != 0l;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794727
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long aaa = 1;\n        long aab = 1;\n\
    \        long aac = 1;\n        long aad = 1;\n        long aae = 1;\n       \
    \ long aaf = 1;\n        long aag = 1;\n        long aah = 1;\n        long aai\
    \ = 1;\n        long aaj = 1;\n        long aak = 1;\n        long aal = 1;\n\
    \        long aam = 1;\n        long aan = 1;\n        long aoa = 1;\n       \
    \ long aap = 1;\n        long aqa = 1;\n        long aar = 1;\n        long asa\
    \ = 1;\n        long ata = 1;\n        long aua = 1;\n        long ava = 1;\n\
    \        long awa = 1;\n        long axa = 1;\n        long aya = 1;\n       \
    \ long aza = 1;\n        long aaa1 = 1;\n        long aab1 = 1;\n        long\
    \ aac1 = 1;\n        long aad1 = 1;\n        long aae1 = 1;\n        long aaf1\
    \ = 1;\n        long aag1 = 1;\n        long aah1 = 1;\n        long aai1 = 1;\n\
    \        long aaj1 = 1;\n        long aak1 = 1;\n        long aal1 = 1;\n    \
    \    long aam1 = 1;\n        long aan1 = 1;\n        long aoa1 = 1;\n        long\
    \ a\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn0xi9b7k.java:118: error: ';' expected\n        long a\n      \
    \        ^\n1 error\n"
  stdout: ''
  timestamp: 1659794721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long cube = LongStream.rangeClosed(0l, 180l).filter(x -> x\
    \ == (a % x)).count();\n        return cube == 3l;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.lambda$iscube$0(tmpvveqb3pv.java:29)\n\tat java.base/java.util.stream.LongPipeline$9$1.accept(LongPipeline.java:374)\n\
    \tat java.base/java.util.stream.Streams$RangeLongSpliterator.forEachRemaining(Streams.java:228)\n\
    \tat java.base/java.util.Spliterator$OfLong.forEachRemaining(Spliterator.java:775)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\
    \tat java.base/java.util.stream.ReduceOps$13.evaluateSequential(ReduceOps.java:610)\n\
    \tat java.base/java.util.stream.ReduceOps$13.evaluateSequential(ReduceOps.java:600)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.LongPipeline.count(LongPipeline.java:487)\n\t\
    at Problem.iscube(tmpvveqb3pv.java:29)\n\tat Problem.main(tmpvveqb3pv.java:33)\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().getAsLong();\n        return cube == a;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794724
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n\
    \        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long\
    \ bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n\
    \        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long\
    \ bm = 1;\n        long bn = 1;\n        long bo = 1;\n        long bp = 1;\n\
    \        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long\
    \ bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n        long bt4 = 1;\n\
    \        long bt5 = 1;\n        long bt6 = 1;\n        long bt7 = 1;\n       \
    \ long bt8 = 1;\n        long bt9 = 1;\n        long bt10 = 1;\n        long bt11\
    \ = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n        long bt14 = 1;\n\
    \        long bt15 = 1;\n        long bt16 = 1;\n        long bt17 = 1;\n    \
    \    long bt18 = 1;\n        long bt19 = 1;\n        long bt20 = 1;\n        long\
    \ bt21 = 1;\n        long bt22 = 1;\n        long bt23 = 1;\n        long bt24\
    \ = 1;\n        long bt25 = 1;\n        long bt26 = 1;\n        long \n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa4l44uez.java:122: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpa4l44uez.java:122: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794718
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().orElse(-1l);\n        return cube == a;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy2oh25zy.java:29)\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8p5k76rq.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a == Long.MAX_VALUE);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_i6cf0t9.java:29)\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a % 1 == 0 && a % 2 == 0 && a % 3 == 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc8v0tpzu.java:29)\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsg4a6lyp.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnruln_1.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgnruln_1.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl5xpge5x.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%5==0&&a%6==0&&a%7==0&&a%8==0&&a%9==0&&a%10==0&&a%11==0&&a%12==0&&a%13==0&&a%14==0&&a%15==0&&a%16==0&&a%17==0&&a%18==0&&a%19==0&&a%20==0&&a%21==0&&a%22==0&&a%23==0&&a%24==0&&a%25==0&&a%26==0&&a%27==0&&a%28==0&&a%29==0&&a%30==0&&a%31==0&&a%32==0&&a%33==0&&a%34==0&&a%35==0&&a%36==0&&a%37==0&&a%38==0&&a%39==0&&a%40==0&&a%41==0&&a%42==0&&a%43==0&&a%44==0&&a%45==0&&a%46==0&&a%47==0&&a%48==0&&a%49==0&&a%50==0&&a%51==0&&a%52==0&&a%53==0&&a%54==0&&a%55==0&&a%56==0&&a%57==0&&a%58==0&&a%59==0&&a%60==0&&a%61==0&&a%62==0&&a%63==0&&a%64==0&&a%65==0&&a%66==0&&a%67==0&&a%68==0&&a%69==0&&a%70==0&&a%71==0&&a%72==0&&a%73==0&&a%74==0&&a%75==0&&a%76==0&&a%77==0&&a%78==0&&a%79==0&&a%80==0&&a%81==0&&a%82==0&&a%83==0&&a%84==0&&a%85==0&&a%86==\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3rq89rot.java:27: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmp3rq89rot.java:28: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp3rq89rot.java:28: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp3rq89rot.java:28:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp3rq89rot.java:28: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmp3rq89rot.java:28:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp3rq89rot.java:39: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = a;\n        long d =\
    \ a;\n        long e = a;\n        long f = a;\n        long g = a;\n        long\
    \ h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n    \
    \    long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long aa = a;\n        long ab = a;\n        long ac = a;\n        long\
    \ ad = a;\n        long ae = a;\n        long af = a;\n        long ag = a;\n\
    \        long ah = a;\n        long ai = a;\n        long aj = a;\n        long\
    \ ak = a;\n        long al = a;\n        long am = a;\n        long an = a;\n\
    \        long ao = a;\n        long ap = a;\n        long aq = a;\n        long\
    \ ar = a;\n        long as = a;\n        long at = a;\n        long au = a;\n\
    \        long av = a;\n        long aw = a;\n        long ax = a;\n        long\
    \ ay = a;\n        long az = a;\n        long a1 = a;\n        long a2 = a;\n\
    \        long a3 = a;\n        long a4 = a;\n        long a5 = a;\n        long\
    \ a6 = a;\n        long a7 = a;\n        long a8 = a;\n        long a9 = a;\n\
    \        long a10 = a;\n        long a11 = a;\n        long a12 = a;\n       \
    \ long a13 = a;\n        long a14 = a;\n        long a15 = a;\n        long a16\
    \ = a;\n        long a17 = a;\n        long a18 = a;\n        long a19 = a;\n\
    \        long a20 = a;\n        long a21 = a; // a21\n        long a22 = a;\n\
    \        long a23 = a;\n        long a24 = a;\n        long a25 = a;\n       \
    \ long a26 = a;\n        long a27 = a;\n        long a28 = a;\n        long a29\
    \ = a;\n        long a30 = a;\n        long a31 = a; // a31\n        long a32\
    \ = a;\n        long a33 = a;\n        long a34 = a;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1kyjhbps.java:112: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = a;\n        long d =\
    \ a;\n        long e = a;\n        long f = a;\n        long g = a;\n        long\
    \ h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n    \
    \    long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long a = a;\n        long b = a;\n        long c = a;\n        long d\
    \ = a;\n        long e = a;\n        long f = a;\n        long g = a;\n      \
    \  long h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n\
    \        long l = a;\n        long m = a;\n        long n = a;\n        long o\
    \ = a;\n        long p = a;\n        long q = a;\n        long r = a;\n      \
    \  long s = a;\n        long t = a;\n        long u = a;\n        long v = a;\n\
    \        long w = a;\n        long x = a;\n        long y = a;\n        long z\
    \ = a;\n        long a = a;\n        long b = a;\n        long c = a;\n      \
    \  long d = a;\n        long e = a;\n        long f = a;\n        long g = a;\n\
    \        long h = a;\n        long i = a;\n        long j = a;\n        long k\
    \ = a;\n        long l = a;\n        long m = a;\n        long n = a;\n      \
    \  long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long a = a;\n        long b = a;\n        long c = a;\n\
    \        long d = a;\n        long e = a;\n        long f = a;\n        long g\
    \ = a;\n        long h = a;\n        long i = a;\n        long j = a;\n      \
    \  long k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n\
    \        long o = a;\n        long p = a;\n        long q = a;\n        long r\
    \ = a;\n        long s = a;\n        long t = a;\n        long u = a;\n      \
    \  long v = a;\n        long w = a;\n        long x = a;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa3vj7g3z.java:128: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long b = a * a;\n        long c = b * b - 4 * a * b;\n   \
    \     if (c < 0l) {\n            return false;\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzpudj5aa.java:37)\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > 180l) {\n            return false;\n        }\n        if (a\
    \ % 6 == 0) {\n            return true;\n        }\n        return false;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz9d_x3qh.java:38)\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0l)\n            return true;\n        long\
    \ b = a * a * a;\n        long c = b * b * b;\n        long d = c * c * c;\n \
    \       return d == a * a * a;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_6b7t7s1.java:37)\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(x\
    \ -> x * x * x == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3tcsijgz.java:32)\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr1mo0_31.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl5xpge5x.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long b = a * a;\n        long c = b * b;\n        long d =\
    \ c * c;\n        return d == a * a;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3yqrhu8s.java:37)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long b = a * a * a;\n        long c = b * b * b;\n       \
    \ long d = c * c * c;\n        long e = d * d * d;\n        long f = e * e * e;\n\
    \        long g = f * f * f;\n        long h = g * g * g;\n        long i = h\
    \ * h * h;\n        long j = i * i * i;\n        long k = j * j * j;\n       \
    \ long l = k * k * k;\n        return l == a;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzp1lhgpq.java:45)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr1mo0_31.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0l) {\n            return true;\n       \
    \ }\n        if (a < 0l) {\n            return false;\n        }\n        long\
    \ b = a;\n        long c = a;\n        long d = a;\n        long e = a;\n    \
    \    long f = a;\n        long g = a;\n        long h = a;\n        long i = a;\n\
    \        long j = a;\n        long k = a;\n        long l = a;\n        long m\
    \ = a;\n        long n = a;\n        long o = a;\n        long p = a;\n      \
    \  long q = a;\n        long r = a;\n        long s = a;\n        long t = a;\n\
    \        long u = a;\n        long v = a;\n        long w = a;\n        long x\
    \ = a;\n        long y = a;\n        long z = a;\n        long aa = a;\n     \
    \   long ab = a;\n        long ac = a;\n        long ad = a;\n        long ae\
    \ = a;\n        long af = a;\n        long ag = a;\n        long ah = a;\n   \
    \     long ai = a;\n        long aj = a;\n        long ak = a;\n        long al\
    \ = a;\n        long am = a;\n        long an = a;\n        long ao = a;\n   \
    \     long ap = a;\n        long aq = a;\n        long ar = a;\n        long as\
    \ = a;\n        long at = a;\n        long au = a;\n        long av = a;\n   \
    \     long aw = a;\n        long ax = a;\n        long ay = a;\n        long az\
    \ = a;\n        long ba = a;\n        long bb = a;\n        long bc = a;\n   \
    \     long bd = a;\n        long be = a;\n        long bf = a;\n        long bg\
    \ = a;\n        long bh = a;\n        long bi = a;\n        long bj = a;\n   \
    \     long bk = a;\n        long bl = a;\n        long bm = a;\n        long bn\
    \ = a;\n        long bo = a;\n        long bp = a;\n        long bq = a;\n   \
    \     long br = a;\n        long bs = a;\n        long bt = a;\n        long bu\
    \ = a;\n        long bv = a;\n        long bw = a;\n        long bx = a;\n   \
    \     long by = a;\n        long bz = a;\n        long ca = a;\n        long cb\
    \ = a;\n        long cc = a;\n        long cd = a;\n        long ce = a;\n   \
    \     long cf = a;\n        long cg = a;\n        long ch = a;\n        long ci\
    \ = a;\n\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppganlczv.java:119: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().getAsLong();\n        return cube == a;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794724
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long b = a * a * a;\n        if (b == (long)Math.pow(a, 3))\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ynanypz.java:37)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ c;\n        long e = d;\n        long f = e;\n        long g = f;\n        long\
    \ h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n    \
    \    long l = k;\n        long m = l;\n        long n = m;\n        long o = n;\n\
    \        long p = o;\n        long q = p;\n        long r = q;\n        long s\
    \ = r;\n        long t = s;\n        long u = t;\n        long v = u;\n      \
    \  long w = v;\n        long x = w;\n        long y = x;\n        long z = y;\n\
    \        long a = z;\n        long b = a;\n        long c = b;\n        long d\
    \ = c;\n        long e = d;\n        long f = e;\n        long g = f;\n      \
    \  long h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n\
    \        long l = k;\n        long m = l;\n        long n = m;\n        long o\
    \ = n;\n        long p = o;\n        long q = p;\n        long r = q;\n      \
    \  long s = r;\n        long t = s;\n        long u = t;\n        long v = u;\n\
    \        long w = v;\n        long x = w;\n        long y = x;\n        long z\
    \ = y;\n        long a = z;\n        long b = a;\n        long c = b;\n      \
    \  long d = c;\n        long e = d;\n        long f = e;\n        long g = f;\n\
    \        long h = g;\n        long i = h;\n        long j = i;\n        long k\
    \ = j;\n        long l = k;\n        long m = l;\n        long n = m;\n      \
    \  long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long a = z;\n        long b = a;\n        long c = b;\n\
    \        long d = c;\n        long e = d;\n        long f = e;\n        long g\
    \ = f;\n        long h = g;\n        long i = h;\n        long j = i;\n      \
    \  long k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n\
    \        long o = n;\n        long p = o;\n        long q = p;\n        long r\
    \ = q;\n        long s = r;\n        long t = s;\n        long u = t;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpql713ngz.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = z;\n             ^\n/tmp/tmpql713ngz.java:52:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a;\n             ^\n/tmp/tmpql713ngz.java:53: error: variable c is already\
    \ defined in method iscube(long)\n        long c = b;\n             ^\n/tmp/tmpql713ngz.java:54:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = c;\n             ^\n/tmp/tmpql713ngz.java:55: error: variable e is already\
    \ defined in method iscube(long)\n        long e = d;\n             ^\n/tmp/tmpql713ngz.java:56:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = e;\n             ^\n/tmp/tmpql713ngz.java:57: error: variable g is already\
    \ defined in method iscube(long)\n        long g = f;\n             ^\n/tmp/tmpql713ngz.java:58:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = g;\n             ^\n/tmp/tmpql713ngz.java:59: error: variable i is already\
    \ defined in method iscube(long)\n        long i = h;\n             ^\n/tmp/tmpql713ngz.java:60:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = i;\n             ^\n/tmp/tmpql713ngz.java:61: error: variable k is already\
    \ defined in method iscube(long)\n        long k = j;\n             ^\n/tmp/tmpql713ngz.java:62:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = k;\n             ^\n/tmp/tmpql713ngz.java:63: error: variable m is already\
    \ defined in method iscube(long)\n        long m = l;\n             ^\n/tmp/tmpql713ngz.java:64:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = m;\n             ^\n/tmp/tmpql713ngz.java:65: error: variable o is already\
    \ defined in method iscube(long)\n        long o = n;\n             ^\n/tmp/tmpql713ngz.java:66:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = o;\n             ^\n/tmp/tmpql713ngz.java:67: error: variable q is already\
    \ defined in method iscube(long)\n        long q = p;\n      "
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > 180) {\n            return false;\n        }\n        long cube\
    \ = LongStream.rangeClosed(1, a).filter(i -> i * i * i == a).count();\n      \
    \  return cube == 3;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n   \
    \ assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n   \
    \ assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5jsdxycz.java:36)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8p5k76rq.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        long cube = LongStream.rangeClosed(1, a).filter(i -> i * i * i == a).count();\n\
    \        return cube == 3;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdsralqpn.java:33)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnruln_1.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgnruln_1.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr1mo0_31.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n\
    \        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long\
    \ bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n\
    \        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long\
    \ bm = 1;\n        long bn = 1;\n        long bo = 1;\n        long bp = 1;\n\
    \        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long\
    \ bt = 1;\n        long bu = 1;\n        long bv = 1;\n        long bw = 1;\n\
    \        long bx = 1;\n        long by = 1;\n        long bz = 1;\n        long\
    \ ca = 1;\n        long cb = 1;\n        long cc = 1;\n        long cd = 1;\n\
    \        long ce = 1;\n        long cf = 1;\n        long cg = 1;\n        long\
    \ ch = 1;\n        long ci = 1;\n        long cj = 1;\n        long ck = 1;\n\
    \        long cl = 1;\n        long cm = 1;\n        long cn = 1;\n        long\
    \ co = 1;\n        long cp = 1;\n        long cq = 1;\n        long cr = 1;\n\
    \        long cs = 1;\n        long ct = 1;\n        long cu = 1;\n        long\
    \ cv = 1;\n        \n    }\n    public static void main(String[] args) {\n   \
    \ assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi75_t5gp.java:126: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ c;\n        long e = d;\n        long f = e;\n        long g = f;\n        long\
    \ h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n    \
    \    long l = k;\n        long m = l;\n        long n = m;\n        long o = n;\n\
    \        long p = o;\n        long q = p;\n        long r = q;\n        long s\
    \ = r;\n        long t = s;\n        long u = t;\n        long v = u;\n      \
    \  long w = v;\n        long x = w;\n        long y = x;\n        long z = y;\n\
    \        long a = z;\n        long b = a;\n        long c = b;\n        long d\
    \ = c;\n        long e = d;\n        long f = e;\n        long g = f;\n      \
    \  long h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n\
    \        long l = k;\n        long m = l;\n        long n = m;\n        long o\
    \ = n;\n        long p = o;\n        long q = p;\n        long r = q;\n      \
    \  long s = r;\n        long t = s;\n        long u = t;\n        long v = u;\n\
    \        long w = v;\n        long x = w;\n        long y = x;\n        long z\
    \ = y;\n        long a = z;\n        long b = a;\n        long c = b;\n      \
    \  long d = c;\n        long e = d;\n        long f = e;\n        long g = f;\n\
    \        long h = g;\n        long i = h;\n        long j = i;\n        long k\
    \ = j;\n        long l = k;\n        long m = l;\n        long n = m;\n      \
    \  long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long a = z;\n        long b = a;\n        long c = b;\n\
    \        long d = c;\n        long e = d;\n        long f = e;\n        long g\
    \ = f;\n        long h = g;\n        long i = h;\n        long j = i;\n      \
    \  long k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n\
    \        long o = n;\n        long p = o;\n        long q = p;\n        long r\
    \ = q;\n        long s = r;\n        long t = s;\n        long u = t;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpql713ngz.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = z;\n             ^\n/tmp/tmpql713ngz.java:52:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a;\n             ^\n/tmp/tmpql713ngz.java:53: error: variable c is already\
    \ defined in method iscube(long)\n        long c = b;\n             ^\n/tmp/tmpql713ngz.java:54:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = c;\n             ^\n/tmp/tmpql713ngz.java:55: error: variable e is already\
    \ defined in method iscube(long)\n        long e = d;\n             ^\n/tmp/tmpql713ngz.java:56:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = e;\n             ^\n/tmp/tmpql713ngz.java:57: error: variable g is already\
    \ defined in method iscube(long)\n        long g = f;\n             ^\n/tmp/tmpql713ngz.java:58:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = g;\n             ^\n/tmp/tmpql713ngz.java:59: error: variable i is already\
    \ defined in method iscube(long)\n        long i = h;\n             ^\n/tmp/tmpql713ngz.java:60:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = i;\n             ^\n/tmp/tmpql713ngz.java:61: error: variable k is already\
    \ defined in method iscube(long)\n        long k = j;\n             ^\n/tmp/tmpql713ngz.java:62:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = k;\n             ^\n/tmp/tmpql713ngz.java:63: error: variable m is already\
    \ defined in method iscube(long)\n        long m = l;\n             ^\n/tmp/tmpql713ngz.java:64:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = m;\n             ^\n/tmp/tmpql713ngz.java:65: error: variable o is already\
    \ defined in method iscube(long)\n        long o = n;\n             ^\n/tmp/tmpql713ngz.java:66:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = o;\n             ^\n/tmp/tmpql713ngz.java:67: error: variable q is already\
    \ defined in method iscube(long)\n        long q = p;\n      "
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ c;\n        long e = d;\n        long f = e;\n        long g = f;\n        long\
    \ h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n    \
    \    long l = k;\n        long m = l;\n        long n = m;\n        long o = n;\n\
    \        long p = o;\n        long q = p;\n        long r = q;\n        long s\
    \ = r;\n        long t = s;\n        long u = t;\n        long v = u;\n      \
    \  long w = v;\n        long x = w;\n        long y = x;\n        long z = y;\n\
    \        long aa = z;\n        long ab = aa;\n        long ac = ab;\n        long\
    \ ad = ac;\n        long ae = ad;\n        long af = ae;\n        long ag = af;\n\
    \        long ah = ag;\n        long ai = ah;\n        long aj = ai;\n       \
    \ long ak = aj;\n        long al = ak;\n        long am = al;\n        long an\
    \ = am;\n        long ao = an;\n        long ap = ao;\n        long aq = ap;\n\
    \        long ar = aq;\n        long as = ar;\n        long at = as;\n       \
    \ long au = at;\n        long av = au;\n        long aw = av;\n        long ax\
    \ = aw;\n        long ay = ax;\n        long az = ay;\n        long aA = az;\n\
    \        long aB = aA;\n        long aC = aB;\n        long aD = aC;\n       \
    \ long aE = aD;\n        long aF = aE;\n        long aG = aF;\n        long aH\
    \ = aG;\n        long aI = aH;\n        long aJ = aI;\n        long aK = aJ;\n\
    \        long aL = aK;\n        long aM = aL;\n        long aN = aM;\n       \
    \ long aO = aN;\n        long aP = aO;\n        long aQ = aP;\n        long aR\
    \ = aQ;\n        long aS = aR;\n        long aT = aS;\n        long aU = aT;\n\
    \        long aV = aU;\n        long aW = aV;\n        long aX = aW;\n       \
    \ long aY = aX;\n        long aZ = a\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6leizaak.java:102: error: ';' expected\n        long aZ = a\n \
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659794722
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a==1l) || (a==3l) || (a==5l) || (a==7l) ||\
    \ (a==9l);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6fkgtw90.java:31)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a%1l;\n        long c = a%1l;\n        long\
    \ d = a%1l;\n        long e = a%1l;\n        long f = a%1l;\n        long g =\
    \ a%1l;\n        long h = a%1l;\n        long i = a%1l;\n        long j = a%1l;\n\
    \        long k = a%1l;\n        long l = a%1l;\n        long m = a%1l;\n    \
    \    long n = a%1l;\n        long o = a%1l;\n        long p = a%1l;\n        long\
    \ q = a%1l;\n        long r = a%1l;\n        long s = a%1l;\n        long t =\
    \ a%1l;\n        long u = a%1l;\n        long v = a%1l;\n        long w = a%1l;\n\
    \        long x = a%1l;\n        long y = a%1l;\n        long z = a%1l;\n    \
    \    long a = a%1l;\n        long b = a%1l;\n        long c = a%1l;\n        long\
    \ d = a%1l;\n        long e = a%1l;\n        long f = a%1l;\n        long g =\
    \ a%1l;\n        long h = a%1l;\n        long i = a%1l;\n        long j = a%1l;\n\
    \        long k = a%1l;\n        long l = a%1l;\n        long m = a%1l;\n    \
    \    long n = a%1l;\n        long o = a%1l;\n        long p = a%1l;\n        long\
    \ q = a%1l;\n        long r = a%1l;\n        long s = a%1l;\n        long t =\
    \ a%1l;\n        long u = a%1l;\n        long v = a%1l;\n        long w = a%1l;\n\
    \        long x = a%1l;\n        long y = a%1l;\n        long z = a%1l;\n    \
    \    long a = a%1l;\n        long b = a%1l;\n        long c = a%1l;\n        long\
    \ d = a%1l;\n        long e = a%1l;\n        long f = a%1l;\n        long g =\
    \ a%1l;\n        long h = a%1l;\n        long i = a%1l;\n        long j = a%1l;\n\
    \        long k = a%1l;\n        long l = a%1l;\n        long m = a%1l;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr4esabd1.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:52:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:53: error: variable c is already\
    \ defined in method iscube(long)\n        long c = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:54:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:55: error: variable e is already\
    \ defined in method iscube(long)\n        long e = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:56:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:57: error: variable g is already\
    \ defined in method iscube(long)\n        long g = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:58:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:59: error: variable i is already\
    \ defined in method iscube(long)\n        long i = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:60:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:61: error: variable k is already\
    \ defined in method iscube(long)\n        long k = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:62:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:63: error: variable m is already\
    \ defined in method iscube(long)\n        long m = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:64:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:65: error: variable o is already\
    \ defined in method iscube(long)\n        long o = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:66:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = a%1l;\n             ^\n/tmp/tmpr4esabd1.java:67: error: variable q is already\
    \ defined i"
  stdout: ''
  timestamp: 1659794720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long a1 = 1;\n        long a2 = 1;\n\
    \        long a3 = 1;\n        long a4 = 1;\n        long a5 = 1;\n        long\
    \ a6 = 1;\n        long a7 = 1;\n        long a8 = 1;\n        long a9 = 1;\n\
    \        long a10 = 1;\n        long a11 = 1;\n        long a12 = 1;\n       \
    \ long a13 = 1;\n        long a14 = 1;\n        long a15 = 1;\n        long a16\
    \ = 1;\n        long a17 = 1;\n        long a18 = 1;\n        long a19 = 1;\n\
    \        long a20 = 1;\n        long a21 = 1;\n        long a22 = 1;\n       \
    \ long a23 = 1;\n        long a24 = 1;\n        long a25 = 1;\n        long a26\
    \ = 1;\n        long a27 = 1;\n        long a28 = 1;\n        long a29 = 1;\n\
    \        long a30 = 1;\n        long a31 = 1;\n        long a32 = 1;\n       \
    \ long a33 = 1;\n        long a34 = 1;\n        long a35 = 1;\n        long a36\
    \ = 1;\n        long a37 = 1;\n        long a38 = 1;\n        long a39 = 1;\n\
    \        long a40 = 1;\n        long a41 = 1;\n        long a42 = 1;\n       \
    \ long a43 = 1;\n        long a44 = 1;\n        long a45\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_qk_gw2_.java:121: error: ';' expected\n        long a45\n    \
    \            ^\n1 error\n"
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a >= 1l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe_lz94jn.java:30)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long cube = LongStream.rangeClosed(0l, 180l).filter(i -> i\
    \ * i * i == a).count();\n        return cube == 1l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ya05qa8.java:35)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8p5k76rq.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) return false;\n        long\
    \ b = a%1l;\n        if (b == 0) return true;\n        if (b == -1l) return true;\n\
    \        if (b == -2l) return true;\n        if (b == -3l) return true;\n    \
    \    if (b == -4l) return true;\n        if (b == -5l) return true;\n        if\
    \ (b == -6l) return true;\n        if (b == -7l) return true;\n        if (b ==\
    \ -8l) return true;\n        if (b == 9l) return true;\n        if (b == 10l)\
    \ return true;\n        if (b == 11l) return true;\n        if (b == 12l) return\
    \ true;\n        if (b == 13l) return true;\n        if (b == 14l) return true;\n\
    \        if (b == 15l) return true;\n        if (b == 16l) return true;\n    \
    \    if (b == 17l) return true;\n        if (b == 18l) return true;\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpch095_u8.java:51)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long cube = LongStream.rangeClosed(0l, 180l).filter(i -> i\
    \ % a == 0).count();\n        return cube == 3l;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwdvx2bb8.java:33)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8p5k76rq.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) return false;\n        long\
    \ x = 1l;\n        long y = 1l;\n        long z = 1l;\n        long cube = 1l;\n\
    \        while (a > 0) {\n            long temp = x;\n            x = y;\n   \
    \         y = z;\n            z = temp;\n            cube = cube * x;\n      \
    \      a = a / 3;\n        }\n        if (cube == 1l) return true;\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjbvn1ocw.java:44)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long d = 1;\n        while (d\
    \ <= n) {\n            if (n % d == 0) {\n                return false;\n    \
    \        }\n            d *= d;\n        }\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppk8r02jf.java:37)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().orElse(-1l);\n        return cube == a;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794726
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().getAsLong();\n        return cube == a;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794724
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a * a;\n        long c = b * b - 4 * a *\
    \ a + 1;\n        return c < 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nyp8kh3.java:34)\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk9q2necs.java:128: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpk9q2necs.java:129: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpk9q2necs.java:129: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpk9q2necs.java:129: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpk9q2necs.java:140: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        if (a == 0) {\n            return true;\n        }\n        long cube\
    \ = 1;\n        while (a > 0) {\n            cube *= a;\n            a--;\n  \
    \      }\n        return cube == 1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvb49risq.java:45)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnruln_1.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgnruln_1.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a==1l) || (a==2l) || (a==3l) || (a==4l) ||\
    \ (a==5l) || (a==6l) || (a==7l) || (a==8l) || (a==9l) || (a==10l) || (a==11l)\
    \ || (a==12l) || (a==13l) || (a==14l) || (a==15l) || (a==16l) || (a==17l) || (a==18l)\
    \ || (a==19l) || (a==20l) || (a==21l) || (a==22l) || (a==23l) || (a==24l) || (a==25l)\
    \ || (a==26l) || (a==27l) || (a==28l) || (a==29l) || (a==30l) || (a==31l) || (a==32l)\
    \ || (a==33l) || (a==34l) || (a==35l) || (a==36l) || (a==37l) || (a==38l) || (a==39l)\
    \ || (a==40l) || (a==41l) || (a==42l) || (a==43l) || (a==44l) || (a==45l) || (a==46l)\
    \ || (a==47l) || (a==48l) || (a==49l) || (a==50l) || (a==51l) || (a==52l) || (a==53l)\
    \ || (a==54l) || (a==55l) || (a==56l) || (a==57l) || (a==58l) || (a==59l) || (a==60l)\
    \ || (a==61l) || (a==62l) || (a==63l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd2imk7zz.java:30)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1==0) && a%2==0) && a%3==0) && a%4==0) &&\
    \ a%8==0) && a%16==0) && a%32==0) && a%64==0) && a%128==0) && a%256==0) && a%512==0)\
    \ && a%1024==0) && a%2048==0) && a%4096==0) && a%8192==0) && a%16384==0) && a%32768==0)\
    \ && a%65536==0) && a%131072==0) && a%262144==0) && a%524288==0) && a%1048576==0)\
    \ && a%2097152==0) && a%4194304==0) && a%8388608==0) && a%16777216==0) && a%33554432==0)\
    \ && a%67108864==0) && a%134217728==0) && a%268435456==0) && a%536870912==0) &&\
    \ a%1073741824==0) && a%2147483648==0) && a%4294967296==0) && a%8589934592==0)\
    \ && a%17179869184==0) && a%34359738368==0) && a%68719476736==0) && a%137438953472==0)\
    \ && a%274877906944==0) && a%549755813888==0) && a%1099511627776==0) && a%2199023255552==0)\
    \ && a%4398046511104==0) && a%8796093022208==0) && a%17592186044416==0) && a%35184372088832==0)\
    \ && a%70368744177664==0) && a%140737488355328==0) && a%281474976710656==0) &&\
    \ a%562949953421312==0) && a%1125899906842624==0) && a%2251799813685248==0) &&\
    \ a%4503599627370496==0) && a%9007199254740992==0) && a%18014398509481984==0)\
    \ && a%36028797018963968==0) && a%72057594037927936==0) && a%144115188075855872==0)\
    \ && a%288230376151711744==0) && a%576460752303423488==0) && a%12582912728652912640==0)\
    \ && a%\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeved5huo.java:26: error: ';' expected\n        return (a%1==0)\
    \ && a%2==0) && a%3==0) && a%4==0) && a%8==0) && a%16==0) && a%32==0) && a%64==0)\
    \ && a%128==0) && a%256==0) && a%512==0) && a%1024==0) && a%2048==0) && a%4096==0)\
    \ && a%8192==0) && a%16384==0) && a%32768==0) && a%65536==0) && a%131072==0) &&\
    \ a%262144==0) && a%524288==0) && a%1048576==0) && a%2097152==0) && a%4194304==0)\
    \ && a%8388608==0) && a%16777216==0) && a%33554432==0) && a%67108864==0) && a%134217728==0)\
    \ && a%268435456==0) && a%536870912==0) && a%1073741824==0) && a%2147483648==0)\
    \ && a%4294967296==0) && a%8589934592==0) && a%17179869184==0) && a%34359738368==0)\
    \ && a%68719476736==0) && a%137438953472==0) && a%274877906944==0) && a%549755813888==0)\
    \ && a%1099511627776==0) && a%2199023255552==0) && a%4398046511104==0) && a%8796093022208==0)\
    \ && a%17592186044416==0) && a%35184372088832==0) && a%70368744177664==0) && a%140737488355328==0)\
    \ && a%281474976710656==0) && a%562949953421312==0) && a%1125899906842624==0)\
    \ && a%2251799813685248==0) && a%4503599627370496==0) && a%9007199254740992==0)\
    \ && a%18014398509481984==0) && a%36028797018963968==0) && a%72057594037927936==0)\
    \ && a%144115188075855872==0) && a%288230376151711744==0) && a%576460752303423488==0)\
    \ && a%12582912728652912640==0) && a%\n                                 ^\n/tmp/tmpeved5huo.java:26:\
    \ error: not a statement\n        return (a%1==0) && a%2==0) && a%3==0) && a%4==0)\
    \ && a%8==0) && a%16==0) && a%32==0) && a%64==0) && a%128==0) && a%256==0) &&\
    \ a%512==0) && a%1024==0) && a%2048==0) && a%4096==0) && a%8192==0) && a%16384==0)\
    \ && a%32768==0) && a%65536==0) && a%131072==0) && a%262144==0) && a%524288==0)\
    \ && a%1048576==0) && a%2097152==0) && a%4194304==0) && a%8388608==0) && a%16777216==0)\
    \ && a%33554432==0) && a%67108864==0) && a%134217728==0) && a%268435456==0) &&\
    \ a%536870912==0) && a%1073741824==0) && a%2147483648==0) && a%4294967296==0)\
    \ && a%8589934592==0) && a%17179869184==0) && a%34359738368==0) && a%68719476736==0)\
    \ && a%137438953472==0) && a%274877906944==0) && a%549755813888==0) && a%109951162"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ c;\n        long e = d;\n        long f = e;\n        long g = f;\n        long\
    \ h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n    \
    \    long l = k;\n        long m = l;\n        long n = m;\n        long o = n;\n\
    \        long p = o;\n        long q = p;\n        long r = q;\n        long s\
    \ = r;\n        long t = s;\n        long u = t;\n        long v = u;\n      \
    \  long w = v;\n        long x = w;\n        long y = x;\n        long z = y;\n\
    \        long a = z;\n        long b = a;\n        long c = b;\n        long d\
    \ = c;\n        long e = d;\n        long f = e;\n        long g = f;\n      \
    \  long h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n\
    \        long l = k;\n        long m = l;\n        long n = m;\n        long o\
    \ = n;\n        long p = o;\n        long q = p;\n        long r = q;\n      \
    \  long s = r;\n        long t = s;\n        long u = t;\n        long v = u;\n\
    \        long w = v;\n        long x = w;\n        long y = x;\n        long z\
    \ = y;\n        long a = z;\n        long b = a;\n        long c = b;\n      \
    \  long d = c;\n        long e = d;\n        long f = e;\n        long g = f;\n\
    \        long h = g;\n        long i = h;\n        long j = i;\n        long k\
    \ = j;\n        long l = k;\n        long m = l;\n        long n = m;\n      \
    \  long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long a = z;\n        long b = a;\n        long c = b;\n\
    \        long d = c;\n        long e = d;\n        long f = e;\n        long g\
    \ = f;\n        long h = g;\n        long i = h;\n        long j = i;\n      \
    \  long k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n\
    \        long o = n;\n        long p = o;\n        long q = p;\n        long r\
    \ = q;\n        long s = r;\n        long t = s;\n        long u = t;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpql713ngz.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = z;\n             ^\n/tmp/tmpql713ngz.java:52:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a;\n             ^\n/tmp/tmpql713ngz.java:53: error: variable c is already\
    \ defined in method iscube(long)\n        long c = b;\n             ^\n/tmp/tmpql713ngz.java:54:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = c;\n             ^\n/tmp/tmpql713ngz.java:55: error: variable e is already\
    \ defined in method iscube(long)\n        long e = d;\n             ^\n/tmp/tmpql713ngz.java:56:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = e;\n             ^\n/tmp/tmpql713ngz.java:57: error: variable g is already\
    \ defined in method iscube(long)\n        long g = f;\n             ^\n/tmp/tmpql713ngz.java:58:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = g;\n             ^\n/tmp/tmpql713ngz.java:59: error: variable i is already\
    \ defined in method iscube(long)\n        long i = h;\n             ^\n/tmp/tmpql713ngz.java:60:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = i;\n             ^\n/tmp/tmpql713ngz.java:61: error: variable k is already\
    \ defined in method iscube(long)\n        long k = j;\n             ^\n/tmp/tmpql713ngz.java:62:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = k;\n             ^\n/tmp/tmpql713ngz.java:63: error: variable m is already\
    \ defined in method iscube(long)\n        long m = l;\n             ^\n/tmp/tmpql713ngz.java:64:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = m;\n             ^\n/tmp/tmpql713ngz.java:65: error: variable o is already\
    \ defined in method iscube(long)\n        long o = n;\n             ^\n/tmp/tmpql713ngz.java:66:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = o;\n             ^\n/tmp/tmpql713ngz.java:67: error: variable q is already\
    \ defined in method iscube(long)\n        long q = p;\n      "
  stdout: ''
  timestamp: 1659794718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long d = 1;\n        long r =\
    \ 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long\
    \ w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n    \
    \    long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpafs665g8.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpafs665g8.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a * a;\n        long c = b * b - 4 * a *\
    \ a + 1;\n        return c >= 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26pro2az.java:31)\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i*i*i == a).findFirst().get();\n        return cube == a;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpndos0phe.java:26: error: cannot find symbol\n        long cube\
    \ = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i -> i*i*i == a).findFirst().get();\n\
    \                                                                            \
    \                      ^\n  symbol:   method get()\n  location: class OptionalLong\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794723
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnruln_1.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgnruln_1.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = a;\n        long d =\
    \ a;\n        long e = a;\n        long f = a;\n        long g = a;\n        long\
    \ h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n    \
    \    long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long a = a;\n        long b = a;\n        long c = a;\n        long d\
    \ = a;\n        long e = a;\n        long f = a;\n        long g = a;\n      \
    \  long h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n\
    \        long l = a;\n        long m = a;\n        long n = a;\n        long o\
    \ = a;\n        long p = a;\n        long q = a;\n        long r = a;\n      \
    \  long s = a;\n        long t = a;\n        long u = a;\n        long v = a;\n\
    \        long w = a;\n        long x = a;\n        long y = a;\n        long z\
    \ = a;\n        long a = a;\n        long b = a;\n        long c = a;\n      \
    \  long d = a;\n        long e = a;\n        long f = a;\n        long g = a;\n\
    \        long h = a;\n        long i = a;\n        long j = a;\n        long k\
    \ = a;\n        long l = a;\n        long m = a;\n        long n = a;\n      \
    \  long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long a = a;\n        long b = a;\n        long c = a;\n\
    \        long d = a;\n        long e = a;\n        long f = a;\n        long g\
    \ = a;\n        long h = a;\n        long i = a;\n        long j = a;\n      \
    \  long k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n\
    \        long o = a;\n        long p = a;\n        long q = a;\n        long r\
    \ = a;\n        long s = a;\n        long t = a;\n        long u = a;\n      \
    \  long v = a;\n        long w = a;\n        long x = a;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa3vj7g3z.java:128: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a==1l) || (a==2l) || (a==3l) || (a==4l) ||\
    \ (a==5l) || (a==6l) || (a==7l) || (a==8l) || (a==9l) || (a==10l) || (a==11l)\
    \ || (a==12l) || (a==13l) || (a==14l) || (a==15l) || (a==16l) || (a==17l) || (a==18l)\
    \ || (a==19l) || (a==20l) || (a==21l) || (a==22l) || (a==23l) || (a==24l) || (a==25l)\
    \ || (a==26l) || (a==27l) || (a==28l) || (a==29l) || (a==30l) || (a==31l) || (a==32l)\
    \ || (a==33l) || (a==34l) || (a==35l) || (a==36l) || (a==37l) || (a==38l) || (a==39l)\
    \ || (a==40l) || (a==41l) || (a==42l) || (a==43l) || (a==44l) || (a==45l) || (a==46l)\
    \ || (a==47l) || (a==48l) || (a==49l) || (a==50l) || (a==51l) || (a==52l) || (a==53l)\
    \ || (a==54l) || (a==55l) || (a==56l) || (a==57l) || (a==58l) || (a==59l) || (a==60l)\
    \ || (a==61l) || (a==62l) || (a==63l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd2imk7zz.java:30)\n"
  stdout: ''
  timestamp: 1659794723

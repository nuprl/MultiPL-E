language: java
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = Long.parseLong(String.valueOf(a));\n \
    \       long cube2 = Long.parseLong(String.valueOf(cube));\n        long cube3\
    \ = Long.parseLong(String.valueOf(cube2));\n        long cube4 = Long.parseLong(String.valueOf(cube3));\n\
    \        long cube5 = Long.parseLong(String.valueOf(cube4));\n        long cube6\
    \ = Long.parseLong(String.valueOf(cube5));\n        long cube7 = Long.parseLong(String.valueOf(cube6));\n\
    \        long cube8 = Long.parseLong(String.valueOf(cube7));\n        long cube9\
    \ = Long.parseLong(String.valueOf(cube8));\n        long cube10 = Long.parseLong(String.valueOf(cube9));\n\
    \        long cube11 = Long.parseLong(String.valueOf(cube10));\n        long cube12\
    \ = Long.parseLong(String.valueOf(cube11));\n        long cube13 = Long.parseLong(String.valueOf(cube12));\n\
    \        long cube14 = Long.parseLong(String.valueOf(cube13));\n        long cube15\
    \ = Long.parseLong(String.valueOf(cube14));\n        long cube16 = Long.parseLong(String.valueOf(cube15));\n\
    \        long cube17 = Long.parseLong(String.valueOf(cube16));\n        long cube18\
    \ = Long.parseLong(String.valueOf(cube17));\n        long cube19 = Long.parseLong(String.valueOf(cube18));\n\
    \        long cube20 = Long.parseLong(String.valueOf(cube19));\n        long cube21\
    \ = Long.parseLong(String.valueOf(cube20));\n        long cube22 = Long.parseLong(String.valueOf(cube21));\n\
    \        long cube23 = Long.parseLong(String.valueOf(cube22));\n        long cube24\
    \ = Long.parseLong(String.valueOf(cube23));\n        long cube25 = Long.parseLong(String.valueOf(cube24));\n\
    \        long cube26 = Long.parseLong(String.valueOf(cube25));\n        long cube27\
    \ = Long.parseLong(String.valueOf(cube26));\n        long cube28 = Long.parseLong(String.valueOf(cube27));\n\
    \        long cube29 = Long.parseLong(String.valueOf(cube28));\n        long cube30\
    \ = Long.parseLong(String.valueOf(cube29));\n        long cube31 = Long.parseLong(String.valueOf(cube30));\n\
    \        \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphwp8e563.java:58: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a*a*a;\n        long cube2 = a*a*a*a;\n\
    \        long cube3 = a*a*a*a*a;\n        long cube4 = a*a*a*a*a*a;\n        long\
    \ cube5 = a*a*a*a*a*a*a*a;\n        long cube6 = a*a*a*a*a*a*a*a*a;\n        long\
    \ cube7 = a*a*a*a*a*a*a*a*a*a*a;\n        long cube8 = a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube9 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n        long cube10 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube11 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n        long cube12\
    \ = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n        long cube13 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube14 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n  \
    \      long cube15 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube16 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube17 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube18 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube19 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube20 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \        long cube21 = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6qw51wq5.java:47: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmp6qw51wq5.java:48: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp6qw51wq5.java:48: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp6qw51wq5.java:48:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp6qw51wq5.java:48: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmp6qw51wq5.java:48:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp6qw51wq5.java:59: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = b;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo2u1bx4m.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpo2u1bx4m.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n   \
    \     long D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1\
    \ = 1;\n        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n   \
    \     long K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1\
    \ = 1;\n        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n   \
    \     long R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1\
    \ = 1;\n        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n   \
    \     long Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2\
    \ = 1;\n        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n   \
    \     long F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2\
    \ = 1;\n        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n   \
    \     long M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2\
    \ = 1;\n        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n   \
    \     long T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkge08039.java:125: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l) return true;\n        if (a == 2l) return\
    \ true;\n        if (a == 3l) return true;\n        if (a == 4l) return true;\n\
    \        if (a == 5l) return true;\n        if (a == 6l) return true;\n      \
    \  if (a == 7l) return true;\n        if (a == 8l) return true;\n        if (a\
    \ == 9l) return true;\n        if (a == 10l) return true;\n        if (a == 11l)\
    \ return true;\n        if (a == 12l) return true;\n        if (a == 13l) return\
    \ true;\n        if (a == 14l) return true;\n        if (a == 15l) return true;\n\
    \        if (a == 16l) return true;\n        if (a == 17l) return true;\n    \
    \    if (a == 18l) return true;\n        if (a == 19l) return true;\n        if\
    \ (a == 20l) return true;\n        if (a == 21l) return true;\n        if (a ==\
    \ 22l) return true;\n        if (a == 23l) return true;\n        if (a == 24l)\
    \ return true;\n        if (a == 25l) return true;\n        if (a == 26l) return\
    \ true;\n        if (a == 27l) return true;\n        if (a == 28l) return true;\n\
    \        if (a == 29l) return true;\n        if (a == 30l) return true;\n    \
    \    if (a == 31l) return true;\n        if (a == 32l) return true;\n        if\
    \ (a == 33l) return true;\n        if (a == 34l) return true;\n        if (a ==\
    \ 35l) return true;\n        if (a == 36l) return true;\n        if (a == 37l)\
    \ return true;\n        if (a == 38l) return true;\n        if (a == 39l) return\
    \ true;\n        if (a == 40l) return true;\n        if (a == 41l) return true;\n\
    \        if (a == 42l) return true;\n        if (a == 43l) return true;\n    \
    \    if (a == 44l) return true;\n        if (a == 45l) return true;\n        if\
    \ (a == 46l) return true;\n        if (a == 47l) return true;\n        if (a ==\
    \ 48l) return true;\n        if (a == 49l) return true;\n        if (a == 50l)\
    \ return true;\n        if (a == 51l) return true;\n        if (a == 52l) return\
    \ true;\n        if (a == 53l) return true;\n        if (a == 54l) return true;\n\
    \        if (a == 55l) return true;\n        if (a == 56l) return true;\n    \
    \    if (a == 57l) return true;\n        if (a == 58l) return true;\n        if\
    \ (a == 59l) return true;\n        if (a == 60l) return true;\n        if (a ==\
    \ 61l) return true;\n        if (a == 62l) return true;\n        if (a == 63l)\
    \ return true;\n        if (a == 64l) return true;\n        if (a == 65l) return\
    \ true;\n        if (a == 66l) return true;\n        if (a == 67l) return true;\n\
    \        if (a == 68l) return true;\n        if (a == 69l) return true;\n    \
    \    if (a == 70l) return true;\n        if (a == 71l) return true;\n        if\
    \ (a == 72l) return true;\n        if (a == 73l) return true;\n        if (\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2vbkd6na.java:100: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmp2vbkd6na.java:101: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp2vbkd6na.java:101: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp2vbkd6na.java:101: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp2vbkd6na.java:112: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        long cube = LongStream.rangeClosed(1, a).filter(i -> i * i * i == a).count();\n\
    \        return cube == 3;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0xuqhoyo.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        if (a % 3 == 0) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmparu9q8j_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0)\
    \ && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0)\
    \ && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0) && (a%8192==0) &&\
    \ (a%16384==0) && (a%32768==0) && (a%65536==0) && (a%131072==0) && (a%262144==0)\
    \ && (a%524288==0) && (a%1048576==0) && (a%2097152==0) && (a%4194304==0) && (a%8388608==0)\
    \ && (a%16777216==0) && (a%33554432==0) && (a%67108864==0) && (a%134217728==0)\
    \ && (a%268435456==0) && (a%536870912==0) && (a%1073741824==0) && (a%2147483648==0)\
    \ && (a%4294967296==0) && (a%8589934592==0) && (a%17179869184==0) && (a%34359738368==0)\
    \ && (a%68719476736==0) && (a%137438953472==0) && (a%274877906944==0) && (a%549755813888==0)\
    \ && (a%1099511627776==0) && (a%2199023255552==0) && (a%4398046511104==0) && (a%8796093022208==0)\
    \ && (a%17592186044416==0) && (a%35184372088832==0) && (a%70368744177664==0) &&\
    \ (a%140737488355328==0) && (a%281474976710656==0) && (a%562949953421312==0) &&\
    \ (a%1125899906842624==0) && (a%2251799813685248==0) && (a%4503599627370496==0)\
    \ && (a%9007199254740992==0) && (a%18014398509481984==0) && (a%36028797018963968==0)\
    \ && (a%72057594037927936==0) && (a%1407374883553280==0) && (a%2814749767106552==0)\
    \ && (a%562949953421312==0) && (a%1125899906842624==0) && (a%22517998\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpchp1lj3d.java:26: error: integer number too large: 2147483648\n\
    \        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0) && (a%8==0) && (a%16==0)\
    \ && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0)\
    \ && (a%2048==0) && (a%4096==0) && (a%8192==0) && (a%16384==0) && (a%32768==0)\
    \ && (a%65536==0) && (a%131072==0) && (a%262144==0) && (a%524288==0) && (a%1048576==0)\
    \ && (a%2097152==0) && (a%4194304==0) && (a%8388608==0) && (a%16777216==0) &&\
    \ (a%33554432==0) && (a%67108864==0) && (a%134217728==0) && (a%268435456==0) &&\
    \ (a%536870912==0) && (a%1073741824==0) && (a%2147483648==0) && (a%4294967296==0)\
    \ && (a%8589934592==0) && (a%17179869184==0) && (a%34359738368==0) && (a%68719476736==0)\
    \ && (a%137438953472==0) && (a%274877906944==0) && (a%549755813888==0) && (a%1099511627776==0)\
    \ && (a%2199023255552==0) && (a%4398046511104==0) && (a%8796093022208==0) && (a%17592186044416==0)\
    \ && (a%35184372088832==0) && (a%70368744177664==0) && (a%140737488355328==0)\
    \ && (a%281474976710656==0) && (a%562949953421312==0) && (a%1125899906842624==0)\
    \ && (a%2251799813685248==0) && (a%4503599627370496==0) && (a%9007199254740992==0)\
    \ && (a%18014398509481984==0) && (a%36028797018963968==0) && (a%72057594037927936==0)\
    \ && (a%1407374883553280==0) && (a%2814749767106552==0) && (a%562949953421312==0)\
    \ && (a%1125899906842624==0) && (a%22517998\n                                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                        ^\n/tmp/tmpchp1lj3d.java:26: error: integer\
    \ number too large: 4294967296\n        return (a%1==0) && (a%2==0) && (a%3==0)\
    \ && (a%4==0) && (a%8==0) && (a%16==0) && (a%32=="
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnruln_1.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgnruln_1.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk9q2necs.java:128: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpk9q2necs.java:129: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpk9q2necs.java:129: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpk9q2necs.java:129: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmpk9q2necs.java:129:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpk9q2necs.java:140: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = a;\n        long d =\
    \ a;\n        long e = a;\n        long f = a;\n        long g = a;\n        long\
    \ h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n    \
    \    long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long aa = a;\n        long ab = a;\n        long ac = a;\n        long\
    \ ad = a;\n        long ae = a;\n        long af = a;\n        long ag = a;\n\
    \        long ah = a;\n        long ai = a;\n        long aj = a;\n        long\
    \ ak = a;\n        long al = a;\n        long am = a;\n        long an = a;\n\
    \        long ao = a;\n        long ap = a;\n        long aq = a;\n        long\
    \ ar = a;\n        long as = a;\n        long at = a;\n        long au = a;\n\
    \        long av = a;\n        long aw = a;\n        long ax = a;\n        long\
    \ ay = a;\n        long az = a;\n        long ba = a;\n        long bb = a;\n\
    \        long bc = a;\n        long bd = a;\n        long be = a;\n        long\
    \ bf = a;\n        long bg = a;\n        long bh = a;\n        long bi = a;\n\
    \        long bj = a;\n        long bk = a;\n        long bl = a;\n        long\
    \ bm = a;\n        long bn = a;\n        long bo = a;\n        long bp = a;\n\
    \        long bq = a;\n        long br = a;\n        long bs = a;\n        long\
    \ bt = a;\n        long bu = a;\n        long bv = a;\n        long bw = a;\n\
    \        long bx = a;\n        long by = a;\n        long bz = a;\n        long\
    \ ca = a;\n        long cb = a;\n        long cc = a;\n        long cd = a;\n\
    \        long ce = a;\n        long cf = a;\n        long cg = a;\n        long\
    \ ch = a;\n        long ci = a;\n        long cj = a;\n        long ck = a;\n\
    \        long cl = a;\n        long cm\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0f0mfe0t.java:115: error: ';' expected\n        long cm\n     \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l)\n            return true;\n        if\
    \ (a == 2l)\n            return true;\n        if (a == 3l)\n            return\
    \ true;\n        if (a == 4l)\n            return true;\n        if (a == 5l)\n\
    \            return true;\n        if (a == 6l)\n            return true;\n  \
    \      if (a == 7l)\n            return true;\n        if (a == 8l)\n        \
    \    return true;\n        if (a == 9l)\n            return true;\n        if\
    \ (a == 10l)\n            return true;\n        if (a == 11l)\n            return\
    \ true;\n        if (a == 12l)\n            return true;\n        if (a == 13l)\n\
    \            return true;\n        if (a == 14l)\n            return true;\n \
    \       if (a == 15l)\n            return true;\n        if (a == 16l)\n     \
    \       return true;\n        if (a == 17l)\n            return true;\n      \
    \  if (a == 18l)\n            return true;\n        if (a == 19l)\n          \
    \  return true;\n        if (a == 20l)\n            return true;\n        if (a\
    \ == 21l)\n            return true;\n        if (a == 22l)\n            return\
    \ true;\n        if (a == 23l)\n            return true;\n        if (a == 24l)\n\
    \            return true;\n        if (a == 25l)\n            return true;\n \
    \       if (a == 26l)\n            return true;\n        if (a == 27l)\n     \
    \       return true;\n        if (a == 28l)\n            return true;\n      \
    \  if (a == 29l)\n            return true;\n        if (a == 30l)\n          \
    \  return true;\n        if (a == 31l)\n            return true;\n        if (a\
    \ == 32l)\n            return true;\n        if (a == 33l)\n            return\
    \ true;\n        if (a == 34l)\n            return true;\n        if (a == 35l)\n\
    \            return true;\n        if (a == 36l)\n            return true;\n \
    \       if (a == 37l)\n            return true;\n        if (a == 38l)\n     \
    \       return true;\n        if (a == 39l)\n            return true;\n      \
    \  if (a == 40l)\n            return true;\n        if (a == 41l)\n          \
    \  return true;\n        if (a == 42l)\n            return true;\n        if (a\
    \ == 43l)\n            return true;\n        if (a == 44l)\n            return\
    \ true;\n        if (a == 45l)\n            return true;\n        if (a == 46l)\n\
    \            return true;\n        if (a == 47l)\n            return true;\n \
    \       if (a == 48l)\n            return true;\n        if (a == 49l)\n     \
    \       return true;\n        if (a == 50l)\n            return true;\n      \
    \  if (a == 51l)\n            return true;\n        if (a == 52l)\n          \
    \  return true;\n        if (a == 53l)\n            return true;\n        if (a\
    \ == 54l)\n            return true;\n        if (a == 55l)\n            return\
    \ true;\n        if (a == 56l)\n            return true;\n        if (a == 57l)\n\
    \            return true;\n        if (a == 58l)\n            return true;\n \
    \       if (a == 59l)\n            return true;\n        if (a == 60l)\n     \
    \       return true;\n        if (a == 61l)\n            return true;\n      \
    \  if (a == 62l)\n            return true;\n        if (a == 63l)\n          \
    \  return true;\n        if (a == 64l)\n            return true;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv0i8oe83.java:155: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8p5k76rq.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l) return true;\n        if (a == 2l) return\
    \ true;\n        if (a == 3l) return true;\n        if (a == 4l) return true;\n\
    \        if (a == 5l) return true;\n        if (a == 6l) return true;\n      \
    \  if (a == 7l) return true;\n        if (a == 8l) return true;\n        if (a\
    \ == 9l) return true;\n        if (a == 10l) return true;\n        if (a == 11l)\
    \ return true;\n        if (a == 12l) return true;\n        if (a == 13l) return\
    \ true;\n        if (a == 14l) return true;\n        if (a == 15l) return true;\n\
    \        if (a == 16l) return true;\n        if (a == 17l) return true;\n    \
    \    if (a == 18l) return true;\n        if (a == 19l) return true;\n        if\
    \ (a == 20l) return true;\n        if (a == 21l) return true;\n        if (a ==\
    \ 22l) return true;\n        if (a == 23l) return true;\n        if (a == 24l)\
    \ return true;\n        if (a == 25l) return true;\n        if (a == 26l) return\
    \ true;\n        if (a == 27l) return true;\n        if (a == 28l) return true;\n\
    \        if (a == 29l) return true;\n        if (a == 30l) return true;\n    \
    \    if (a == 31l) return true;\n        if (a == 32l) return true;\n        if\
    \ (a == 33l) return true;\n        if (a == 34l) return true;\n        if (a ==\
    \ 35l) return true;\n        if (a == 36l) return true;\n        if (a == 37l)\
    \ return true;\n        if (a == 38l) return true;\n        if (a == 39l) return\
    \ true;\n        if (a == 40l) return true;\n        if (a == 41l) return true;\n\
    \        if (a == 42l) return true;\n        if (a == 43l) return true;\n    \
    \    if (a == 44l) return true;\n        if (a == 45l) return true;\n        if\
    \ (a == 46l) return true;\n        if (a == 47l) return true;\n        if (a ==\
    \ 48l) return true;\n        if (a == 49l) return true;\n        if (a == 50l)\
    \ return true;\n        if (a == 51l) return true;\n        if (a == 52l) return\
    \ true;\n        if (a == 53l) return true;\n        if (a == 54l) return true;\n\
    \        if (a == 55l) return true;\n        if (a == 56l) return true;\n    \
    \    if (a == 57l) return true;\n        if (a == 58l) return true;\n        if\
    \ (a == 59l) return true;\n        if (a == 60l) return true;\n        if (a ==\
    \ 61l) return true;\n        if (a == 62l) return true;\n        if (a == 63l)\
    \ return true;\n        if (a == 64l) return true;\n        if (a == 65l) return\
    \ true;\n        if (a == 66l) return true;\n        if (a == 67l) return true;\n\
    \        if (a == 68l) return true;\n        if (a == 69l) return true;\n    \
    \    if (a == 70l) return true;\n        if (a == 71l) return true;\n        if\
    \ (a == 72l) return true;\n        if (a == 73l) return true;\n        if (\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2vbkd6na.java:100: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmp2vbkd6na.java:101: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp2vbkd6na.java:101: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp2vbkd6na.java:101: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmp2vbkd6na.java:101:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp2vbkd6na.java:112: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%5==0&&a%6==0&&a%7==0&&a%8==0&&a%9==0&&a%10==0&&a%11==0&&a%12==0&&a%13==0&&a%14==0&&a%15==0&&a%16==0&&a%17==0&&a%18==0&&a%19==0&&a%20==0&&a%21==0&&a%22==0&&a%23==0&&a%24==0&&a%25==0&&a%26==0&&a%27==0&&a%28==0&&a%29==0&&a%30==0&&a%31==0&&a%32==0&&a%33==0&&a%34==0&&a%35==0&&a%36==0&&a%37==0&&a%38==0&&a%39==0&&a%40==0&&a%41==0&&a%42==0&&a%43==0&&a%44==0&&a%45==0&&a%46==0&&a%47==0&&a%48==0&&a%49==0&&a%50==0&&a%51==0&&a%52==0&&a%53==0&&a%54==0&&a%55==0&&a%56==0&&a%57==0&&a%58==0&&a%59==0&&a%60==0&&a%61==0&&a%62==0&&a%63==0&&a%64==0&&a%65==0&&a%66==0&&a%67==0&&a%68==0&&a%69==0&&a%70==0&&a%71==0&&a%72==0&&a%73==0&&a%74==0&&a%75==0&&a%76==0&&a%77==0&&a%78==0&&a%79==0&&a%80==0&&a%81==0&&a%82==0&&a%83==0&&a%84==0&&a%85==0&&a%86==\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3rq89rot.java:27: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmp3rq89rot.java:28: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp3rq89rot.java:28: error: ';'\
    \ expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp3rq89rot.java:28:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp3rq89rot.java:28: error: ';' expected\n    public\
    \ static void main(String[] args) {\n                           ^\n/tmp/tmp3rq89rot.java:28:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp3rq89rot.java:39: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl5xpge5x.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long a\
    \ = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = \n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2o5u7jon.java:130: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmp2o5u7jon.java:131: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp2o5u7jon.java:131: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmp2o5u7jon.java:131:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmp2o5u7jon.java:131: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmp2o5u7jon.java:131:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmp2o5u7jon.java:142: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgnruln_1.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpgnruln_1.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsg4a6lyp.java:32)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().getAsLong();\n        return cube != 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None

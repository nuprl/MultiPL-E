language: java
name: HumanEval_14_all_prefixes
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx_6pfnt2.java:14: error: cannot find symbol\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        ^\n  symbol:   method allPrefixesRecursive(String,String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm0y4jwro.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found: String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm0y4jwro.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found: String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       allPrefixes(string, \"\", prefixes);\n        return prefixes;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyl8grrja.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", prefixes);\n \
    \       ^\n  required: String\n  found: String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx_6pfnt2.java:14: error: cannot find symbol\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        ^\n  symbol:   method allPrefixesRecursive(String,String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixes(string, \"\", result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgjk5j3az.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found: String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       prefixes.add(\"\");\n        prefixes.add(string);\n        prefixes.add(string.substring(0,\
    \ string.length() - 1));\n        prefixes.add(string.substring(0, string.length()\
    \ - 2));\n        prefixes.add(string.substring(0, string.length() - 3));\n  \
    \      prefixes.add(string.substring(0, string.length() - 4));\n        prefixes.add(string.substring(0,\
    \ string.length() - 5));\n        prefixes.add(string.substring(0, string.length()\
    \ - 6));\n        prefixes.add(string.substring(0, string.length() - 7));\n  \
    \      prefixes.add(string.substring(0, string.length() - 8));\n        prefixes.add(string.substring(0,\
    \ string.length() - 9));\n        prefixes.add(string.substring(0, string.length()\
    \ - 10));\n        prefixes.add(string.substring(0, string.length() - 11));\n\
    \        prefixes.add(string.substring(0, string.length() - 12));\n        prefixes.add(string.substring(0,\
    \ string.length() - 13));\n        prefixes.add(string.substring(0, string.length()\
    \ - 14));\n        prefixes.add(string.substring(0, string.length() - 15));\n\
    \        prefixes.add(string.substring(0, string.length() - 16));\n        prefixes.add(string.substring(0,\
    \ string.length() - 17));\n        prefixes.add(string.substring(0, string.length()\
    \ - 18));\n        prefixes.add(string.substring(0, string.length() - 19));\n\
    \        prefixes.add(string.substring(0, string.length() - 20));\n        prefixes.add(string.substring(0,\
    \ string.length() - 21));\n        prefixes.add(string.substring(0, string.length()\
    \ - 22));\n        prefixes.add(string.substring(0, string.length() - 23));\n\
    \        prefixes.add(string.substring(0, string.length() - 24));\n        prefixes.add(string.substring(0,\
    \ string.length() - 25));\n        prefixes.add(string.substring(0, string.length()\
    \ - 26));\n        prefixes.add(string.substring(0, string.length() - 27));\n\
    \        prefixes.add(string.substring(0, string.length() - 28));\n        prefixes.add(string.substring(0,\
    \ string.length() - 29));\n        prefixes.add(string.substring(0, string.length()\
    \ - 30));\n        prefixes.add(string.substring(0, string.length() - 31));\n\
    \        prefixes.add(string.substring(0, string.length() - 32));\n        prefixes.add(string.substring(0,\
    \ string.length() - 33));\n        prefixes.add(string.substring(0, string.length()\
    \ - 34));\n        prefixes.add(string.substring(0, string.length() - 35));\n\
    \        prefixes.add(string.substring(0, string.length() - 36));\n        prefixes.add(string.substring(0,\
    \ string.length() - 37));\n        prefixes.add(string.substring(0, string.length()\
    \ - 38));\n        prefixes.add(string.substring(0, string.length() - 39));\n\
    \        prefixes.add(string.substring(0, string.length() - 40));\n        prefixes.add(string.substring(0,\
    \ string.length() - 41));\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvjzelz1k.java:57: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixes(string, \"\", result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgjk5j3az.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found: String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx_6pfnt2.java:14: error: cannot find symbol\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        ^\n  symbol:   method allPrefixesRecursive(String,String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       allPrefixes(string, \"\", prefixes);\n        return prefixes;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyl8grrja.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", prefixes);\n \
    \       ^\n  required: String\n  found: String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixes(string, \"\", result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgjk5j3az.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found: String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixes(string, \"\", result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgjk5j3az.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found: String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixes(string, \"\", result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgjk5j3az.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found: String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixes(string, \"\", result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgjk5j3az.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found: String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       prefixes.add(\"\");\n        prefixes.addAll(allPrefixesRec(string, \"\
    \", prefixes));\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp76_7ble3.java:15: error: cannot find symbol\n        prefixes.addAll(allPrefixesRec(string,\
    \ \"\", prefixes));\n                        ^\n  symbol:   method allPrefixesRec(String,String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm0y4jwro.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found: String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       ArrayList<String> prefixes2 = new ArrayList<String>();\n        ArrayList<String>\
    \ prefixes3 = new ArrayList<String>();\n        ArrayList<String> prefixes4 =\
    \ new ArrayList<String>();\n        ArrayList<String> prefixes5 = new ArrayList<String>();\n\
    \        ArrayList<String> prefixes6 = new ArrayList<String>();\n        ArrayList<String>\
    \ prefixes7 = new ArrayList<String>();\n        ArrayList<String> prefixes8 =\
    \ new ArrayList<String>();\n        ArrayList<String> prefixes9 = new ArrayList<String>();\n\
    \        ArrayList<String> prefixes10 = new ArrayList<String>();\n        ArrayList<String>\
    \ prefixes11 = new ArrayList<String>();\n        ArrayList<String> prefixes12\
    \ = new ArrayList<String>();\n        ArrayList<String> prefixes13 = new ArrayList<String>();\n\
    \        ArrayList<String> prefixes14 = new ArrayList<String>();\n        ArrayList<String>\
    \ prefixes15 = new ArrayList<String>();\n        ArrayList<String> prefixes16\
    \ = new ArrayList<String>();\n        ArrayList<String> prefixes17 = new ArrayList<String>();\n\
    \        ArrayList<String> prefixes18 = new ArrayList<String>();\n        ArrayList<String>\
    \ prefixes19 = new ArrayList<String>();\n        ArrayList<String> prefixes20\
    \ = new ArrayList<String>();\n        ArrayList<String> prefixes21 = new ArrayList<String>();\n\
    \        ArrayList<String> prefixes22 = new ArrayList<String>();\n        ArrayList<String>\
    \ prefixes23 = new ArrayList<String>();\n        ArrayList<String> prefixes24\
    \ = new ArrayList<String>();\n        ArrayList<String> prefixes25 = new ArrayList<String>();\n\
    \        ArrayList<String> prefixes26 = new ArrayList<String>();\n        ArrayList<String>\
    \ prefixes27 = new ArrayList<String>();\n        ArrayList<String> prefixes28\
    \ = new ArrayList<String>();\n        ArrayList<String> prefixes29 = new ArrayList<String>();\n\
    \        ArrayList<String> prefixes30 = new ArrayList<String>();\n        ArrayList<String>\
    \ prefixes31 = new ArrayList<String>();\n        ArrayList<String> prefixes32\
    \ = new ArrayList<String>();\n        ArrayList<String> prefixes33 = new ArrayList<String>();\n\
    \        ArrayList<String> prefixes34 = new ArrayList<String>();\n        ArrayList<String>\
    \ prefixes35 = new ArrayList<String>();\n        ArrayList<String> prefixes36\
    \ = new ArrayList<String>();\n        ArrayList<String> prefixes37 = new ArrayList<String>();\n\
    \        ArrayList<String> prefixes38 = new ArrayList<String>();\n        ArrayList<String>\
    \ prefixes39 = new ArrayList<String>();\n        ArrayList<String> prefixes40\
    \ = new ArrayList<String>();\n        ArrayList<String> prefixes41 = new ArrayList<String>();\n\
    \        ArrayList<String> prefixes42 = new ArrayList<String>();\n        ArrayList<String>\
    \ prefixes43 = new ArrayList<String>();\n        ArrayList<String> prefixes44\
    \ = new ArrayList<String>();\n        ArrayList<String> prefixes45 = new ArrayList<String>();\n\
    \        ArrayList<String> prefixes46 = new ArrayList<String>();\n        \n \
    \   }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7k6u_6zv.java:60: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       prefixes.add(\"\");\n        prefixes.add(string);\n        prefixes.add(string.substring(0,\
    \ string.length() - 1));\n        prefixes.add(string.substring(0, string.length()\
    \ - 2));\n        prefixes.add(string.substring(0, string.length() - 3));\n  \
    \      prefixes.add(string.substring(0, string.length() - 4));\n        prefixes.add(string.substring(0,\
    \ string.length() - 5));\n        prefixes.add(string.substring(0, string.length()\
    \ - 6));\n        prefixes.add(string.substring(0, string.length() - 7));\n  \
    \      prefixes.add(string.substring(0, string.length() - 8));\n        prefixes.add(string.substring(0,\
    \ string.length() - 9));\n        prefixes.add(string.substring(0, string.length()\
    \ - 10));\n        prefixes.add(string.substring(0, string.length() - 11));\n\
    \        prefixes.add(string.substring(0, string.length() - 12));\n        prefixes.add(string.substring(0,\
    \ string.length() - 13));\n        prefixes.add(string.substring(0, string.length()\
    \ - 14));\n        prefixes.add(string.substring(0, string.length() - 15));\n\
    \        prefixes.add(string.substring(0, string.length() - 16));\n        prefixes.add(string.substring(0,\
    \ string.length() - 17));\n        prefixes.add(string.substring(0, string.length()\
    \ - 18));\n        prefixes.add(string.substring(0, string.length() - 19));\n\
    \        prefixes.add(string.substring(0, string.length() - 20));\n        prefixes.add(string.substring(0,\
    \ string.length() - 21));\n        prefixes.add(string.substring(0, string.length()\
    \ - 22));\n        prefixes.add(string.substring(0, string.length() - 23));\n\
    \        prefixes.add(string.substring(0, string.length() - 24));\n        prefixes.add(string.substring(0,\
    \ string.length() - 25));\n        prefixes.add(string.substring(0, string.length()\
    \ - 26));\n        prefixes.add(string.substring(0, string.length() - 27));\n\
    \        prefixes.add(string.substring(0, string.length() - 28));\n        prefixes.add(string.substring(0,\
    \ string.length() - 29));\n        prefixes.add(string.substring(0, string.length()\
    \ - 30));\n        prefixes.add(string.substring(0, string.length() - 31));\n\
    \        prefixes.add(string.substring(0, string.length() - 32));\n        prefixes.add(string.substring(0,\
    \ string.length() - 33));\n        prefixes.add(string.substring(0, string.length()\
    \ - 34));\n        prefixes.add(string.substring(0, string.length() - 35));\n\
    \        prefixes.add(string.substring(0, string.length() - 36));\n        prefixes.add(string.substring(0,\
    \ string.length() - 37));\n        prefixes.add(string.substring(0, string.length()\
    \ - 38));\n        prefixes.add(string.substring(0, string.length() - 39));\n\
    \        prefixes.add(string.substring(0, string.length() - 40));\n        prefixes.add(string.substring(0,\
    \ string.length() - 41));\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvjzelz1k.java:57: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       prefixes.add(\"\");\n        prefixes.add(string);\n        prefixes.add(string.substring(0,\
    \ string.length() - 1));\n        prefixes.add(string.substring(0, string.length()\
    \ - 2));\n        prefixes.add(string.substring(0, string.length() - 3));\n  \
    \      prefixes.add(string.substring(0, string.length() - 4));\n        prefixes.add(string.substring(0,\
    \ string.length() - 5));\n        prefixes.add(string.substring(0, string.length()\
    \ - 6));\n        prefixes.add(string.substring(0, string.length() - 7));\n  \
    \      prefixes.add(string.substring(0, string.length() - 8));\n        prefixes.add(string.substring(0,\
    \ string.length() - 9));\n        prefixes.add(string.substring(0, string.length()\
    \ - 10));\n        prefixes.add(string.substring(0, string.length() - 11));\n\
    \        prefixes.add(string.substring(0, string.length() - 12));\n        prefixes.add(string.substring(0,\
    \ string.length() - 13));\n        prefixes.add(string.substring(0, string.length()\
    \ - 14));\n        prefixes.add(string.substring(0, string.length() - 15));\n\
    \        prefixes.add(string.substring(0, string.length() - 16));\n        prefixes.add(string.substring(0,\
    \ string.length() - 17));\n        prefixes.add(string.substring(0, string.length()\
    \ - 18));\n        prefixes.add(string.substring(0, string.length() - 19));\n\
    \        prefixes.add(string.substring(0, string.length() - 20));\n        prefixes.add(string.substring(0,\
    \ string.length() - 21));\n        prefixes.add(string.substring(0, string.length()\
    \ - 22));\n        prefixes.add(string.substring(0, string.length() - 23));\n\
    \        prefixes.add(string.substring(0, string.length() - 24));\n        prefixes.add(string.substring(0,\
    \ string.length() - 25));\n        prefixes.add(string.substring(0, string.length()\
    \ - 26));\n        prefixes.add(string.substring(0, string.length() - 27));\n\
    \        prefixes.add(string.substring(0, string.length() - 28));\n        prefixes.add(string.substring(0,\
    \ string.length() - 29));\n        prefixes.add(string.substring(0, string.length()\
    \ - 30));\n        prefixes.add(string.substring(0, string.length() - 31));\n\
    \        prefixes.add(string.substring(0, string.length() - 32));\n        prefixes.add(string.substring(0,\
    \ string.length() - 33));\n        prefixes.add(string.substring(0, string.length()\
    \ - 34));\n        prefixes.add(string.substring(0, string.length() - 35));\n\
    \        prefixes.add(string.substring(0, string.length() - 36));\n        prefixes.add(string.substring(0,\
    \ string.length() - 37));\n        prefixes.add(string.substring(0, string.length()\
    \ - 38));\n        prefixes.add(string.substring(0, string.length() - 39));\n\
    \        prefixes.add(string.substring(0, string.length() - 40));\n        prefixes.add(string.substring(0,\
    \ string.length() - 41));\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvjzelz1k.java:57: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixes(string, \"\", result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgjk5j3az.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found: String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''

name: HumanEval_135_can_arrange
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Create a function which returns the largest index of an\
  \ element which\n    // is not greater than or equal to the element immediately\
  \ preceding it. If\n    // no such element exists then return -1. The given array\
  \ array list will not contain\n    // duplicate values.\n    // Examples:\n    //\
  \ >>> canArrange((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l,\
  \ (long)3l, (long)5l))))\n    // (3l)\n    // >>> canArrange((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l))))\n    // (-1l)\n    public static long canArrange(ArrayList<Long>\
  \ arr) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(canArrange((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)3l, (long)5l))))\
  \ == (3l));\n    assert(canArrange((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)4l, (long)5l)))) == (-1l));\n    assert(canArrange((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)4l, (long)2l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)10l))))\
  \ == (2l));\n    assert(canArrange((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)8l, (long)5l, (long)7l, (long)3l)))) == (4l));\n    assert(canArrange((new\
  \ ArrayList<Long>(Arrays.asList()))) == (-1l));\n    }\n\n}\n"
completions: ["        long maxIndex = -1;\n        long maxValue = -1;\n        long\
    \ currentValue = -1;\n        for(int i = 0; i < arr.size(); i++) {\n        \
    \    currentValue = arr.get(i);\n            if(currentValue >= maxValue) {\n\
    \                maxIndex = i;\n                maxValue = currentValue;\n   \
    \         }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = -1;\n        long currentValue = -1;\n        long currentIndex\
    \ = -1;\n        for (long index = 0; index < arr.size(); index++) {\n       \
    \     currentValue = arr.get(index);\n            if (currentValue > maxValue)\
    \ {\n                maxValue = currentValue;\n                maxIndex = index;\n\
    \            }\n            if (currentValue == maxValue) {\n                currentIndex++;\n\
    \            }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            if(arr.get(i) > max) {\n                max = arr.get(i);\n     \
    \           maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        for(long i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if(currentValue >= maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = currentValue;\n            }\n        }\n \
    \       return maxIndex;", "        long maxIndex = -1;\n        long currentIndex\
    \ = -1;\n        long prevIndex = -1;\n        for(long i : arr) {\n         \
    \   currentIndex = i;\n            prevIndex = currentIndex - 1;\n           \
    \ if(prevIndex >= 0) {\n                if(prevIndex > maxIndex) {\n         \
    \           maxIndex = prevIndex;\n                }\n            }\n        }\n\
    \        return maxIndex;", "        long largest = -1;\n        long curr = arr.get(0);\n\
    \        long prev = arr.get(0);\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) > curr) {\n                largest = i;\n    \
    \            curr = arr.get(i);\n            } else if (arr.get(i) < prev) {\n\
    \                largest = i;\n                prev = arr.get(i);\n          \
    \  }\n        }\n        return largest;", "        long maxIndex = -1;\n    \
    \    long maxValue = arr.get(0);\n        long currentValue = arr.get(0);\n  \
    \      for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > currentValue)\
    \ {\n                currentValue = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxVal = arr.get(0);\n        long currentVal = arr.get(0);\n\
    \        for(int i = 1; i < arr.size(); i++) {\n            currentVal = arr.get(i);\n\
    \            if(currentVal > maxVal) {\n                maxIndex = i;\n      \
    \          maxVal = currentVal;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if(currentValue >= maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = currentValue;\n            }\n        }\n \
    \       return maxIndex;", "        long maxIndex = -1;\n        long maxVal =\
    \ -1;\n        long currentVal = -1;\n        for(long i : arr) {\n          \
    \  currentVal = i;\n            for(long j : arr) {\n                if(j > currentVal)\
    \ {\n                    currentVal = j;\n                }\n            }\n \
    \           if(maxVal < currentVal) {\n                maxIndex = currentVal;\n\
    \                maxVal = currentVal;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long currentMax = arr.get(0);\n\
    \        long currentIndex = 0;\n        for (long i : arr) {\n            if\
    \ (i <= currentMax) {\n                currentMax = i;\n                currentIndex\
    \ = i;\n            }\n        }\n        if (currentIndex != maxIndex) {\n  \
    \          maxIndex = currentIndex;\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr.get(0);\n        long\
    \ currentIndex = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n\
    \            if(arr.get(i) <= maxValue) {\n                currentIndex = arr.get(i);\n\
    \            }\n            if(arr.get(i) > maxValue) {\n                maxIndex\
    \ = currentIndex;\n                maxValue = arr.get(i);\n            }\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr.get(0);\n        long currentValue = arr.get(0);\n        for(int\
    \ i = 1; i < arr.size(); i++) {\n            if(currentValue < arr.get(i)) {\n\
    \                currentValue = arr.get(i);\n            }\n            if(currentValue\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ -1;\n        long current = -1;\n        long previous = -1;\n        for (long\
    \ i : arr) {\n            if (current == -1) {\n                current = i;\n\
    \                previous = i;\n            } else if (current > i) {\n      \
    \          current = i;\n                previous = current;\n            } else\
    \ if (current == i) {\n                previous = current;\n            }\n  \
    \      }\n        if (largest == -1) {\n            largest = current;\n     \
    \   } else {\n            if (largest < current) {\n                largest =\
    \ current;\n            }\n        }\n        return largest;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr.get(0);\n        for (int i = 1;\
    \ i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n         \
    \       maxValue = arr.get(i);\n                maxIndex = i;\n            }\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n   \
    \         if (arr.get(i) >= maxValue) {\n                maxIndex = i;\n     \
    \           maxValue = arr.get(i);\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n        long\
    \ currentValue = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > currentValue) {\n                currentValue =\
    \ arr.get(i);\n                maxIndex = i;\n            }\n        }\n     \
    \   return maxIndex;", "        long maxIndex = -1;\n        long currentIndex\
    \ = 0;\n        long maxValue = arr.get(0);\n        for (long value : arr) {\n\
    \            if (value >= maxValue) {\n                currentIndex++;\n     \
    \           maxValue = value;\n            }\n            if (currentIndex ==\
    \ maxIndex) {\n                maxIndex = currentIndex;\n            }\n     \
    \   }\n        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = -1;\n        long currentValue = -1;\n        long previousValue = -1;\n \
    \       for(int i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n\
    \            if(currentValue > maxValue) {\n                maxValue = currentValue;\n\
    \                maxIndex = i;\n            }\n            if(currentValue ==\
    \ previousValue) {\n                maxIndex = -1;\n            }\n          \
    \  previousValue = currentValue;\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long maxValue = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >= maxValue) {\n \
    \               maxIndex = i;\n                maxValue = arr.get(i);\n      \
    \      }\n        }\n        return maxIndex;", "        long largest = -1;\n\
    \        long previous = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            if(arr.get(i) < arr.get(i-1)) {\n                previous = arr.get(i);\n\
    \            }\n            else if(arr.get(i) > arr.get(i-1)) {\n           \
    \     largest = previous;\n            }\n        }\n        return largest;",
  "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxVal) {\n    \
    \            maxVal = arr.get(i);\n                maxIndex = i;\n           \
    \ }\n        }\n        return maxIndex;", "        long largest = -1;\n     \
    \   long current = arr.get(0);\n        long previous = arr.get(0);\n        for\
    \ (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >= current) {\n\
    \                largest = i;\n                current = arr.get(i);\n       \
    \     } else if (arr.get(i) < current) {\n                largest = -1;\n    \
    \        }\n        }\n        return largest;", "        long maxIndex = -1;\n\
    \        long maxValue = arr.get(0);\n        long currentValue = arr.get(0);\n\
    \        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > currentValue)\
    \ {\n                currentValue = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           if(arr.get(i) > max) {\n                max = arr.get(i);\n      \
    \          maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long largest = -1;\n        long index = -1;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(index)) {\n     \
    \           index = i;\n            }\n        }\n        if(index != -1) {\n\
    \            largest = index;\n        }\n        return largest;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr.get(0);\n        long currentIndex\
    \ = 0;\n        for (long value : arr) {\n            if (value >= maxValue) {\n\
    \                maxIndex = currentIndex;\n                maxValue = value;\n\
    \            }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        long previousValue = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            currentValue = arr.get(i);\n            if(currentValue\
    \ > maxValue) {\n                maxValue = currentValue;\n                maxIndex\
    \ = i;\n            }\n            if(currentValue == previousValue) {\n     \
    \           maxIndex = -1;\n            }\n            previousValue = currentValue;\n\
    \        }\n        return maxIndex;", "        long largest = -1;\n        long\
    \ curr = -1;\n        for (long i : arr) {\n            if (i > largest) {\n \
    \               largest = i;\n                curr = i;\n            } else if\
    \ (i == largest) {\n                curr = i;\n            }\n        }\n    \
    \    return largest;", "        long largest = -1;\n        long current = 0;\n\
    \        for (long i = 0; i < arr.size(); i++) {\n            current = arr.get(i);\n\
    \            if (current > largest) {\n                largest = current;\n  \
    \          }\n        }\n        return largest;", "        long max = arr.get(0);\n\
    \        long maxIndex = -1;\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > max) {\n                max = arr.get(i);\n    \
    \            maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxVal) {\n    \
    \            maxIndex = i;\n                maxVal = arr.get(i);\n           \
    \ }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n    \
    \    long maxValue = arr.get(0);\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long largest = -1;\n        long current = 0;\n        for(long i : arr)\
    \ {\n            if(i == current) {\n                continue;\n            }\n\
    \            if(i == current + 1) {\n                largest = i;\n          \
    \  } else {\n                current = i;\n            }\n        }\n        return\
    \ largest;", "        long largest = -1;\n        long current = 0;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            current = arr.get(i);\n         \
    \   if(current >= largest) {\n                largest = current;\n           \
    \ }\n        }\n        return largest;", "        long maxIndex = -1;\n     \
    \   long maxValue = arr.get(0);\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = -1;\n        long currentVal\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentVal\
    \ = arr.get(i);\n            if(currentVal <= maxVal) {\n                maxIndex\
    \ = i;\n                maxVal = currentVal;\n            }\n        }\n     \
    \   return maxIndex;", "        long largest = -1;\n        long index = -1;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long current = arr.get(i);\n\
    \            long previous = arr.get(i-1);\n            if(current > previous)\
    \ {\n                index = i;\n                largest = current;\n        \
    \    }\n        }\n        return largest;", "        long maxIndex = -1;\n  \
    \      long maxValue = -1;\n        long currentValue = -1;\n        long previousValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if(currentValue > maxValue) {\n                maxValue\
    \ = currentValue;\n                maxIndex = i;\n            }\n            if(currentValue\
    \ == previousValue) {\n                maxIndex = -1;\n            }\n       \
    \     previousValue = currentValue;\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        long currentIndex = -1;\n        for (long index = 0; index <\
    \ arr.size(); index++) {\n            currentValue = arr.get(index);\n       \
    \     if (currentValue > maxValue) {\n                maxValue = currentValue;\n\
    \                maxIndex = index;\n            }\n            if (currentValue\
    \ == maxValue) {\n                currentIndex = index;\n            }\n     \
    \   }\n        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if((maxIndex == -1) || (value > maxValue)) {\n  \
    \              maxIndex = i;\n                maxValue = value;\n            }\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = -1;\n        long currentValue = -1;\n        long previousValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if(currentValue > maxValue) {\n                maxValue\
    \ = currentValue;\n                maxIndex = i;\n            }\n            previousValue\
    \ = currentValue;\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long currentMax = -1;\n        long currentIndex = -1;\n    \
    \    for(long i = 0; i < arr.size(); i++) {\n            currentMax = arr.get(i);\n\
    \            currentIndex = i;\n            for(int j = i; j < arr.size(); j++)\
    \ {\n                if(arr.get(j) <= currentMax) {\n                    currentMax\
    \ = arr.get(j);\n                    currentIndex = j;\n                }\n  \
    \          }\n            if(currentIndex != maxIndex) {\n                maxIndex\
    \ = currentIndex;\n            }\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long maxValue = -1;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            long value = arr.get(i);\n            if(i\
    \ == 0) {\n                maxValue = value;\n                maxIndex = i;\n\
    \            }\n            else if(value >= maxValue) {\n                maxValue\
    \ = value;\n                maxIndex = i;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ maxValue) {\n                maxValue = arr.get(i);\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > maxValue) {\n                maxIndex =\
    \ i;\n                maxValue = arr.get(i);\n            }\n        }\n     \
    \   return maxIndex;", "        long max = -1;\n        long maxIndex = -1;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i-1))\
    \ {\n                max = Math.max(max, arr.get(i));\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = -1;\n        long currentValue = -1;\n      \
    \  for(int i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n\
    \            if(currentValue > maxValue) {\n                maxValue = currentValue;\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = -1;\n        long currentValue\
    \ = -1;\n        for(long i : arr) {\n            currentIndex = i;\n        \
    \    currentValue = i;\n            for(int j = 1; j < arr.size(); j++) {\n  \
    \              if(arr.get(j) > currentValue) {\n                    currentValue\
    \ = arr.get(j);\n                    currentIndex = j;\n                }\n  \
    \          }\n            if(currentIndex > maxIndex) {\n                maxIndex\
    \ = currentIndex;\n            }\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long maxValue = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >= maxValue) {\n \
    \               maxIndex = i;\n                maxValue = arr.get(i);\n      \
    \      }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = -1;\n        long currentValue = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n    \
    \        if(currentValue <= maxValue) {\n                maxIndex = i;\n     \
    \           maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long max = -1;\n        long maxIndex = -1;\n        long\
    \ currentMax = arr.get(0);\n        long currentMaxIndex = -1;\n        for(int\
    \ i = 1; i < arr.size(); i++) {\n            long current = arr.get(i);\n    \
    \        if(current > currentMax) {\n                currentMax = current;\n \
    \               currentMaxIndex = i;\n            }\n        }\n        if(currentMaxIndex\
    \ != -1) {\n            max = currentMax;\n            maxIndex = currentMaxIndex;\n\
    \        }\n        return max;", "        long maxIndex = -1;\n        long maxValue\
    \ = -1;\n        long currentValue = -1;\n        long currentIndex = -1;\n  \
    \      for(long i : arr) {\n            currentValue = i;\n            currentIndex\
    \ = i;\n            for(long j : arr) {\n                if(j > currentValue)\
    \ {\n                    currentValue = j;\n                    currentIndex =\
    \ j;\n                }\n            }\n            if(maxIndex == -1 || currentValue\
    \ > maxValue) {\n                maxValue = currentValue;\n                maxIndex\
    \ = currentIndex;\n            }\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        long previousValue = -1;\n        for(long i : arr) {\n     \
    \       currentValue = i;\n            previousValue = currentValue;\n       \
    \     for(long j : arr) {\n                if(j > currentValue) {\n          \
    \          if(maxIndex == -1) {\n                        maxIndex = j;\n     \
    \                   maxValue = currentValue;\n                    } else {\n \
    \                       if(maxValue < currentValue) {\n                      \
    \      maxIndex = j;\n                            maxValue = currentValue;\n \
    \                       }\n                    }\n                }\n        \
    \    }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n \
    \       long maxVal = arr.get(0);\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) > maxVal) {\n                maxIndex = i;\n \
    \               maxVal = arr.get(i);\n            }\n        }\n        return\
    \ maxIndex;", "        long largest = -1;\n        long lastIndex = -1;\n    \
    \    for(int i = 0; i < arr.size(); i++) {\n            long current = arr.get(i);\n\
    \            if(current > largest) {\n                largest = current;\n   \
    \             lastIndex = i;\n            }\n        }\n        if(lastIndex ==\
    \ -1) {\n            return -1;\n        }\n        for(int i = lastIndex + 1;\
    \ i < arr.size(); i++) {\n            long current = arr.get(i);\n           \
    \ if(current > largest) {\n                largest = current;\n            }\n\
    \        }\n        return largest;", "        long max = -1;\n        long maxIndex\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ <= arr.get(i-1)) {\n                max = Math.max(max, arr.get(i));\n     \
    \           maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxVal) {\n    \
    \            maxIndex = i;\n                maxVal = arr.get(i);\n           \
    \ }\n        }\n        return maxIndex;", "        long max = arr.get(0);\n \
    \       int index = 0;\n        for (int i = 1; i < arr.size(); i++) {\n     \
    \       if (arr.get(i) > max) {\n                max = arr.get(i);\n         \
    \       index = i;\n            }\n        }\n        return index;", "      \
    \  long largest = -1;\n        long current = 0;\n        for(long i : arr) {\n\
    \            if(i == current) {\n                continue;\n            }\n  \
    \          if(i == current + 1) {\n                largest = i;\n            \
    \    continue;\n            }\n            if(i == current - 1) {\n          \
    \      largest = i;\n                continue;\n            }\n            if(i\
    \ == current + 2) {\n                largest = i;\n                continue;\n\
    \            }\n            if(i == current - 2) {\n                largest =\
    \ i;\n                continue;\n            }\n            if(i == current +\
    \ 3) {\n                largest = i;\n                continue;\n            }\n\
    \            if(i == current - 3) {\n                largest = i;\n          \
    \      continue;\n            }\n            if(i == current + 4) {\n        \
    \        largest = i;\n                continue;\n            }\n            if(i\
    \ == current - 4) {\n                largest = i;\n                continue;\n\
    \            }\n            if(i == current + 5) {\n                largest =\
    \ i;\n                continue;\n            }\n            if(i == current -\
    \ 5) {\n                largest = i;\n                continue;\n            }\n\
    \            if(i == current + 6) {\n                largest = i;\n          \
    \      continue;\n            }\n            if(i == current - 6) {\n        \
    \        largest = i;\n                continue;\n            }\n            if(i\
    \ == current + 7) {\n                largest = i;\n                continue;\n\
    \            }\n            if(i == current - 7) {\n                largest =\
    \ i;\n                continue;\n            }\n            if(i == current +\
    \ 8) {\n                largest = i;\n                continue;\n            }\n\
    \            if(i == current - 8) {\n                largest = i;\n          \
    \      continue;\n            }\n            if(i == current + 9) {\n        \
    \        largest = i;\n                continue;\n            }\n            if(i\
    \ == current - 9) {\n                largest = i;\n                continue;\n\
    \            }\n            if(i == current + 10) {\n                largest =\
    \ i;\n                continue;\n            }\n            if(i == current -\
    \ 10) {\n                largest = i;\n                continue;\n           \
    \ }\n            if(i == current + 11) {\n                largest = i;\n     \
    \           continue;\n            }\n            if(i == current - 11) {\n  \
    \              largest = i;\n                continue;\n            }\n      \
    \      if(i == current + 12) {\n                largest = i;\n               \
    \ continue;\n            }\n            if(i == current - 12) {\n            \
    \    largest = i;\n                continue;\n            }\n            if(i\
    \ == current + 13) {", "        long largest = -1;\n        long index = -1;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long current = arr.get(i);\n\
    \            if(current > largest) {\n                largest = current;\n   \
    \             index = i;\n            }\n        }\n        return index;", " \
    \       long max = -1;\n        long curr = arr.get(0);\n        long prev = 0;\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ curr) {\n                prev = curr;\n                curr = arr.get(i);\n\
    \            } else if (arr.get(i) == prev) {\n                prev = curr;\n\
    \                curr = arr.get(i);\n            } else {\n                return\
    \ -1;\n            }\n        }\n        return max;", "        long maxIndex\
    \ = -1;\n        long currentIndex = 0;\n        long currentValue = arr.get(0);\n\
    \        boolean found = false;\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (currentValue > arr.get(i)) {\n                currentIndex\
    \ = i;\n                currentValue = arr.get(i);\n                found = true;\n\
    \            }\n        }\n        if (found) {\n            maxIndex = currentIndex;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = -1;\n        long prevIndex = -1;\n        for(long i : arr)\
    \ {\n            currentIndex = i;\n            prevIndex = i;\n            while(currentIndex\
    \ > prevIndex) {\n                prevIndex = currentIndex;\n                currentIndex\
    \ = currentIndex - arr[currentIndex];\n            }\n            if(currentIndex\
    \ > maxIndex) {\n                maxIndex = currentIndex;\n            }\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr.get(0);\n        long currentValue = arr.get(0);\n        for\
    \ (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n\
    \                maxIndex = i;\n                maxValue = arr.get(i);\n     \
    \       }\n            if (arr.get(i) < currentValue) {\n                currentValue\
    \ = arr.get(i);\n            }\n        }\n        return maxIndex;", "      \
    \  long maxIndex = -1;\n        long maxValue = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n  \
    \              maxIndex = i;\n                maxValue = arr.get(i);\n       \
    \     }\n        }\n        return maxIndex;", "        long largest = -1;\n \
    \       long current = -1;\n        for(long i : arr) {\n            if(i == current)\
    \ {\n                continue;\n            }\n            if(i == largest ||\
    \ current == -1) {\n                largest = i;\n                current = i;\n\
    \            } else {\n                current = i;\n            }\n        }\n\
    \        return largest;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr.get(0);\n        long currentIndex = arr.get(0);\n        for(int i =\
    \ 1; i < arr.size(); i++) {\n            if(arr.get(i) > maxValue) {\n       \
    \         maxValue = arr.get(i);\n                maxIndex = currentIndex;\n \
    \           }\n            currentIndex = arr.get(i);\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n    \
    \    long currentValue = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            currentValue = arr.get(i);\n            if(currentValue <= maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr.get(0);\n        long currentValue = arr.get(0);\n\
    \        for(int i = 1; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n\
    \            if(currentValue <= maxValue) {\n                maxIndex = i;\n \
    \               maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long largest = -1;\n        long index = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            long current = arr.get(i);\n    \
    \        if(i == 0) {\n                index = current;\n            }\n     \
    \       else if(current > index) {\n                index = current;\n       \
    \     }\n        }\n        if(index != -1) {\n            largest = index;\n\
    \        }\n        return largest;", "        long largest = -1;\n        long\
    \ index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ <= arr.get(i-1)) {\n                index = i;\n                largest = arr.get(i);\n\
    \            }\n        }\n        return largest;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long value = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= value) {\n     \
    \           maxIndex = i;\n                maxValue = arr.get(i);\n          \
    \  }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n   \
    \     long maxValue = arr.get(0);\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long max = -1;\n        long maxIndex = -1;\n        long currentMax =\
    \ -1;\n        long currentMaxIndex = -1;\n        for(long i = 0; i < arr.size();\
    \ i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n\
    \                maxIndex = i;\n            }\n            if(arr.get(i) == max)\
    \ {\n                currentMax = arr.get(i);\n                currentMaxIndex\
    \ = i;\n            }\n        }\n        if(maxIndex != currentMaxIndex) {\n\
    \            return maxIndex;\n        } else {\n            return -1;\n    \
    \    }", "        long maxIndex = -1;\n        long maxValue = -1;\n        long\
    \ currentIndex = -1;\n        long currentValue = -1;\n        for(long index\
    \ : arr) {\n            currentIndex = index;\n            currentValue = arr.get(index);\n\
    \            while(currentValue > maxValue) {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n                currentIndex--;\n \
    \               currentValue = arr.get(currentIndex);\n            }\n       \
    \ }\n        return maxIndex;", "        long max = -1;\n        long maxIndex\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            long current\
    \ = arr.get(i);\n            long previousIndex = i;\n            while(previousIndex\
    \ >= 0 && arr.get(previousIndex) < current) {\n                previousIndex--;\n\
    \            }\n            if(previousIndex >= 0) {\n                max = Math.max(max,\
    \ current);\n                maxIndex = previousIndex;\n            }\n      \
    \  }\n        return max;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if\
    \ (arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n        \
    \        maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxVal = arr.get(0);\n        long currentVal\
    \ = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            currentVal\
    \ = arr.get(i);\n            if(currentVal <= maxVal) {\n                maxIndex\
    \ = i;\n                maxVal = currentVal;\n            }\n        }\n     \
    \   return maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n\
    \        long currentIndex = -1;\n        long currentValue = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            currentIndex = i;\n            currentValue\
    \ = arr.get(i);\n            for(int j = i; j < arr.size(); j++) {\n         \
    \       long nextValue = arr.get(j);\n                if(nextValue <= currentValue)\
    \ {\n                    currentIndex = j;\n                    currentValue =\
    \ nextValue;\n                }\n            }\n            if(currentIndex >\
    \ maxIndex) {\n                maxIndex = currentIndex;\n                maxValue\
    \ = currentValue;\n            }\n        }\n        return maxIndex;", "    \
    \    long largest = -1;\n        long current = arr.get(0);\n        long previous\
    \ = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            current\
    \ = arr.get(i);\n            if(current > previous) {\n                largest\
    \ = i;\n            }\n            previous = current;\n        }\n        return\
    \ largest;", "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n\
    \        long currentValue = arr.get(0);\n        for(int i = 1; i < arr.size();\
    \ i++) {\n            currentValue = arr.get(i);\n            if(currentValue\
    \ > maxValue) {\n                maxValue = currentValue;\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr.get(0);\n        long currentIndex = 0;\n\
    \        for(long value : arr) {\n            if(value >= maxValue) {\n      \
    \          maxValue = value;\n                maxIndex = currentIndex;\n     \
    \       }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        long currentIndex = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            currentValue = arr.get(i);\n            currentIndex = i;\n\
    \            for(int j = i; j < arr.size(); j++) {\n                long value\
    \ = arr.get(j);\n                if(value <= currentValue) {\n               \
    \     currentIndex = j;\n                    break;\n                }\n     \
    \       }\n            if(currentIndex != -1) {\n                if(currentValue\
    \ > maxValue) {\n                    maxValue = currentValue;\n              \
    \      maxIndex = currentIndex;\n                }\n            }\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ > maxValue) {\n                maxValue = arr.get(i);\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long largest\
    \ = -1;\n        long lastIndex = -1;\n        for(int i = 1; i < arr.size();\
    \ i++) {\n            if(arr.get(i) >= arr.get(lastIndex)) {\n               \
    \ largest = i;\n                lastIndex = i;\n            }\n        }\n   \
    \     return largest;", "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ maxVal) {\n                maxIndex = i;\n                maxVal = arr.get(i);\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ -1;\n        long prev = 0;\n        for (long i : arr) {\n            if (i\
    \ > prev) {\n                largest = i;\n            }\n            prev = i;\n\
    \        }\n        return largest;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n   \
    \         if (arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n        long\
    \ currentValue = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n\
    \            currentValue = arr.get(i);\n            if(currentValue > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentValue = -1;\n        for(long\
    \ i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n    \
    \        if((currentValue > maxValue) && (currentValue >= maxIndex)) {\n     \
    \           maxIndex = i;\n                maxValue = currentValue;\n        \
    \    }\n        }\n        return maxIndex;", "        long largest = -1;\n  \
    \      long curr = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > curr) {\n                curr = arr.get(i);\n  \
    \              largest = i;\n            }\n        }\n        return largest;",
  "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxVal) {\n    \
    \            maxIndex = i;\n                maxVal = arr.get(i);\n           \
    \ }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n    \
    \    long maxVal = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > maxVal) {\n                maxIndex = i;\n     \
    \           maxVal = arr.get(i);\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n  \
    \              maxValue = arr.get(i);\n                maxIndex = i;\n       \
    \     }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = -1;\n        long currentValue = -1;\n        long previousValue\
    \ = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if (currentValue >= previousValue) {\n          \
    \      maxIndex = i;\n                maxValue = currentValue;\n            }\n\
    \            previousValue = currentValue;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        long previousValue = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            currentValue = arr.get(i);\n            if(currentValue\
    \ > maxValue) {\n                maxValue = currentValue;\n                maxIndex\
    \ = i;\n            }\n            if(currentValue == previousValue) {\n     \
    \           maxIndex = -1;\n            }\n            previousValue = currentValue;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = 0;\n        for(long i = 0; i < arr.size(); i++) {\n        \
    \    if(arr.get(i) < arr.get(currentIndex)) {\n                currentIndex =\
    \ i;\n            }\n            if(arr.get(i) > arr.get(currentIndex)) {\n  \
    \              maxIndex = currentIndex;\n            }\n        }\n        return\
    \ maxIndex;", "        long max = -1;\n        long maxIndex = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            long current = arr.get(i);\n    \
    \        long nextIndex = i;\n            while(nextIndex < arr.size() && arr.get(nextIndex)\
    \ < current) {\n                nextIndex++;\n            }\n            if(nextIndex\
    \ == arr.size() || current > arr.get(nextIndex)) {\n                max = Math.max(max,\
    \ current);\n                maxIndex = i;\n            }\n        }\n       \
    \ return max;", "        long maxIndex = -1;\n        long maxValue = -1;\n  \
    \      long currentValue = -1;\n        long previousValue = -1;\n        for(long\
    \ index = 0; index < arr.size(); index++) {\n            currentValue = arr.get(index);\n\
    \            if(currentValue > maxValue) {\n                maxValue = currentValue;\n\
    \                maxIndex = index;\n            }\n            if(currentValue\
    \ == previousValue) {\n                maxIndex = -1;\n            }\n       \
    \     previousValue = currentValue;\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxVal = arr.get(0);\n        long curVal\
    \ = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ > maxVal) {\n                maxVal = arr.get(i);\n                maxIndex\
    \ = i;\n            }\n            if(arr.get(i) < curVal) {\n               \
    \ curVal = arr.get(i);\n            }\n        }\n        return maxIndex;", " \
    \       long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     return maxIndex;", "        long maxIndex = -1;\n        long maxValue =\
    \ -1;\n        long currentIndex = -1;\n        long currentValue = -1;\n    \
    \    for(long i = 0; i < arr.size(); i++) {\n            currentIndex = i;\n \
    \           currentValue = arr.get(i);\n            for(long j = i; j < arr.size();\
    \ j++) {\n                long value = arr.get(j);\n                if(value <=\
    \ currentValue) {\n                    break;\n                }\n           \
    \     currentIndex = j;\n                currentValue = value;\n            }\n\
    \            if(currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n\
    \        long currentVal = arr.get(0);\n        for(int i = 1; i < arr.size();\
    \ i++) {\n            currentVal = arr.get(i);\n            if(currentVal > maxVal)\
    \ {\n                maxIndex = i;\n                maxVal = currentVal;\n   \
    \         }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentMax = arr.get(0);\n        long currentIndex = -1;\n    \
    \    for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > currentMax)\
    \ {\n                currentMax = arr.get(i);\n                currentIndex =\
    \ i;\n            }\n        }\n        if(currentIndex != -1) {\n           \
    \ for(int i = currentIndex + 1; i < arr.size(); i++) {\n                if(arr.get(i)\
    \ > currentMax) {\n                    currentMax = arr.get(i);\n            \
    \        currentIndex = i;\n                }\n            }\n        }\n    \
    \    if(currentIndex != -1) {\n            for(int i = currentIndex - 1; i >=\
    \ 0; i--) {\n                if(arr.get(i) > currentMax) {\n                 \
    \   currentMax = arr.get(i);\n                    currentIndex = i;\n        \
    \        }\n            }\n        }\n        if(currentIndex != -1) {\n     \
    \       for(int i = currentIndex + 1; i < arr.size(); i++) {\n               \
    \ if(arr.get(i) > currentMax) {\n                    currentMax = arr.get(i);\n\
    \                    currentIndex = i;\n                }\n            }\n   \
    \     }\n        if(currentIndex != -1) {\n            for(int i = currentIndex\
    \ - 1; i >= 0; i--) {\n                if(arr.get(i) > currentMax) {\n       \
    \             currentMax = arr.get(i);\n                    currentIndex = i;\n\
    \                }\n            }\n        }\n        return currentMax;", " \
    \       long maxIndex = -1;\n        long maxValue = -1;\n        long currentIndex\
    \ = -1;\n        long currentValue = -1;\n        for(long i : arr) {\n      \
    \      currentIndex = i;\n            currentValue = i;\n            for(long\
    \ j : arr) {\n                if(j > currentIndex) {\n                    currentIndex\
    \ = j;\n                    currentValue = j;\n                }\n           \
    \ }\n            if(currentValue > maxValue) {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ maxValue) {\n                maxIndex = i;\n                maxValue = arr.get(i);\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentValue = -1;\n        long\
    \ previousValue = -1;\n        for(int i = 0; i < arr.size(); i++) {\n       \
    \     currentValue = arr.get(i);\n            if(currentValue > maxValue) {\n\
    \                maxValue = currentValue;\n                maxIndex = i;\n   \
    \         }\n            if(currentValue == previousValue) {\n               \
    \ maxIndex = -1;\n            }\n            previousValue = currentValue;\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = -1;\n        long currentIndex = -1;\n        long currentValue =\
    \ -1;\n        for(long i = 0; i < arr.size(); i++) {\n            currentIndex\
    \ = i;\n            currentValue = arr.get(i);\n            while(currentIndex\
    \ > 0 && currentValue <= arr.get(currentIndex - 1)) {\n                currentIndex--;\n\
    \                currentValue = arr.get(currentIndex);\n            }\n      \
    \      if(currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long max = -1;\n        long maxIndex = -1;\n        for(int\
    \ i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > arr.get(i - 1)) {\n\
    \                max = arr.get(i);\n                maxIndex = i;\n          \
    \  }\n        }\n        return maxIndex;", "        long largest = -1;\n    \
    \    long current = arr.get(0);\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) > current) {\n                largest = i;\n \
    \               current = arr.get(i);\n            }\n        }\n        return\
    \ largest;", "        long largest = -1;\n        long curr = arr.get(0);\n  \
    \      long prev = 0;\n        for (int i = 1; i < arr.size(); i++) {\n      \
    \      if (arr.get(i) > curr) {\n                prev = curr;\n              \
    \  curr = arr.get(i);\n            }\n            if (arr.get(i) == prev && arr.get(i)\
    \ > largest) {\n                largest = arr.get(i);\n            }\n       \
    \ }\n        return largest;", "        long largest = -1;\n        long prev\
    \ = 0;\n        for(long i : arr) {\n            if(i > prev) {\n            \
    \    largest = i;\n            }\n            prev = i;\n        }\n        return\
    \ largest;", "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ maxValue) {\n                maxIndex = i;\n                maxValue = arr.get(i);\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ -1;\n        long current = 0;\n        for(long i : arr) {\n            if(i\
    \ == current) {\n                current++;\n                continue;\n     \
    \       }\n            if(i == current + 1) {\n                current = i;\n\
    \                continue;\n            }\n            if(i == current + 2) {\n\
    \                current = i;\n                continue;\n            }\n    \
    \        if(i == current + 3) {\n                current = i;\n              \
    \  continue;\n            }\n            if(i == current + 4) {\n            \
    \    current = i;\n                continue;\n            }\n            if(i\
    \ == current + 5) {\n                current = i;\n                continue;\n\
    \            }\n            if(i == current + 6) {\n                current =\
    \ i;\n                continue;\n            }\n            if(i == current +\
    \ 7) {\n                current = i;\n                continue;\n            }\n\
    \            if(i == current + 8) {\n                current = i;\n          \
    \      continue;\n            }\n            if(i == current + 9) {\n        \
    \        current = i;\n                continue;\n            }\n            if(i\
    \ == current + 10) {\n                current = i;\n                continue;\n\
    \            }\n            if(i == current + 11) {\n                current =\
    \ i;\n                continue;\n            }\n            if(i == current +\
    \ 12) {\n                current = i;\n                continue;\n           \
    \ }\n            if(i == current + 13) {\n                current = i;\n     \
    \           continue;\n            }\n            if(i == current + 14) {\n  \
    \              current = i;\n                continue;\n            }\n      \
    \      if(i == current + 15) {\n                current = i;\n               \
    \ continue;\n            }\n            if(i == current + 16) {\n            \
    \    current = i;\n                continue;\n            }\n            if(i\
    \ == current + 17) {\n                current = i;\n                continue;\n\
    \            }\n            if(i == current + 18) {\n                current =\
    \ i;\n                continue;\n            }\n            if(i == current +\
    \ 19) {\n                current = i;\n                continue;\n           \
    \ }\n            if(i == current + 20) {\n                current = i;\n     \
    \           continue;\n            }\n            if(i == current + 21) {\n  \
    \              current = i;\n                continue;\n            }\n      \
    \      if(i == current + 22) {\n                current = i;\n               \
    \ continue;\n            }\n            if(i == current + 23) {\n            \
    \    current = i;\n                continue;\n            }\n            if(i\
    \ == current + 24) {\n                current = i;\n                continue;\n\
    \            }\n            if(i == current + 25) {\n                current =\
    \ i;\n                continue;\n            }\n            if(i == current +\
    \ 26) {\n                current = i;\n                continue;\n           \
    \ }\n            if(i == current + 27) {\n                current = i;", "   \
    \     long max = -1;\n        long maxIndex = -1;\n        long currentMax = -1;\n\
    \        long currentMaxIndex = -1;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            currentMax = arr.get(i);\n            currentMaxIndex = i;\n\
    \            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ <= currentMax) {\n                    currentMax = arr.get(j);\n           \
    \         currentMaxIndex = j;\n                }\n            }\n           \
    \ if(currentMaxIndex != maxIndex) {\n                max = currentMax;\n     \
    \           maxIndex = currentMaxIndex;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ maxValue) {\n                maxIndex = i;\n                maxValue = arr.get(i);\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ -1;\n        long index = 0;\n        for(long i = arr.size(); i > 0; i--) {\n\
    \            if(arr.get(index) <= arr.get(i)) {\n                index++;\n  \
    \          } else {\n                largest = index;\n                index =\
    \ i;\n            }\n        }\n        return largest;", "        long largest\
    \ = -1;\n        long index = 0;\n        for (long i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) < arr.get(index)) {\n                index = i;\n\
    \            }\n            if (arr.get(i) > arr.get(index)) {\n             \
    \   largest = index;\n            }\n        }\n        return largest;", "  \
    \      long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        long currentIndex = -1;\n        for(long i = 0; i < arr.size();\
    \ i++) {\n            currentValue = arr.get(i);\n            currentIndex = i;\n\
    \            while(currentValue < currentIndex) {\n                currentIndex--;\n\
    \                currentValue = arr.get(currentIndex);\n            }\n      \
    \      if(currentValue > maxValue) {\n                maxValue = currentValue;\n\
    \                maxIndex = currentIndex;\n            }\n        }\n        return\
    \ maxIndex;", "        long max = -1;\n        long maxIndex = -1;\n        long\
    \ curr = arr.get(0);\n        long prev = 0;\n        for(int i = 1; i < arr.size();\
    \ i++) {\n            if(arr.get(i) > curr) {\n                prev = curr;\n\
    \                curr = arr.get(i);\n            }\n            else if(arr.get(i)\
    \ == prev) {\n                prev = curr;\n                curr = arr.get(i);\n\
    \            }\n            else {\n                if(max < prev) {\n       \
    \             max = prev;\n                    maxIndex = i;\n               \
    \ }\n                prev = curr;\n                curr = arr.get(i);\n      \
    \      }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = 0;\n        for (long i : arr) {\n            if\
    \ (currentIndex == maxIndex) {\n                maxIndex = i;\n            } else\
    \ if (currentIndex < maxIndex) {\n                currentIndex = i;\n        \
    \    }\n        }\n        return maxIndex;", "        long max = -1;\n      \
    \  long maxIndex = -1;\n        for(int i = 1; i < arr.size(); i++) {\n      \
    \      if(arr.get(i) <= arr.get(i - 1)) {\n                max = Math.max(max,\
    \ arr.get(i));\n                maxIndex = i;\n            }\n        }\n    \
    \    return maxIndex;", "        long largest = -1;\n        long lastIndex =\
    \ -1;\n        for(long i : arr) {\n            if(i == lastIndex) {\n       \
    \         lastIndex++;\n                continue;\n            }\n           \
    \ if(i == largest || i > largest) {\n                largest = i;\n          \
    \      lastIndex = i;\n            }\n        }\n        return largest;", " \
    \       long maxIndex = -1;\n        long maxVal = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxVal) {\n    \
    \            maxIndex = i;\n                maxVal = arr.get(i);\n           \
    \ }\n        }\n        return maxIndex;", "        long max = -1;\n        long\
    \ maxIndex = -1;\n        long currentMax = -1;\n        long currentIndex = -1;\n\
    \        for (long i : arr) {\n            if (i == currentMax) {\n          \
    \      currentIndex++;\n            }\n            if (i > currentMax) {\n   \
    \             currentMax = i;\n                currentIndex = i;\n           \
    \ }\n            if (i == max) {\n                maxIndex = currentIndex;\n \
    \           }\n            if (i > max) {\n                max = i;\n        \
    \        maxIndex = currentIndex;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        long previousValue = -1;\n        for(long i : arr) {\n     \
    \       currentValue = i;\n            previousValue = currentValue;\n       \
    \     for(long j : arr) {\n                if(j > currentValue) {\n          \
    \          if(j > maxValue) {\n                        maxValue = j;\n       \
    \                 maxIndex = j;\n                    }\n                }\n  \
    \          }\n        }\n        return maxIndex;", "        long largest = -1;\n\
    \        long previous = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            if(arr.get(i) <= arr.get(previous)) {\n                largest =\
    \ i;\n            }\n            previous = i;\n        }\n        return largest;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentIndex\
    \ = -1;\n        long currentValue = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            currentIndex = i;\n            currentValue = arr.get(i);\n\
    \            for(int j = i; j < arr.size(); j++) {\n                long value\
    \ = arr.get(j);\n                if(value <= currentValue) {\n               \
    \     currentIndex = j;\n                    currentValue = value;\n         \
    \       }\n            }\n            if(currentIndex != maxIndex) {\n       \
    \         maxIndex = currentIndex;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxVal = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > maxVal) {\n                maxVal = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        for(long i\
    \ : arr) {\n            currentIndex++;\n            if(currentIndex > maxIndex)\
    \ {\n                maxIndex = currentIndex;\n            }\n            if(currentIndex\
    \ == arr.size()) {\n                return maxIndex;\n            }\n        }\n\
    \        return -1;", "        long maxIndex = -1;\n        long maxVal = -1;\n\
    \        long curVal = -1;\n        for(int i = 0; i < arr.size(); i++) {\n  \
    \          curVal = arr.get(i);\n            if(curVal > maxVal) {\n         \
    \       maxVal = curVal;\n                maxIndex = i;\n            }\n     \
    \   }\n        return maxIndex;", "        long largest = -1;\n        long index\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ <= arr.get(index)) {\n                index = i;\n            }\n        }\n\
    \        if(index != -1) {\n            largest = index;\n        }\n        return\
    \ largest;", "        long maxIndex = -1;\n        long maxValue = -1;\n     \
    \   for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value > maxValue) {\n                maxIndex = i;\n         \
    \       maxValue = value;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        long previousValue = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            currentValue = arr.get(i);\n            previousValue =\
    \ arr.get(i-1);\n            if(currentValue >= previousValue) {\n           \
    \     maxIndex = i;\n                maxValue = currentValue;\n            }\n\
    \        }\n        return maxIndex;", "        long max = -1;\n        long maxIndex\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ <= arr.get(i-1)) {\n                max = Math.max(max, arr.get(i));\n     \
    \           maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = -1;\n        long currentVal\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentVal\
    \ = arr.get(i);\n            if(currentVal > maxVal) {\n                maxVal\
    \ = currentVal;\n                maxIndex = i;\n            }\n        }\n   \
    \     return maxIndex;", "        long maxIndex = -1;\n        long maxValue =\
    \ arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if\
    \ (arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n        \
    \        maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long largest = -1;\n        long index = -1;\n        for(int i = 1; i\
    \ < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(index)) {\n     \
    \           index = i;\n            }\n        }\n        if(index != -1) {\n\
    \            largest = index;\n        }\n        return largest;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr.get(0);\n        for (int i = 1;\
    \ i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n         \
    \       maxIndex = i;\n                maxValue = arr.get(i);\n            }\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr.get(0);\n        long currentValue = arr.get(0);\n        for\
    \ (int i = 1; i < arr.size(); i++) {\n            if (currentValue > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            } else if (currentValue == maxValue) {\n                currentValue\
    \ = arr.get(i);\n            }\n        }\n        return maxIndex;", "      \
    \  long largest = -1;\n        long index = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            if(arr.get(i) > largest) {\n                largest = arr.get(i);\n\
    \                index = i;\n            }\n        }\n        if(index == -1)\
    \ {\n            return -1;\n        }\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            if(arr.get(i) == largest) {\n                if((i + 1)\
    \ < arr.size() && arr.get(i + 1) > largest) {\n                    largest = arr.get(i\
    \ + 1);\n                    index = i;\n                }\n            }\n  \
    \      }\n        return index;", "        long max = -1;\n        long maxIndex\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            long val =\
    \ arr.get(i);\n            if(i == 0) {\n                max = val;\n        \
    \        maxIndex = i;\n            }\n            else if(val > max) {\n    \
    \            max = val;\n                maxIndex = i;\n            }\n      \
    \  }\n        return maxIndex;", "        long maxIndex = -1;\n        long currentIndex\
    \ = 0;\n        for(long i = arr.size()-1; i >= 0; i--) {\n            if(arr.get(i)\
    \ <= arr.get(currentIndex)) {\n                currentIndex = i;\n           \
    \ } else {\n                maxIndex = currentIndex;\n                currentIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = -1;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if(value >= maxValue) {\n\
    \                maxValue = value;\n                maxIndex = i;\n          \
    \  }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n   \
    \     long maxValue = -1;\n        long currentIndex = -1;\n        long currentValue\
    \ = -1;\n        for(Long value : arr) {\n            currentIndex++;\n      \
    \      currentValue = value;\n            if(currentIndex > maxIndex) {\n    \
    \            maxIndex = currentIndex;\n                maxValue = currentValue;\n\
    \            }\n            if(currentIndex == maxIndex) {\n                if(currentValue\
    \ > maxValue) {\n                    maxIndex = currentIndex;\n              \
    \      maxValue = currentValue;\n                }\n            }\n        }\n\
    \        return maxIndex;", "        long largest = -1;\n        long index =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ <= arr.get(index)) {\n                index = i;\n            }\n        }\n\
    \        if(index != -1) {\n            largest = index;\n        }\n        return\
    \ largest;", "        long maxIndex = -1;\n        long maxValue = -1;\n     \
    \   for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value > maxValue) {\n                maxIndex = i;\n         \
    \       maxValue = value;\n            }\n        }\n        return maxIndex;",
  "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            long curr = arr.get(i);\n            if((max\
    \ < curr) && (curr >= arr.get(i-1))) {\n                max = curr;\n        \
    \        maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            long val = arr.get(i);\n            if(val\
    \ >= max) {\n                max = val;\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = -1;\n        long currentIndex = -1;\n        long currentValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentIndex\
    \ = i;\n            currentValue = arr.get(i);\n            for(int j = i; j <\
    \ arr.size(); j++) {\n                long value = arr.get(j);\n             \
    \   if(value <= currentValue) {\n                    break;\n                }\n\
    \                currentIndex = j;\n                currentValue = value;\n  \
    \          }\n            if(currentIndex > maxIndex) {\n                maxIndex\
    \ = currentIndex;\n                maxValue = currentValue;\n            }\n \
    \       }\n        return maxIndex;", "        long max = -1;\n        long maxIndex\
    \ = -1;\n        long currentMax = -1;\n        long currentMaxIndex = -1;\n \
    \       for(int i = 0; i < arr.size(); i++) {\n            currentMax = arr.get(i);\n\
    \            currentMaxIndex = i;\n            for(int j = i + 1; j < arr.size();\
    \ j++) {\n                if(arr.get(j) <= currentMax) {\n                   \
    \ currentMax = arr.get(j);\n                    currentMaxIndex = j;\n       \
    \         }\n            }\n            if(currentMaxIndex != maxIndex) {\n  \
    \              max = currentMax;\n                maxIndex = currentMaxIndex;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentValue = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n    \
    \        if(currentValue <= maxValue) {\n                maxIndex = i;\n     \
    \           maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long largest = -1;\n        long current = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ current) {\n                largest = i;\n                current = arr.get(i);\n\
    \            }\n        }\n        return largest;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentValue = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n    \
    \        if((currentValue <= maxValue) && (currentValue >= maxIndex)) {\n    \
    \            maxIndex = currentValue;\n            }\n            if((currentValue\
    \ > maxValue) && (currentValue < maxIndex)) {\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long value = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            long currentValue = arr.get(i);\n\
    \            if(currentValue >= maxValue) {\n                maxValue = currentValue;\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n        long\
    \ currentValue = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n\
    \            currentValue = arr.get(i);\n            if(currentValue >= maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr.get(0);\n        long currentValue = arr.get(0);\n\
    \        for(int i = 1; i < arr.size(); i++) {\n            if(currentValue >\
    \ maxValue) {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n            currentValue = arr.get(i);\n        }\n        return\
    \ maxIndex;", "        long largest = -1;\n        long index = -1;\n        long\
    \ temp;\n        for(int i = 0; i < arr.size(); i++) {\n            temp = arr.get(i);\n\
    \            index = i;\n            while(index > 0 && arr.get(index - 1l) >\
    \ temp) {\n                index--;\n            }\n            if(index > 0 &&\
    \ arr.get(index - 1l) == temp) {\n                largest = index;\n         \
    \       break;\n            }\n        }\n        return largest;", "        long\
    \ maxIndex = -1;\n        long maxValue = -1;\n        long currentIndex = -1;\n\
    \        long currentValue = -1;\n        for(long i = 0; i < arr.size(); i++)\
    \ {\n            currentIndex = i;\n            currentValue = arr.get(i);\n \
    \           while(currentIndex > 0 && currentValue <= arr.get(currentIndex - 1))\
    \ {\n                currentIndex--;\n                currentValue = arr.get(currentIndex);\n\
    \            }\n            if(currentIndex > maxIndex) {\n                maxIndex\
    \ = currentIndex;\n                maxValue = currentValue;\n            }\n \
    \       }\n        return maxIndex;", "        long largest = -1;\n        long\
    \ current = arr.get(0);\n        long previous = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > current) {\n   \
    \             largest = i;\n                current = arr.get(i);\n          \
    \  } else if (arr.get(i) == current) {\n                current = arr.get(i);\n\
    \            } else {\n                previous = current;\n                current\
    \ = arr.get(i);\n            }\n        }\n        return largest;", "       \
    \ long maxIndex = -1;\n        long currentIndex = -1;\n        long prevIndex\
    \ = -1;\n        for(long i : arr) {\n            currentIndex = i;\n        \
    \    prevIndex = currentIndex - 1;\n            if(prevIndex >= 0) {\n       \
    \         if(prevIndex > maxIndex) {\n                    maxIndex = prevIndex;\n\
    \                }\n            }\n        }\n        return maxIndex;", "   \
    \     long maxIndex = -1;\n        long maxValue = arr.get(0);\n        long currentValue\
    \ = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if\
    \ (arr.get(i) <= currentValue) {\n                currentValue = arr.get(i);\n\
    \            } else {\n                maxIndex = i;\n                maxValue\
    \ = currentValue;\n                currentValue = arr.get(i);\n            }\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr.get(0);\n        long currentValue = arr.get(0);\n        for(int\
    \ i = 1; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n    \
    \        if(currentValue >= maxValue) {\n                maxIndex = i;\n     \
    \           maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n\
    \        long currentValue = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (currentValue > maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = currentValue;\n            }\n            currentValue\
    \ = arr.get(i);\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            if(arr.get(i) <= max) {\n                max = arr.get(i);\n    \
    \            maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        for (long\
    \ i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > arr.get(currentIndex))\
    \ {\n                currentIndex = i;\n            }\n            if (arr.get(i)\
    \ > arr.get(maxIndex)) {\n                maxIndex = i;\n            }\n     \
    \   }\n        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr.get(0);\n        long currentIndex = -1;\n        for(long value : arr)\
    \ {\n            if(value >= maxValue) {\n                maxIndex = currentIndex;\n\
    \                maxValue = value;\n            }\n            currentIndex++;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxVal = arr.get(0);\n        long curVal = arr.get(0);\n        for (int i\
    \ = 1; i < arr.size(); i++) {\n            if (arr.get(i) < curVal) {\n      \
    \          maxIndex = i;\n                maxVal = arr.get(i);\n            }\
    \ else if (arr.get(i) == curVal) {\n                maxIndex = i;\n          \
    \  }\n            curVal = arr.get(i);\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n        long\
    \ currentIndex = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if (value > maxValue) {\n \
    \               maxValue = value;\n                maxIndex = currentIndex;\n\
    \            } else if (value == maxValue) {\n                currentIndex = i;\n\
    \            }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           if(arr.get(i) <= arr.get(maxIndex)) {\n                max = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        long previousValue = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            currentValue = arr.get(i);\n            previousValue =\
    \ arr.get(i-1);\n            if(currentValue >= previousValue) {\n           \
    \     maxIndex = i;\n                maxValue = currentValue;\n            }\n\
    \        }\n        return maxIndex;", "        long max = -1;\n        int index\
    \ = 0;\n        long maxIndex = 0;\n        long currentMax = arr.get(0);\n  \
    \      long currentIndex = arr.get(0);\n        for(int i = 1; i < arr.size();\
    \ i++) {\n            currentMax = arr.get(i);\n            currentIndex = arr.get(i);\n\
    \            while(currentIndex < currentMax) {\n                index++;\n  \
    \              currentMax = arr.get(index);\n                currentIndex = arr.get(index);\n\
    \            }\n            if(currentIndex > max) {\n                max = currentIndex;\n\
    \                maxIndex = index;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n        long currentVal\
    \ = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            currentVal\
    \ = arr.get(i);\n            if(currentVal > maxVal) {\n                maxVal\
    \ = currentVal;\n                maxIndex = i;\n            }\n        }\n   \
    \     return maxIndex;", "        long maxIndex = -1;\n        long maxValue =\
    \ -1;\n        long currentIndex = -1;\n        long currentValue = -1;\n    \
    \    for(int i = 0; i < arr.size(); i++) {\n            currentIndex = i;\n  \
    \          currentValue = arr.get(i);\n            for(int j = i; j < arr.size();\
    \ j++) {\n                if(arr.get(j) <= currentValue) {\n                 \
    \   currentIndex = j;\n                    currentValue = arr.get(j);\n      \
    \          }\n            }\n            if(currentIndex > maxIndex) {\n     \
    \           maxIndex = currentIndex;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           if(arr.get(i) > max) {\n                max = arr.get(i);\n      \
    \          maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long max = -1;\n        long curr = arr.get(0);\n        for(int i = 1;\
    \ i < arr.size(); i++) {\n            if(arr.get(i) > curr) {\n              \
    \  max = i;\n                curr = arr.get(i);\n            }\n        }\n  \
    \      return max;", "        long maxIndex = -1;\n        long maxValue = -1;\n\
    \        long currentValue = -1;\n        long previousValue = -1;\n        for(long\
    \ i : arr) {\n            currentValue = i;\n            previousValue = currentValue;\n\
    \            for(long j : arr) {\n                if(j > currentValue) {\n   \
    \                 currentValue = j;\n                    previousValue = currentValue;\n\
    \                }\n            }\n            if(currentValue > maxValue) {\n\
    \                maxIndex = currentValue;\n                maxValue = previousValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr.get(0);\n        long currentIndex = 0;\n \
    \       for (long value : arr) {\n            if (value >= maxValue) {\n     \
    \           maxIndex = currentIndex;\n                maxValue = value;\n    \
    \        }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            long current = arr.get(i);\n            long\
    \ previous = arr.get(i-1);\n            if(current > previous) {\n           \
    \     max = current;\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long maxVal\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            long val =\
    \ arr.get(i);\n            if(val > maxVal) {\n                maxVal = val;\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        long previousValue = -1;\n        for(long index : arr) {\n \
    \           currentValue = index;\n            previousValue = currentValue;\n\
    \            for(long i = index + 1; i < arr.size(); i++) {\n                if(arr.get(i)\
    \ > currentValue) {\n                    currentValue = arr.get(i);\n        \
    \            previousValue = currentValue;\n                }\n            }\n\
    \            if(currentValue > maxValue) {\n                maxIndex = index;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n    \
    \    long value = -1;\n        for(int i = 0; i < arr.size(); i++) {\n       \
    \     if(arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n  \
    \              maxIndex = i;\n            }\n        }\n        if(maxIndex !=\
    \ -1) {\n            for(int i = 0; i < arr.size(); i++) {\n                if(arr.get(i)\
    \ == maxValue && i != maxIndex) {\n                    value = arr.get(i);\n \
    \               }\n            }\n        }\n        return value;", "       \
    \ long maxIndex = -1;\n        long maxValue = -1;\n        long currentIndex\
    \ = -1;\n        long currentValue = -1;\n        for(long i : arr) {\n      \
    \      currentIndex = i;\n            currentValue = i;\n            for(long\
    \ j : arr) {\n                if(j > i) {\n                    currentIndex =\
    \ j;\n                    currentValue = j;\n                }\n            }\n\
    \            if(currentValue > maxValue) {\n                maxValue = currentValue;\n\
    \                maxIndex = currentIndex;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n    \
    \    long currentValue = -1;\n        for(long index = 0; index < arr.size();\
    \ index++) {\n            currentValue = arr.get(index);\n            if(currentValue\
    \ >= maxValue) {\n                maxIndex = index;\n                maxValue\
    \ = currentValue;\n            }\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long maxValue = -1;\n        long currentIndex\
    \ = -1;\n        long currentValue = -1;\n        for (long i : arr) {\n     \
    \       if (currentIndex == -1) {\n                currentIndex = i;\n       \
    \         currentValue = i;\n            } else if (currentValue < i) {\n    \
    \            currentIndex = i;\n                currentValue = i;\n          \
    \  } else if (currentValue == i) {\n                currentIndex++;\n        \
    \        currentValue = i;\n            } else {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n                currentIndex = i;\n\
    \                currentValue = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr.get(0);\n        for(long index = 1; index < arr.size(); index++) {\n\
    \            if(arr.get(index) < currentValue) {\n                currentValue\
    \ = arr.get(index);\n                currentIndex = index;\n            }\n  \
    \          if(currentIndex != index - 1) {\n                maxIndex = Math.max(maxIndex,\
    \ currentIndex);\n            }\n        }\n        return maxIndex;", "     \
    \   long largest = -1;\n        long prev = -1l;\n        for(long i : arr) {\n\
    \            if(i > prev) {\n                largest = i;\n            }\n   \
    \         prev = i;\n        }\n        return largest;", "        long maxIndex\
    \ = -1;\n        long maxValue = -1;\n        long currentValue = -1;\n      \
    \  long previousValue = -1;\n        for(long i : arr) {\n            currentValue\
    \ = i;\n            previousValue = currentValue;\n            for(long j : arr)\
    \ {\n                if(j > currentValue) {\n                    if(j > maxValue)\
    \ {\n                        maxValue = j;\n                        maxIndex =\
    \ j;\n                    }\n                }\n            }\n        }\n   \
    \     return maxIndex;", "        long maxIndex = -1;\n        long maxValue =\
    \ -1;\n        long value = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            try {\n                value = arr.get(i);\n            } catch (IndexOutOfBoundsException\
    \ e) {\n                System.out.println(\"IndexOutOfBoundsException\");\n \
    \           }\n            if (maxIndex == -1 || value > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = value;\n            }\n  \
    \      }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentMax = arr.get(0);\n        long currentIndex = 1;\n        for(int i\
    \ = 1; i < arr.size(); i++) {\n            if(arr.get(i) <= currentMax) {\n  \
    \              currentMax = arr.get(i);\n                currentIndex = i;\n \
    \           }\n        }\n        if(currentIndex != maxIndex) {\n           \
    \ maxIndex = currentIndex;\n        }\n        return maxIndex;", "        long\
    \ largest = -1;\n        long current;\n        for(long i = 0; i < arr.size();\
    \ i++) {\n            current = arr.get(i);\n            if(current <= largest)\
    \ {\n                largest = current;\n            }\n        }\n        return\
    \ largest;", "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n\
    \        long currentVal = arr.get(0);\n        for(int i = 1; i < arr.size();\
    \ i++) {\n            currentVal = arr.get(i);\n            if(currentVal > maxVal)\
    \ {\n                maxIndex = i;\n                maxVal = currentVal;\n   \
    \         }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > maxValue) {\n                maxIndex =\
    \ i;\n                maxValue = arr.get(i);\n            }\n        }\n     \
    \   return maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n\
    \        long currentIndex = -1;\n        long currentValue = -1;\n        for(long\
    \ i = 0; i < arr.size(); i++) {\n            currentIndex = i;\n            currentValue\
    \ = arr.get(i);\n            for(long j = i; j < arr.size(); j++) {\n        \
    \        currentIndex = j;\n                currentValue = arr.get(j);\n     \
    \           if(currentValue >= currentIndex) {\n                    break;\n \
    \               }\n            }\n            if(currentIndex > maxIndex) {\n\
    \                maxIndex = currentIndex;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentMax = -1;\n        long currentIndex = -1;\n      \
    \  for(long i : arr) {\n            if(currentIndex == -1) {\n               \
    \ currentIndex = i;\n                currentMax = i;\n            } else if(currentMax\
    \ < i) {\n                currentMax = i;\n                currentIndex = i;\n\
    \            }\n        }\n        if(currentIndex != -1) {\n            for(long\
    \ i : arr) {\n                if(i != currentIndex && currentMax < i) {\n    \
    \                currentMax = i;\n                }\n            }\n        }\n\
    \        return currentMax;", "        long maxIndex = -1;\n        long maxValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ <= maxValue) {\n                continue;\n            }\n            else if(arr.get(i)\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr.get(i);\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentValue = -1;\n        long\
    \ previousValue = -1;\n        for(long index = 0; index < arr.size(); index++)\
    \ {\n            currentValue = arr.get(index);\n            if(currentValue <=\
    \ previousValue) {\n                maxIndex = index;\n                maxValue\
    \ = currentValue;\n            }\n            previousValue = currentValue;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = -1;\n        long currentValue = -1;\n        long previousValue\
    \ = -1;\n        for(long i : arr) {\n            currentIndex = i;\n        \
    \    currentValue = arr.get(i);\n            previousValue = arr.get(i - 1);\n\
    \            if(currentValue > previousValue) {\n                maxIndex = currentIndex;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr.get(0);\n        long currentIndex = -1;\n\
    \        long currentValue = arr.get(0);\n        for (long i : arr) {\n     \
    \       if (currentValue < i) {\n                currentValue = i;\n         \
    \       currentIndex = i;\n            }\n            if (currentValue > maxValue)\
    \ {\n                maxValue = currentValue;\n                maxIndex = currentIndex;\n\
    \            }\n        }\n        return maxIndex;"]
stop_tokens:
- "\n    }\n"

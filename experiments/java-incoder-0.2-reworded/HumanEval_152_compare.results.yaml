language: java
name: HumanEval_152_compare
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> difference = new\
    \ ArrayList<Long>(guess);\n        Arrays.sort(difference);\n        long differenceSum\
    \ = 0;\n        long differenceCount = 0;\n        long differenceSum2 = 0;\n\
    \        long differenceCount2 = 0;\n        long differenceSum3 = 0;\n      \
    \  long differenceCount3 = 0;\n        long differenceSum4 = 0;\n        long\
    \ differenceCount4 = 0;\n        long differenceSum5 = 0;\n        long differenceCount5\
    \ = 0;\n        long differenceSum6 = 0;\n        long differenceCount6 = 0;\n\
    \        long differenceSum7 = 0;\n        long differenceCount7 = 0;\n      \
    \  long differenceSum8 = 0;\n        long differenceCount8 = 0;\n        long\
    \ differenceSum9 = 0;\n        long differenceCount9 = 0;\n        long differenceSum10\
    \ = 0;\n        long differenceCount10 = 0;\n        long differenceSum11 = 0;\n\
    \        long differenceCount11 = 0;\n        long differenceSum12 = 0;\n    \
    \    long differenceCount12 = 0;\n        long differenceSum13 = 0;\n        long\
    \ differenceCount13 = 0;\n        long differenceSum14 = 0;\n        long differenceCount14\
    \ = 0;\n        long differenceSum15 = 0;\n        long differenceCount15 = 0;\n\
    \        long differenceSum16 = 0;\n        long differenceCount16 = 0;\n    \
    \    long differenceSum17 = 0;\n        long differenceCount17 = 0;\n        long\
    \ differenceSum18 = 0;\n        long differenceCount18 = 0;\n        long differenceSum19\
    \ = 0;\n        long differenceCount19 = 0;\n        long differenceSum20 = 0;\n\
    \        long differenceCount20 = 0;\n        long differenceSum21 = 0;\n    \
    \    long differenceCount21 = 0;\n        long differenceSum22 = 0;\n        long\
    \ differenceCount22 = 0;\n        long differenceSum23 = 0;\n        long differenceCount23\
    \ = 0;\n        long differenceSum24 = 0;\n        long differenceCount24 = 0;\n\
    \        long differenceSum25 = 0;\n        long differenceCount25 = 0;\n    \
    \    long differenceSum26 = 0;\n        long differenceCount26 = 0;\n        long\
    \ differenceSum27 = 0;\n        long differenceCount27 = 0;\n        long differenceSum28\
    \ = 0;\n        long differenceCount28 = 0;\n        long differenceSum29 = 0;\n\
    \        long differenceCount29 = 0;\n        long differenceSum30 = 0;\n    \
    \    long differenceCount30 = 0;\n        long differenceSum31 = 0;\n        long\
    \ differenceCount31 = 0;\n        long differenceSum32 = 0;\n        long differenceCount32\
    \ = 0;\n        long differenceSum33 = 0;\n        long differenceCount33 = 0;\n\
    \        long differenceSum34 = 0;\n        long differenceCount34 = 0;\n    \
    \    long differenceSum35 = 0;\n        long differenceCount35 = 0;\n        long\
    \ \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph_v6e5gu.java:95: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmph_v6e5gu.java:95: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long score = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcjj3nr84.java:109: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long diff2 =\
    \ 0;\n        long guess2 = 0;\n        long game2 = 0;\n        long diff3 =\
    \ 0;\n        long guess3 = 0;\n        long game3 = 0;\n        long diff4 =\
    \ 0;\n        long guess4 = 0;\n        long game4 = 0;\n        long diff5 =\
    \ 0;\n        long guess5 = 0;\n        long game5 = 0;\n        long diff6 =\
    \ 0;\n        long guess6 = 0;\n        long game6 = 0;\n        long diff7 =\
    \ 0;\n        long guess7 = 0;\n        long game7 = 0;\n        long diff8 =\
    \ 0;\n        long guess8 = 0;\n        long game8 = 0;\n        long diff9 =\
    \ 0;\n        long guess9 = 0;\n        long game9 = 0;\n        long diff10 =\
    \ 0;\n        long guess10 = 0;\n        long game10 = 0;\n        long diff11\
    \ = 0;\n        long guess11 = 0;\n        long game11 = 0;\n        long diff12\
    \ = 0;\n        long guess12 = 0;\n        long game12 = 0;\n        long diff13\
    \ = 0;\n        long guess13 = 0;\n        long game13 = 0;\n        long diff14\
    \ = 0;\n        long guess14 = 0;\n        long game14 = 0;\n        long diff15\
    \ = 0;\n        long guess15 = 0;\n        long game15 = 0;\n        long diff16\
    \ = 0;\n        long guess16 = 0;\n        long game16 = 0;\n        long diff17\
    \ = 0;\n        long guess17 = 0;\n        long game17 = 0;\n        long diff18\
    \ = 0;\n        long guess18 = 0;\n        long game18 = 0;\n        long diff19\
    \ = 0;\n        long guess19 = 0;\n        long game19 = 0;\n        long diff20\
    \ = 0;\n        long guess20 = 0;\n        long game20 = 0;\n        long diff21\
    \ = 0;\n        long guess21 = 0;\n        long game21 = 0;\n        long diff22\
    \ = 0;\n        long guess22 = 0;\n        long game22 = 0;\n        long diff23\
    \ = 0;\n        long guess23 = 0;\n        long game23 = 0;\n        long diff24\
    \ = 0;\n        long guess24 = 0;\n        long game24 = 0;\n        long diff25\
    \ = 0;\n        long guess25 = 0;\n        long game25 = 0;\n        long diff26\
    \ = 0;\n        long guess26 = 0;\n        long game26 = 0;\n        long diff27\
    \ = 0;\n        long guess27 = 0;\n        long game27 = 0;\n        long diff28\
    \ = 0;\n        long guess28 = 0;\n        long game28 = 0;\n        long diff29\
    \ = 0;\n        long \n    }\n    public static void main(String[] args) {\n \
    \   assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ib794cy.java:109: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp5ib794cy.java:109: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        boolean correct = false;\n        for (long\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            if (guess == score) {\n               \
    \ correct = true;\n            }\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        if (!correct) {\n   \
    \         difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_8fv0blc.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp_8fv0blc.java:28: error: no suitable method found for get(long)\n\
    \            score = game.get(i);\n                        ^\n    method List.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ long to int)\n    method AbstractList.get(int) is not applicable\n      (argument\
    \ mismatch; possible lossy conversion from long to int)\n    method ArrayList.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ long to int)\n/tmp/tmp_8fv0blc.java:29: error: long cannot be dereferenced\n\
    \            guess = guess.get(i);\n                         ^\n3 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        for (long i = 0; i < game.size(); i++) {\n            score =\
    \ game.get(i);\n            diff = guess.get(i) - score;\n            if (diff\
    \ < 0) {\n                diff = -diff;\n            }\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbumslgdq.java:26: error: no suitable method found for get(long)\n\
    \            score = game.get(i);\n                        ^\n    method List.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ long to int)\n    method AbstractList.get(int) is not applicable\n      (argument\
    \ mismatch; possible lossy conversion from long to int)\n    method ArrayList.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ long to int)\n/tmp/tmpbumslgdq.java:27: error: no suitable method found for\
    \ get(long)\n            diff = guess.get(i) - score;\n                      \
    \  ^\n    method List.get(int) is not applicable\n      (argument mismatch; possible\
    \ lossy conversion from long to int)\n    method AbstractList.get(int) is not\
    \ applicable\n      (argument mismatch; possible lossy conversion from long to\
    \ int)\n    method ArrayList.get(int) is not applicable\n      (argument mismatch;\
    \ possible lossy conversion from long to int)\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxovrsyt4.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            if(!result.contains(diff))\
    \ {\n                result.add(diff);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfz3uwg_t.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpfz3uwg_t.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long guess\
    \ = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     diff = guess - score;\n            if(diff < 0) {\n                result.add(diff);\n\
    \            } else {\n                result.add(0);\n            }\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt797pygg.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpt797pygg.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpt797pygg.java:33:\
    \ error: no suitable method found for add(int)\n                result.add(0);\n\
    \                      ^\n    method Collection.add(Long) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n    method List.add(Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    \    method AbstractCollection.add(Long) is not applicable\n      (argument mismatch;\
    \ int cannot be converted to Long)\n    method AbstractList.add(Long) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n    method ArrayList.add(Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n3 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo25u6bcl.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpo25u6bcl.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxovrsyt4.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long difference = 0;\n        for (int i = 0; i < game.size(); i++) {\n   \
    \         score = game.get(i);\n            difference = Math.abs(guess.get(i)\
    \ - score);\n            if (difference == 0) {\n                result.add((long)0);\n\
    \            } else {\n                result.add((long)difference);\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long difference = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            guess = guess.get(i);\n\
    \            difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd4zkikac.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpd4zkikac.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ < 0) {\n                result.add(diff);\n            } else {\n          \
    \      result.add(Math.abs(diff));\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo25u6bcl.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpo25u6bcl.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long guess\
    \ = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     diff = guess - score;\n            if(guess == score) {\n              \
    \  result.add(0, diff);\n            } else {\n                result.add(Math.abs(diff));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy5zxc364.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpy5zxc364.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for (long score\
    \ : game) {\n            diff = score - guess.get(0);\n            if (diff <\
    \ 0) {\n                result.add(diff);\n            } else {\n            \
    \    result.add(Math.abs(diff));\n            }\n            guess.remove(0);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptwkd8r60.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmptwkd8r60.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa9u5ojmj.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpa9u5ojmj.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(diff < 0) {\n        \
    \        result.add(diff);\n            } else {\n                result.add(Math.abs(diff));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq173phz3.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpq173phz3.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        for (int i = 0; i < game.size(); i++) {\n            if (guess.get(i)\
    \ == game.get(i)) {\n                score = 0;\n            } else {\n      \
    \          score = Math.abs(guess.get(i) - game.get(i));\n            }\n    \
    \        result.add(score);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ < 0) {\n                result.add(0l);\n            } else {\n            \
    \    result.add(Math.abs(diff));\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aucnava.java:34)\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo25u6bcl.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpo25u6bcl.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        for (long i = 0; i < game.size(); i++) {\n            if (game.get(i)\
    \ == guess.get(i)) {\n                score++;\n            } else {\n       \
    \         guess = Math.abs(guess - game.get(i));\n                result.add(guess);\n\
    \            }\n        }\n        result.add(guess);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa579e66o.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpa579e66o.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if (game.get(i) == guess.get(i)) {\n         \
    \                ^\n/tmp/tmpa579e66o.java:26: error: long cannot be dereferenced\n\
    \            if (game.get(i) == guess.get(i)) {\n                            \
    \        ^\n/tmp/tmpa579e66o.java:29: error: incompatible types: possible lossy\
    \ conversion from long to int\n                guess = Math.abs(guess - game.get(i));\n\
    \                                                  ^\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd6rw_lu6.java:32: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpd6rw_lu6.java:33: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpd6rw_lu6.java:34: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpd6rw_lu6.java:35: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpd6rw_lu6.java:36: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpd6rw_lu6.java:37: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpd6rw_lu6.java:38: error: variable totalGuessedIncorrectlyIncorrectly is\
    \ already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n       \
    \ long totalGuessedIncorrectlyIncorrectly = 0;\n             ^\n/tmp/tmpd6rw_lu6.java:39:\
    \ error: variable totalGuessedIncorrectlyIncorrectly is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n             ^\n/tmp/tmpd6rw_lu6.java:40: error: variable totalGuessedIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectly ="
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long guess = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            guess = guess.get(i);\n\
    \            diff = guess - score;\n            result.add(diff);\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_vek2c5v.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp_vek2c5v.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        for(int i =\
    \ 0; i < game.size(); i++) {\n            score = game.get(i);\n            guess\
    \ = guess.get(i);\n            diff = guess - score;\n            if(diff < 0)\
    \ {\n                diff = -diff;\n            }\n            if(diff == 0) {\n\
    \                correct = true;\n            }\n            result.add(diff);\n\
    \        }\n        if(!correct) {\n            for(int i = 0; i < guess.size();\
    \ i++) {\n                guess = guess.get(i);\n                diff = guess\
    \ - score;\n                if(diff < 0) {\n                    diff = -diff;\n\
    \                }\n                if(diff == 0) {\n                    correct\
    \ = true;\n                }\n                result.add(diff);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvj4x_roo.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpvj4x_roo.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpvj4x_roo.java:40:\
    \ error: long cannot be dereferenced\n            for(int i = 0; i < guess.size();\
    \ i++) {\n                                    ^\n/tmp/tmpvj4x_roo.java:41: error:\
    \ long cannot be dereferenced\n                guess = guess.get(i);\n       \
    \                      ^\n4 errors\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            if(!result.contains(diff))\
    \ {\n                result.add(diff);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfz3uwg_t.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpfz3uwg_t.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> difference = new\
    \ ArrayList<Long>(guess);\n        for(int i = 0; i < game.size(); i++) {\n  \
    \          int differenceIndex = 0;\n            for(int j = 0; j < guess.size();\
    \ j++) {\n                if(game.get(i) == guess.get(j)) {\n                \
    \    differenceIndex++;\n                }\n            }\n            result.add(difference.get(differenceIndex));\n\
    \            difference.remove(differenceIndex);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.compare(tmpr4u5_hr9.java:31)\n\tat Problem.main(tmpr4u5_hr9.java:37)\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  for (long g : guess) {\n            score += Math.abs(g - game.get((int)(Math.random()\
    \ * game.size())));\n        }\n        for (long g : guess) {\n            if\
    \ (Math.abs(g - game.get((int)(Math.random() * game.size()))) == 0) {\n      \
    \          result.add(0l);\n            } else {\n                result.add(Math.abs(g\
    \ - game.get((int)(Math.random() * game.size()))));\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2nmw3g0_.java:37)\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long diff = 0;\n        for(int i =\
    \ 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff < 0) {\n                result.add(diff);\n            }\n\
    \            else {\n                result.add(Math.abs(diff));\n           \
    \ }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuesses = 0;\n        long totalGuesses2 = 0;\n    \
    \    long totalGuesses3 = 0;\n        long totalGuesses4 = 0;\n        long totalGuesses5\
    \ = 0;\n        long totalGuesses6 = 0;\n        long totalGuesses7 = 0;\n   \
    \     long totalGuesses8 = 0;\n        long totalGuesses9 = 0;\n        long totalGuesses10\
    \ = 0;\n        long totalGuesses11 = 0;\n        long totalGuesses12 = 0;\n \
    \       long totalGuesses13 = 0;\n        long totalGuesses14 = 0;\n        long\
    \ totalGuesses15 = 0;\n        long totalGuesses16 = 0;\n        long totalGuesses17\
    \ = 0;\n        long totalGuesses18 = 0;\n        long totalGuesses19 = 0;\n \
    \       long totalGuesses20 = 0;\n        long totalGuesses21 = 0;\n        long\
    \ totalGuesses22 = 0;\n        long totalGuesses23 = 0;\n        long totalGuesses24\
    \ = 0;\n        long totalGuesses25 = 0;\n        long totalGuesses26 = 0;\n \
    \       long totalGuesses27 = 0;\n        long totalGuesses28 = 0;\n        long\
    \ totalGuesses29 = 0;\n        long totalGuesses30 = 0;\n        long totalGuesses31\
    \ = 0;\n        long totalGuesses32 = 0;\n        long totalGuesses33 = 0;\n \
    \       long totalGuesses34 = 0;\n        long totalGuesses35 = 0;\n        long\
    \ totalGuesses36 = 0;\n        long totalGuesses37 = 0;\n        long totalGuesses38\
    \ = 0;\n        long totalGuesses39 = 0;\n        long totalGuesses40 = 0;\n \
    \       long totalGuesses41 = 0;\n        long totalGuesses42 = 0;\n        long\
    \ totalGuesses43 = 0;\n        long totalGuesses44 = 0;\n        long totalGuesses45\
    \ = 0;\n        long totalGuesses46 = 0;\n        long totalGuesses47 = 0;\n \
    \       long totalGuesses48 = 0;\n        long totalGuesses49 = 0;\n        long\
    \ totalGuesses50 = 0;\n        long totalGuesses51 = 0;\n        long totalGuesses52\
    \ = 0;\n        long totalGuesses53 = 0;\n        long totalGuesses54 = 0;\n \
    \       long totalGuesses55 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps_2fee3d.java:81: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for (long i = 0; i < game.size(); i++) {\n        \
    \    score = game.get(i);\n            diff = guess.get(i) - score;\n        \
    \    if (diff < 0) {\n                diff = -diff;\n            }\n         \
    \   result.add(diff);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ro_bnrr.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmp5ro_bnrr.java:27: error: incompatible types: possible lossy\
    \ conversion from long to int\n            diff = guess.get(i) - score;\n    \
    \                         ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            result.add(diff);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rkjhdmu.java:33)\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for(int i = 0;\
    \ i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n  \
    \          result.add(diff);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        for(int i =\
    \ 0; i < game.size(); i++) {\n            score = game.get(i);\n            guess\
    \ = guess.get(i);\n            diff = guess - score;\n            if(diff < 0)\
    \ {\n                diff = -diff;\n            }\n            if(diff == 0) {\n\
    \                correct = true;\n            }\n            result.add(diff);\n\
    \        }\n        if(correct) {\n            return result;\n        } else\
    \ {\n            return result;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzw8yxarv.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpzw8yxarv.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxovrsyt4.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long guess = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            guess = guess.get(i);\n\
    \            diff = guess - score;\n            result.add(diff);\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_vek2c5v.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp_vek2c5v.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long diff = game.get(i) - guess.get(i);\n            result.add(diff\
    \ < 0 ? diff : Math.abs(diff));\n        }\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvc_2kchc.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpvc_2kchc.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for (long score\
    \ : game) {\n            diff = score - guess.get(0);\n            if (diff <\
    \ 0) {\n                result.add(diff);\n            } else {\n            \
    \    result.add(Math.abs(diff));\n            }\n            guess.remove(0);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            if(guess == score)\
    \ {\n                result.add(0);\n            } else {\n                result.add(diff);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9ht4prpy.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp9ht4prpy.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n/tmp/tmp9ht4prpy.java:28:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long diff = 0;\n\
    \        long totalGuess = 0;\n        long diffGuess = 0;\n        long totalScore\
    \ = 0;\n        long diffScore = 0;\n        long totalGuesses = 0;\n        long\
    \ diffGuesses = 0;\n        long totalScores = 0;\n        long diffScores = 0;\n\
    \        long totalGuesses2 = 0;\n        long diffGuesses2 = 0;\n        long\
    \ totalScores2 = 0;\n        long diffScores2 = 0;\n        long totalGuesses3\
    \ = 0;\n        long diffGuesses3 = 0;\n        long totalScores3 = 0;\n     \
    \   long diffScores3 = 0;\n        long totalGuesses4 = 0;\n        long diffGuesses4\
    \ = 0;\n        long totalScores4 = 0;\n        long diffScores4 = 0;\n      \
    \  long totalGuesses5 = 0;\n        long diffGuesses5 = 0;\n        long totalScores5\
    \ = 0;\n        long diffScores5 = 0;\n        long totalGuesses6 = 0;\n     \
    \   long diffGuesses6 = 0;\n        long totalScores6 = 0;\n        long diffScores6\
    \ = 0;\n        long totalGuesses7 = 0;\n        long diffGuesses7 = 0;\n    \
    \    long totalScores7 = 0;\n        long diffScores7 = 0;\n        long totalGuesses8\
    \ = 0;\n        long diffGuesses8 = 0;\n        long totalScores8 = 0;\n     \
    \   long diffScores8 = 0;\n        long totalGuesses9 = 0;\n        long diffGuesses9\
    \ = 0;\n        long totalScores9 = 0;\n        long diffScores9 = 0;\n      \
    \  long totalGuesses10 = 0;\n        long diffGuesses10 = 0;\n        long totalScores10\
    \ = 0;\n        long diffScores10 = 0;\n        long totalGuesses11 = 0;\n   \
    \     long diffGuesses11 = 0;\n        long totalScores11 = 0;\n        long diffScores11\
    \ = 0;\n        long totalGuesses12 = 0;\n        long diffGuesses12 = 0;\n  \
    \      long totalScores12 = 0;\n        long diffScores12 = 0;\n        long totalGuesses13\
    \ = 0;\n        long diffGuesses13 = 0;\n        long totalScores13 = 0;\n   \
    \     long diffScores13 = 0;\n        long totalGuesses14 = 0;\n        long diffGuesses14\
    \ = 0;\n        long totalScores14 = 0;\n        long diffScores14 = 0;\n    \
    \    long totalGuesses15 = 0;\n        long diffG\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj5wd9_v9.java:86: error: ';' expected\n        long diffG\n   \
    \               ^\n1 error\n"
  stdout: ''
  timestamp: 1659795426
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long diff\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score += game.get(i);\n\
    \            diff += Math.abs(guess.get(i) - score);\n        }\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            if(guess.get(i) == score) {\n  \
    \              result.add((long)0);\n            } else {\n                result.add((long)diff);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2dx4qu0.java:39)\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        for (long score\
    \ : game) {\n            total += score;\n        }\n        for (long guess :\
    \ guess) {\n            total -= guess;\n        }\n        if (total == 0) {\n\
    \            result.add(0l);\n        } else {\n            result.add(Math.abs(total\
    \ - game.get(game.size() - 1)));\n        }\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvbhd3tno.java:27: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        for (long guess : guess) {\n\
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff != 0) {\n                result.add(diff);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgv4zo_zl.java:33)\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long difference = 0;\n        long total = 0;\n        long total2\
    \ = 0;\n        long total3 = 0;\n        long total4 = 0;\n        long total5\
    \ = 0;\n        long total6 = 0;\n        long total7 = 0;\n        long total8\
    \ = 0;\n        long total9 = 0;\n        long total10 = 0;\n        long total11\
    \ = 0;\n        long total12 = 0;\n        long total13 = 0;\n        long total14\
    \ = 0;\n        long total15 = 0;\n        long total16 = 0;\n        long total17\
    \ = 0;\n        long total18 = 0;\n        long total19 = 0;\n        long total20\
    \ = 0;\n        long total21 = 0;\n        long total22 = 0;\n        long total23\
    \ = 0;\n        long total24 = 0;\n        long total25 = 0;\n        long total26\
    \ = 0;\n        long total27 = 0;\n        long total28 = 0;\n        long total29\
    \ = 0;\n        long total30 = 0;\n        long total31 = 0;\n        long total32\
    \ = 0;\n        long total33 = 0;\n        long total34 = 0;\n        long total35\
    \ = 0;\n        long total36 = 0;\n        long total37 = 0;\n        long total38\
    \ = 0;\n        long total39 = 0;\n        long total40 = 0;\n        long total41\
    \ = 0;\n        long total42 = 0;\n        long total43 = 0;\n        long total44\
    \ = 0;\n        long total45 = 0;\n        long total46 = 0;\n        long total47\
    \ = 0;\n        long total48 = 0;\n        long total49 = 0;\n        long total50\
    \ = 0;\n        long total51 = 0;\n        long total52 = 0;\n        long total53\
    \ = 0;\n        long total54 = 0;\n        long total55 = 0;\n        long total56\
    \ = 0;\n        long total57 = 0;\n        long total58 = 0;\n        long total59\
    \ = 0;\n        long total60 = 0;\n        long total61 = 0;\n        long total62\
    \ = 0;\n        long total63 = 0;\n        long total64 = 0;\n        long total65\
    \ = 0;\n        long total66 = 0;\n        long total67 = 0;\n        long total68\
    \ = 0;\n        long total69 = 0;\n        long total70 = 0;\n        long total71\
    \ = 0;\n        long total72 = 0;\n        long total73 = 0;\n        long total74\
    \ = 0;\n        long total75 = 0;\n        long total76 = 0;\n        long total77\
    \ = 0;\n        long total78 = 0;\n        long total79 = 0;\n        long total80\
    \ = 0;\n        long total81 = 0;\n        long total82 = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoqhfkwo3.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for (long i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            result.add(diff);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqncef0dk.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmpqncef0dk.java:27: error: incompatible types: possible lossy\
    \ conversion from long to int\n            diff = guess.get(i) - score;\n    \
    \                         ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long score = 0;\n\
    \        long guess = 0;\n        long diff = 0;\n        long diff2 = 0;\n  \
    \      long diff3 = 0;\n        long diff4 = 0;\n        long diff5 = 0;\n   \
    \     long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n    \
    \    long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n   \
    \     long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n \
    \       long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        \n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ro1cj1v.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        for (long i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            if (guess == score) {\n      \
    \          result.add(0);\n            } else {\n                result.add(Math.abs(guess\
    \ - score));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg_rekr90.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpg_rekr90.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmpg_rekr90.java:27: error: long cannot be dereferenced\n     \
    \       guess = guess.get(i);\n                         ^\n/tmp/tmpg_rekr90.java:29:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795428
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n \
    \       long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n  \
    \      long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n  \
    \      long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84 = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcplga6va.java:108: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659795428
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedIncorrectly = 0;\n        long totalGuessedIncorrectlyCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyCorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIn\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjsgefrjn.java:55: error: ';' expected\n        long totalGuessedIn\n\
    \                           ^\n1 error\n"
  stdout: ''
  timestamp: 1659795428
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for (int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            diff = guess - score;\n     \
    \       if (diff < 0) {\n                result.add(-diff);\n            } else\
    \ {\n                result.add(diff);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgmqmlzit.java:26: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpgmqmlzit.java:26: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for (int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            if (guess == score) {\n     \
    \           result.add(0);\n            } else {\n                diff = guess\
    \ - score;\n                result.add(Math.abs(diff));\n            }\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq9424sly.java:26: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpq9424sly.java:26: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n/tmp/tmpq9424sly.java:28:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long guess\
    \ = 0;\n        long difference = 0;\n        for (int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            guess = guess.get(i);\n\
    \            difference = Math.abs(guess - score);\n            if (guess == score)\
    \ {\n                result.add(0);\n            } else {\n                result.add(difference);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbssc57sx.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpbssc57sx.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpbssc57sx.java:31:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        for (long g :\
    \ guess) {\n            score += Math.abs(g - game.get((int)(Math.random() * game.size())));\n\
    \            result.add(score);\n        }\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6zs4lj04.java:31)\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            diff = guess - score;\n     \
    \       if(diff < 0) {\n                result.add(diff);\n            } else\
    \ {\n                result.add(Math.abs(diff));\n            }\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1hmy56j.java:26: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpc1hmy56j.java:26: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ < 0) {\n                result.add(diff);\n            }\n            else if(diff\
    \ > 0) {\n                result.add(Math.abs(diff));\n            }\n       \
    \     else {\n                result.add(0l);\n            }\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7eokdojw.java:38)\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> guessedCorrectly\
    \ = new ArrayList<Long>(guess);\n        ArrayList<Long> guessedWrongly = new\
    \ ArrayList<Long>(guess);\n        ArrayList<Long> guessedCorrectlyIndex = new\
    \ ArrayList<Long>(guess);\n        ArrayList<Long> guessedWronglyIndex = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedCorrectlyScore = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedWronglyScore = new ArrayList<Long>(guess);\n \
    \       ArrayList<Long> guessedCorrectlyScoreIndex = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedWronglyScoreIndex = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedCorrectlyScoreIndex2 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedWronglyScoreIndex2 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedCorrectlyScoreIndex3 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedWronglyScoreIndex3 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedCorrectlyScoreIndex4 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedWronglyScoreIndex4 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedCorrectlyScoreIndex5 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedWronglyScoreIndex5 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedCorrectlyScoreIndex6 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedWronglyScoreIndex6 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedCorrectlyScoreIndex7 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedWronglyScoreIndex7 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedCorrectlyScoreIndex8 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedWronglyScoreIndex8 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedCorrectlyScoreIndex9 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedWronglyScoreIndex9 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedCorrectlyScoreIndex10 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedWronglyScoreIndex10 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedCorrectlyScoreIndex11 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> guessedWronglyScoreIndex11 = new ArrayList<Long>(guess\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw_b1yajq.java:50: error: ')' expected\n        ArrayList<Long>\
    \ guessedWronglyScoreIndex11 = new ArrayList<Long>(guess\n                   \
    \                                                           ^\n1 error\n"
  stdout: ''
  timestamp: 1659795428
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            result.add(diff);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rkjhdmu.java:33)\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ != 0) {\n                result.add(diff);\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fz7ho4_.java:32)\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppfy73iqq.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmppfy73iqq.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff < 0) {\n                result.add(-diff);\n            }\
    \ else {\n                result.add(diff);\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu_f44dc4.java:35)\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for (long guesstime : guess) {\n            score = game.get(guestime\
    \ - 1);\n            diff = Math.abs(guess - score);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphlna1vx_.java:26: error: cannot find symbol\n            score\
    \ = game.get(guestime - 1);\n                             ^\n  symbol:   variable\
    \ guestime\n  location: class Problem\n/tmp/tmphlna1vx_.java:27: error: bad operand\
    \ types for binary operator '-'\n            diff = Math.abs(guess - score);\n\
    \                                  ^\n  first type:  ArrayList<Long>\n  second\
    \ type: long\n2 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppfy73iqq.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmppfy73iqq.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long total = 0;\n        long diff\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            total += game.get(i);\n\
    \            diff = game.get(i) - guess.get(i);\n            if(diff < 0) {\n\
    \                result.add(total + diff);\n            } else {\n           \
    \     result.add(total - diff);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uaaywmp.java:37)\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score += game.get(i);\n\
    \            diff += Math.abs(guess.get(i) - score);\n        }\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long diff = Math.abs(guess.get(i)\
    \ - score);\n            if(diff == 0) {\n                result.add((long)0);\n\
    \            } else {\n                result.add((long)diff);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz732vc7_.java:30: error: variable diff is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long diff = Math.abs(guess.get(i)\
    \ - score);\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long difference\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            difference = guess.get(i) - score;\n            if(difference < 0)\
    \ {\n                difference = -difference;\n            }\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpczjaf6ob.java:36)\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long diff = game.get(i) - guess.get(i);\n            if(diff < 0)\
    \ {\n                result.add(diff);\n            } else {\n               \
    \ result.add(Math.abs(diff));\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        for(int i =\
    \ 0; i < game.size(); i++) {\n            score = game.get(i);\n            guess\
    \ = guess.get(i);\n            diff = guess - score;\n            if(diff < 0)\
    \ {\n                diff = -diff;\n            }\n            if(diff == 0) {\n\
    \                correct = true;\n            }\n            result.add(diff);\n\
    \        }\n        if(correct) {\n            return result;\n        }\n   \
    \     else {\n            return result;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt1v_tiwv.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpt1v_tiwv.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            if(guess == score)\
    \ {\n                result.add(diff);\n            } else {\n               \
    \ result.add(Math.abs(guess - score));\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0m59_515.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp0m59_515.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> difference = new\
    \ ArrayList<Long>(guess);\n        Arrays.sort(difference);\n        long differenceSum\
    \ = 0;\n        long differenceCount = 0;\n        long differenceSum2 = 0;\n\
    \        long differenceCount2 = 0;\n        long differenceSum3 = 0;\n      \
    \  long differenceCount3 = 0;\n        long differenceSum4 = 0;\n        long\
    \ differenceCount4 = 0;\n        long differenceSum5 = 0;\n        long differenceCount5\
    \ = 0;\n        long differenceSum6 = 0;\n        long differenceCount6 = 0;\n\
    \        long differenceSum7 = 0;\n        long differenceCount7 = 0;\n      \
    \  long differenceSum8 = 0;\n        long differenceCount8 = 0;\n        long\
    \ differenceSum9 = 0;\n        long differenceCount9 = 0;\n        long differenceSum10\
    \ = 0;\n        long differenceCount10 = 0;\n        long differenceSum11 = 0;\n\
    \        long differenceCount11 = 0;\n        long differenceSum12 = 0;\n    \
    \    long differenceCount12 = 0;\n        long differenceSum13 = 0;\n        long\
    \ differenceCount13 = 0;\n        long differenceSum14 = 0;\n        long differenceCount14\
    \ = 0;\n        long differenceSum15 = 0;\n        long differenceCount15 = 0;\n\
    \        long differenceSum16 = 0;\n        long differenceCount16 = 0;\n    \
    \    long differenceSum17 = 0;\n        long differenceCount17 = 0;\n        long\
    \ differenceSum18 = 0;\n        long differenceCount18 = 0;\n        long differenceSum19\
    \ = 0;\n        long differenceCount19 = 0;\n        long differenceSum20 = 0;\n\
    \        long differenceCount20 = 0;\n        long differenceSum21 = 0;\n    \
    \    long differenceCount21 = 0;\n        long differenceSum22 = 0;\n        long\
    \ differenceCount22 = 0;\n        long differenceSum23 = 0;\n        long differenceCount23\
    \ = 0;\n        long differenceSum24 = 0;\n        long differenceCount24 = 0;\n\
    \        long differenceSum25 = 0;\n        long differenceCount25 = 0;\n    \
    \    long differenceSum26 = 0;\n        long differenceCount26 = 0;\n        long\
    \ differenceSum27 = 0;\n        long differenceCount27 = 0;\n        long differenceSum28\
    \ = 0;\n        long differenceCount28 = 0;\n        long differenceSum29 = 0;\n\
    \        long differenceCount29 = 0;\n        long differenceSum30 = 0;\n    \
    \    long differenceCount30 = 0;\n        long differenceSum31 = 0;\n        long\
    \ differenceCount31 = 0;\n        long differenceSum32 = 0;\n        long differenceCount32\
    \ = 0;\n        long differenceSum33 = 0;\n        long differenceCount33 = 0;\n\
    \        long differenceSum34 = 0;\n        long differenceCount34 = 0;\n    \
    \    long differenceSum35 = 0;\n        long differenceCount35 = 0;\n        long\
    \ \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph_v6e5gu.java:95: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmph_v6e5gu.java:95: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for (long g : guess) {\n            score = game.get(g);\n          \
    \  diff = g - score;\n            result.add(diff);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp30gmxkpo.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(g);\n                       \
    \      ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long diff\
    \ = 0;\n        for (int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            if (diff < 0) {\n     \
    \           result.add(diff);\n            } else {\n                result.add(Math.abs(diff));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp56h3zxhp.java:37)\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long difference\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            difference = guess.get(i) - score;\n            if(difference < 0)\
    \ {\n                difference = -difference;\n            }\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpczjaf6ob.java:36)\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        boolean correct = false;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            if(difference == 0) {\n                correct = true;\n        \
    \    }\n            result.add(difference);\n        }\n        if(correct) {\n\
    \            return result;\n        }\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            guess = guess.get(i);\n\
    \            difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1vt_lz99.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp1vt_lz99.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmp1vt_lz99.java:41:\
    \ error: long cannot be dereferenced\n            guess = guess.get(i);\n    \
    \                     ^\n3 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4ni6f_td.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp4ni6f_td.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        boolean correct = false;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            if(guess == score) {\n                correct = true;\n         \
    \   }\n            result.add(difference);\n        }\n        if(correct) {\n\
    \            result.add(0);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbpium21x.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpbpium21x.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpbpium21x.java:37:\
    \ error: incompatible types: int cannot be converted to Long\n            result.add(0);\n\
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long diff\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            if(diff < 0) {\n      \
    \          diff = -diff;\n            }\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp030rlnhn.java:36)\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4ni6f_td.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp4ni6f_td.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long difference\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            difference = guess.get(i) - score;\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1bb49xjz.java:33)\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for(int i = 0;\
    \ i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n  \
    \          result.add(diff);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < guess.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3wxm4vmq.java:30)\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        for (long guesstime\
    \ : guess) {\n            score += guesstime;\n        }\n        for (long gametime\
    \ : game) {\n            score -= gametime;\n        }\n        if (score == 0)\
    \ {\n            result.add(0l);\n        } else {\n            result.add(Math.abs(score\
    \ - game.get(game.size() - 1)));\n        }\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbjm0lcdn.java:38)\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(diff < 0) {\n        \
    \        result.add(diff);\n            } else {\n                result.add(Math.abs(diff));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo6cres7e.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpo6cres7e.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff > 0) {\n                result.add(diff);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4k_vsy9k.java:33)\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxovrsyt4.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long difference\
    \ = 0;\n        long maxScore = game.get(game.size()-1);\n        long maxGuess\
    \ = guess.get(guess.size()-1);\n        for(int i = 0; i < guess.size(); i++)\
    \ {\n            score = game.get(i);\n            difference = guess.get(i) -\
    \ score;\n            if(difference < 0) {\n                difference = -difference;\n\
    \            }\n            if(maxScore == maxGuess) {\n                result.add(0l);\n\
    \            } else {\n                result.add(difference);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for (long g : guess) {\n            score += g;\n        }\n        for\
    \ (long g : guess) {\n            diff = g - score;\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwl6rt1ci.java:35)\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long diff\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            if(diff < 0) {\n      \
    \          diff = -diff;\n            }\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp030rlnhn.java:36)\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(diff < 0) {\n        \
    \        diff = -diff;\n            }\n            result.add(diff);\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm99gws1j.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpm99gws1j.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long difference\
    \ = 0;\n        for (long i = 0; i < game.size(); i++) {\n            if (guess.get(i)\
    \ == game.get(i)) {\n                score = 0;\n            } else {\n      \
    \          score = Math.abs(guess.get(i) - game.get(i));\n            }\n    \
    \        result.add(score);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv7we36s9.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if (guess.get(i) == game.get(i)) {\n         \
    \                 ^\n/tmp/tmpv7we36s9.java:26: error: incompatible types: possible\
    \ lossy conversion from long to int\n            if (guess.get(i) == game.get(i))\
    \ {\n                                         ^\n/tmp/tmpv7we36s9.java:29: error:\
    \ incompatible types: possible lossy conversion from long to int\n           \
    \     score = Math.abs(guess.get(i) - game.get(i));\n                        \
    \                   ^\n/tmp/tmpv7we36s9.java:29: error: incompatible types: possible\
    \ lossy conversion from long to int\n                score = Math.abs(guess.get(i)\
    \ - game.get(i));\n                                                         ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long difference\
    \ = 0;\n        long maxScore = game.get(game.size()-1);\n        long maxGuess\
    \ = guess.get(guess.size()-1);\n        for(int i = 0; i < guess.size(); i++)\
    \ {\n            score = game.get(i);\n            difference = guess.get(i) -\
    \ score;\n            if (difference < 0) {\n                difference = -difference;\n\
    \            }\n            if (difference == 0) {\n                result.add((long)0);\n\
    \            } else {\n                result.add((long)difference);\n       \
    \     }\n        }\n        if (maxScore == maxGuess) {\n            result.add((long)0);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcuuqqpha.java:46)\n"
  stdout: ''
  timestamp: 1659795431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long difference = 0;\n        for (long i = 0; i < game.size(); i++) {\n  \
    \          score += game.get(i);\n            difference = Math.abs(guess.get(i)\
    \ - score);\n            if (difference > 0) {\n                result.add((long)difference);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxcje55u1.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score += game.get(i);\n                      \
    \        ^\n/tmp/tmpxcje55u1.java:27: error: incompatible types: possible lossy\
    \ conversion from long to int\n            difference = Math.abs(guess.get(i)\
    \ - score);\n                                            ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long diff\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            if(diff < 0) {\n      \
    \          result.add(diff);\n            } else {\n                result.add(Math.abs(diff));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsko81b3l.java:37)\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for (long i = 0; i < game.size(); i++) {\n        \
    \    score = game.get(i);\n            diff = guess.get(i) - score;\n        \
    \    if (diff < 0) {\n                diff = -diff;\n            }\n         \
    \   result.add(diff);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ro_bnrr.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmp5ro_bnrr.java:27: error: incompatible types: possible lossy\
    \ conversion from long to int\n            diff = guess.get(i) - score;\n    \
    \                         ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long difference = 0;\n        for (long i = 0; i < game.size(); i++) {\n  \
    \          if (game.get(i) == guess.get(i)) {\n                score = 0;\n  \
    \          } else {\n                score = Math.abs(game.get(i) - guess.get(i));\n\
    \            }\n            result.add(score);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmponxktbje.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if (game.get(i) == guess.get(i)) {\n         \
    \                ^\n/tmp/tmponxktbje.java:26: error: incompatible types: possible\
    \ lossy conversion from long to int\n            if (game.get(i) == guess.get(i))\
    \ {\n                                         ^\n/tmp/tmponxktbje.java:29: error:\
    \ incompatible types: possible lossy conversion from long to int\n           \
    \     score = Math.abs(game.get(i) - guess.get(i));\n                        \
    \                  ^\n/tmp/tmponxktbje.java:29: error: incompatible types: possible\
    \ lossy conversion from long to int\n                score = Math.abs(game.get(i)\
    \ - guess.get(i));\n                                                         ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        for (long i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            if (guess == score) {\n      \
    \          result.add(0);\n            } else {\n                result.add(Math.abs(guess\
    \ - score));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg_rekr90.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpg_rekr90.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmpg_rekr90.java:27: error: long cannot be dereferenced\n     \
    \       guess = guess.get(i);\n                         ^\n/tmp/tmpg_rekr90.java:29:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795428
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            diff += Math.abs(guess.get(i) -\
    \ game.get(i));\n        }\n        result.add(diff);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp59faoi4z.java:31)\n"
  stdout: ''
  timestamp: 1659795431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long diff = 0;\n       \
    \ for(int i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n\
    \            long guess = guess.get(i);\n            diff = guess - score;\n \
    \           if(diff < 0) {\n                diff = -diff;\n            }\n   \
    \         result.add(diff);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp83zykvc7.java:26: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp83zykvc7.java:26: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        long total = 0;\n        long total2 =\
    \ 0;\n        long total3 = 0;\n        long total4 = 0;\n        long total5\
    \ = 0;\n        long total6 = 0;\n        long total7 = 0;\n        long total8\
    \ = 0;\n        long total9 = 0;\n        long total10 = 0;\n        long total11\
    \ = 0;\n        long total12 = 0;\n        long total13 = 0;\n        long total14\
    \ = 0;\n        long total15 = 0;\n        long total16 = 0;\n        long total17\
    \ = 0;\n        long total18 = 0;\n        long total19 = 0;\n        long total20\
    \ = 0;\n        long total21 = 0;\n        long total22 = 0;\n        long total23\
    \ = 0;\n        long total24 = 0;\n        long total25 = 0;\n        long total26\
    \ = 0;\n        long total27 = 0;\n        long total28 = 0;\n        long total29\
    \ = 0;\n        long total30 = 0;\n        long total31 = 0;\n        long total32\
    \ = 0;\n        long total33 = 0;\n        long total34 = 0;\n        long total35\
    \ = 0;\n        long total36 = 0;\n        long total37 = 0;\n        long total38\
    \ = 0;\n        long total39 = 0;\n        long total40 = 0;\n        long total41\
    \ = 0;\n        long total42 = 0;\n        long total43 = 0;\n        long total44\
    \ = 0;\n        long total45 = 0;\n        long total46 = 0;\n        long total47\
    \ = 0;\n        long total48 = 0;\n        long total49 = 0;\n        long total50\
    \ = 0;\n        long total51 = 0;\n        long total52 = 0;\n        long total53\
    \ = 0;\n        long total54 = 0;\n        long total55 = 0;\n        long total56\
    \ = 0;\n        long total57 = 0;\n        long total58 = 0;\n        long total59\
    \ = 0;\n        long total60 = 0;\n        long total61 = 0;\n        long total62\
    \ = 0;\n        long total63 = 0;\n        long total64 = 0;\n        long total65\
    \ = 0;\n        long total66 = 0;\n        long total67 = 0;\n        long total68\
    \ = 0;\n        long total69 = 0;\n        long total70 = 0;\n        long total71\
    \ = 0;\n        long total72 = 0;\n        long total73 = 0;\n        long total74\
    \ = 0;\n        long total75 = 0;\n        long total76 = 0;\n        long total77\
    \ = 0;\n        long total78 = 0;\n        long total79 = 0;\n        long total80\
    \ = 0;\n        long total81 = 0;\n        long total82 = 0;\n        \n    }\n\
    \    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr4c6upx4.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            result.add(diff);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rkjhdmu.java:33)\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n    \
    \        score = game.get(i);\n            guess = guess.get(i);\n           \
    \ diff = guess - score;\n            result.add(diff);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa7893nw_.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpa7893nw_.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        for (long guesstime\
    \ : guess) {\n            long difference = guesstime - game.get(0);\n       \
    \     if (difference < 0) {\n                difference = difference * -1;\n \
    \           }\n            if (difference == 0) {\n                result.add(0);\n\
    \            } else {\n                result.add(difference);\n            }\n\
    \            score += difference;\n        }\n        if (result.size() == guess.size())\
    \ {\n            return result;\n        } else {\n            ArrayList<Long>\
    \ difference = new ArrayList<>();\n            for (long guesstime : guess) {\n\
    \                long difference = guesstime - game.get(0);\n                if\
    \ (difference < 0) {\n                    difference = difference * -1;\n    \
    \            }\n                if (difference != 0) {\n                    difference.add(difference);\n\
    \                }\n            }\n            return difference;\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5pvdzlt.java:30: error: incompatible types: int cannot be converted\
    \ to Long\n                result.add(0);\n                           ^\n/tmp/tmpn5pvdzlt.java:41:\
    \ error: variable difference is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n\
    \                long difference = guesstime - game.get(0);\n                \
    \     ^\n/tmp/tmpn5pvdzlt.java:46: error: long cannot be dereferenced\n      \
    \              difference.add(difference);\n                              ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        for (long i = 0; i < game.size(); i++) {\n  \
    \          score = game.get(i);\n            guess = guess.get(i);\n         \
    \   diff = guess - score;\n            if (diff < 0) {\n                result.add(diff);\n\
    \            } else {\n                result.add(Math.abs(diff));\n         \
    \   }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr4m1hh_f.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpr4m1hh_f.java:27: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmpr4m1hh_f.java:28: error: long cannot be dereferenced\n     \
    \       guess = guess.get(i);\n                         ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff < 0) {\n                result.add(-diff);\n            }\
    \ else {\n                result.add(diff);\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu_f44dc4.java:35)\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long difference\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            difference = guess.get(i) - score;\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1bb49xjz.java:33)\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long guess = 0;\n        long difference = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            guess = guess.get(i);\n\
    \            difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp443xtqjb.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp443xtqjb.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n \
    \       long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n  \
    \      long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n  \
    \      long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84 = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcplga6va.java:108: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659795428
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3f5zldvf.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp3f5zldvf.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795431
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ < 0) {\n                result.add(Math.abs(diff));\n            } else {\n\
    \                result.add(diff);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795431
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for(int i = 0;\
    \ i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n  \
    \          if(diff < 0) {\n                result.add(Math.abs(diff));\n     \
    \       } else {\n                result.add(diff);\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedIncorrectly = 0;\n        long totalGuessedIncorrectlyCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyCorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyCorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyCorrectlyIncorrectly =\
    \ 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyCorrectly = 0;\n\
    \        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n\
    \        long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n  \
    \      long totalGuessedIncorrectlyIncorrectlyIncorrectlyCorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectlyCorrectly = 0;\n        long\
    \ totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n        long\
    \ totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n        long\
    \ totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n        long\
    \ totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectly = 0;\n        long totalGuessed =\
    \ 0;\n        long totalGuessedCorrectly = 0;\n        long totalGuessedIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyCorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIn\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2tbs1rbc.java:61: error: ';' expected\n        long totalGuessedIncorrectlyIn\n\
    \                                      ^\n1 error\n"
  stdout: ''
  timestamp: 1659795431
- exit_code: 4
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        for (long g :\
    \ guess) {\n            score += Math.abs(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp030ji58k.java:25: error: ')' expected\n            score += Math.abs(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g - game.get((int)(g - game.get((int)(g - game.get((int)(g\
    \ - game.get((int)(g\n                                                       \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                        "
  stdout: ''
  timestamp: 1659795431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        for(int i =\
    \ 0; i < game.size(); i++) {\n            score = game.get(i);\n            guess\
    \ = guess.get(i);\n            diff = guess - score;\n            if(diff < 0)\
    \ {\n                diff = -diff;\n            }\n            if(diff == 0) {\n\
    \                correct = true;\n            }\n            result.add(diff);\n\
    \        }\n        if(correct) {\n            return result;\n        }\n   \
    \     else {\n            for(int i = 0; i < guess.size(); i++) {\n          \
    \      guess = guess.get(i);\n                diff = guess - score;\n        \
    \        if(diff < 0) {\n                    diff = -diff;\n                }\n\
    \                result.add(diff);\n            }\n            return result;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpekrv3x9n.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpekrv3x9n.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpekrv3x9n.java:43:\
    \ error: long cannot be dereferenced\n            for(int i = 0; i < guess.size();\
    \ i++) {\n                                    ^\n/tmp/tmpekrv3x9n.java:44: error:\
    \ long cannot be dereferenced\n                guess = guess.get(i);\n       \
    \                      ^\n4 errors\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo25u6bcl.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpo25u6bcl.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        for(int i =\
    \ 0; i < game.size(); i++) {\n            score = game.get(i);\n            guess\
    \ = guess.get(i);\n            diff = guess - score;\n            if(diff == 0)\
    \ {\n                correct = true;\n            }\n            result.add(diff);\n\
    \        }\n        if(correct) {\n            return result;\n        }\n   \
    \     for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            diff = guess - score;\n      \
    \      if(diff < 0) {\n                result.add(diff);\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsyi_nydn.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpsyi_nydn.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpsyi_nydn.java:41:\
    \ error: long cannot be dereferenced\n            guess = guess.get(i);\n    \
    \                     ^\n3 errors\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        long maxScore = game.get(game.size() - 1);\n        long maxDiff = guess.get(guess.size()\
    \ - 1);\n        long maxGuess = guess.get(guess.size() - 1);\n        long maxGame\
    \ = game.get(game.size() - 1);\n        long maxGuesses = game.get(game.size()\
    \ - 1);\n        long maxGuesses = guess.get(guess.size() - 1);\n        long\
    \ maxGuesses = guess.get(guess.size() - 1);\n        long maxGuesses = guess.get(guess.size()\
    \ - 1);\n        long maxGuesses = guess.get(guess.size() - 1);\n        long\
    \ maxGuesses = guess.get(guess.size() - 1);\n        long maxGuesses = guess.get(guess.size()\
    \ - 1);\n        long maxGuesses = guess.get(guess.size() - 1);\n        long\
    \ maxGuesses = guess.get(guess.size() - 1);\n        long maxGuesses = guess.get(guess.size()\
    \ - 1);\n        long maxGuesses = guess.get(guess.size() - 1);\n        long\
    \ maxGuesses = guess.get(guess.size() - 1);\n        long maxGuesses = guess.get(guess.size()\
    \ - 1);\n        long maxGuesses = guess.get(guess.size() - 1);\n        long\
    \ maxGuesses = guess.get(guess.size() - 1);\n        long maxGuesses = guess.get(guess.size()\
    \ - 1);\n        long maxGuesses = guess.get(guess.size() - 1);\n        long\
    \ maxGuesses = guess.get(guess.size() - 1);\n        long maxGuesses = guess.get(guess.size()\
    \ - 1);\n        long maxGuesses = guess.get(guess.size() - 1);\n        long\
    \ maxGuesses = guess.get(guess.size() - 1);\n        long maxGuesses = guess.get(guess.size()\
    \ - 1);\n        long maxGuesses = guess.get(guess.size() - 1);\n        long\
    \ maxGuesses = guess.get(guess.size() - 1);\n        long maxGuesses = guess.get(guess.size()\
    \ - 1);\n        long maxGuesses = guess.get(guess.size() - 1);\n        long\
    \ maxGuesses = guess.get(guess.size() - 1);\n        long maxGuesses = guess.get(guess.size()\
    \ - 1);\n        long maxGuesses = guess.get(guess.size() - 1);\n        long\
    \ maxGuesses = gues\n    }\n    public static void main(String[] args) {\n   \
    \ assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplw6_mf6w.java:58: error: ';' expected\n        long maxGuesses\
    \ = gues\n                              ^\n1 error\n"
  stdout: ''
  timestamp: 1659795431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxovrsyt4.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        for(int i =\
    \ 0; i < game.size(); i++) {\n            score = game.get(i);\n            guess\
    \ = guess.get(i);\n            diff = guess - score;\n            correct = guess\
    \ == score;\n            result.add(correct ? diff : Math.abs(diff));\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoweft1bz.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpoweft1bz.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> diff = new ArrayList<Long>(guess);\n\
    \        for(int i = 0; i < game.size(); i++) {\n            if(!game.get(i).equals(guess.get(i)))\
    \ {\n                result.add(0l);\n            } else {\n                result.add(Math.abs(guess.get(i)\
    \ - game.get(i)));\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvsdihecx.java:34)\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(diff < 0) {\n        \
    \        result.add(diff);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplm6amplr.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmplm6amplr.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long diff = game.get(i) - guess.get(i);\n            result.add(diff\
    \ < 0 ? diff + Math.abs(diff) : diff);\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        for (long i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            if (guess == score) {\n      \
    \          result.add(0);\n            } else {\n                result.add(Math.abs(guess\
    \ - score));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg_rekr90.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpg_rekr90.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmpg_rekr90.java:27: error: long cannot be dereferenced\n     \
    \       guess = guess.get(i);\n                         ^\n/tmp/tmpg_rekr90.java:29:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795428
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        for (long i = 0; i < game.size(); i++) {\n  \
    \          score = game.get(i);\n            guess = guess.get(i);\n         \
    \   diff = guess - score;\n            result.add(diff);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8dblaf1r.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp8dblaf1r.java:27: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmp8dblaf1r.java:28: error: long cannot be dereferenced\n     \
    \       guess = guess.get(i);\n                         ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff != 0) {\n                result.add(diff);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgv4zo_zl.java:33)\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff != 0) {\n                result.add(diff);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgv4zo_zl.java:33)\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long diff = 0;\n       \
    \ for(int i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff > 0) {\n                result.add(-diff);\n            }\
    \ else {\n                result.add(diff);\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7tchjbe5.java:35)\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            if(!result.contains(diff))\
    \ {\n                result.add(diff);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfz3uwg_t.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpfz3uwg_t.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo25u6bcl.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpo25u6bcl.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(!result.contains(diff))\
    \ {\n                result.add(diff);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_orbox78.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp_orbox78.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 =\
    \ 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n\
    \        long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n\
    \        long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0zji0mf6.java:107: error: ';' expected\n        long diff84\n \
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659795431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> guesses = new ArrayList<Long>(guess);\n\
    \        guesses.sort((a, b) -> {\n            long aDiff = a - b;\n         \
    \   long bDiff = b - a;\n            return aDiff > bDiff ? -1 : aDiff < bDiff\
    \ ? 1 : 0;\n        });\n        long diff = 0;\n        for (int i = 0; i < guesses.size();\
    \ i++) {\n            long guess = guesses.get(i);\n            long score = game.get(i);\n\
    \            if (guess == score) {\n                result.add(0, 0);\n      \
    \      } else {\n                diff = guess - score;\n                result.add(diff,\
    \ Math.abs(diff));\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfkd5etf0.java:31: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guesses.get(i);\n\
    \                 ^\n/tmp/tmpfkd5etf0.java:34: error: incompatible types: int\
    \ cannot be converted to Long\n                result.add(0, 0);\n           \
    \                   ^\n/tmp/tmpfkd5etf0.java:37: error: incompatible types: possible\
    \ lossy conversion from long to int\n                result.add(diff, Math.abs(diff));\n\
    \                           ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        boolean correct = false;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            if(guess == score) {\n                correct = true;\n         \
    \   }\n            result.add(difference);\n        }\n        if(correct) {\n\
    \            return result;\n        }\n        else {\n            return result;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp85x63hf9.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp85x63hf9.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        for (long i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            if (guess == score) {\n      \
    \          result.add(0);\n            } else {\n                result.add(Math.abs(guess\
    \ - score));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg_rekr90.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpg_rekr90.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmpg_rekr90.java:27: error: long cannot be dereferenced\n     \
    \       guess = guess.get(i);\n                         ^\n/tmp/tmpg_rekr90.java:29:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795428
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(diff < 0) {\n        \
    \        diff = -diff;\n            }\n            result.add(diff);\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm99gws1j.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpm99gws1j.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795430
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff < 0) {\n                result.add(diff);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvqbsf_o8.java:33)\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long difference\
    \ = 0;\n        for (long guesstime : guess) {\n            difference = Math.abs(guess\
    \ - game);\n            if (difference == 0) {\n                result.add(0);\n\
    \            } else {\n                result.add(difference);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptpylsglk.java:26: error: bad operand types for binary operator\
    \ '-'\n            difference = Math.abs(guess - game);\n                    \
    \                    ^\n  first type:  ArrayList<Long>\n  second type: ArrayList<Long>\n\
    /tmp/tmptpylsglk.java:28: error: incompatible types: int cannot be converted to\
    \ Long\n                result.add(0);\n                           ^\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    2 errors\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3f5zldvf.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp3f5zldvf.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795431
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ < 0) {\n                result.add(-diff);\n            } else {\n         \
    \       result.add(diff);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        for (long i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            if (guess == score) {\n      \
    \          result.add((long)0);\n            } else {\n                result.add((long)Math.abs(guess\
    \ - score));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7x6jzn5n.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp7x6jzn5n.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmp7x6jzn5n.java:27: error: long cannot be dereferenced\n     \
    \       guess = guess.get(i);\n                         ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            if(guess == score)\
    \ {\n                result.add(0l);\n            } else {\n                result.add(diff);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1ls4a8sy.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp1ls4a8sy.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            diff += Math.abs(game.get(i) - guess.get(i));\n\
    \        }\n        result.add(diff);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfx0bv5dm.java:31)\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long diff = 0;\n\
    \        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n \
    \       long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n  \
    \      long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n  \
    \      long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84 = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpilxrcdzv.java:108: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnjghwz8b.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpnjghwz8b.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n          \
    \  score = game.get(i);\n            diff = guess.get(i) - score;\n          \
    \  result.add(diff);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprxm5_09a.java:33)\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ < 0) {\n                result.add(diff);\n            } else {\n          \
    \      result.add(Math.abs(diff));\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpixk4m5sh.java:34)\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long diff\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score += game.get(i);\n\
    \            diff = game.get(i) - guess.get(i);\n            if(diff < 0) {\n\
    \                result.add(diff);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2pha8pk.java:35)\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo25u6bcl.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpo25u6bcl.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> diff = new ArrayList<Long>(guess);\n\
    \        for(int i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n\
    \            long guess = guess.get(i);\n            long diff = Math.abs(guess\
    \ - score);\n            result.add(diff);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnwgc9ssi.java:26: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpnwgc9ssi.java:26: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n/tmp/tmpnwgc9ssi.java:27:\
    \ error: variable diff is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n\
    \            long diff = Math.abs(guess - score);\n                 ^\n3 errors\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long diff\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score += game.get(i);\n\
    \            diff += Math.abs(guess.get(i) - score);\n        }\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            if(!game.get(i).equals(guess.get(i)))\
    \ {\n                result.add((long)diff);\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwf7i2fl_.java:37)\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for (long g : guess) {\n            score = game.get(g);\n          \
    \  if (score == 0) {\n                result.add(0);\n            } else {\n \
    \               diff = g - score;\n                result.add(Math.abs(diff));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpibbtwiqb.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(g);\n                       \
    \      ^\n/tmp/tmpibbtwiqb.java:28: error: incompatible types: int cannot be converted\
    \ to Long\n                result.add(0);\n                           ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n2 errors\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> difference = new\
    \ ArrayList<Long>(guess);\n        ArrayList<Long> difference2 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> difference3 = new ArrayList<Long>(guess);\n        ArrayList<Long>\
    \ difference4 = new ArrayList<Long>(guess);\n        ArrayList<Long> difference5\
    \ = new ArrayList<Long>(guess);\n        ArrayList<Long> difference6 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> difference7 = new ArrayList<Long>(guess);\n        ArrayList<Long>\
    \ difference8 = new ArrayList<Long>(guess);\n        ArrayList<Long> difference9\
    \ = new ArrayList<Long>(guess);\n        ArrayList<Long> difference10 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> difference11 = new ArrayList<Long>(guess);\n        ArrayList<Long>\
    \ difference12 = new ArrayList<Long>(guess);\n        ArrayList<Long> difference13\
    \ = new ArrayList<Long>(guess);\n        ArrayList<Long> difference14 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> difference15 = new ArrayList<Long>(guess);\n        ArrayList<Long>\
    \ difference16 = new ArrayList<Long>(guess);\n        ArrayList<Long> difference17\
    \ = new ArrayList<Long>(guess);\n        ArrayList<Long> difference18 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> difference19 = new ArrayList<Long>(guess);\n        ArrayList<Long>\
    \ difference20 = new ArrayList<Long>(guess);\n        ArrayList<Long> difference21\
    \ = new ArrayList<Long>(guess);\n        ArrayList<Long> difference22 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> difference23 = new ArrayList<Long>(guess);\n        ArrayList<Long>\
    \ difference24 = new ArrayList<Long>(guess);\n        ArrayList<Long> difference25\
    \ = new ArrayList<Long>(guess);\n        ArrayList<Long> difference26 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> difference27 = new ArrayList<Long>(guess);\n        ArrayList<Long>\
    \ difference28 = new ArrayList<Long>(guess);\n        ArrayList<Long> difference29\
    \ = new ArrayList<Long>(guess);\n        ArrayList<Long> difference30 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> difference31 = new ArrayList<Long>(guess);\n        ArrayList<Long>\
    \ difference32 = new ArrayList<Long>(guess);\n        ArrayList<Long> difference33\
    \ = new ArrayList<Long>(guess);\n        ArrayList<Long> difference34 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> difference35 = new ArrayList<Long>(guess);\n        ArrayList<Long>\
    \ difference36 = new ArrayList<Long>(guess);\n        ArrayList<Long> difference37\
    \ = new ArrayList<Long>(guess);\n        ArrayList<Long> difference38 = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> difference\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcl0oqqb4.java:61: error: ';' expected\n        ArrayList<Long>\
    \ difference\n                                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        for (long guesstime\
    \ : guess) {\n            score += guesstime;\n        }\n        for (long gametime\
    \ : game) {\n            score -= gametime;\n            if (score < 0) {\n  \
    \              score = 0;\n            }\n            result.add(score);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhgt73oi.java:37)\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n \
    \       long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n  \
    \      long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n  \
    \      long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84 = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcplga6va.java:108: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659795428
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < guess.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(!result.contains(diff))\
    \ {\n                result.add(diff);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0s5mujey.java:32)\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxovrsyt4.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            result.add(diff);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rkjhdmu.java:33)\n"
  stdout: ''
  timestamp: 1659795427
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long total2 =\
    \ 0;\n        long total3 = 0;\n        long total4 = 0;\n        long total5\
    \ = 0;\n        long total6 = 0;\n        long total7 = 0;\n        long total8\
    \ = 0;\n        long total9 = 0;\n        long total10 = 0;\n        long total11\
    \ = 0;\n        long total12 = 0;\n        long total13 = 0;\n        long total14\
    \ = 0;\n        long total15 = 0;\n        long total16 = 0;\n        long total17\
    \ = 0;\n        long total18 = 0;\n        long total19 = 0;\n        long total20\
    \ = 0;\n        long total21 = 0;\n        long total22 = 0;\n        long total23\
    \ = 0;\n        long total24 = 0;\n        long total25 = 0;\n        long total26\
    \ = 0;\n        long total27 = 0;\n        long total28 = 0;\n        long total29\
    \ = 0;\n        long total30 = 0;\n        long total31 = 0;\n        long total32\
    \ = 0;\n        long total33 = 0;\n        long total34 = 0;\n        long total35\
    \ = 0;\n        long total36 = 0;\n        long total37 = 0;\n        long total38\
    \ = 0;\n        long total39 = 0;\n        long total40 = 0;\n        long total41\
    \ = 0;\n        long total42 = 0;\n        long total43 = 0;\n        long total44\
    \ = 0;\n        long total45 = 0;\n        long total46 = 0;\n        long total47\
    \ = 0;\n        long total48 = 0;\n        long total49 = 0;\n        long total50\
    \ = 0;\n        long total51 = 0;\n        long total52 = 0;\n        long total53\
    \ = 0;\n        long total54 = 0;\n        long total55 = 0;\n        long total56\
    \ = 0;\n        long total57 = 0;\n        long total58 = 0;\n        long total59\
    \ = 0;\n        long total60 = 0;\n        long total61 = 0;\n        long total62\
    \ = 0;\n        long total63 = 0;\n        long total64 = 0;\n        long total65\
    \ = 0;\n        long total66 = 0;\n        long total67 = 0;\n        long total68\
    \ = 0;\n        long total69 = 0;\n        long total70 = 0;\n        long total71\
    \ = 0;\n        long total72 = 0;\n        long total73 = 0;\n        long total74\
    \ = 0;\n        long total75 = 0;\n        long total76 = 0;\n        long total77\
    \ = 0;\n        long total78 = 0;\n        long total79 = 0;\n        long total80\
    \ = 0;\n        long total81 = 0;\n        long total82 = 0;\n        long total83\
    \ = 0;\n        long total84 = 0;\n        long total85\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptcvaq0nd.java:107: error: ';' expected\n        long total85\n\
    \                    ^\n1 error\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for (long score\
    \ : game) {\n            long guess = guess.get(0);\n            guess = Math.abs(guess);\n\
    \            diff = guess - score;\n            result.add(diff);\n          \
    \  guess.remove(0);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8zbm5ifu.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(0);\n\
    \                 ^\n/tmp/tmp8zbm5ifu.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(0);\n                              ^\n/tmp/tmp8zbm5ifu.java:29:\
    \ error: long cannot be dereferenced\n            guess.remove(0);\n         \
    \        ^\n3 errors\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            long diff = game.get(i) - guess.get(i);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795434
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n          \
    \  score = game.get(i);\n            diff = guess.get(i) - score;\n          \
    \  if(diff < 0) {\n                diff = -diff;\n            }\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for (long i = 0; i < game.size(); i++) {\n        \
    \    if (game.get(i) == guess.get(i)) {\n                score++;\n          \
    \  } else {\n                diff = abs(game.get(i) - guess.get(i));\n       \
    \     }\n            result.add(diff);\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvpzsi1s.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if (game.get(i) == guess.get(i)) {\n         \
    \                ^\n/tmp/tmppvpzsi1s.java:26: error: incompatible types: possible\
    \ lossy conversion from long to int\n            if (game.get(i) == guess.get(i))\
    \ {\n                                         ^\n/tmp/tmppvpzsi1s.java:29: error:\
    \ incompatible types: possible lossy conversion from long to int\n           \
    \     diff = abs(game.get(i) - guess.get(i));\n                              \
    \      ^\n/tmp/tmppvpzsi1s.java:29: error: incompatible types: possible lossy\
    \ conversion from long to int\n                diff = abs(game.get(i) - guess.get(i));\n\
    \                                                   ^\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        for (long i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            if (guess == score) {\n      \
    \          result.add(0);\n            } else {\n                result.add(Math.abs(guess\
    \ - score));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg_rekr90.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpg_rekr90.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmpg_rekr90.java:27: error: long cannot be dereferenced\n     \
    \       guess = guess.get(i);\n                         ^\n/tmp/tmpg_rekr90.java:29:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795428
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long diff = game.get(i) - guess.get(i);\n            result.add(diff\
    \ < 0 ? diff + Math.abs(diff) : diff);\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        for (long\
    \ i = 0; i < game.size(); i++) {\n            if (game.get(i) == guess.get(i))\
    \ {\n                score = 0;\n            } else {\n                score =\
    \ Math.abs(game.get(i) - guess.get(i));\n            }\n            result.add(score);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwtnn8c6n.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if (game.get(i) == guess.get(i)) {\n         \
    \                ^\n/tmp/tmpwtnn8c6n.java:25: error: incompatible types: possible\
    \ lossy conversion from long to int\n            if (game.get(i) == guess.get(i))\
    \ {\n                                         ^\n/tmp/tmpwtnn8c6n.java:28: error:\
    \ incompatible types: possible lossy conversion from long to int\n           \
    \     score = Math.abs(game.get(i) - guess.get(i));\n                        \
    \                  ^\n/tmp/tmpwtnn8c6n.java:28: error: incompatible types: possible\
    \ lossy conversion from long to int\n                score = Math.abs(game.get(i)\
    \ - guess.get(i));\n                                                         ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        for (long i\
    \ = 0; i < game.size(); i++) {\n            guess = guess.get(i);\n          \
    \  score = game.get(i);\n            diff = guess - score;\n            if (diff\
    \ < 0) {\n                diff = -diff;\n            }\n            if (diff ==\
    \ 0) {\n                result.add((long)0);\n            } else {\n         \
    \       result.add((long)Math.abs(diff));\n            }\n        }\n        if\
    \ (result.size() == guess.size()) {\n            correct = true;\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnsepddhx.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpnsepddhx.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpnsepddhx.java:29:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \        score = game.get(i);\n                             ^\n/tmp/tmpnsepddhx.java:40:\
    \ error: long cannot be dereferenced\n        if (result.size() == guess.size())\
    \ {\n                                  ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long diff\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score += game.get(i);\n\
    \            diff += Math.abs(guess.get(i) - score);\n        }\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            if(!game.get(i).equals(guess.get(i)))\
    \ {\n                result.add(diff);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn1uzlfmt.java:37)\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4ni6f_td.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp4ni6f_td.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long guess = 0;\n        long difference = 0;\n        boolean correct = false;\n\
    \        for (long i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            difference = Math.abs(guess -\
    \ score);\n            if (difference == 0) {\n                correct = true;\n\
    \            }\n            result.add(difference);\n        }\n        if (correct)\
    \ {\n            return result;\n        } else {\n            return result;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkvcgfuik.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpkvcgfuik.java:28: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmpkvcgfuik.java:29: error: long cannot be dereferenced\n     \
    \       guess = guess.get(i);\n                         ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff < 0) {\n                result.add(diff);\n            }\
    \ else {\n                result.add(Math.abs(diff));\n            }\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprc1gqddm.java:35)\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ < 0) {\n                result.add(-diff);\n            } else {\n         \
    \       result.add(diff);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphgual9c7.java:34)\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long guess = 0;\n        long diff = 0;\n        boolean correct = false;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            diff = guess - score;\n      \
    \      if(diff < 0) {\n                diff = -diff;\n            }\n        \
    \    if(diff == 0) {\n                correct = true;\n            }\n       \
    \     result.add(diff);\n        }\n        if(correct) {\n            return\
    \ result;\n        }\n        else {\n            return result;\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr_8uxdzz.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpr_8uxdzz.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppfy73iqq.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmppfy73iqq.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedCorrectlyWithinGame = 0;\n        long totalGuessedCorrectlyWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGame = 0;\n\
    \        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGame =\
    \ 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWith\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxoatl9sv.java:41: error: ';' expected\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWith\n\
    \                                                                            \
    \  ^\n1 error\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppfy73iqq.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmppfy73iqq.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795429
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long difference = 0;\n        for (long i = 0; i < game.size(); i++) {\n  \
    \          score = game.get(i);\n            difference = guess.get(i) - score;\n\
    \            if (difference < 0) {\n                difference = -difference;\n\
    \            }\n            result.add(difference);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpigqswp0w.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmpigqswp0w.java:27: error: incompatible types: possible lossy\
    \ conversion from long to int\n            difference = guess.get(i) - score;\n\
    \                                   ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long diff = 0;\n       \
    \ for (long i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n\
    \            long guess = guess.get(i);\n            if (guess == score) {\n \
    \               result.add(0);\n            } else {\n                diff = guess\
    \ - score;\n                result.add(Math.abs(diff));\n            }\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwviu5nx0.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            long score = game.get(i);\n                  \
    \                ^\n/tmp/tmpwviu5nx0.java:26: error: variable guess is already\
    \ defined in method compare(ArrayList<Long>,ArrayList<Long>)\n            long\
    \ guess = guess.get(i);\n                 ^\n/tmp/tmpwviu5nx0.java:26: error:\
    \ long cannot be dereferenced\n            long guess = guess.get(i);\n      \
    \                        ^\n/tmp/tmpwviu5nx0.java:28: error: incompatible types:\
    \ int cannot be converted to Long\n                result.add(0);\n          \
    \                 ^\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        for(int i =\
    \ 0; i < game.size(); i++) {\n            score = game.get(i);\n            guess\
    \ = guess.get(i);\n            diff = guess - score;\n            if(diff < 0)\
    \ {\n                diff = -diff;\n            }\n            if(diff == 0) {\n\
    \                correct = true;\n            }\n            result.add(diff);\n\
    \        }\n        if(correct) {\n            return result;\n        }\n   \
    \     for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            diff = guess - score;\n      \
    \      if(diff < 0) {\n                diff = -diff;\n            }\n        \
    \    result.add(diff);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpatsd5b7i.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpatsd5b7i.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpatsd5b7i.java:44:\
    \ error: long cannot be dereferenced\n            guess = guess.get(i);\n    \
    \                     ^\n3 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedCorrectlyWithinGame = 0;\n        long totalGuessedCorrectlyWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGame = 0;\n\
    \        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGame =\
    \ 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGame\
    \ = 0;\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWith\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3jzkurfi.java:41: error: ';' expected\n        long totalGuessedCorrectlyWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWithinGameWith\n\
    \                                                                            \
    \                                                              ^\n1 error\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        for(int i = 0;\
    \ i < guess.size(); i++) {\n            guess = guess.get(i);\n            game\
    \ = game.get(i);\n            difference = Math.abs(guess - game);\n         \
    \   result.add(difference);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc_c66xnx.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpc_c66xnx.java:26: error: variable game is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long game = 0;\n  \
    \           ^\n/tmp/tmpc_c66xnx.java:27: error: long cannot be dereferenced\n\
    \        for(int i = 0; i < guess.size(); i++) {\n                           \
    \     ^\n/tmp/tmpc_c66xnx.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpc_c66xnx.java:29:\
    \ error: long cannot be dereferenced\n            game = game.get(i);\n      \
    \                 ^\n5 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptwkd8r60.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmptwkd8r60.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long diff\
    \ = 0;\n        for (long i = 0; i < game.size(); i++) {\n            if (guess.get(i)\
    \ == game.get(i)) {\n                score = 0;\n            } else {\n      \
    \          score = Math.abs(guess.get(i) - game.get(i));\n            }\n    \
    \        result.add(score);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjycl3dvt.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if (guess.get(i) == game.get(i)) {\n         \
    \                 ^\n/tmp/tmpjycl3dvt.java:26: error: incompatible types: possible\
    \ lossy conversion from long to int\n            if (guess.get(i) == game.get(i))\
    \ {\n                                         ^\n/tmp/tmpjycl3dvt.java:29: error:\
    \ incompatible types: possible lossy conversion from long to int\n           \
    \     score = Math.abs(guess.get(i) - game.get(i));\n                        \
    \                   ^\n/tmp/tmpjycl3dvt.java:29: error: incompatible types: possible\
    \ lossy conversion from long to int\n                score = Math.abs(guess.get(i)\
    \ - game.get(i));\n                                                         ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo25u6bcl.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpo25u6bcl.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        for(int i =\
    \ 0; i < game.size(); i++) {\n            score = game.get(i);\n            guess\
    \ = guess.get(i);\n            diff = guess - score;\n            correct = correct\
    \ || (guess == score);\n            result.add(diff);\n        }\n        if(correct)\
    \ {\n            return result;\n        }\n        else {\n            ArrayList<Long>\
    \ diffs = new ArrayList<>();\n            for(int i = 0; i < game.size(); i++)\
    \ {\n                diffs.add(Math.abs(guess - score));\n            }\n    \
    \        return diffs;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkrlsjmdz.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpkrlsjmdz.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ < 0) {\n                result.add(-diff);\n            } else {\n         \
    \       result.add(diff);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphgual9c7.java:34)\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> difference = new\
    \ ArrayList<Long>(guess);\n        Arrays.sort(difference);\n        long differenceSum\
    \ = 0;\n        long differenceSum2 = 0;\n        long differenceSum3 = 0;\n \
    \       long differenceSum4 = 0;\n        long differenceSum5 = 0;\n        long\
    \ differenceSum6 = 0;\n        long differenceSum7 = 0;\n        long differenceSum8\
    \ = 0;\n        long differenceSum9 = 0;\n        long differenceSum10 = 0;\n\
    \        long differenceSum11 = 0;\n        long differenceSum12 = 0;\n      \
    \  long differenceSum13 = 0;\n        long differenceSum14 = 0;\n        long\
    \ differenceSum15 = 0;\n        long differenceSum16 = 0;\n        long differenceSum17\
    \ = 0;\n        long differenceSum18 = 0;\n        long differenceSum19 = 0;\n\
    \        long differenceSum20 = 0;\n        long differenceSum21 = 0;\n      \
    \  long differenceSum22 = 0;\n        long differenceSum23 = 0;\n        long\
    \ differenceSum24 = 0;\n        long differenceSum25 = 0;\n        long differenceSum26\
    \ = 0;\n        long differenceSum27 = 0;\n        long differenceSum28 = 0;\n\
    \        long differenceSum29 = 0;\n        long differenceSum30 = 0;\n      \
    \  long differenceSum31 = 0;\n        long differenceSum32 = 0;\n        long\
    \ differenceSum33 = 0;\n        long differenceSum34 = 0;\n        long differenceSum35\
    \ = 0;\n        long differenceSum36 = 0;\n        long differenceSum37 = 0;\n\
    \        long differenceSum38 = 0;\n        long differenceSum39 = 0;\n      \
    \  long differenceSum40 = 0;\n        long differenceSum41 = 0;\n        long\
    \ differenceSum42 = 0;\n        long differenceSum43 = 0;\n        long differenceSum44\
    \ = 0;\n        long differenceSum45 = 0;\n        long differenceSum46 = 0;\n\
    \        long differenceSum47 = 0;\n        long differenceSum48 = 0;\n      \
    \  long differenceSum49 = 0;\n        long differenceSum50 = 0;\n        long\
    \ differenceSum51 = 0;\n        long differenceSum52 = 0;\n        long differenceSum53\
    \ = 0;\n        long differenceSum54 = 0;\n        long differenceSum55 = 0;\n\
    \        long differenceSum56 = 0;\n        long differenceSum57 = 0;\n      \
    \  long differenceSum58 = 0;\n        long differenceSum59 = 0;\n        long\
    \ differenceSum60 = 0;\n        long differenceSum61 = 0;\n        long differenceSum62\
    \ = 0;\n        long differenceSum63 = 0;\n        long differenceSum64 = 0;\n\
    \        long differenceSum65 = 0;\n        long differenceSum66 = 0;\n      \
    \  long differenceSum67 = 0;\n        long differenceSum68 = 0;\n        long\
    \ differenceSum69 = 0;\n        long differenceSum\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl32llwek.java:94: error: ';' expected\n        long differenceSum\n\
    \                          ^\n1 error\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long diff = 0;\n       \
    \ for (long i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n\
    \            long guess = guess.get(i);\n            if (guess == score) {\n \
    \               result.add((long)0);\n            } else {\n                diff\
    \ = guess - score;\n                result.add((long)Math.abs(diff));\n      \
    \      }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy2cskyk7.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            long score = game.get(i);\n                  \
    \                ^\n/tmp/tmpy2cskyk7.java:26: error: variable guess is already\
    \ defined in method compare(ArrayList<Long>,ArrayList<Long>)\n            long\
    \ guess = guess.get(i);\n                 ^\n/tmp/tmpy2cskyk7.java:26: error:\
    \ long cannot be dereferenced\n            long guess = guess.get(i);\n      \
    \                        ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long diff = game.get(i) - guess.get(i);\n            if(diff != 0)\
    \ {\n                result.add(diff);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeisyjyms.java:32)\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> difference = new\
    \ ArrayList<Long>(guess);\n        for(int i = 0; i < game.size(); i++) {\n  \
    \          int index = game.indexOf(i);\n            int guessIndex = guess.indexOf(index);\n\
    \            long score = game.get(i);\n            long guess = guess.get(guessIndex);\n\
    \            long difference = guess - score;\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdeb1b_h4.java:28: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(guessIndex);\n\
    \                 ^\n/tmp/tmpdeb1b_h4.java:28: error: long cannot be dereferenced\n\
    \            long guess = guess.get(guessIndex);\n                           \
    \   ^\n/tmp/tmpdeb1b_h4.java:29: error: variable difference is already defined\
    \ in method compare(ArrayList<Long>,ArrayList<Long>)\n            long difference\
    \ = guess - score;\n                 ^\n3 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long difference = Math.abs(guess - score);\n            if(guess\
    \ == score) {\n                difference = 0;\n            }\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwrvme3iu.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpwrvme3iu.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            if(guess == score)\
    \ {\n                result.add(0l);\n            } else {\n                result.add(diff);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1ls4a8sy.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp1ls4a8sy.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long difference = Math.abs(guess - score);\n            if(guess\
    \ == score) {\n                result.add(difference);\n            } else {\n\
    \                result.add(difference);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9q7_5lq_.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp9q7_5lq_.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long guess\
    \ = 0;\n        long difference = 0;\n        boolean correct = false;\n     \
    \   for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            difference = Math.abs(guess -\
    \ score);\n            if(difference == 0) {\n                correct = true;\n\
    \            }\n            else if(difference < 0) {\n                correct\
    \ = false;\n            }\n            else {\n                result.add(difference);\n\
    \            }\n        }\n        if(correct) {\n            result.add(0);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6e7_rd6o.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp6e7_rd6o.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmp6e7_rd6o.java:42:\
    \ error: incompatible types: int cannot be converted to Long\n            result.add(0);\n\
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795434
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long diff = game.get(i) - guess.get(i);\n            result.add(diff\
    \ < 0 ? diff * -1 : diff);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795435
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff < 0) {\n                result.add(diff);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvqbsf_o8.java:33)\n"
  stdout: ''
  timestamp: 1659795432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 =\
    \ 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n\
    \        long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n\
    \        long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0zji0mf6.java:107: error: ';' expected\n        long diff84\n \
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659795431
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long diff = game.get(i) - guess.get(i);\n            result.add(diff\
    \ < 0 ? diff * -1 : diff);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795435
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo25u6bcl.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpo25u6bcl.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n          \
    \  score = game.get(i);\n            diff = guess.get(i) - score;\n          \
    \  result.add(diff);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprxm5_09a.java:33)\n"
  stdout: ''
  timestamp: 1659795433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff < 0) {\n                result.add(-diff);\n            }\
    \ else {\n                result.add(diff);\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu_f44dc4.java:35)\n"
  stdout: ''
  timestamp: 1659795429

language: java
name: HumanEval_152_compare
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> difference = new\
    \ ArrayList<Long>(guess);\n        Arrays.sort(difference);\n        long differenceSum\
    \ = 0;\n        long differenceCount = 0;\n        long differenceSum2 = 0;\n\
    \        long differenceCount2 = 0;\n        long differenceSum3 = 0;\n      \
    \  long differenceCount3 = 0;\n        long differenceSum4 = 0;\n        long\
    \ differenceCount4 = 0;\n        long differenceSum5 = 0;\n        long differenceCount5\
    \ = 0;\n        long differenceSum6 = 0;\n        long differenceCount6 = 0;\n\
    \        long differenceSum7 = 0;\n        long differenceCount7 = 0;\n      \
    \  long differenceSum8 = 0;\n        long differenceCount8 = 0;\n        long\
    \ differenceSum9 = 0;\n        long differenceCount9 = 0;\n        long differenceSum10\
    \ = 0;\n        long differenceCount10 = 0;\n        long differenceSum11 = 0;\n\
    \        long differenceCount11 = 0;\n        long differenceSum12 = 0;\n    \
    \    long differenceCount12 = 0;\n        long differenceSum13 = 0;\n        long\
    \ differenceCount13 = 0;\n        long differenceSum14 = 0;\n        long differenceCount14\
    \ = 0;\n        long differenceSum15 = 0;\n        long differenceCount15 = 0;\n\
    \        long differenceSum16 = 0;\n        long differenceCount16 = 0;\n    \
    \    long differenceSum17 = 0;\n        long differenceCount17 = 0;\n        long\
    \ differenceSum18 = 0;\n        long differenceCount18 = 0;\n        long differenceSum19\
    \ = 0;\n        long differenceCount19 = 0;\n        long differenceSum20 = 0;\n\
    \        long differenceCount20 = 0;\n        long differenceSum21 = 0;\n    \
    \    long differenceCount21 = 0;\n        long differenceSum22 = 0;\n        long\
    \ differenceCount22 = 0;\n        long differenceSum23 = 0;\n        long differenceCount23\
    \ = 0;\n        long differenceSum24 = 0;\n        long differenceCount24 = 0;\n\
    \        long differenceSum25 = 0;\n        long differenceCount25 = 0;\n    \
    \    long differenceSum26 = 0;\n        long differenceCount26 = 0;\n        long\
    \ differenceSum27 = 0;\n        long differenceCount27 = 0;\n        long differenceSum28\
    \ = 0;\n        long differenceCount28 = 0;\n        long differenceSum29 = 0;\n\
    \        long differenceCount29 = 0;\n        long differenceSum30 = 0;\n    \
    \    long differenceCount30 = 0;\n        long differenceSum31 = 0;\n        long\
    \ differenceCount31 = 0;\n        long differenceSum32 = 0;\n        long differenceCount32\
    \ = 0;\n        long differenceSum33 = 0;\n        long differenceCount33 = 0;\n\
    \        long differenceSum34 = 0;\n        long differenceCount34 = 0;\n    \
    \    long differenceSum35 = 0;\n        long differenceCount35 = 0;\n        long\
    \ \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph_v6e5gu.java:95: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmph_v6e5gu.java:95: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long score = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcjj3nr84.java:109: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long diff2 =\
    \ 0;\n        long guess2 = 0;\n        long game2 = 0;\n        long diff3 =\
    \ 0;\n        long guess3 = 0;\n        long game3 = 0;\n        long diff4 =\
    \ 0;\n        long guess4 = 0;\n        long game4 = 0;\n        long diff5 =\
    \ 0;\n        long guess5 = 0;\n        long game5 = 0;\n        long diff6 =\
    \ 0;\n        long guess6 = 0;\n        long game6 = 0;\n        long diff7 =\
    \ 0;\n        long guess7 = 0;\n        long game7 = 0;\n        long diff8 =\
    \ 0;\n        long guess8 = 0;\n        long game8 = 0;\n        long diff9 =\
    \ 0;\n        long guess9 = 0;\n        long game9 = 0;\n        long diff10 =\
    \ 0;\n        long guess10 = 0;\n        long game10 = 0;\n        long diff11\
    \ = 0;\n        long guess11 = 0;\n        long game11 = 0;\n        long diff12\
    \ = 0;\n        long guess12 = 0;\n        long game12 = 0;\n        long diff13\
    \ = 0;\n        long guess13 = 0;\n        long game13 = 0;\n        long diff14\
    \ = 0;\n        long guess14 = 0;\n        long game14 = 0;\n        long diff15\
    \ = 0;\n        long guess15 = 0;\n        long game15 = 0;\n        long diff16\
    \ = 0;\n        long guess16 = 0;\n        long game16 = 0;\n        long diff17\
    \ = 0;\n        long guess17 = 0;\n        long game17 = 0;\n        long diff18\
    \ = 0;\n        long guess18 = 0;\n        long game18 = 0;\n        long diff19\
    \ = 0;\n        long guess19 = 0;\n        long game19 = 0;\n        long diff20\
    \ = 0;\n        long guess20 = 0;\n        long game20 = 0;\n        long diff21\
    \ = 0;\n        long guess21 = 0;\n        long game21 = 0;\n        long diff22\
    \ = 0;\n        long guess22 = 0;\n        long game22 = 0;\n        long diff23\
    \ = 0;\n        long guess23 = 0;\n        long game23 = 0;\n        long diff24\
    \ = 0;\n        long guess24 = 0;\n        long game24 = 0;\n        long diff25\
    \ = 0;\n        long guess25 = 0;\n        long game25 = 0;\n        long diff26\
    \ = 0;\n        long guess26 = 0;\n        long game26 = 0;\n        long diff27\
    \ = 0;\n        long guess27 = 0;\n        long game27 = 0;\n        long diff28\
    \ = 0;\n        long guess28 = 0;\n        long game28 = 0;\n        long diff29\
    \ = 0;\n        long \n    }\n    public static void main(String[] args) {\n \
    \   assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ib794cy.java:109: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp5ib794cy.java:109: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        boolean correct = false;\n        for (long\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            if (guess == score) {\n               \
    \ correct = true;\n            }\n            difference = Math.abs(guess - score);\n\
    \            result.add(difference);\n        }\n        if (!correct) {\n   \
    \         difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_8fv0blc.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp_8fv0blc.java:28: error: no suitable method found for get(long)\n\
    \            score = game.get(i);\n                        ^\n    method List.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ long to int)\n    method AbstractList.get(int) is not applicable\n      (argument\
    \ mismatch; possible lossy conversion from long to int)\n    method ArrayList.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ long to int)\n/tmp/tmp_8fv0blc.java:29: error: long cannot be dereferenced\n\
    \            guess = guess.get(i);\n                         ^\n3 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        for (long i = 0; i < game.size(); i++) {\n            score =\
    \ game.get(i);\n            diff = guess.get(i) - score;\n            if (diff\
    \ < 0) {\n                diff = -diff;\n            }\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbumslgdq.java:26: error: no suitable method found for get(long)\n\
    \            score = game.get(i);\n                        ^\n    method List.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ long to int)\n    method AbstractList.get(int) is not applicable\n      (argument\
    \ mismatch; possible lossy conversion from long to int)\n    method ArrayList.get(int)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ long to int)\n/tmp/tmpbumslgdq.java:27: error: no suitable method found for\
    \ get(long)\n            diff = guess.get(i) - score;\n                      \
    \  ^\n    method List.get(int) is not applicable\n      (argument mismatch; possible\
    \ lossy conversion from long to int)\n    method AbstractList.get(int) is not\
    \ applicable\n      (argument mismatch; possible lossy conversion from long to\
    \ int)\n    method ArrayList.get(int) is not applicable\n      (argument mismatch;\
    \ possible lossy conversion from long to int)\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxovrsyt4.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            if(!result.contains(diff))\
    \ {\n                result.add(diff);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfz3uwg_t.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpfz3uwg_t.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long guess\
    \ = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     diff = guess - score;\n            if(diff < 0) {\n                result.add(diff);\n\
    \            } else {\n                result.add(0);\n            }\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt797pygg.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpt797pygg.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpt797pygg.java:33:\
    \ error: no suitable method found for add(int)\n                result.add(0);\n\
    \                      ^\n    method Collection.add(Long) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n    method List.add(Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    \    method AbstractCollection.add(Long) is not applicable\n      (argument mismatch;\
    \ int cannot be converted to Long)\n    method AbstractList.add(Long) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n    method ArrayList.add(Long)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Long)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n3 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo25u6bcl.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpo25u6bcl.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxovrsyt4.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long difference = 0;\n        for (int i = 0; i < game.size(); i++) {\n   \
    \         score = game.get(i);\n            difference = Math.abs(guess.get(i)\
    \ - score);\n            if (difference == 0) {\n                result.add((long)0);\n\
    \            } else {\n                result.add((long)difference);\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long difference = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            guess = guess.get(i);\n\
    \            difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd4zkikac.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpd4zkikac.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ < 0) {\n                result.add(diff);\n            } else {\n          \
    \      result.add(Math.abs(diff));\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo25u6bcl.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpo25u6bcl.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long guess\
    \ = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     diff = guess - score;\n            if(guess == score) {\n              \
    \  result.add(0, diff);\n            } else {\n                result.add(Math.abs(diff));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy5zxc364.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpy5zxc364.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for (long score\
    \ : game) {\n            diff = score - guess.get(0);\n            if (diff <\
    \ 0) {\n                result.add(diff);\n            } else {\n            \
    \    result.add(Math.abs(diff));\n            }\n            guess.remove(0);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptwkd8r60.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmptwkd8r60.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa9u5ojmj.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpa9u5ojmj.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(diff < 0) {\n        \
    \        result.add(diff);\n            } else {\n                result.add(Math.abs(diff));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq173phz3.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpq173phz3.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two array array lists of scores and\
    \ guesses of equal length, where each index shows a match. \n    // Return an\
    \ array array list of the same length denoting how far off each guess was. If\
    \ they have guessed correctly,\n    // the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n    // example:\n\
    \    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        for (int i = 0; i < game.size(); i++) {\n            if (guess.get(i)\
    \ == game.get(i)) {\n                score = 0;\n            } else {\n      \
    \          score = Math.abs(guess.get(i) - game.get(i));\n            }\n    \
    \        result.add(score);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''

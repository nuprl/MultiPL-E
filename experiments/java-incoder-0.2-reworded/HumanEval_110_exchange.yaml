name: HumanEval_110_exchange
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // In this problem, you will implement a function that takes\
  \ two array lists of numbers,\n    // and determines whether it is possible to perform\
  \ an exchange of elements\n    // between them to make lst1 an array array list\
  \ of only even numbers.\n    // There is no limit on the number of exchanged elements\
  \ between lst1 and lst2.\n    // If it is possible to exchange elements between\
  \ the lst1 and lst2 to make\n    // all the elements of lst1 to be even, return\
  \ \"YES\".\n    // Otherwise, return \"NO\".\n    // For example:\n    // >>> exchange((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))), (new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))))\n   \
  \ // (\"YES\")\n    // >>> exchange((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)4l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)5l, (long)3l, (long)4l))))\n    // (\"NO\")\n    // It is assumed that the\
  \ input array lists will be non-empty.\n    public static String exchange(ArrayList<Long>\
  \ lst1, ArrayList<Long> lst2) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(exchange((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l))), (new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))).equals((\"\
  YES\")));\n    assert(exchange((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
  \ (long)3l, (long)4l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)5l,\
  \ (long)3l, (long)4l)))).equals((\"NO\")));\n    assert(exchange((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)4l))), (new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)1l, (long)4l, (long)3l)))).equals((\"YES\")));\n    assert(exchange((new\
  \ ArrayList<Long>(Arrays.asList((long)5l, (long)7l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)6l, (long)4l)))).equals((\"YES\")));\n    assert(exchange((new ArrayList<Long>(Arrays.asList((long)5l,\
  \ (long)7l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)6l,\
  \ (long)3l)))).equals((\"NO\")));\n    assert(exchange((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)2l, (long)6l, (long)1l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)5l, (long)5l, (long)1l, (long)1l, (long)1l)))).equals((\"NO\")));\n    assert(exchange((new\
  \ ArrayList<Long>(Arrays.asList((long)100l, (long)200l))), (new ArrayList<Long>(Arrays.asList((long)200l,\
  \ (long)200l)))).equals((\"YES\")));\n    }\n\n}\n"
completions: ['        // Your code here', "        // Your code goes here\n     \
    \   ArrayList<Long> even = new ArrayList<Long>();\n        for(Long i : lst1){\n\
    \            if(i%2==0){\n                even.add(i);\n            }\n      \
    \  }\n        for(Long i : lst2){\n            if(i%2==0){\n                even.add(i);\n\
    \            }\n        }\n        if(even.size()==lst1.size()){\n           \
    \ return \"YES\";\n        }\n        return \"NO\";", "        // Your code here\n\
    \        ArrayList<Long> even = new ArrayList<>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst2.get(0));\n        for(int i = 1; i < lst1.size(); i++)\
    \ {\n            even.add(lst1.get(i));\n            even.add(lst2.get(i));\n\
    \        }\n        for(int i = 0; i < even.size(); i++) {\n            if(even.get(i)\
    \ % 2 == 0) {\n                even.remove(i);\n            }\n        }\n   \
    \     if(even.size() == 0) {\n            return \"NO\";\n        }\n        return\
    \ \"YES\";", '        // Your code here', "        // Your code goes here\n  \
    \      ArrayList<Long> even = new ArrayList<Long>();\n        even.addAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        if (even.isEmpty())\n\
    \            return \"NO\";\n        return \"YES\";", '        // Your code here',
  "        ArrayList<Long> even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n", "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        even.add(lst1.get(0));\n        for(int i\
    \ = 1; i < lst1.size(); i++){\n            if(lst1.get(i) % 2 == 0){\n       \
    \         even.add(lst1.get(i));\n            }\n        }\n        for(int j\
    \ = 0; j < lst2.size(); j++){\n            if(lst2.get(j) % 2 == 0){\n       \
    \         even.add(lst2.get(j));\n            }\n        }\n        if(even.size()\
    \ == lst1.size()){\n            return \"YES\";\n        }\n        return \"\
    NO\";", "        ArrayList<Long> even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n", '        // Your code here', '        //
    Your code here', '        // Your code here', '        // Your code here', " \
    \       ArrayList<Long> even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n", '        // Your code here', "        //\
    \ Your code here\n        ArrayList<Long> even = new ArrayList<Long>();\n    \
    \    for(int i = 0; i < lst1.size(); i++){\n            if(lst1.get(i) % 2 ==\
    \ 0){\n                even.add(lst1.get(i));\n            }\n        }\n    \
    \    for(int i = 0; i < lst2.size(); i++){\n            if(lst2.get(i) % 2 ==\
    \ 0){\n                even.add(lst2.get(i));\n            }\n        }\n    \
    \    if(even.size() == lst1.size()){\n            return \"YES\";\n        }\n\
    \        return \"NO\";", "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        for(int i = 0; i < lst1.size(); i++){\n \
    \           if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < lst2.size(); i++){\n   \
    \         if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < even.size(); i++){\n   \
    \         if(even.get(i) > lst1.get(i)){\n                even.remove(i);\n  \
    \          }\n        }\n        for(int i = 0; i < even.size(); i++){\n     \
    \       if(even.get(i) < lst2.get(i)){\n                even.remove(i);\n    \
    \        }\n        }\n        if(even.isEmpty()){\n            return \"NO\"\
    ;\n        }\n        return \"YES\";", "        ArrayList<Long> even = new ArrayList<>();\n\
    \        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n\
    \        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n\
    \        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n\
    \        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n\
    \        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n\
    \        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n\
    \        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n\
    \        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n\
    \        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n\
    \        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n\
    \        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n\
    \        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n\
    \        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n\
    \        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n\
    \        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n\
    \        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n\
    \        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n\
    \        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n\
    \        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n        ",
  "        // Your code here\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        for(Long i : lst1){\n            if(i%2==0){\n                even.add(i);\n\
    \            }\n        }\n        for(Long i : lst2){\n            if(i%2==0){\n\
    \                even.add(i);\n            }\n        }\n        if(even.equals(lst1)){\n\
    \            return \"YES\";\n        }\n        return \"NO\";", '        //
    Your code here', '        // Your code here', "        ArrayList<Long> even =\
    \ new ArrayList<>();\n        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n\
    \        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n\
    \        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n\
    \        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n\
    \        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n\
    \        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n\
    \        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n\
    \        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n\
    \        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n\
    \        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n\
    \        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n\
    \        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n\
    \        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n\
    \        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n\
    \        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n\
    \        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n\
    \        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n\
    \        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n\
    \        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n\
    \        ", '        // Your code here', '        // Your code here', '        //
    Your code here', "        // Your code here\n        ArrayList<Long> even = new\
    \ ArrayList<Long>();\n        for(int i = 0; i < lst1.size(); i++){\n        \
    \    if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n     \
    \       }\n        }\n        for(int i = 0; i < lst2.size(); i++){\n        \
    \    if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n     \
    \       }\n        }\n        if(even.size() == lst1.size()){\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", '        // Your code here', " \
    \       // Your code here\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n        for(int\
    \ i = 1; i < lst1.size(); i++) {\n            if(lst1.get(i) % 2 == 0) {\n   \
    \             even.add(lst1.get(i));\n            }\n        }\n        for(int\
    \ i = 1; i < lst2.size(); i++) {\n            if(lst2.get(i) % 2 == 0) {\n   \
    \             even.add(lst2.get(i));\n            }\n        }\n        boolean\
    \ result = true;\n        for(int i = 0; i < even.size(); i++) {\n           \
    \ if(even.get(i) % 2 != 0) {\n                result = false;\n            }\n\
    \        }\n        if(result) {\n            return \"YES\";\n        }\n   \
    \     return \"NO\";", "        // Your code here\n        ArrayList<Long> even\
    \ = new ArrayList<Long>();\n        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n\
    \        for(int i=1;i<lst1.size();i++){\n            if(even.contains(lst1.get(i))){\n\
    \                even.remove(lst1.get(i));\n                even.add(lst2.get(i));\n\
    \            }\n        }\n        if(even.size()==0){\n            return \"\
    NO\";\n        }\n        return \"YES\";", '        // Your code here', '        //
    Your code here', "        // Your code here\n        ArrayList<Long> even = new\
    \ ArrayList<Long>();\n        for(int i = 0; i < lst1.size(); i++){\n        \
    \    if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n     \
    \       }\n        }\n        for(int i = 0; i < lst2.size(); i++){\n        \
    \    if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n     \
    \       }\n        }\n        if(even.size() == lst1.size()){\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        // Your code goes here\n\
    \        ArrayList<Long> even = new ArrayList<Long>();\n        for(Long i : lst1){\n\
    \            if(i%2==0){\n                even.add(i);\n            }\n      \
    \  }\n        for(Long i : lst2){\n            if(i%2==0){\n                even.add(i);\n\
    \            }\n        }\n        if(even.size()==lst1.size()){\n           \
    \ return \"YES\";\n        }\n        return \"NO\";", '        // Your code here',
  "        ArrayList<Long> even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n", '        // Your code here', "        //\
    \ Your code goes here\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        for(Long i : lst1){\n            if(i%2==0){\n                even.add(i);\n\
    \            }\n        }\n        for(Long i : lst2){\n            if(i%2==0){\n\
    \                even.add(i);\n            }\n        }\n        if(even.equals(lst1)){\n\
    \            return \"YES\";\n        }\n        return \"NO\";", "        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n        even.add(lst1.get(28));\n        even.add(lst2.get(28));\n",
  "        ArrayList<Long> even = new ArrayList<Long>();\n        even.addAll(lst1);\n\
    \        even.removeAll(lst2);\n        if (even.isEmpty()) {\n            return\
    \ \"NO\";\n        }\n        even.removeAll(lst1);\n        if (even.isEmpty())\
    \ {\n            return \"NO\";\n        }\n        even.removeAll(lst2);\n  \
    \      if (even.isEmpty()) {\n            return \"NO\";\n        }\n        even.removeAll(lst1);\n\
    \        if (even.isEmpty()) {\n            return \"NO\";\n        }\n      \
    \  even.removeAll(lst2);\n        if (even.isEmpty()) {\n            return \"\
    NO\";\n        }\n        even.removeAll(lst1);\n        if (even.isEmpty()) {\n\
    \            return \"NO\";\n        }\n        even.removeAll(lst2);\n      \
    \  if (even.isEmpty()) {\n            return \"NO\";\n        }\n        even.removeAll(lst1);\n\
    \        if (even.isEmpty()) {\n            return \"NO\";\n        }\n      \
    \  even.removeAll(lst2);\n        if (even.isEmpty()) {\n            return \"\
    NO\";\n        }\n        even.removeAll(lst1);\n        if (even.isEmpty()) {\n\
    \            return \"NO\";\n        }\n        even.removeAll(lst2);\n      \
    \  if (even.isEmpty()) {\n            return \"NO\";\n        }\n        even.removeAll(lst1);\n\
    \        if (even.isEmpty()) {\n            return \"NO\";\n        }\n      \
    \  even.removeAll(lst2);\n        if (even.isEmpty()) {\n            return \"\
    NO\";\n        }\n        even.removeAll(lst1);\n        if (even.isEmpty()) {\n\
    \            return \"NO\";\n        }\n        even.removeAll(lst2);\n      \
    \  if (even.isEmpty()) {\n            return \"NO\";\n        }\n        even.removeAll(lst1);\n\
    \        if (even.isEmpty()) {\n            return \"NO\";\n        }\n      \
    \  even.removeAll(lst2);\n        if (even.isEmpty()) {\n            return \"\
    NO\";\n        }\n        even.removeAll(lst1);\n        if (even.isEmpty()) {\n\
    \            return \"NO\";\n        }\n        even.removeAll(lst2);\n      \
    \  if (even.isEmpty()) {\n            return \"NO\";\n        }\n        even.removeAll(lst1);\n\
    \        if (even.isEmpty()) {\n            return \"NO\";\n        }\n      \
    \  even.removeAll(lst2);\n        if (even.isEmpty()) {\n            return \"\
    NO\";\n        }\n        even.removeAll(lst1);\n        if (even.isEmpty()) {\n\
    \            return \"NO\";\n        }\n        even.removeAll(lst2);\n      \
    \  if (even.isEmpty()) {\n            return \"NO\";\n        }\n        even.removeAll(lst1);\n\
    \        if (even.isEmpty()) {\n            return \"NO\";\n        }\n      \
    \  even.removeAll(lst2);\n        if (even.isEmpty()) {\n            return \"\
    NO\";\n        }\n        even.removeAll(lst1);\n        if (even.isEmpty()) {\n\
    \            return \"NO\";\n        }\n        ", '        // Your code here',
  "        // Your code here\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        for(int i = 0; i < lst1.size(); i++){\n            if(lst1.get(i) % 2\
    \ == 0){\n                even.add(lst1.get(i));\n            }\n        }\n \
    \       for(int i = 0; i < lst2.size(); i++){\n            if(lst2.get(i) % 2\
    \ == 0){\n                even.add(lst2.get(i));\n            }\n        }\n \
    \       if(even.size() == lst1.size()){\n            return \"YES\";\n       \
    \ }\n        return \"NO\";", '        // Your code here', '        // Your code
    here', '        // Your code here', '        // Your code here', '        // Your
    code here', '        // Your code here', "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        even.add(lst1.get(0));\n        for(int i\
    \ = 1; i < lst1.size(); i++){\n            if(lst1.get(i) % 2 == 0){\n       \
    \         even.add(lst1.get(i));\n            }\n        }\n        even.add(lst2.get(0));\n\
    \        for(int i = 1; i < lst2.size(); i++){\n            if(lst2.get(i) % 2\
    \ == 0){\n                even.add(lst2.get(i));\n            }\n        }\n \
    \       if(even.size() == lst1.size()){\n            return \"YES\";\n       \
    \ }\n        return \"NO\";", "        // Your code here\n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        ", "      \
    \  // Your code goes here\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n        for(int\
    \ i = 1; i < lst1.size(); i++){\n            if(lst1.get(i) % 2 == 0){\n     \
    \           even.add(lst1.get(i));\n            }\n        }\n        for(int\
    \ i = 1; i < lst2.size(); i++){\n            if(lst2.get(i) % 2 == 0){\n     \
    \           even.add(lst2.get(i));\n            }\n        }\n        if(even.size()\
    \ == lst1.size()){\n            return \"YES\";\n        }\n        else{\n  \
    \          return \"NO\";\n        }", '        // Your code goes here', '        //
    Your code here', "        // Your code here\n        ArrayList<Long> even = new\
    \ ArrayList<Long>();\n        for(int i = 0; i < lst1.size(); i++){\n        \
    \    if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n     \
    \       }\n        }\n        for(int i = 0; i < lst2.size(); i++){\n        \
    \    if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n     \
    \       }\n        }\n        for(int i = 0; i < even.size(); i++){\n        \
    \    lst1.remove(even.get(i));\n        }\n        if(lst1.isEmpty()){\n     \
    \       return \"NO\";\n        }\n        return \"YES\";", '        // Your
    code here', "        // Your code goes here\n        ArrayList<Long> even = new\
    \ ArrayList<Long>();\n        for(Long i : lst1){\n            if(i%2==0){\n \
    \               even.add(i);\n            }\n        }\n        for(Long i : lst2){\n\
    \            if(i%2==0){\n                even.add(i);\n            }\n      \
    \  }\n        if(even.equals(lst1)){\n            return \"YES\";\n        }\n\
    \        return \"NO\";", "        // Your code goes here\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        for(int i = 0; i < lst1.size(); i++){\n\
    \            if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < lst2.size(); i++){\n   \
    \         if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n\
    \            }\n        }\n        if(even.size() == lst1.size()){\n         \
    \   return \"YES\";\n        }\n        return \"NO\";", '        // Your code
    here', "        ArrayList<Long> even = new ArrayList<>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n        ", "        // Your code here\n    \
    \    ArrayList<Long> even = new ArrayList<Long>();\n        for(int i=0;i<lst1.size();i++){\n\
    \            if(lst1.get(i)%2==0){\n                even.add(lst1.get(i));\n \
    \           }\n        }\n        for(int i=0;i<lst2.size();i++){\n          \
    \  if(lst2.get(i)%2==0){\n                even.add(lst2.get(i));\n           \
    \ }\n        }\n        if(even.size()==lst1.size()){\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        // Your code goes here\n     \
    \   ArrayList<Long> even = new ArrayList<Long>();\n        for(int i = 0; i <\
    \ lst1.size(); i++){\n            if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < lst2.size(); i++){\n   \
    \         if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n\
    \            }\n        }\n        if(even.size() == lst1.size()){\n         \
    \   return \"YES\";\n        }\n        else{\n            return \"NO\";\n  \
    \      }", "        // Your code here\n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        ", '        // Your code here',
  "        // Your code here\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.add(lst1.get(0));\n        for(int i = 1; i < lst1.size(); i++){\n\
    \            if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n\
    \            }\n        }\n        even.add(lst2.get(0));\n        for(int i =\
    \ 1; i < lst2.size(); i++){\n            if(lst2.get(i) % 2 == 0){\n         \
    \       even.add(lst2.get(i));\n            }\n        }\n        if(even.size()\
    \ == lst1.size()){\n            return \"YES\";\n        }\n        return \"\
    NO\";", "        // Your code here\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        for(Long i : lst1){\n            if(i%2==0){\n                even.add(i);\n\
    \            }\n        }\n        for(Long i : lst2){\n            if(i%2==0){\n\
    \                even.add(i);\n            }\n        }\n        if(even.size()==lst1.size()){\n\
    \            return \"YES\";\n        }\n        return \"NO\";", "        //\
    \ Your code here\n        ArrayList<Long> even = new ArrayList<Long>();\n    \
    \    for(Long i : lst1){\n            if(i%2==0){\n                even.add(i);\n\
    \            }\n        }\n        for(Long i : lst2){\n            if(i%2==0){\n\
    \                even.add(i);\n            }\n        }\n        if(even.size()==lst1.size()){\n\
    \            return \"YES\";\n        }\n        return \"NO\";", "        //\
    \ Your code here\n        ArrayList<Long> even = new ArrayList<Long>();\n    \
    \    for(Long i : lst1){\n            if(i%2==0){\n                even.add(i);\n\
    \            }\n        }\n        for(Long i : lst2){\n            if(i%2==0){\n\
    \                even.add(i);\n            }\n        }\n        if(even.size()==lst1.size()){\n\
    \            return \"YES\";\n        }\n        return \"NO\";", '        //
    Your code here', '        // Your code here', "        // Your code here\n   \
    \     ArrayList<Long> even = new ArrayList<Long>();\n        for(Long i : lst1){\n\
    \            if(i%2==0){\n                even.add(i);\n            }\n      \
    \  }\n        for(Long i : lst2){\n            if(i%2==0){\n                even.add(i);\n\
    \            }\n        }\n        if(even.size()==lst1.size()){\n           \
    \ return \"YES\";\n        }\n        return \"NO\";", "        ArrayList<Long>\
    \ even = new ArrayList<>();\n        even.addAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        if (even.isEmpty()) {\n            return\
    \ \"NO\";\n        }\n        return \"YES\";", "        ArrayList<Long> even\
    \ = new ArrayList<Long>();\n        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n\
    \        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n\
    \        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n\
    \        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n\
    \        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n\
    \        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n\
    \        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n\
    \        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n\
    \        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n\
    \        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n\
    \        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n\
    \        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n\
    \        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n\
    \        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n\
    \        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n\
    \        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n\
    \        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n\
    \        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n\
    \        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n",
  '        // Your code here', "        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        ArrayList<Long> odd = new ArrayList<Long>();\n        even.addAll(lst1);\n\
    \        odd.addAll(lst2);\n        even.removeAll(odd);\n        odd.removeAll(even);\n\
    \        if (even.isEmpty()) {\n            return \"NO\";\n        }\n      \
    \  return \"YES\";", '        // Your code here', '        // Your code here',
  '        // Your code goes here', "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        even.addAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n",
  "        // Your code here\n        ArrayList<Long> even = new ArrayList<>();\n\
    \        for(Long i : lst1){\n            if(i%2==0){\n                even.add(i);\n\
    \            }\n        }\n        for(Long i : lst2){\n            if(i%2==0){\n\
    \                even.add(i);\n            }\n        }\n        if(even.size()==lst1.size()){\n\
    \            return \"YES\";\n        }\n        return \"NO\";", "        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        even.addAll(lst1);\n        even.removeAll(lst2);\n\
    \        if (even.equals(lst2)) {\n            return \"YES\";\n        }\n  \
    \      return \"NO\";", '        // Your code here', "        // Your code here\n\
    \        ArrayList<Long> even = new ArrayList<>();\n        for(Long i : lst1){\n\
    \            if(i%2==0){\n                even.add(i);\n            }\n      \
    \  }\n        for(Long i : lst2){\n            if(i%2==0){\n                even.add(i);\n\
    \            }\n        }\n        if(even.size()==lst1.size()){\n           \
    \ return \"YES\";\n        }\n        return \"NO\";", "        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n        even.add(lst1.get(28));\n        even.add(lst2.get(28));\n",
  '        // Your code here', "        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.addAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst",
  '        // Your code here', "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        even.addAll(lst1);\n        even.removeIf((long\
    \ i) -> i % 2 == 0);\n        even.removeIf((long i) -> i % 2 == 1);\n       \
    \ even.removeIf((long i) -> i % 2 == 0);\n        even.removeIf((long i) -> i\
    \ % 2 == 1);\n        even.removeIf((long i) -> i % 2 == 0);\n        even.removeIf((long\
    \ i) -> i % 2 == 1);\n        even.removeIf((long i) -> i % 2 == 0);\n       \
    \ even.removeIf((long i) -> i % 2 == 1);\n        even.removeIf((long i) -> i\
    \ % 2 == 0);\n        even.removeIf((long i) -> i % 2 == 1);\n        even.removeIf((long\
    \ i) -> i % 2 == 0);\n        even.removeIf((long i) -> i % 2 == 1);\n       \
    \ even.removeIf((long i) -> i % 2 == 0);\n        even.removeIf((long i) -> i\
    \ % 2 == 1);\n        even.removeIf((long i) -> i % 2 == 0);\n        even.removeIf((long\
    \ i) -> i % 2 == 1);\n        even.removeIf((long i) -> i % 2 == 0);\n       \
    \ even.removeIf((long i) -> i % 2 == 1);\n        even.removeIf((long i) -> i\
    \ % 2 == 0);\n        even.removeIf((long i) -> i % 2 == 1);\n        even.removeIf((long\
    \ i) -> i % 2 == 0);\n        even.removeIf((long i) -> i % 2 == 1);\n       \
    \ even.removeIf((long i) -> i % 2 == 0);\n        even.removeIf((long i) -> i\
    \ % 2 == 1);\n        even.removeIf((long i) -> i % 2 == 0);\n        even.removeIf((long\
    \ i) -> i % 2 == 1);\n        even.removeIf((long i) -> i % 2 == 0);\n       \
    \ even.removeIf((long i) -> i % 2 == 1);\n        even.removeIf((long i) -> i\
    \ % 2 == 0);\n        even.removeIf((long i) -> i % 2 == 1);\n        even.removeIf((long\
    \ i) -> i % 2 == 0);\n        even.removeIf((long i) -> i % 2 == 1);\n       \
    \ even.removeIf((long i) -> i % 2 == 0);\n        even.removeIf((long i) -> i\
    \ % 2 == 1);\n        even.removeIf((long i) -> i % 2 == 0);\n        even.removeIf((long\
    \ i) -> i % 2 == 1);\n        even.removeIf((long i) -> i % 2 == 0);\n       \
    \ even.removeIf((long i) -> i % 2 == 1);\n        even.removeIf((long i) -> i\
    \ % 2 == 0);\n        even.removeIf((long i) -> i % 2 == 1);\n        even.removeIf((long\
    \ i) -> i % 2 == 0);", "        // Your code here\n        ArrayList<Long> even\
    \ = new ArrayList<Long>();\n        for(Long i : lst1){\n            if(i%2==0){\n\
    \                even.add(i);\n            }\n        }\n        for(Long i :\
    \ lst2){\n            if(i%2==0){\n                even.add(i);\n            }\n\
    \        }\n        if(even.size()==lst1.size()){\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", '        // Your code here', '        //
    Your code here', "        ArrayList<Long> even = new ArrayList<Long>();\n    \
    \    ArrayList<Long> odd = new ArrayList<Long>();\n        for(Long i : lst1)\
    \ {\n            if(i%2 == 0) {\n                even.add(i);\n            } else\
    \ {\n                odd.add(i);\n            }\n        }\n        for(Long i\
    \ : lst2) {\n            if(i%2 == 0) {\n                even.add(i);\n      \
    \      } else {\n                odd.add(i);\n            }\n        }\n     \
    \   if(even.size() == odd.size()) {\n            return \"YES\";\n        } else\
    \ {\n            return \"NO\";\n        }", "        // Your code here\n    \
    \    \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      ", '        // Your code here', "        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        ArrayList<Long> odd = new ArrayList<Long>();\n        even.addAll(lst1);\n\
    \        odd.addAll(lst2);\n        even.removeAll(odd);\n        odd.removeAll(even);\n\
    \        if (even.equals(lst1)) {\n            return \"YES\";\n        }\n  \
    \      return \"NO\";", "        // Your code here\n        ArrayList<Long> even\
    \ = new ArrayList<Long>();\n        for(Long i : lst1){\n            if(i%2==0){\n\
    \                even.add(i);\n            }\n        }\n        for(Long i :\
    \ lst2){\n            if(i%2==0){\n                even.add(i);\n            }\n\
    \        }\n        if(even.size()==lst1.size()){\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", '        // Your code here', '        //
    Your code here', '        // Your code here', '        // Your code here', " \
    \       // Your code here\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.add(lst1.get(0));\n        for(int i = 1; i < lst1.size(); i++){\n\
    \            if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n\
    \            }\n        }\n        even.add(lst2.get(0));\n        for(int i =\
    \ 1; i < lst2.size(); i++){\n            if(lst2.get(i) % 2 == 0){\n         \
    \       even.add(lst2.get(i));\n            }\n        }\n        if(even.size()\
    \ == lst1.size()){\n            return \"YES\";\n        }\n        return \"\
    NO\";", '        // Your code here', "        // Your code goes here\n       \
    \ ArrayList<Long> even = new ArrayList<Long>();\n        for(int i=0;i<lst1.size();i++){\n\
    \            if(lst1.get(i)%2==0){\n                even.add(lst1.get(i));\n \
    \           }\n        }\n        for(int i=0;i<lst2.size();i++){\n          \
    \  if(lst2.get(i)%2==0){\n                even.add(lst2.get(i));\n           \
    \ }\n        }\n        if(even.size()==lst1.size()){\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n\
    \        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n\
    \        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n\
    \        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n\
    \        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n\
    \        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n\
    \        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n\
    \        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n\
    \        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n\
    \        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n\
    \        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n\
    \        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n\
    \        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n\
    \        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n\
    \        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n\
    \        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n\
    \        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n\
    \        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n\
    \        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n", "      \
    \  ArrayList<Long> even = new ArrayList<>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n        ", '        // Your code here', "  \
    \      ArrayList<Long> even = new ArrayList<>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n        ", "        ArrayList<Long> even = new\
    \ ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n \
    \       for(Long i : lst1) {\n            if(i%2 == 0) {\n                even.add(i);\n\
    \            } else {\n                odd.add(i);\n            }\n        }\n\
    \        for(Long i : lst2) {\n            if(i%2 == 0) {\n                even.add(i);\n\
    \            } else {\n                odd.add(i);\n            }\n        }\n\
    \        if(even.size() == odd.size()) {\n            return \"YES\";\n      \
    \  } else {\n            return \"NO\";\n        }", "        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        even.addAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst", '        // Your code here', "        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n\
    \        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n\
    \        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n\
    \        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n\
    \        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n\
    \        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n\
    \        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n\
    \        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n\
    \        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n\
    \        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n\
    \        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n\
    \        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n\
    \        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n\
    \        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n\
    \        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n\
    \        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n\
    \        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n\
    \        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n\
    \        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n",
  '        // Your code here', "        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.addAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst",
  '        // Your code here', '        // Your code here', '        // Your code
    here', "        ArrayList<Long> even = new ArrayList<Long>();\n        ArrayList<Long>\
    \ odd = new ArrayList<Long>();\n        even.addAll(lst1);\n        odd.addAll(lst2);\n\
    \        even.removeAll(odd);\n        odd.removeAll(even);\n        if (even.isEmpty())\
    \ {\n            return \"NO\";\n        }\n        return \"YES\";", "      \
    \  ArrayList<Long> even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n", "        // Your code here\n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        ", '        //
    Your code here', "        ArrayList<Long> even = new ArrayList<Long>();\n    \
    \    even.add(lst1.get(0));\n        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n\
    \        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n\
    \        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n\
    \        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n\
    \        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n\
    \        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n\
    \        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n\
    \        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n\
    \        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n\
    \        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n\
    \        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n\
    \        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n\
    \        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n\
    \        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n\
    \        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n\
    \        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n\
    \        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n\
    \        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n\
    \        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n", "      \
    \  ArrayList<Long> even = new ArrayList<Long>();\n        even.addAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        if (even.isEmpty())\
    \ {\n            return \"NO\";\n        }\n        return \"YES\";", '        //
    Your code here', "        // Your code here\n        ArrayList<Long> even = new\
    \ ArrayList<Long>();\n        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n\
    \        for(int i = 1; i < lst1.size(); i++) {\n            even.add(lst1.get(i));\n\
    \            even.add(lst2.get(i));\n        }\n        for(int i = 0; i < even.size();\
    \ i++) {\n            if(even.get(i) % 2 == 0) {\n                even.remove(i);\n\
    \            }\n        }\n        if(even.size() == 0) {\n            return\
    \ \"NO\";\n        } else {\n            return \"YES\";\n        }", "      \
    \  ArrayList<Long> even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n", "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        for(int i = 0; i < lst1.size(); i++){\n\
    \            if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < lst2.size(); i++){\n   \
    \         if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n\
    \            }\n        }\n        if(even.size() == lst1.size()){\n         \
    \   return \"YES\";\n        }\n        return \"NO\";", '        // Your code
    here', "        ArrayList<Long> even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst1.get(1));\n        even.add(lst1.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst1.get(4));\n        even.add(lst1.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst1.get(7));\n        even.add(lst1.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst1.get(10));\n        even.add(lst1.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst1.get(13));\n        even.add(lst1.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst1.get(16));\n        even.add(lst1.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst1.get(19));\n        even.add(lst1.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst1.get(22));\n        even.add(lst1.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst1.get(25));\n        even.add(lst1.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst1.get(28));\n        even.add(lst1.get(29));\n        even.add(lst1.get(30));\n\
    \        even.add(lst1.get(31));\n        even.add(lst1.get(32));\n        even.add(lst1.get(33));\n\
    \        even.add(lst1.get(34));\n        even.add(lst1.get(35));\n        even.add(lst1.get(36));\n\
    \        even.add(lst1.get(37));\n        even.add(lst1.get(38));\n        even.add(lst1.get(39));\n\
    \        even.add(lst1.get(40));\n        even.add(lst1.get(41));\n        even.add(lst1.get(42));\n\
    \        even.add(lst1.get(43));\n        even.add(lst1.get(44));\n        even.add(lst1.get(45));\n\
    \        even.add(lst1.get(46));\n        even.add(lst1.get(47));\n        even.add(lst1.get(48));\n\
    \        even.add(lst1.get(49));\n        even.add(lst1.get(50));\n        even.add(lst1.get(51));\n\
    \        even.add(lst1.get(52));\n        even.add(lst1.get(53));\n        even.add(lst1.get(54));\n\
    \        even.add(lst1.get(", '        // Your code here', "        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n\
    \        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n\
    \        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n\
    \        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n\
    \        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n\
    \        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n\
    \        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n\
    \        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n\
    \        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n\
    \        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n\
    \        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n\
    \        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n\
    \        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n\
    \        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n\
    \        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n\
    \        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n\
    \        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n\
    \        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n\
    \        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n",
  '        // Your code here', "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        for(Long i : lst1){\n            if(i%2==0){\n\
    \                even.add(i);\n            }\n        }\n        for(Long i :\
    \ lst2){\n            if(i%2==0){\n                even.add(i);\n            }\n\
    \        }\n        if(even.size()==lst1.size()){\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n\
    \        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n\
    \        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n\
    \        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n\
    \        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n\
    \        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n\
    \        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n\
    \        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n\
    \        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n\
    \        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n\
    \        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n\
    \        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n\
    \        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n\
    \        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n\
    \        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n\
    \        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n\
    \        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n\
    \        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n\
    \        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n", "      \
    \  // Your code here\n        ArrayList<Long> even = new ArrayList<>();\n    \
    \    even.add(lst1.get(0));\n        for(int i = 1; i < lst1.size(); i++){\n \
    \           if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n\
    \            }\n        }\n        even.add(lst1.get(lst1.size()-1));\n      \
    \  for(int i = lst1.size()-2; i >= 0; i--){\n            if(lst1.get(i) % 2 ==\
    \ 0){\n                even.add(lst1.get(i));\n            }\n        }\n    \
    \    even.add(lst2.get(0));\n        for(int i = 1; i < lst2.size(); i++){\n \
    \           if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n\
    \            }\n        }\n        even.add(lst2.get(lst2.size()-1));\n      \
    \  for(int i = lst2.size()-2; i >= 0; i--){\n            if(lst2.get(i) % 2 ==\
    \ 0){\n                even.add(lst2.get(i));\n            }\n        }\n    \
    \    if(even.equals(lst1)){\n            return \"YES\";\n        }\n        return\
    \ \"NO\";", '        // Your code here', "        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.addAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(lst1);\n        even.removeAll(lst",
  "        // Your code goes here\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        for(int i = 0; i < lst1.size(); i++){\n            if(lst1.get(i) % 2\
    \ == 0){\n                even.add(lst1.get(i));\n            }\n        }\n \
    \       for(int i = 0; i < lst2.size(); i++){\n            if(lst2.get(i) % 2\
    \ == 0){\n                even.add(lst2.get(i));\n            }\n        }\n \
    \       if(even.size() == lst1.size()){\n            return \"YES\";\n       \
    \ }\n        return \"NO\";", "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        for(Long i : lst1){\n            if(i%2==0){\n\
    \                even.add(i);\n            }\n        }\n        for(Long i :\
    \ lst2){\n            if(i%2==0){\n                even.add(i);\n            }\n\
    \        }\n        if(even.size()==lst1.size()){\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        for(int i = 0; i < lst1.size(); i++){\n\
    \            if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < lst2.size(); i++){\n   \
    \         if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n\
    \            }\n        }\n        if(even.size() == lst1.size()){\n         \
    \   return \"YES\";\n        }\n        return \"NO\";", "        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n\
    \        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n\
    \        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n\
    \        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n\
    \        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n\
    \        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n\
    \        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n\
    \        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n\
    \        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n\
    \        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n\
    \        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n\
    \        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n\
    \        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n\
    \        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n\
    \        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n\
    \        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n\
    \        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n\
    \        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n\
    \        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n",
  "        // Your code here\n        ArrayList<Long> even = new ArrayList<>();\n\
    \        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n\
    \        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n\
    \        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n\
    \        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n\
    \        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n\
    \        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n\
    \        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n\
    \        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n\
    \        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n\
    \        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n\
    \        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n\
    \        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n\
    \        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n\
    \        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n\
    \        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n\
    \        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n\
    \        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n\
    \        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n\
    \        even.add(lst1.get(27));\n        even.add(lst2.", '        // Your code
    here', "        // Your code here\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.addAll(lst1);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n", '        //
    Your code here', '        // Your code here', "        // Your code here\n   \
    \     long even = 0;\n        long odd = 0;\n        long total = 0;\n       \
    \ long evenTotal = 0;\n        long oddTotal = 0;\n        long evenEven = 0;\n\
    \        long evenOdd = 0;\n        long oddEven = 0;\n        long oddOdd = 0;\n\
    \        long evenEvenTotal = 0;\n        long evenOddTotal = 0;\n        long\
    \ oddEvenTotal = 0;\n        long oddOddTotal = 0;\n        long evenEvenEven\
    \ = 0;\n        long evenOddEven = 0;\n        long oddEvenEven = 0;\n       \
    \ long oddOddEven = 0;\n        long evenEvenOdd = 0;\n        long evenOddOdd\
    \ = 0;\n        long oddEvenOdd = 0;\n        long oddOddOdd = 0;\n        long\
    \ evenEvenEvenTotal = 0;\n        long evenOddEvenTotal = 0;\n        long oddEvenEvenTotal\
    \ = 0;\n        long oddOddEvenTotal = 0;\n        long evenEvenOddTotal = 0;\n\
    \        long evenOddOddTotal = 0;\n        long oddEvenOddTotal = 0;\n      \
    \  long oddOddOddTotal = 0;\n        long evenEvenEvenEven = 0;\n        long\
    \ evenOddEven = 0;\n        long oddEvenEven = 0;\n        long oddOddEven = 0;\n\
    \        long evenEvenOdd = 0;\n        long evenOddOdd = 0;\n        long oddEvenOdd\
    \ = 0;\n        long oddOddOdd = 0;\n        long evenEvenEvenEven = 0;\n    \
    \    long evenOddEven = 0;\n        long oddEvenEven = 0;\n        long oddOddEven\
    \ = 0;\n        long evenEvenOdd = 0;\n        long evenOddOdd = 0;\n        long\
    \ oddEvenOdd = 0;\n        long oddOddOdd = 0;\n        long evenEvenEven = 0;\n\
    \        long evenOddEven = 0;\n        long oddEvenEven = 0;\n        long oddOddEven\
    \ = 0;\n        long evenEvenOdd = 0;\n        long evenOddOdd = 0;\n        long\
    \ oddEvenOdd = 0;\n        long oddOddOdd = 0;\n        long evenEvenEven = 0;\n\
    \        long evenOddEven = 0;\n        long oddEvenEven = 0;\n        long oddOddEven\
    \ = 0;\n        long evenEvenOdd = 0;\n        long evenOddOdd = 0;\n        long\
    \ oddEvenOdd = 0;\n        long oddOddOdd = 0;\n        long evenEvenEven = 0;\n\
    \        long evenOddEven = 0;\n        long oddEvenEven = 0;\n        long oddOddEven\
    \ = 0;\n", "        ArrayList<Long> even = new ArrayList<Long>();\n        even.addAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        if (even.isEmpty())\
    \ {\n            return \"NO\";\n        }\n        return \"YES\";", "      \
    \  ArrayList<Long> even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n", "        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n\
    \        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n\
    \        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n\
    \        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n\
    \        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n\
    \        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n\
    \        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n\
    \        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n\
    \        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n\
    \        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n\
    \        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n\
    \        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n\
    \        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n\
    \        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n\
    \        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n\
    \        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n\
    \        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n\
    \        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n\
    \        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n", "      \
    \  // Your code here\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        for(int i = 0; i < lst1.size(); i++){\n            if(lst1.get(i) % 2\
    \ == 0){\n                even.add(lst1.get(i));\n            }\n        }\n \
    \       for(int i = 0; i < lst2.size(); i++){\n            if(lst2.get(i) % 2\
    \ == 0){\n                even.add(lst2.get(i));\n            }\n        }\n \
    \       if(even.size() == lst1.size()){\n            return \"YES\";\n       \
    \ }\n        return \"NO\";", "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        for(int i = 0; i < lst1.size(); i++){\n\
    \            if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < lst2.size(); i++){\n   \
    \         if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n\
    \            }\n        }\n        if(even.size() == lst1.size()){\n         \
    \   return \"YES\";\n        }\n        return \"NO\";", "        // Your code\
    \ here\n        ArrayList<Long> even = new ArrayList<>();\n        even.addAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        ", "        ArrayList<Long> even = new\
    \ ArrayList<Long>();\n        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n\
    \        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n\
    \        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n\
    \        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n\
    \        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n\
    \        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n\
    \        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n\
    \        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n\
    \        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n\
    \        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n\
    \        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n\
    \        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n\
    \        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n\
    \        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n\
    \        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n\
    \        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n\
    \        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n\
    \        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n\
    \        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n",
  '        // Your code here', "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        for(Long i : lst1){\n            if(i%2==0){\n\
    \                even.add(i);\n            }\n        }\n        for(Long i :\
    \ lst2){\n            if(i%2==0){\n                even.add(i);\n            }\n\
    \        }\n        if(even.size()==lst1.size()){\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n\
    \        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n\
    \        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n\
    \        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n\
    \        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n\
    \        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n\
    \        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n\
    \        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n\
    \        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n\
    \        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n\
    \        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n\
    \        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n\
    \        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n\
    \        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n\
    \        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n\
    \        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n\
    \        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n\
    \        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n\
    \        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n", '        //
    Your code here', "        // Your code goes here\n        ArrayList<Long> even\
    \ = new ArrayList<Long>();\n        for(int i = 0; i < lst1.size(); i++){\n  \
    \          if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < lst2.size(); i++){\n   \
    \         if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n\
    \            }\n        }\n        if(even.size() == lst1.size()){\n         \
    \   return \"YES\";\n        }\n        return \"NO\";", "        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        even.addAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst1);\n        even.removeAll(even);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(even);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        even.removeAll(lst1);\n\
    \        even.removeAll(even);\n        even.removeAll(lst2);\n        even.removeAll(even);\n\
    \        even.removeAll(lst", "        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.add(lst1.get(0));\n        even.add(lst1.get(1));\n        even.add(lst1.get(2));\n\
    \        even.add(lst1.get(3));\n        even.add(lst1.get(4));\n        even.add(lst1.get(5));\n\
    \        even.add(lst1.get(6));\n        even.add(lst1.get(7));\n        even.add(lst1.get(8));\n\
    \        even.add(lst1.get(9));\n        even.add(lst1.get(10));\n        even.add(lst1.get(11));\n\
    \        even.add(lst1.get(12));\n        even.add(lst1.get(13));\n        even.add(lst1.get(14));\n\
    \        even.add(lst1.get(15));\n        even.add(lst1.get(16));\n        even.add(lst1.get(17));\n\
    \        even.add(lst1.get(18));\n        even.add(lst1.get(19));\n        even.add(lst1.get(20));\n\
    \        even.add(lst1.get(21));\n        even.add(lst1.get(22));\n        even.add(lst1.get(23));\n\
    \        even.add(lst1.get(24));\n        even.add(lst1.get(25));\n        even.add(lst1.get(26));\n\
    \        even.add(lst1.get(27));\n        even.add(lst1.get(28));\n        even.add(lst1.get(29));\n\
    \        even.add(lst1.get(30));\n        even.add(lst1.get(31));\n        even.add(lst1.get(32));\n\
    \        even.add(lst1.get(33));\n        even.add(lst1.get(34));\n        even.add(lst1.get(35));\n\
    \        even.add(lst1.get(36));\n        even.add(lst1.get(37));\n        even.add(lst1.get(38));\n\
    \        even.add(lst1.get(39));\n        even.add(lst1.get(40));\n        even.add(lst1.get(41));\n\
    \        even.add(lst1.get(42));\n        even.add(lst1.get(43));\n        even.add(lst1.get(44));\n\
    \        even.add(lst1.get(45));\n        even.add(lst1.get(46));\n        even.add(lst1.get(47));\n\
    \        even.add(lst1.get(48));\n        even.add(lst1.get(49));\n        even.add(lst1.get(50));\n\
    \        even.add(lst1.get(51));\n        even.add(lst1.get(52));\n        even.add(lst1.get(53));\n\
    \        even.add(lst1.get(54));\n        even.add(lst1.get(", '        // Your
    code here', "        // Your code goes here\n        ArrayList<Long> even = new\
    \ ArrayList<Long>();\n        for(Long i : lst1){\n            if(i%2==0){\n \
    \               even.add(i);\n            }\n        }\n        for(Long i : lst2){\n\
    \            if(i%2==0){\n                even.add(i);\n            }\n      \
    \  }\n        if(even.size()==lst1.size()){\n            return \"YES\";\n   \
    \     }\n        return \"NO\";", '        // Your code here', '        // Your
    code here', "        // Your code here\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        for(int i = 0; i < lst1.size(); i++){\n            if(lst1.get(i) % 2\
    \ == 0){\n                even.add(lst1.get(i));\n            }\n        }\n \
    \       for(int i = 0; i < lst2.size(); i++){\n            if(lst2.get(i) % 2\
    \ == 0){\n                even.add(lst2.get(i));\n            }\n        }\n \
    \       for(int i = 0; i < even.size(); i++){\n            lst1.set(i, even.get(i));\n\
    \        }\n        for(int i = 0; i < even.size(); i++){\n            lst2.set(i,\
    \ even.get(i));\n        }\n        for(int i = 0; i < lst1.size(); i++){\n  \
    \          if(lst1.get(i) % 2 == 0){\n                even.remove(lst1.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < lst2.size(); i++){\n   \
    \         if(lst2.get(i) % 2 == 0){\n                even.remove(lst2.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < even.size(); i++){\n   \
    \         lst1.set(i, even.get(i));\n        }\n        for(int i = 0; i < even.size();\
    \ i++){\n            lst2.set(i, even.get(i));\n        }\n        if(lst1.size()\
    \ == 0 && lst2.size() == 0){\n            return \"YES\";\n        }\n       \
    \ return \"NO\";", "        // Your code here\n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        ", "        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n\
    \        for(Long i : lst1) {\n            if(i%2 == 0) {\n                even.add(i);\n\
    \            } else {\n                odd.add(i);\n            }\n        }\n\
    \        ArrayList<Long> even2 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ odd2 = new ArrayList<Long>();\n        for(Long i : lst2) {\n            if(i%2\
    \ == 0) {\n                even2.add(i);\n            } else {\n             \
    \   odd2.add(i);\n            }\n        }\n        ArrayList<Long> even3 = new\
    \ ArrayList<Long>();\n        ArrayList<Long> odd3 = new ArrayList<Long>();\n\
    \        for(Long i : even) {\n            if(i%2 == 0) {\n                even3.add(i);\n\
    \            } else {\n                odd3.add(i);\n            }\n        }\n\
    \        ArrayList<Long> even4 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ odd4 = new ArrayList<Long>();\n        for(Long i : even2) {\n            if(i%2\
    \ == 0) {\n                even4.add(i);\n            } else {\n             \
    \   odd4.add(i);\n            }\n        }\n        ArrayList<Long> even5 = new\
    \ ArrayList<Long>();\n        ArrayList<Long> odd5 = new ArrayList<Long>();\n\
    \        for(Long i : odd) {\n            if(i%2 == 0) {\n                even5.add(i);\n\
    \            } else {\n                odd5.add(i);\n            }\n        }\n\
    \        ArrayList<Long> even6 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ odd6 = new ArrayList<Long>();\n        for(Long i : odd2) {\n            if(i%2\
    \ == 0) {\n                even6.add(i);\n            } else {\n             \
    \   odd6.add(i);\n            }\n        }\n        ArrayList<Long> even7 = new\
    \ ArrayList<Long>();\n        ArrayList<Long> odd7 = new ArrayList<Long>();\n\
    \        for(Long i : even3) {\n            if(i%2 == 0) {\n                even7.add(i);\n\
    \            } else {\n                odd7.add(i);\n            }\n        }\n\
    \        ArrayList<Long> even8 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ odd8 = new ArrayList<Long>();\n        for(Long i : odd3) {\n            if(i%2\
    \ == 0) {\n                even8.add(i);\n            } else {\n             \
    \   odd8.add(i);\n            }\n        }\n        ArrayList<Long> even9 = new\
    \ ArrayList<Long>();\n        ArrayList<Long> odd9 = new ArrayList<Long>();\n\
    \        for(Long i : even4) {\n            if(i%2 == 0) {\n                even9.add(i);\n\
    \            } else {\n                odd9.add(i);\n            }\n        }\n\
    \        ArrayList<Long> even10 = new ArrayList<", "        // Your code here\n\
    \        ArrayList<Long> even = new ArrayList<Long>();\n        for(int i = 0;\
    \ i < lst1.size(); i++){\n            if(lst1.get(i) % 2 == 0){\n            \
    \    even.add(lst1.get(i));\n            }\n        }\n        for(int i = 0;\
    \ i < lst2.size(); i++){\n            if(lst2.get(i) % 2 == 0){\n            \
    \    even.add(lst2.get(i));\n            }\n        }\n        if(even.size()\
    \ == lst1.size()){\n            return \"YES\";\n        }\n        return \"\
    NO\";", '        // Your code here', '        // Your code here', '        //
    Your code here', '        // Your code here', "        // Your code here\n   \
    \     ArrayList<Long> even = new ArrayList<Long>();\n        for(int i = 0; i\
    \ < lst1.size(); i++){\n            if(lst1.get(i) % 2 == 0){\n              \
    \  even.add(lst1.get(i));\n            }\n        }\n        for(int i = 0; i\
    \ < lst2.size(); i++){\n            if(lst2.get(i) % 2 == 0){\n              \
    \  even.add(lst2.get(i));\n            }\n        }\n        if(even.size() ==\
    \ lst1.size()){\n            return \"YES\";\n        }\n        else{\n     \
    \       return \"NO\";\n        }", '        // Your code here', "        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n\
    \        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n\
    \        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n\
    \        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n\
    \        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n\
    \        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n\
    \        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n\
    \        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n\
    \        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n\
    \        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n\
    \        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n\
    \        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n\
    \        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n\
    \        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n\
    \        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n\
    \        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n\
    \        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n\
    \        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n\
    \        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n",
  '        // Your code here', "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        for(int i = 0; i < lst1.size(); i++){\n\
    \            if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < lst2.size(); i++){\n   \
    \         if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < even.size(); i++){\n   \
    \         if(even.get(i) < lst1.get(i)){\n                even.remove(i);\n  \
    \          }\n        }\n        if(even.size() == 0){\n            return \"\
    NO\";\n        }\n        return \"YES\";", "        // Your code here\n     \
    \   ArrayList<Long> even = new ArrayList<Long>();\n        even.add(lst1.get(0));\n\
    \        for(int i = 1; i < lst1.size(); i++){\n            if(lst1.get(i) % 2\
    \ == 0){\n                even.add(lst1.get(i));\n            }\n        }\n \
    \       even.add(lst2.get(0));\n        for(int i = 1; i < lst2.size(); i++){\n\
    \            if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n\
    \            }\n        }\n        if(even.size() == lst1.size()){\n         \
    \   return \"YES\";\n        }\n        return \"NO\";", '        // Your code
    here', '        // Your code here', "        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n\
    \        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n\
    \        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n\
    \        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n\
    \        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n\
    \        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n\
    \        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n\
    \        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n\
    \        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n\
    \        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n\
    \        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n\
    \        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n\
    \        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n\
    \        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n\
    \        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n\
    \        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n\
    \        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n\
    \        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n\
    \        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n", "      \
    \  ArrayList<Long> even = new ArrayList<>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n        ", '        // Your code here', "  \
    \      ArrayList<Long> even = new ArrayList<Long>();\n        even.addAll(lst1);\n\
    \        even.removeAll(lst2);\n        even.removeAll(even);\n        if (even.isEmpty())\
    \ return \"NO\";\n        return \"YES\";", "        ArrayList<Long> even = new\
    \ ArrayList<>();\n        even.addAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);\n        even.removeAll(lst1);\n        even.removeAll(lst2);\n\
    \        even.removeAll(even);", '        // Your code here', '        // Your
    code here', '        // Your code here', '        // Your code here', '        //
    Your code here', '        // Your code here', '        // Your code here', '        //
    Your code here', "        // Your code goes here\n        \n        \n       \
    \ \n        \n        \n        \n        \n        \n        \n        \n   \
    \     \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n", '        // Your code here',
  '        // Your code here', "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        for(Long i : lst1){\n            if(i%2==0){\n\
    \                even.add(i);\n            }\n        }\n        for(Long i :\
    \ lst2){\n            if(i%2==0){\n                even.add(i);\n            }\n\
    \        }\n        if(even.size()==lst1.size()){\n            return \"YES\"\
    ;\n        }\n        return \"NO\";", "        // Your code here\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        even.addAll(lst1);\n        even.removeIf((long\
    \ n) -> n % 2 == 0);\n        even.addAll(lst2);\n        even.removeIf((long\
    \ n) -> n % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n       \
    \ even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long n) -> n\
    \ % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long\
    \ n) -> n % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n       \
    \ even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long n) -> n\
    \ % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long\
    \ n) -> n % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n       \
    \ even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long n) -> n\
    \ % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long\
    \ n) -> n % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n       \
    \ even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long n) -> n\
    \ % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long\
    \ n) -> n % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n       \
    \ even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long n) -> n\
    \ % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long\
    \ n) -> n % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n       \
    \ even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long n) -> n\
    \ % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long\
    \ n) -> n % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n       \
    \ even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long n) -> n\
    \ % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long\
    \ n) -> n % 2 == 0);\n        even.removeIf((long n) -> n % 2 == 0);\n       \
    \ even.removeIf((long n) -> n % 2 == 0);\n        even.removeIf((long n) -> n\
    \ % 2 == 0);\n        even.removeIf", "        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        even.add(lst1.get(0));\n        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n\
    \        even.add(lst2.get(1));\n        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n\
    \        even.add(lst1.get(3));\n        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n\
    \        even.add(lst2.get(4));\n        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n\
    \        even.add(lst1.get(6));\n        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n\
    \        even.add(lst2.get(7));\n        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n\
    \        even.add(lst1.get(9));\n        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n\
    \        even.add(lst2.get(10));\n        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n\
    \        even.add(lst1.get(12));\n        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n\
    \        even.add(lst2.get(13));\n        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n\
    \        even.add(lst1.get(15));\n        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n\
    \        even.add(lst2.get(16));\n        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n\
    \        even.add(lst1.get(18));\n        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n\
    \        even.add(lst2.get(19));\n        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n\
    \        even.add(lst1.get(21));\n        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n\
    \        even.add(lst2.get(22));\n        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n\
    \        even.add(lst1.get(24));\n        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n\
    \        even.add(lst2.get(25));\n        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n\
    \        even.add(lst1.get(27));\n        even.add(lst2.get(27));\n", "      \
    \  ArrayList<Long> even = new ArrayList<>();\n        even.add(lst1.get(0));\n\
    \        even.add(lst2.get(0));\n        even.add(lst1.get(1));\n        even.add(lst2.get(1));\n\
    \        even.add(lst1.get(2));\n        even.add(lst2.get(2));\n        even.add(lst1.get(3));\n\
    \        even.add(lst2.get(3));\n        even.add(lst1.get(4));\n        even.add(lst2.get(4));\n\
    \        even.add(lst1.get(5));\n        even.add(lst2.get(5));\n        even.add(lst1.get(6));\n\
    \        even.add(lst2.get(6));\n        even.add(lst1.get(7));\n        even.add(lst2.get(7));\n\
    \        even.add(lst1.get(8));\n        even.add(lst2.get(8));\n        even.add(lst1.get(9));\n\
    \        even.add(lst2.get(9));\n        even.add(lst1.get(10));\n        even.add(lst2.get(10));\n\
    \        even.add(lst1.get(11));\n        even.add(lst2.get(11));\n        even.add(lst1.get(12));\n\
    \        even.add(lst2.get(12));\n        even.add(lst1.get(13));\n        even.add(lst2.get(13));\n\
    \        even.add(lst1.get(14));\n        even.add(lst2.get(14));\n        even.add(lst1.get(15));\n\
    \        even.add(lst2.get(15));\n        even.add(lst1.get(16));\n        even.add(lst2.get(16));\n\
    \        even.add(lst1.get(17));\n        even.add(lst2.get(17));\n        even.add(lst1.get(18));\n\
    \        even.add(lst2.get(18));\n        even.add(lst1.get(19));\n        even.add(lst2.get(19));\n\
    \        even.add(lst1.get(20));\n        even.add(lst2.get(20));\n        even.add(lst1.get(21));\n\
    \        even.add(lst2.get(21));\n        even.add(lst1.get(22));\n        even.add(lst2.get(22));\n\
    \        even.add(lst1.get(23));\n        even.add(lst2.get(23));\n        even.add(lst1.get(24));\n\
    \        even.add(lst2.get(24));\n        even.add(lst1.get(25));\n        even.add(lst2.get(25));\n\
    \        even.add(lst1.get(26));\n        even.add(lst2.get(26));\n        even.add(lst1.get(27));\n\
    \        even.add(lst2.get(27));\n        ", "        // Your code here\n    \
    \    ArrayList<Long> even = new ArrayList<Long>();\n        for(int i = 0; i <\
    \ lst1.size(); i++){\n            if(lst1.get(i) % 2 == 0){\n                even.add(lst1.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < lst2.size(); i++){\n   \
    \         if(lst2.get(i) % 2 == 0){\n                even.add(lst2.get(i));\n\
    \            }\n        }\n        boolean result = even.equals(lst1);\n     \
    \   if(result){\n            return \"YES\";\n        }\n        return \"NO\"\
    ;", '        // Your code here']
stop_tokens:
- "\n    }\n"

name: HumanEval_147_get_max_triples
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a positive integer n. You have to create an\
  \ integer array array list a of length n.\n    // For each i (1 \u2264 i \u2264\
  \ n), the value of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i],\
  \ a[j], a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple\
  \ of 3.\n    // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
  \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
  \    public static long getMaxTriples(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
  \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
  \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
completions: ["        long a[] = new long[n];\n        Arrays.fill(a, 1);\n     \
    \   Arrays.sort(a);\n        long max = 0;\n        long sum = 0;\n        for(int\
    \ i = 0; i < a.length; i++) {\n            sum += a[i];\n            if(sum %\
    \ 3 == 0) {\n                max = Math.max(max, sum);\n            }\n      \
    \  }\n        return max;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long ans = 0;\n        long sum = 0;\n\
    \        for (int i = 0; i < n; i++) {\n            sum += a[i];\n           \
    \ if (sum % 3 == 0) {\n                ans += 1;\n            }\n        }\n \
    \       return ans;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long triple = 0;\n        long tripleCount\
    \ = 0;\n        long tripleMax = 0;\n        for(int i = 1; i < n; i++) {\n  \
    \          for(int j = i; j < n; j++) {\n                for(int k = j; k < n;\
    \ k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n                \
    \        tripleCount++;\n                        if(triple < a[i]) {\n       \
    \                     triple = a[i];\n                        }\n            \
    \            if(triple < a[j]) {\n                            triple = a[j];\n\
    \                        }\n                        if(triple < a[k]) {\n    \
    \                        triple = a[k];\n                        }\n         \
    \               tripleMax = triple;\n                    }\n                }\n\
    \            }\n        }\n        return tripleCount;", "        ArrayList<Long>\
    \ a = new ArrayList<Long>();\n        long sum = 0;\n        for(int i = 1; i\
    \ <= n; i++) {\n            a.add(i * i - i + 1);\n            sum += i;\n   \
    \     }\n        long max = 0;\n        for(int i = 0; i < a.size(); i++) {\n\
    \            for(int j = i + 1; j < a.size(); j++) {\n                for(int\
    \ k = j + 1; k < a.size(); k++) {\n                    if(sum == (3 * sum)) {\n\
    \                        if(max < a.get(i) + a.get(j) + a.get(k)) {\n        \
    \                    max = a.get(i) + a.get(j) + a.get(k);\n                 \
    \       }\n                    }\n                }\n            }\n        }\n\
    \        return max;", "        ArrayList<Long> a = new ArrayList<Long>();\n \
    \       for(int i = 1; i <= n; i++) {\n            a.add(i * i - i + 1);\n   \
    \     }\n        long triples = 0;\n        for(int i = 1; i < a.size(); i++)\
    \ {\n            for(int j = i + 1; j < a.size(); j++) {\n                for(int\
    \ k = j + 1; k < a.size(); k++) {\n                    if(a.get(i) + a.get(j)\
    \ + a.get(k) == 3 * i) {\n                        triples++;\n               \
    \     }\n                }\n            }\n        }\n        return triples;",
  "        ArrayList<Long> a = new ArrayList<>();\n        long max = 0;\n       \
    \ long sum = 0;\n        for(int i = 1; i <= n; i++) {\n            a.add(i *\
    \ i - i + 1);\n            sum += i;\n        }\n        for(int i = 0; i < a.size();\
    \ i++) {\n            for(int j = i + 1; j < a.size(); j++) {\n              \
    \  for(int k = j + 1; k < a.size(); k++) {\n                    if(a.get(i) +\
    \ a.get(j) + a.get(k) == sum) {\n                        if(a.get(i) * a.get(j)\
    \ * a.get(k) % 3 == 0) {\n                            max = Math.max(max, a.get(i)\
    \ * a.get(j) * a.get(k));\n                        }\n                    }\n\
    \                }\n            }\n        }\n        return max;", "        List<Integer>\
    \ a = new ArrayList<>();\n        for(int i = 1; i <= n; i++) {\n            a.add(i\
    \ * i - i + 1);\n        }\n        return a.stream().filter(i -> i < a.size()\
    \ && i < a.size() && i < a.size()).count();", "        ArrayList<Integer> a =\
    \ new ArrayList<Integer>();\n        long max = 0;\n        for(int i = 1; i <=\
    \ n; i++) {\n            a.add(i * i - i + 1);\n        }\n        for(int i =\
    \ 0; i < a.size(); i++) {\n            for(int j = i+1; j < a.size(); j++) {\n\
    \                for(int k = j+1; k < a.size(); k++) {\n                    if(a.get(i)\
    \ + a.get(j) + a.get(k) == 3) {\n                        max = Math.max(max, a.get(i)\
    \ + a.get(j) + a.get(k));\n                    }\n                }\n        \
    \    }\n        }\n        return max;", "        ArrayList<Long> a = new ArrayList<>();\n\
    \        for(int i = 1; i <= n; i++) {\n            a.add(i * i - i + 1);\n  \
    \      }\n        long max = 0;\n        for(int i = 0; i < a.size(); i++) {\n\
    \            for(int j = i + 1; j < a.size(); j++) {\n                for(int\
    \ k = j + 1; k < a.size(); k++) {\n                    if(a.get(i) + a.get(j)\
    \ + a.get(k) == 3 * i) {\n                        max = Math.max(max, i);\n  \
    \                      max = Math.max(max, j);\n                        max =\
    \ Math.max(max, k);\n                    }\n                }\n            }\n\
    \        }\n        return max;", "        ArrayList<Long> a = new ArrayList<>();\n\
    \        for(int i = 1; i <= n; i++){\n            a.add(i * i - i + 1);\n   \
    \     }\n        long max = 0;\n        for(int i = 0; i < a.size(); i++){\n \
    \           for(int j = i+1; j < a.size(); j++){\n                for(int k =\
    \ j+1; k < a.size(); k++){\n                    if(a.get(i) + a.get(j) + a.get(k)\
    \ == (3 * i) + (3 * j) + (3 * k)){\n                        max = Math.max(max,\
    \ a.get(i) + a.get(j) + a.get(k));\n                    }\n                }\n\
    \            }\n        }\n        return max;", "        ArrayList<Long> a =\
    \ new ArrayList<Long>();\n        a.add(1l);\n        a.add(3l);\n        a.add(7l);\n\
    \        a.add(13l);\n        a.add(21l);\n        long ans = 0;\n        for(int\
    \ i = 1; i < n; i++) {\n            for(int j = 1; j < n; j++) {\n           \
    \     for(int k = 1; k < n; k++) {\n                    if(i + j + k == a.get(k))\
    \ {\n                        ans += 1;\n                    }\n              \
    \  }\n            }\n        }\n        return ans;", "        ArrayList<Long>\
    \ a = new ArrayList<>();\n        long max = 0;\n        long sum = 0;\n     \
    \   for(int i = 1; i < n; i++) {\n            a.add(i, i * i - i + 1);\n     \
    \       sum += i;\n        }\n        for(int i = 0; i < n; i++) {\n         \
    \   for(int j = 0; j < n; j++) {\n                for(int k = 0; k < n; k++) {\n\
    \                    if(i != j && j != k && k != i) {\n                      \
    \  long tripleSum = sum;\n                        for(int l = 0; l < n; l++) {\n\
    \                            tripleSum -= a[l];\n                        }\n \
    \                       if(tripleSum == 0) continue;\n                       \
    \ if(tripleSum > max) {\n                            max = tripleSum;\n      \
    \                  }\n                    }\n                }\n            }\n\
    \        }\n        return max;", "        ArrayList<Long> a = new ArrayList<>();\n\
    \        long max = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i+1; j < n; j++) {\n                for(int k = j+1; k < n; k++) {\n   \
    \                 if(i+j+k == n) {\n                        a.add(i*i-i+1);\n\
    \                        a.add(j*j-i+1);\n                        a.add(k*k-j+1);\n\
    \                        max = Math.max(max, Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(Math.max(",
  "        ArrayList<Integer> a = new ArrayList<Integer>();\n        for(int i = 1;\
    \ i <= n; i++) {\n            a.add(i * i - i + 1);\n        }\n        long max\
    \ = 0;\n        for(int i = 0; i < a.size(); i++) {\n            for(int j = i\
    \ + 1; j < a.size(); j++) {\n                for(int k = j + 1; k < a.size();\
    \ k++) {\n                    if(a.get(i) + a.get(j) + a.get(k) == 3 * i) {\n\
    \                        max = Math.max(max, a.get(i) + a.get(j) + a.get(k));\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ max;", "        ArrayList<Integer> a = new ArrayList<>();\n        for(int i\
    \ = 1; i <= n; i++) {\n            a.add(i * i - i + 1);\n        }\n        long\
    \ max = 0;\n        for(int i = 0; i < a.size(); i++) {\n            for(int j\
    \ = i + 1; j < a.size(); j++) {\n                for(int k = j + 1; k < a.size();\
    \ k++) {\n                    if(a.get(i) + a.get(j) + a.get(k) == 3 * i) {\n\
    \                        max = Math.max(max, a.get(i) + a.get(j) + a.get(k));\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ max;", "        ArrayList<Long> a = new ArrayList<>();\n        for(int i =\
    \ 1; i <= n; i++) {\n            a.add(i * i - i + 1);\n        }\n        long\
    \ max = 0;\n        for(int i = 0; i < a.size(); i++) {\n            for(int j\
    \ = i + 1; j < a.size(); j++) {\n                for(int k = j + 1; k < a.size();\
    \ k++) {\n                    if(a.get(i) + a.get(j) + a.get(k) == 3 * i) {\n\
    \                        max = Math.max(max, a.get(i) + a.get(j) + a.get(k));\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ max;", "        ArrayList<Long> a = new ArrayList<>();\n        long max = 0;\n\
    \        for(int i = 1; i <= n; i++) {\n            a.add(i * i - i + 1);\n  \
    \      }\n        for(int i = 0; i < a.size(); i++) {\n            for(int j =\
    \ i + 1; j < a.size(); j++) {\n                for(int k = j + 1; k < a.size();\
    \ k++) {\n                    if(a.get(i) + a.get(j) + a.get(k) == 3 * i) {\n\
    \                        max = Math.max(max, i);\n                        max\
    \ = Math.max(max, j);\n                        max = Math.max(max, k);\n     \
    \               }\n                }\n            }\n        }\n        return\
    \ max;", "        List<Integer> a = new ArrayList<>();\n        for(int i = 1;\
    \ i <= n; i++) {\n            a.add(i * i - i + 1);\n        }\n        long result\
    \ = 0;\n        for(int i = 0; i < a.size(); i++) {\n            for(int j = i+1;\
    \ j < a.size(); j++) {\n                for(int k = j+1; k < a.size(); k++) {\n\
    \                    if(a.get(i) + a.get(j) + a.get(k) % 3 == 0) {\n         \
    \               result++;\n                    }\n                }\n        \
    \    }\n        }\n        return result;", "        List<Integer> a = new ArrayList<>();\n\
    \        for(int i = 1; i <= n; i++) {\n            a.add(i * i - i + 1);\n  \
    \      }\n        long result = 0;\n        for(int i = 0; i < a.size(); i++)\
    \ {\n            for(int j = i + 1; j < a.size(); j++) {\n                for(int\
    \ k = j + 1; k < a.size(); k++) {\n                    if(a.get(i) + a.get(j)\
    \ + a.get(k) % 3 == 0) {\n                        result += 1;\n             \
    \       }\n                }\n            }\n        }\n        return result;",
  "        ArrayList<Long> a = new ArrayList<>();\n        long sum = 0;\n       \
    \ long temp = 0;\n        for(int i = 1; i <= n; i++) {\n            temp = i\
    \ * i - i + 1;\n            a.add(temp);\n            sum += temp;\n        }\n\
    \        long max = 0;\n        for(int i = 0; i < a.size(); i++) {\n        \
    \    for(int j = i + 1; j < a.size(); j++) {\n                for(int k = j +\
    \ 1; k < a.size(); k++) {\n                    if(a.get(i) + a.get(j) + a.get(k)\
    \ == sum) {\n                        if(max < a.get(i) + a.get(j) + a.get(k))\
    \ {\n                            max = a.get(i) + a.get(j) + a.get(k);\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n        return max;"]
stop_tokens:
- "\n    }\n"

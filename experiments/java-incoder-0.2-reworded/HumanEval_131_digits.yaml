name: HumanEval_131_digits
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a positive integer n, return the product of the odd\
  \ digits.\n    // Return 0 if all digits are even.\n    // For example:\n    //\
  \ >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n    // >>>\
  \ digits((235l))\n    // (15l)\n    public static long digits(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
  \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
  \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
  \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
  \    }\n\n}\n"
completions: ["        long product = 1;\n        while (n > 0) {\n            product\
    \ *= n % 10;\n            n /= 10;\n        }\n        return product;", "   \
    \     long product = 1;\n        while (n > 0) {\n            long digit = n %\
    \ 10;\n            product *= digit;\n            n /= 10;\n        }\n      \
    \  return product;", "        long product = 1;\n        while (n > 0) {\n   \
    \         product *= n % 10;\n            n /= 10;\n        }\n        return\
    \ product;", "        long product = 1;\n        while (n > 0) {\n           \
    \ long digit = n % 10;\n            product *= digit;\n            n /= 10;\n\
    \        }\n        return product;", "        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;", "        long product = 1;\n        while (n > 0) {\n\
    \            product *= n % 10;\n            n /= 10;\n        }\n        return\
    \ product;", "        long product = 1;\n        while (n > 0) {\n           \
    \ long digit = n % 10;\n            product *= digit;\n            n /= 10;\n\
    \        }\n        return product;", "        long product = 1;\n        while\
    \ (n > 0) {\n            int digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;", "        long product\
    \ = 1;\n        while (n > 0) {\n            product *= n % 10;\n            n\
    \ /= 10;\n        }\n        return product;", "        long product = 1;\n  \
    \      while (n > 0) {\n            long digit = n % 10;\n            product\
    \ *= digit;\n            n /= 10;\n        }\n        return product;", "    \
    \    long product = 1;\n        while (n > 0) {\n            long digit = n %\
    \ 10;\n            product *= digit;\n            n /= 10;\n        }\n      \
    \  return product;", "        long product = 1;\n        long digit;\n       \
    \ while (n > 0) {\n            digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;", "        long product\
    \ = 1;\n        while (n > 0) {\n            long digit = n % 10;\n          \
    \  product *= digit;\n            n /= 10;\n        }\n        return product;",
  "        long product = 1;\n        while (n > 0) {\n            int digit = n %\
    \ 10;\n            product *= digit;\n            n /= 10;\n        }\n      \
    \  return product;", "        long product = 1;\n        while (n > 0) {\n   \
    \         long digit = n % 10;\n            product *= digit;\n            n /=\
    \ 10;\n        }\n        return product;", "        long product = 1;\n     \
    \   while (n > 0) {\n            product *= n % 10;\n            n /= 10;\n  \
    \      }\n        return product;", "        long product = 1;\n        while\
    \ (n > 0) {\n            long digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;", "        long product\
    \ = 1;\n        while (n > 0) {\n            product *= n % 10;\n            n\
    \ /= 10;\n        }\n        return product;", "        long product = 1;\n  \
    \      while (n > 0) {\n            product *= n % 10;\n            n /= 10;\n\
    \        }\n        return product;", "        long product = 1;\n        while\
    \ (n > 0) {\n            product *= n % 10;\n            n /= 10;\n        }\n\
    \        return product;"]
stop_tokens:
- "\n    }\n"

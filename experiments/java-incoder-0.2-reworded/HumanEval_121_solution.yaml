name: HumanEval_121_solution
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a non-empty array list of integers, return the sum\
  \ of all of the odd elements that are in even positions.\n    // Examples\n    //\
  \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
  \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
  \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
  \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(solution((new\
  \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) == (12l));\n\
  \    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l, (long)3l,\
  \ (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
  \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
  \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
  \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
completions: ["        long sum = 0;\n        for(int i = 0; i< lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;", "        long sum = 0;\n     \
    \   for(int i = 0; i< lst.size(); i++) {\n            if(lst.get(i) % 2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;", "        long sum = 0;\n        long evenSum = 0;\n        for(long i\
    \ : lst) {\n            if(i%2 == 0) {\n                evenSum += i;\n      \
    \      }\n            else {\n                sum += i;\n            }\n     \
    \   }\n        return evenSum + sum;", "        long sum = 0;\n        for(int\
    \ i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n              \
    \  sum += lst.get(i);\n            }\n        }\n        return sum;", "     \
    \   long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n           \
    \ if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;", "        long sum = 0;\n        for(int i =\
    \ 0; i < lst.size(); i++) {\n            if(lst.get(i) % 2 == 0) {\n         \
    \       sum += lst.get(i);\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n       \
    \     if(i % 2 == 0) {\n                sum += lst.get(i);\n            }\n  \
    \      }\n        return sum;", "        long sum = 0;\n        for(int i = 0;\
    \ i < lst.size(); i++) {\n            if(lst.get(i) % 2 == 0) {\n            \
    \    sum += lst.get(i);\n            }\n        }\n        return sum;", "   \
    \     long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n         \
    \   if(i%2 == 0) {\n                sum += lst.get(i);\n            }\n      \
    \  }\n        return sum;", "        long sum = 0;\n        for(int i = 0; i <\
    \ lst.size(); i++) {\n            if(lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;", "        long\
    \ sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i %\
    \ 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n  \
    \      return sum;", "        long sum = 0;\n        for(int i = 0; i< lst.size();\
    \ i++) {\n            if(lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 == 0) {\n   \
    \             sum += lst.get(i);\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n        \
    \    if(i%2 == 0) {\n                sum += lst.get(i);\n            }\n     \
    \   }\n        return sum;", "        long sum = 0;\n        for(int i = 0; i\
    \ < lst.size(); i++) {\n            if(i%2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0) {\n     \
    \           sum += lst.get(i);\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n        \
    \    if(i % 2 == 0) {\n                sum += lst.get(i);\n            }\n   \
    \     }\n        return sum;", "        long sum = 0;\n        for(int i = 0;\
    \ i < lst.size(); i++) {\n            if(i % 2 == 0) {\n                sum +=\
    \ lst.get(i);\n            }\n        }\n        return sum;", "        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;", "        long sum = 0;\n        for(int i = 0; i < lst.size();\
    \ i++) {\n            if(i % 2 == 0) {\n                sum += lst.get(i);\n \
    \           }\n        }\n        return sum;"]
stop_tokens:
- "\n    }\n"
